{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\discussion\\\\components\\\\CommentReply.jsx\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nexport default class CommentReply extends Component {\n  constructor(props) {\n    super(props);\n  }\n  /*componentDidMount() {\r\n         console.log(\"CommentReply --> componentDidMount...\");\r\n     }\r\n     \r\n     shouldComponentUpdate(newProps, newState) {\r\n         console.log(\"CommentReply --> shouldComponentUpdate...\");\r\n         return newState.showReplies != this.state.showReplies\r\n     }\r\n  \n     componentWillReceiveProps(newProps) {\r\n         if (newProps.data.show !== this.props.data.show) {\r\n           this.setState({\r\n             data: newProps.data\r\n           });\r\n         }\r\n     }*/\n\n\n  render() {\n    //console.log(\"CommentReply --> render...\");\n    const comment = this.props.comment; //const commentPermission = this.props.commentPermission;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      key: comment.id,\n      className: \"list-group-item list-group-item-action flex-column align-items-start p-1 mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex w-100 justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: comment.userImagePath,\n      className: \"ilearn-avatar\",\n      alt: \"Profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-1 mt-1 float-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, comment.createdBy)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, comment.createdOn), this.props.moderatorPermission && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-danger ilearn-icon-button\",\n      onClick: () => this.deleteComment(comment.id, 'reply'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-1\",\n      dangerouslySetInnerHTML: {\n        __html: comment.content\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    })));\n  }\n\n  deleteComment(commentReplyId, type) {\n    //console.log(\"CommentReply --> deleteComment...\"+commentReplyId);\n    const {\n      onCommentReplyDelete = f => f\n    } = this.props;\n    let deleteData = {\n      commentId: commentReplyId,\n      type: type\n    };\n    onCommentReplyDelete(deleteData);\n  }\n\n}","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/discussion/components/CommentReply.jsx"],"names":["React","Component","FontAwesomeIcon","faTrashAlt","CommentReply","constructor","props","render","comment","id","userImagePath","createdBy","createdOn","moderatorPermission","deleteComment","__html","content","commentReplyId","type","onCommentReplyDelete","f","deleteData","commentId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,mCAA3B;AAEA,eAAe,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAChDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACrB,UAAMA,KAAN;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEIC,EAAAA,MAAM,GAAG;AACL;AACA,UAAMC,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAA3B,CAFK,CAGL;;AACA,wBACL,uDACS;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAlB;AACI,MAAA,SAAS,EAAC,+EADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAED,OAAO,CAACE,aAAlB;AAAiC,MAAA,SAAS,EAAC,eAA3C;AAA2D,MAAA,GAAG,EAAC,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAI,MAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCF,OAAO,CAACG,SAA9C,CAFJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQH,OAAO,CAACI,SAAhB,CADJ,EAEM,KAAKN,KAAL,CAAWO,mBAAX,iBACE;AAAQ,MAAA,SAAS,EAAC,2CAAlB;AACI,MAAA,OAAO,EAAE,MAAM,KAAKC,aAAL,CAAmBN,OAAO,CAACC,EAA3B,EAA8B,OAA9B,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAGN,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAHR,CALJ,CAFJ,eAmBI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAqB,MAAA,uBAAuB,EAAE;AAACY,QAAAA,MAAM,EAAEP,OAAO,CAACQ;AAAjB,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,CADT,CADK;AA0BH;;AAEDF,EAAAA,aAAa,CAACG,cAAD,EAAiBC,IAAjB,EAAuB;AAChC;AACA,UAAM;AAAEC,MAAAA,oBAAoB,GAAGC,CAAC,IAAIA;AAA9B,QAAoC,KAAKd,KAA/C;AACA,QAAIe,UAAU,GAAC;AAACC,MAAAA,SAAS,EAAEL,cAAZ;AAA4BC,MAAAA,IAAI,EAAEA;AAAlC,KAAf;AACAC,IAAAA,oBAAoB,CAACE,UAAD,CAApB;AACH;;AA3D+C","sourcesContent":["import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class CommentReply extends Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\t\r\n\t/*componentDidMount() {\r\n        console.log(\"CommentReply --> componentDidMount...\");\r\n    }\r\n    \r\n    shouldComponentUpdate(newProps, newState) {\r\n        console.log(\"CommentReply --> shouldComponentUpdate...\");\r\n        return newState.showReplies != this.state.showReplies\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.data.show !== this.props.data.show) {\r\n          this.setState({\r\n            data: newProps.data\r\n          });\r\n        }\r\n    }*/\r\n\r\n    render() {\r\n        //console.log(\"CommentReply --> render...\");\r\n        const comment = this.props.comment;\r\n        //const commentPermission = this.props.commentPermission;\r\n        return (\r\n\t\t\t<>\r\n            <div key={comment.id} \r\n                className=\"list-group-item list-group-item-action flex-column align-items-start p-1 mt-1\">\r\n                <div className=\"d-flex w-100 justify-content-between\">\r\n                    <div>\r\n                        <img src={comment.userImagePath} className=\"ilearn-avatar\" alt=\"Profile\" />\r\n                        <h5 className=\"mb-1 mt-1 float-left\">{comment.createdBy}</h5>\r\n                    </div>\r\n                    <div>\r\n                        <small>{comment.createdOn}</small>\r\n                        { this.props.moderatorPermission &&\r\n                            <button className=\"btn btn-outline-danger ilearn-icon-button\" \r\n                                onClick={() => this.deleteComment(comment.id,'reply')} >\r\n                                <FontAwesomeIcon icon={ faTrashAlt }/> \r\n                            </button>\r\n                         \r\n                        }\r\n                    </div>\r\n                    \r\n                </div>\r\n                <p className=\"mb-1\"  dangerouslySetInnerHTML={{__html: comment.content}}>                                \r\n                </p>                 \r\n            </div>\r\n\t\t\t</>\r\n        );\r\n    }\r\n\r\n    deleteComment(commentReplyId, type) {\r\n        //console.log(\"CommentReply --> deleteComment...\"+commentReplyId);\r\n        const { onCommentReplyDelete = f => f } = this.props;\r\n        let deleteData={commentId: commentReplyId, type: type}\r\n        onCommentReplyDelete(deleteData);    \r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}