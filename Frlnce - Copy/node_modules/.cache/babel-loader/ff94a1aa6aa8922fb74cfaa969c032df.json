{"ast":null,"code":"import ApiService from \"./ApiService\";\n\nclass ThemeService {\n  getActiveTheme() {\n    console.log(\"ThemeService --> getActiveTheme()...\");\n    let activeTheme = sessionStorage['activeTheme'];\n\n    if (!activeTheme) {\n      ApiService.getActiveTheme().then(res => {\n        console.log(\"ThemeService --> getActiveTheme()... Active Theme : \" + JSON.stringify(res.data));\n\n        if (res.data.data) {\n          let _activeTheme = res.data.data;\n          sessionStorage.setItem('activeTheme', JSON.stringify(_activeTheme));\n          this.setTheme(_activeTheme);\n        }\n      }, error => {\n        //ErrorCB\n        console.log(\"ThemeService --> getActiveTheme()... error =>\" + JSON.stringify(error));\n      });\n    } else {\n      this.setTheme(JSON.parse(activeTheme));\n    }\n  }\n\n  setTheme(activeTheme) {\n    console.log(\"ThemeService --> setTheme()...\" + JSON.stringify(activeTheme));\n    let bodyStyles = document.body.style; // const primaryColor = this.lightenDarkenColor(color, 0)\n    // const primaryHoverColor = this.lightenDarkenColor(color, 20)\n    // const primaryFocusColor = this.lightenDarkenColor(color, 80)\n    // const secondaryColor = this.lightenDarkenColor(color, 20)\n    // const secondaryHoverColor = this.lightenDarkenColor(color, 40)\n    // const secondaryFocusColor = this.lightenDarkenColor(color, 100)\n    // bodyStyles.setProperty('--primary-color', `${primaryColor}`)\n    // bodyStyles.setProperty('--primary-hover-color', `${primaryHoverColor}`)\n    // bodyStyles.setProperty('--primary-focus-color', `${primaryFocusColor}`)\n    // bodyStyles.setProperty('--secondary-color',  `${secondaryColor}`)\n    // bodyStyles.setProperty('--secondary-hover-color', `${secondaryHoverColor}`)\n    // bodyStyles.setProperty('--secondary-focus-color', `${secondaryFocusColor}`)\n\n    const themeColor = activeTheme === null || activeTheme === void 0 ? void 0 : activeTheme.color;\n\n    if (themeColor) {\n      bodyStyles.setProperty('--primary-color', `${themeColor['primary-color']}`);\n      bodyStyles.setProperty('--secondary-color', `${themeColor['secondary-color']}`);\n      bodyStyles.setProperty('--portlet-color1', `${themeColor['portlet-color1']}`);\n      bodyStyles.setProperty('--portlet-color2', `${themeColor['portlet-color2']}`);\n      bodyStyles.setProperty('--portlet-color3', `${themeColor['portlet-color3']}`);\n      bodyStyles.setProperty('--portlet-color4', `${themeColor['portlet-color4']}`);\n      bodyStyles.setProperty('--portlet-color5', `${themeColor['portlet-color5']}`);\n      bodyStyles.setProperty('--portlet-color6', `${themeColor['portlet-color6']}`);\n      bodyStyles.setProperty('--portlet-color7', `${themeColor['portlet-color7']}`);\n      bodyStyles.setProperty('--portlet-color8', `${themeColor['portlet-color8']}`);\n      bodyStyles.setProperty('--portlet-color9', `${themeColor['portlet-color9']}`);\n      bodyStyles.setProperty('--portlet-color10', `${themeColor['portlet-color10']}`);\n      bodyStyles.setProperty('--portlet-color11', `${themeColor['portlet-color11']}`);\n      bodyStyles.setProperty('--portlet-color12', `${themeColor['portlet-color12']}`);\n    }\n  }\n\n  lightenDarkenColor(col, amt) {\n    if (col === null || col === undefined) {\n      return null;\n    }\n\n    let usePound = false;\n\n    if (col[0] == \"#\") {\n      col = col.slice(1);\n      usePound = true;\n    }\n\n    let num = parseInt(col, 16);\n    let r = (num >> 16) + amt;\n    if (r > 255) r = 255;else if (r < 0) r = 0;\n    let b = (num >> 8 & 0x00FF) + amt;\n    if (b > 255) b = 255;else if (b < 0) b = 0;\n    let g = (num & 0x0000FF) + amt;\n    if (g > 255) g = 255;else if (g < 0) g = 0;\n    return (usePound ? \"#\" : \"\") + (g | b << 8 | r << 16).toString(16);\n  }\n\n}\n\nexport default new ThemeService();","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/_services/ThemeService.js"],"names":["ApiService","ThemeService","getActiveTheme","console","log","activeTheme","sessionStorage","then","res","JSON","stringify","data","_activeTheme","setItem","setTheme","error","parse","bodyStyles","document","body","style","themeColor","color","setProperty","lightenDarkenColor","col","amt","undefined","usePound","slice","num","parseInt","r","b","g","toString"],"mappings":"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","sourcesContent":["import ApiService from \"./ApiService\";\r\n\r\nclass ThemeService {\r\n\r\n    getActiveTheme() {\r\n        console.log(\"ThemeService --> getActiveTheme()...\");\r\n        let activeTheme = sessionStorage['activeTheme'];\r\n        if(!activeTheme) {\r\n            ApiService.getActiveTheme()\r\n            .then((res) => {\r\n              console.log(\"ThemeService --> getActiveTheme()... Active Theme : \"+JSON.stringify(res.data));\r\n              if(res.data.data) {\r\n                let _activeTheme =  res.data.data;\r\n                sessionStorage.setItem('activeTheme', JSON.stringify(_activeTheme));\r\n                this.setTheme(_activeTheme);\r\n              }    \r\n            },\r\n            error => { //ErrorCB\r\n                console.log(\"ThemeService --> getActiveTheme()... error =>\"+JSON.stringify(error));\r\n            });\t\r\n        }\r\n        else {\r\n            this.setTheme(JSON.parse(activeTheme));    \r\n        }  \r\n    }\r\n\r\n    setTheme(activeTheme) { \r\n        console.log(\"ThemeService --> setTheme()...\"+JSON.stringify(activeTheme)); \r\n        let bodyStyles = document.body.style;\r\n        // const primaryColor = this.lightenDarkenColor(color, 0)\r\n        // const primaryHoverColor = this.lightenDarkenColor(color, 20)\r\n        // const primaryFocusColor = this.lightenDarkenColor(color, 80)\r\n        // const secondaryColor = this.lightenDarkenColor(color, 20)\r\n        // const secondaryHoverColor = this.lightenDarkenColor(color, 40)\r\n        // const secondaryFocusColor = this.lightenDarkenColor(color, 100)\r\n        // bodyStyles.setProperty('--primary-color', `${primaryColor}`)\r\n        // bodyStyles.setProperty('--primary-hover-color', `${primaryHoverColor}`)\r\n        // bodyStyles.setProperty('--primary-focus-color', `${primaryFocusColor}`)\r\n        // bodyStyles.setProperty('--secondary-color',  `${secondaryColor}`)\r\n        // bodyStyles.setProperty('--secondary-hover-color', `${secondaryHoverColor}`)\r\n        // bodyStyles.setProperty('--secondary-focus-color', `${secondaryFocusColor}`)\r\n        const themeColor = activeTheme?.color;\r\n        if(themeColor) {\r\n            bodyStyles.setProperty('--primary-color', `${themeColor['primary-color']}`)\r\n            bodyStyles.setProperty('--secondary-color', `${themeColor['secondary-color']}`)\r\n            bodyStyles.setProperty('--portlet-color1', `${themeColor['portlet-color1']}`)\r\n            bodyStyles.setProperty('--portlet-color2', `${themeColor['portlet-color2']}`)\r\n            bodyStyles.setProperty('--portlet-color3', `${themeColor['portlet-color3']}`)\r\n            bodyStyles.setProperty('--portlet-color4', `${themeColor['portlet-color4']}`)\r\n            bodyStyles.setProperty('--portlet-color5', `${themeColor['portlet-color5']}`)\r\n            bodyStyles.setProperty('--portlet-color6', `${themeColor['portlet-color6']}`)\r\n            bodyStyles.setProperty('--portlet-color7', `${themeColor['portlet-color7']}`)\r\n            bodyStyles.setProperty('--portlet-color8', `${themeColor['portlet-color8']}`)\r\n            bodyStyles.setProperty('--portlet-color9', `${themeColor['portlet-color9']}`)\r\n            bodyStyles.setProperty('--portlet-color10', `${themeColor['portlet-color10']}`)\r\n            bodyStyles.setProperty('--portlet-color11', `${themeColor['portlet-color11']}`)\r\n            bodyStyles.setProperty('--portlet-color12', `${themeColor['portlet-color12']}`)\r\n        }\r\n    }\r\n\r\n    lightenDarkenColor(col, amt) {\r\n        if(col === null || col === undefined) {\r\n            return null;\r\n        }\r\n        let usePound = false;\r\n      \r\n        if (col[0] == \"#\") {\r\n            col = col.slice(1);\r\n            usePound = true;\r\n        }\r\n     \r\n        let num = parseInt(col,16);\r\n     \r\n        let r = (num >> 16) + amt;\r\n     \r\n        if (r > 255) r = 255;\r\n        else if  (r < 0) r = 0;\r\n     \r\n        let b = ((num >> 8) & 0x00FF) + amt;\r\n     \r\n        if (b > 255) b = 255;\r\n        else if  (b < 0) b = 0;\r\n     \r\n        let g = (num & 0x0000FF) + amt;\r\n     \r\n        if (g > 255) g = 255;\r\n        else if (g < 0) g = 0;\r\n     \r\n        return (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\r\n      \r\n    }\r\n\r\n}\r\n\r\nexport default new ThemeService();"]},"metadata":{},"sourceType":"module"}