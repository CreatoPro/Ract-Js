{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\home\\\\mobile\\\\index.jsx\";\nimport React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport ApiService from \"../../../_services/ApiService\";\nimport \"./style.css\";\nimport cw_logo from \"../images/cw_logo.png\";\nimport Config from \"../../../_config/config\";\nimport { ILoader } from './../../../_components/iloader/iloader';\nimport jwt_decode from \"jwt-decode\";\n\nclass MobileHome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.promptToInstall = () => {\n      let installEvent;\n      prompt.style.display = 'none'; // trigger the prompt to show to the user\n\n      installEvent.prompt();\n    };\n\n    this.routeChange = e => {\n      let path = `login`; //this.props.history.push(path);\n\n      this.props.history.push({\n        pathname: path,\n        state: {\n          loginPageConfig: this.state.list.loginPageConfig\n        }\n      });\n    };\n\n    this.routeInstituteCard = card => {\n      //console.log(JSON.stringify(card));\n      this.props.history.push({\n        pathname: '/instituteCardDetail',\n        state: {\n          card: card\n        }\n      });\n    };\n\n    this.state = {\n      list: [],\n      message: null,\n      loading: false,\n      loaderStyle: ''\n    };\n    this.reloadInstitute = this.reloadInstitute.bind(this);\n  }\n\n  componentDidMount() {\n    this.reloadInstitute();\n    /*window.addEventListener('beforeinstallprompt', (event) => {\r\n      event.preventDefault();\r\n      // if no localStorage is set, first time visitor\r\n        // show the prompt banner\r\n        prompt.style.display = 'block';\r\n        // store the event for later use\r\n        let installEvent = event;\r\n    });*/\n  }\n\n  reloadInstitute() {\n    let paramsString = this.props.location.search;\n    const params = new URLSearchParams(paramsString);\n    let token = params.get('token');\n    this.setState({\n      loading: true,\n      loaderStyle: token ? 'dark' : ''\n    }, () => {\n      ApiService.fetchHome().then(res => {\n        this.setState({\n          loading: false,\n          list: res.data.data\n        });\n        document.title = this.state.list.instituteName;\n        localStorage.setItem('siteTitle', this.state.list.instituteName);\n        localStorage.setItem('instituteHomeLink', this.state.list.instituteHomeLink);\n\n        if (token) {\n          this.loginToken(token);\n        }\n      });\n    });\n  }\n\n  render() {\n    var _this$state$list;\n\n    let auth = JSON.parse(localStorage.getItem('user'));\n\n    if (auth != null) {\n      let paramsString = this.props.location.search;\n      const params = new URLSearchParams(paramsString);\n      let token = params.get('token');\n\n      if (!token) {\n        this.props.history.push('dashboard');\n      }\n    }\n\n    const {\n      Text1\n    } = ((_this$state$list = this.state.list) === null || _this$state$list === void 0 ? void 0 : _this$state$list.loginPageConfig) || '';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"institute-top\",\n      style: {\n        background: `url(${Config.cover}) no-repeat transparent`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"institute-top-logo\",\n      style: {\n        background: `url(${Config.logo}) no-repeat transparent`,\n        backgroundSize: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"institute-top-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, this.state.list && this.state.list.instituteName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"institute-sign-in-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"primary login button-full ilearn-blue-btn button-md\",\n      onClick: this.routeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"button-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, \" SIGN IN \"))), Text1 && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"terms-and-conditions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 23\n      }\n    }, Text1), this.renderCard(), this.state.list.address && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: this.state.list.address\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }))), this.renderFooter(), this.renderLoader());\n  }\n\n  renderCard() {\n    let data = this.state.list;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hashbg home-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, data.cards && data.cards.map((item, index) => {\n      return /*#__PURE__*/React.createElement(Button, {\n        key: index,\n        variant: \"primary login button-full ilearn-white-btn button-md\",\n        onClick: () => this.routeInstituteCard(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: Config.logo,\n        alt: item.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }), \" \", item.name);\n    }));\n  }\n\n  renderInstallPrompt() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ath-container banner-bottom-center prompt\",\n      style: {\n        display: \"block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ath-banner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ath-banner-cell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n      src: Config.logo,\n      className: \"ath-prompt-logo\",\n      style: {\n        width: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 47\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ath-banner-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, \"Install this PWA?\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ath-banner-cell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-cancel btn-link prompt__close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, \"Not Now\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ath-banner-cell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-install btn-success prompt__install\",\n      onClick: this.promptToInstall,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }, \"Install\"))));\n  }\n\n  loginToken(token) {\n    if (token) {\n      if (Config.siteTitle === 'unsat' || Config.siteTitle === 'unsat2') this.dologin(token);\n      this.setState({\n        loading: true,\n        loaderStyle: 'dark',\n        connectionErrorMsg: null\n      }, () => {\n        ApiService.fetchLoginToken(token).then(res => {\n          if (res.data.status === 1) {\n            this.setState({\n              loading: false,\n              loginUserData: res.data.data\n            }, () => {\n              this.dologin();\n            });\n          } else {\n            this.setState({\n              loading: false,\n              errorMessage: res.data.message\n            });\n          }\n        }, error => {\n          //ErrorCB\n          this.setState({\n            loading: false,\n            connectionErrorMsg: Config.CONNECTION_ERROR_MSG\n          });\n        });\n      });\n    }\n  }\n\n  dologin() {\n    let reqToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    console.log(reqToken);\n    let loginUserData = this.state.loginUserData;\n    var decoded = jwt_decode((loginUserData === null || loginUserData === void 0 ? void 0 : loginUserData.token) || reqToken);\n    if (reqToken) decoded['token'] = reqToken;\n    let paramsString = this.props.location.search;\n    const params = new URLSearchParams(paramsString);\n    let token = params.get('token');\n    let testId = params.get('testId');\n    let target = params.get('target');\n\n    if (token || testId) {\n      localStorage.setItem('user', JSON.stringify(loginUserData || decoded));\n      localStorage.setItem('enquiryId', (loginUserData === null || loginUserData === void 0 ? void 0 : loginUserData.enquiryId) || (decoded === null || decoded === void 0 ? void 0 : decoded.enquiryId));\n      localStorage.setItem('tenant', decoded.tenant);\n\n      if (testId) {\n        this.props.history.push('/TestInstructions/' + testId + '?cat=0'); //this.props.history.push('/test-instructions/0/'+testId);\n      } else if (target) {\n        this.props.history.push('/' + target);\n      } else {\n        this.props.history.push('/');\n      }\n    } else if (loginUserData.otpEnableStatus && loginUserData.otpEnableStatus === 1) {\n      let _otpValidator = {\n        show: true,\n        otpLength: loginUserData.otpLength,\n        smsAddress: loginUserData.smsAddress,\n        message: loginUserData.otpMessage,\n        userId: loginUserData.userId\n      };\n      this.setState({\n        otpValidator: _otpValidator\n      });\n    } else {\n      localStorage.setItem('user', JSON.stringify(loginUserData));\n      localStorage.setItem('enquiryId', loginUserData.enquiryId);\n      localStorage.setItem('tenant', decoded.tenant);\n      this.props.history.push('/');\n    }\n  }\n\n  renderLoader() {\n    const _loadingText = 'Please wait...';\n    return /*#__PURE__*/React.createElement(ILoader, {\n      loadingText: _loadingText,\n      isShow: this.state.loading,\n      loaderStyle: this.state.loaderStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }\n    });\n  }\n\n  renderFooter() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"institute-cards hashbg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"institute-top-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }, \" Powered by \"), /*#__PURE__*/React.createElement(\"img\", {\n      src: cw_logo,\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default MobileHome;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/home/mobile/index.jsx"],"names":["React","Component","Container","Button","ApiService","cw_logo","Config","ILoader","jwt_decode","MobileHome","constructor","props","promptToInstall","installEvent","prompt","style","display","routeChange","e","path","history","push","pathname","state","loginPageConfig","list","routeInstituteCard","card","message","loading","loaderStyle","reloadInstitute","bind","componentDidMount","paramsString","location","search","params","URLSearchParams","token","get","setState","fetchHome","then","res","data","document","title","instituteName","localStorage","setItem","instituteHomeLink","loginToken","render","auth","JSON","parse","getItem","Text1","background","cover","backgroundSize","backgroundPosition","logo","renderCard","address","__html","renderFooter","renderLoader","cards","map","item","index","name","renderInstallPrompt","width","siteTitle","dologin","connectionErrorMsg","fetchLoginToken","status","loginUserData","errorMessage","error","CONNECTION_ERROR_MSG","reqToken","console","log","decoded","testId","target","stringify","enquiryId","tenant","otpEnableStatus","_otpValidator","show","otpLength","smsAddress","otpMessage","userId","otpValidator","_loadingText"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ApiService from \"../../../_services/ApiService\";\r\nimport \"./style.css\";\r\nimport cw_logo from \"../images/cw_logo.png\";\r\nimport Config from \"../../../_config/config\";\r\nimport {ILoader} from './../../../_components/iloader/iloader';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nclass MobileHome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      message: null,\r\n      loading: false,\r\n      loaderStyle:'',\r\n    };\r\n    this.reloadInstitute = this.reloadInstitute.bind(this);\r\n    \r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.reloadInstitute();\r\n\r\n    /*window.addEventListener('beforeinstallprompt', (event) => {\r\n      event.preventDefault();\r\n      // if no localStorage is set, first time visitor\r\n        // show the prompt banner\r\n        prompt.style.display = 'block';\r\n        // store the event for later use\r\n        let installEvent = event;\r\n    });*/\r\n  }\r\n\r\n  promptToInstall = () => {\r\n    let installEvent;\r\n    prompt.style.display = 'none';\r\n    // trigger the prompt to show to the user\r\n    installEvent.prompt();  \r\n  };\r\n\r\n  reloadInstitute() {\r\n\r\n      let paramsString = this.props.location.search;\r\n      const params = new URLSearchParams(paramsString);\r\n      let token =  params.get('token');\r\n\r\n      this.setState({ loading: true, loaderStyle: token ? 'dark':'' }, () => {\r\n        ApiService.fetchHome()\r\n        .then((res) => {\r\n            this.setState({\r\n              loading: false,\r\n              list: res.data.data\r\n            });\r\n\t\t\t      document.title = this.state.list.instituteName;\r\n            localStorage.setItem('siteTitle', this.state.list.instituteName);\r\n            localStorage.setItem('instituteHomeLink', this.state.list.instituteHomeLink);\r\n            if(token){ this.loginToken(token); }\r\n        });\r\n      });\t\r\n  }\r\n\r\n\r\n  routeChange = (e) => {\r\n    let path = `login`;\r\n    //this.props.history.push(path);\r\n    this.props.history.push({\r\n      pathname: path,\r\n      state: { loginPageConfig: this.state.list.loginPageConfig }});\r\n  };\r\n\r\n  render() {\r\n    let auth = JSON.parse(localStorage.getItem('user'));\r\n    if(auth != null){\r\n      let paramsString = this.props.location.search;\r\n      const params = new URLSearchParams(paramsString);\r\n      let token =  params.get('token');\r\n      if(!token){\r\n        this.props.history.push('dashboard');\r\n      }  \r\n    }\r\n\r\n    const { Text1 } = this.state.list?.loginPageConfig || '';\r\n\r\n\r\n    return (\r\n      <div className=\"home\">\r\n        {\r\n            <Container fluid>\r\n              <div className=\"institute-top\" style={{background: `url(${Config.cover}) no-repeat transparent`,  backgroundSize: 'cover', backgroundPosition: 'center'}}></div>\r\n              <div className=\"institute-top-logo\" style={{background: `url(${Config.logo}) no-repeat transparent`, backgroundSize: '100%'}}></div>\r\n              <div className=\"institute-top-intro\">\r\n                <h4>{this.state.list && this.state.list.instituteName}</h4>\r\n              </div>\r\n              <div className=\"institute-sign-in-btn\">\r\n                <button className=\"primary login button-full ilearn-blue-btn button-md\" onClick={this.routeChange}\r\n                >\r\n                  <span className=\"button-inner\"> SIGN IN </span>\r\n                </button>\r\n              </div>\r\n\r\n              {Text1&&<p className=\"terms-and-conditions\">{Text1}</p>}\r\n              \r\n              {this.renderCard()} \r\n              { this.state.list.address && \r\n                <div className=\"address\">\r\n                <span dangerouslySetInnerHTML={{ __html:this.state.list.address}} />\r\n                </div>\r\n              }\r\n            </Container>\r\n        }\r\n        {this.renderFooter()}\r\n        {this.renderLoader()}\r\n        { \r\n          //this.renderInstallPrompt()\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderCard() {\r\n\t  let data = this.state.list;\r\n\t\treturn  <div className=\"hashbg home-card\"> \r\n\t\t{\r\n\t\t\t data.cards && data.cards.map((item, index) => {\r\n\t\t\t\t\treturn ( \r\n              <Button key={index} variant=\"primary login button-full ilearn-white-btn button-md\" onClick={() =>this.routeInstituteCard(item)}>\r\n                <img src={Config.logo} alt={item.name} /> {item.name}\r\n              </Button>\r\n\t\t\t\t\t)\r\n\t\t\t  })\r\n    }\r\n    </div>\r\n  }\r\n\r\n  routeInstituteCard = (card) => {\r\n    //console.log(JSON.stringify(card));\r\n    this.props.history.push({\r\n      pathname: '/instituteCardDetail',\r\n      state: { card: card }});\r\n  };\r\n\r\n\r\n  renderInstallPrompt() {\r\n    return (\r\n      <div className=\"ath-container banner-bottom-center prompt\" style={{display:\"block\" }}>\r\n          <div className=\"ath-banner\">\r\n            <div className=\"ath-banner-cell\"> <img src={Config.logo} className=\"ath-prompt-logo\" style={{width:\"50px\" }} /> </div>\r\n            <div className=\"ath-banner-title\">Install this PWA?</div>\r\n            <div className=\"ath-banner-cell\">\r\n              <button type=\"button\" class=\"btn btn-cancel btn-link prompt__close\">Not Now</button>\r\n            </div>\r\n            <div className=\"ath-banner-cell\">\r\n              <button type=\"button\" className=\"btn btn-install btn-success prompt__install\" onClick={this.promptToInstall}>Install</button>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n\r\n  loginToken(token) {\r\n    if (token) {\r\n      if(Config.siteTitle === 'unsat' || Config.siteTitle === 'unsat2') this.dologin(token);\r\n      this.setState({ loading: true, loaderStyle:'dark', connectionErrorMsg:null }, () => {\r\n        ApiService.fetchLoginToken(token)\r\n        .then((res) => {\r\n            if(res.data.status===1) { \r\n                this.setState({ loading: false, loginUserData: res.data.data }, () => {\r\n                    this.dologin();\r\n                }); \r\n            }\r\n            else {\r\n                this.setState({\r\n                    loading: false,\r\n                    errorMessage : res.data.message\r\n                });  \r\n            }\r\n        },\r\n        error => { //ErrorCB\r\n            this.setState({loading:false, \r\n            connectionErrorMsg: Config.CONNECTION_ERROR_MSG});\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  dologin(reqToken = null) {\r\n    console.log(reqToken);\r\n    let loginUserData = this.state.loginUserData;\r\n    var decoded = jwt_decode(loginUserData?.token || reqToken );\r\n    if(reqToken) decoded['token'] = reqToken;\r\n    let paramsString = this.props.location.search;\r\n    const params = new URLSearchParams(paramsString);\r\n    let token =  params.get('token');\r\n    let testId =  params.get('testId');\r\n    let target =  params.get('target')\r\n    if(token || testId){\r\n        localStorage.setItem('user', JSON.stringify(loginUserData || decoded));\r\n        localStorage.setItem('enquiryId', loginUserData?.enquiryId || decoded?.enquiryId);\r\n        localStorage.setItem('tenant', decoded.tenant );\r\n        if(testId){\r\n            this.props.history.push('/TestInstructions/'+testId+'?cat=0');\r\n            //this.props.history.push('/test-instructions/0/'+testId);\r\n        }else if(target){\r\n          this.props.history.push('/'+target);\r\n        }else{\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    else if(loginUserData.otpEnableStatus && loginUserData.otpEnableStatus===1) {\r\n        let _otpValidator = { show:true, \r\n            otpLength: loginUserData.otpLength, \r\n            smsAddress: loginUserData.smsAddress,\r\n            message: loginUserData.otpMessage,\r\n            userId: loginUserData.userId\r\n        }\r\n        this.setState({ otpValidator: _otpValidator });   \r\n    }\r\n    else {\r\n        localStorage.setItem('user', JSON.stringify(loginUserData));\r\n        localStorage.setItem('enquiryId', loginUserData.enquiryId);\r\n        localStorage.setItem('tenant', decoded.tenant);\r\n        this.props.history.push('/');\r\n    }\r\n  }\r\n\r\n  renderLoader() {\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n        <ILoader\r\n            loadingText={_loadingText}\r\n            isShow={this.state.loading}\r\n            loaderStyle={this.state.loaderStyle}\r\n            >\r\n        </ILoader>\r\n    )\r\n  }\r\n\r\n  renderFooter() {\r\n    return (\r\n      <div className=\"institute-cards hashbg\">\r\n        <div className=\"\">\r\n          <div className=\"institute-top-intro\">\r\n            <h6> Powered by </h6>\r\n            <img src={cw_logo} alt=\"logo\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default MobileHome;\r\n"]},"metadata":{},"sourceType":"module"}