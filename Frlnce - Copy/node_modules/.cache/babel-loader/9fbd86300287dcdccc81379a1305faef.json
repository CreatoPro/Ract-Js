{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _core = require(\"./utils/core\");\n\nvar _epubcfi = _interopRequireDefault(require(\"./epubcfi\"));\n\nvar _hook = _interopRequireDefault(require(\"./utils/hook\"));\n\nvar _replacements = require(\"./utils/replacements\");\n\nvar _request2 = _interopRequireDefault(require(\"./utils/request\"));\n\nvar _xmldom = require(\"@xmldom/xmldom\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Represents a Section of the Book\n *\n * In most books this is equivalent to a Chapter\n * @param {object} item  The spine item representing the section\n * @param {object} hooks hooks for serialize and content\n */\n\n\nclass Section {\n  constructor(item, hooks) {\n    this.idref = item.idref;\n    this.linear = item.linear === \"yes\";\n    this.properties = item.properties;\n    this.index = item.index;\n    this.href = item.href;\n    this.url = item.url;\n    this.canonical = item.canonical;\n    this.next = item.next;\n    this.prev = item.prev;\n    this.cfiBase = item.cfiBase;\n\n    if (hooks) {\n      this.hooks = hooks;\n    } else {\n      this.hooks = {};\n      this.hooks.serialize = new _hook.default(this);\n      this.hooks.content = new _hook.default(this);\n    }\n\n    this.document = undefined;\n    this.contents = undefined;\n    this.output = undefined;\n  }\n  /**\n   * Load the section from its url\n   * @param  {method} [_request] a request method to use for loading\n   * @return {document} a promise with the xml document\n   */\n\n\n  load(_request) {\n    var request = _request || this.request || _request2.default;\n    var loading = new _core.defer();\n    var loaded = loading.promise;\n\n    if (this.contents) {\n      loading.resolve(this.contents);\n    } else {\n      request(this.url).then(function (xml) {\n        // var directory = new Url(this.url).directory;\n        this.document = xml;\n        this.contents = xml.documentElement;\n        return this.hooks.content.trigger(this.document, this);\n      }.bind(this)).then(function () {\n        loading.resolve(this.contents);\n      }.bind(this)).catch(function (error) {\n        loading.reject(error);\n      });\n    }\n\n    return loaded;\n  }\n  /**\n   * Adds a base tag for resolving urls in the section\n   * @private\n   */\n\n\n  base() {\n    return (0, _replacements.replaceBase)(this.document, this);\n  }\n  /**\n   * Render the contents of a section\n   * @param  {method} [_request] a request method to use for loading\n   * @return {string} output a serialized XML Document\n   */\n\n\n  render(_request) {\n    var rendering = new _core.defer();\n    var rendered = rendering.promise;\n    this.output; // TODO: better way to return this from hooks?\n\n    this.load(_request).then(function (contents) {\n      var userAgent = typeof navigator !== 'undefined' && navigator.userAgent || '';\n      var isIE = userAgent.indexOf('Trident') >= 0;\n      var Serializer;\n\n      if (typeof XMLSerializer === \"undefined\" || isIE) {\n        Serializer = _xmldom.DOMParser;\n      } else {\n        Serializer = XMLSerializer;\n      }\n\n      var serializer = new Serializer();\n      this.output = serializer.serializeToString(contents);\n      return this.output;\n    }.bind(this)).then(function () {\n      return this.hooks.serialize.trigger(this.output, this);\n    }.bind(this)).then(function () {\n      rendering.resolve(this.output);\n    }.bind(this)).catch(function (error) {\n      rendering.reject(error);\n    });\n    return rendered;\n  }\n  /**\n   * Find a string in a section\n   * @param  {string} _query The query string to find\n   * @return {object[]} A list of matches, with form {cfi, excerpt}\n   */\n\n\n  find(_query) {\n    var section = this;\n    var matches = [];\n\n    var query = _query.toLowerCase();\n\n    var find = function (node) {\n      var text = node.textContent.toLowerCase();\n      var range = section.document.createRange();\n      var cfi;\n      var pos;\n      var last = -1;\n      var excerpt;\n      var limit = 150;\n\n      while (pos != -1) {\n        // Search for the query\n        pos = text.indexOf(query, last + 1);\n\n        if (pos != -1) {\n          // We found it! Generate a CFI\n          range = section.document.createRange();\n          range.setStart(node, pos);\n          range.setEnd(node, pos + query.length);\n          cfi = section.cfiFromRange(range); // Generate the excerpt\n\n          if (node.textContent.length < limit) {\n            excerpt = node.textContent;\n          } else {\n            excerpt = node.textContent.substring(pos - limit / 2, pos + limit / 2);\n            excerpt = \"...\" + excerpt + \"...\";\n          } // Add the CFI to the matches list\n\n\n          matches.push({\n            cfi: cfi,\n            excerpt: excerpt\n          });\n        }\n\n        last = pos;\n      }\n    };\n\n    (0, _core.sprint)(section.document, function (node) {\n      find(node);\n    });\n    return matches;\n  }\n  /**\n   * Search a string in multiple sequential Element of the section. If the document.createTreeWalker api is missed(eg: IE8), use `find` as a fallback.\n   * @param  {string} _query The query string to search\n   * @param  {int} maxSeqEle The maximum number of Element that are combined for search, default value is 5.\n   * @return {object[]} A list of matches, with form {cfi, excerpt}\n   */\n\n\n  search(_query) {\n    let maxSeqEle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n\n    if (typeof document.createTreeWalker == \"undefined\") {\n      return this.find(_query);\n    }\n\n    let matches = [];\n    const excerptLimit = 150;\n    const section = this;\n\n    const query = _query.toLowerCase();\n\n    const search = function (nodeList) {\n      const textWithCase = nodeList.reduce((acc, current) => {\n        return acc + current.textContent;\n      }, \"\");\n      const text = textWithCase.toLowerCase();\n      const pos = text.indexOf(query);\n\n      if (pos != -1) {\n        const startNodeIndex = 0,\n              endPos = pos + query.length;\n        let endNodeIndex = 0,\n            l = 0;\n\n        if (pos < nodeList[startNodeIndex].length) {\n          let cfi;\n\n          while (endNodeIndex < nodeList.length - 1) {\n            l += nodeList[endNodeIndex].length;\n\n            if (endPos <= l) {\n              break;\n            }\n\n            endNodeIndex += 1;\n          }\n\n          let startNode = nodeList[startNodeIndex],\n              endNode = nodeList[endNodeIndex];\n          let range = section.document.createRange();\n          range.setStart(startNode, pos);\n          let beforeEndLengthCount = nodeList.slice(0, endNodeIndex).reduce((acc, current) => {\n            return acc + current.textContent.length;\n          }, 0);\n          range.setEnd(endNode, beforeEndLengthCount > endPos ? endPos : endPos - beforeEndLengthCount);\n          cfi = section.cfiFromRange(range);\n          let excerpt = nodeList.slice(0, endNodeIndex + 1).reduce((acc, current) => {\n            return acc + current.textContent;\n          }, \"\");\n\n          if (excerpt.length > excerptLimit) {\n            excerpt = excerpt.substring(pos - excerptLimit / 2, pos + excerptLimit / 2);\n            excerpt = \"...\" + excerpt + \"...\";\n          }\n\n          matches.push({\n            cfi: cfi,\n            excerpt: excerpt\n          });\n        }\n      }\n    };\n\n    const treeWalker = document.createTreeWalker(section.document, NodeFilter.SHOW_TEXT, null, false);\n    let node,\n        nodeList = [];\n\n    while (node = treeWalker.nextNode()) {\n      nodeList.push(node);\n\n      if (nodeList.length == maxSeqEle) {\n        search(nodeList.slice(0, maxSeqEle));\n        nodeList = nodeList.slice(1, maxSeqEle);\n      }\n    }\n\n    if (nodeList.length > 0) {\n      search(nodeList);\n    }\n\n    return matches;\n  }\n  /**\n  * Reconciles the current chapters layout properties with\n  * the global layout properties.\n  * @param {object} globalLayout  The global layout settings object, chapter properties string\n  * @return {object} layoutProperties Object with layout properties\n  */\n\n\n  reconcileLayoutSettings(globalLayout) {\n    //-- Get the global defaults\n    var settings = {\n      layout: globalLayout.layout,\n      spread: globalLayout.spread,\n      orientation: globalLayout.orientation\n    }; //-- Get the chapter's display type\n\n    this.properties.forEach(function (prop) {\n      var rendition = prop.replace(\"rendition:\", \"\");\n      var split = rendition.indexOf(\"-\");\n      var property, value;\n\n      if (split != -1) {\n        property = rendition.slice(0, split);\n        value = rendition.slice(split + 1);\n        settings[property] = value;\n      }\n    });\n    return settings;\n  }\n  /**\n   * Get a CFI from a Range in the Section\n   * @param  {range} _range\n   * @return {string} cfi an EpubCFI string\n   */\n\n\n  cfiFromRange(_range) {\n    return new _epubcfi.default(_range, this.cfiBase).toString();\n  }\n  /**\n   * Get a CFI from an Element in the Section\n   * @param  {element} el\n   * @return {string} cfi an EpubCFI string\n   */\n\n\n  cfiFromElement(el) {\n    return new _epubcfi.default(el, this.cfiBase).toString();\n  }\n  /**\n   * Unload the section document\n   */\n\n\n  unload() {\n    this.document = undefined;\n    this.contents = undefined;\n    this.output = undefined;\n  }\n\n  destroy() {\n    this.unload();\n    this.hooks.serialize.clear();\n    this.hooks.content.clear();\n    this.hooks = undefined;\n    this.idref = undefined;\n    this.linear = undefined;\n    this.properties = undefined;\n    this.index = undefined;\n    this.href = undefined;\n    this.url = undefined;\n    this.next = undefined;\n    this.prev = undefined;\n    this.cfiBase = undefined;\n  }\n\n}\n\nvar _default = Section;\nexports.default = _default;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/node_modules/epubjs/lib/section.js"],"names":["Object","defineProperty","exports","value","default","_core","require","_epubcfi","_interopRequireDefault","_hook","_replacements","_request2","_xmldom","obj","__esModule","Section","constructor","item","hooks","idref","linear","properties","index","href","url","canonical","next","prev","cfiBase","serialize","content","document","undefined","contents","output","load","_request","request","loading","defer","loaded","promise","resolve","then","xml","documentElement","trigger","bind","catch","error","reject","base","replaceBase","render","rendering","rendered","userAgent","navigator","isIE","indexOf","Serializer","XMLSerializer","DOMParser","serializer","serializeToString","find","_query","section","matches","query","toLowerCase","node","text","textContent","range","createRange","cfi","pos","last","excerpt","limit","setStart","setEnd","length","cfiFromRange","substring","push","sprint","search","maxSeqEle","createTreeWalker","excerptLimit","nodeList","textWithCase","reduce","acc","current","startNodeIndex","endPos","endNodeIndex","l","startNode","endNode","beforeEndLengthCount","slice","treeWalker","NodeFilter","SHOW_TEXT","nextNode","reconcileLayoutSettings","globalLayout","settings","layout","spread","orientation","forEach","prop","rendition","replace","split","property","_range","toString","cfiFromElement","el","unload","destroy","clear","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _core = require(\"./utils/core\");\n\nvar _epubcfi = _interopRequireDefault(require(\"./epubcfi\"));\n\nvar _hook = _interopRequireDefault(require(\"./utils/hook\"));\n\nvar _replacements = require(\"./utils/replacements\");\n\nvar _request2 = _interopRequireDefault(require(\"./utils/request\"));\n\nvar _xmldom = require(\"@xmldom/xmldom\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Represents a Section of the Book\n *\n * In most books this is equivalent to a Chapter\n * @param {object} item  The spine item representing the section\n * @param {object} hooks hooks for serialize and content\n */\nclass Section {\n  constructor(item, hooks) {\n    this.idref = item.idref;\n    this.linear = item.linear === \"yes\";\n    this.properties = item.properties;\n    this.index = item.index;\n    this.href = item.href;\n    this.url = item.url;\n    this.canonical = item.canonical;\n    this.next = item.next;\n    this.prev = item.prev;\n    this.cfiBase = item.cfiBase;\n\n    if (hooks) {\n      this.hooks = hooks;\n    } else {\n      this.hooks = {};\n      this.hooks.serialize = new _hook.default(this);\n      this.hooks.content = new _hook.default(this);\n    }\n\n    this.document = undefined;\n    this.contents = undefined;\n    this.output = undefined;\n  }\n  /**\n   * Load the section from its url\n   * @param  {method} [_request] a request method to use for loading\n   * @return {document} a promise with the xml document\n   */\n\n\n  load(_request) {\n    var request = _request || this.request || _request2.default;\n    var loading = new _core.defer();\n    var loaded = loading.promise;\n\n    if (this.contents) {\n      loading.resolve(this.contents);\n    } else {\n      request(this.url).then(function (xml) {\n        // var directory = new Url(this.url).directory;\n        this.document = xml;\n        this.contents = xml.documentElement;\n        return this.hooks.content.trigger(this.document, this);\n      }.bind(this)).then(function () {\n        loading.resolve(this.contents);\n      }.bind(this)).catch(function (error) {\n        loading.reject(error);\n      });\n    }\n\n    return loaded;\n  }\n  /**\n   * Adds a base tag for resolving urls in the section\n   * @private\n   */\n\n\n  base() {\n    return (0, _replacements.replaceBase)(this.document, this);\n  }\n  /**\n   * Render the contents of a section\n   * @param  {method} [_request] a request method to use for loading\n   * @return {string} output a serialized XML Document\n   */\n\n\n  render(_request) {\n    var rendering = new _core.defer();\n    var rendered = rendering.promise;\n    this.output; // TODO: better way to return this from hooks?\n\n    this.load(_request).then(function (contents) {\n      var userAgent = typeof navigator !== 'undefined' && navigator.userAgent || '';\n      var isIE = userAgent.indexOf('Trident') >= 0;\n      var Serializer;\n\n      if (typeof XMLSerializer === \"undefined\" || isIE) {\n        Serializer = _xmldom.DOMParser;\n      } else {\n        Serializer = XMLSerializer;\n      }\n\n      var serializer = new Serializer();\n      this.output = serializer.serializeToString(contents);\n      return this.output;\n    }.bind(this)).then(function () {\n      return this.hooks.serialize.trigger(this.output, this);\n    }.bind(this)).then(function () {\n      rendering.resolve(this.output);\n    }.bind(this)).catch(function (error) {\n      rendering.reject(error);\n    });\n    return rendered;\n  }\n  /**\n   * Find a string in a section\n   * @param  {string} _query The query string to find\n   * @return {object[]} A list of matches, with form {cfi, excerpt}\n   */\n\n\n  find(_query) {\n    var section = this;\n    var matches = [];\n\n    var query = _query.toLowerCase();\n\n    var find = function (node) {\n      var text = node.textContent.toLowerCase();\n      var range = section.document.createRange();\n      var cfi;\n      var pos;\n      var last = -1;\n      var excerpt;\n      var limit = 150;\n\n      while (pos != -1) {\n        // Search for the query\n        pos = text.indexOf(query, last + 1);\n\n        if (pos != -1) {\n          // We found it! Generate a CFI\n          range = section.document.createRange();\n          range.setStart(node, pos);\n          range.setEnd(node, pos + query.length);\n          cfi = section.cfiFromRange(range); // Generate the excerpt\n\n          if (node.textContent.length < limit) {\n            excerpt = node.textContent;\n          } else {\n            excerpt = node.textContent.substring(pos - limit / 2, pos + limit / 2);\n            excerpt = \"...\" + excerpt + \"...\";\n          } // Add the CFI to the matches list\n\n\n          matches.push({\n            cfi: cfi,\n            excerpt: excerpt\n          });\n        }\n\n        last = pos;\n      }\n    };\n\n    (0, _core.sprint)(section.document, function (node) {\n      find(node);\n    });\n    return matches;\n  }\n\n  /**\n   * Search a string in multiple sequential Element of the section. If the document.createTreeWalker api is missed(eg: IE8), use `find` as a fallback.\n   * @param  {string} _query The query string to search\n   * @param  {int} maxSeqEle The maximum number of Element that are combined for search, default value is 5.\n   * @return {object[]} A list of matches, with form {cfi, excerpt}\n   */\n  search(_query, maxSeqEle = 5) {\n    if (typeof document.createTreeWalker == \"undefined\") {\n      return this.find(_query);\n    }\n\n    let matches = [];\n    const excerptLimit = 150;\n    const section = this;\n\n    const query = _query.toLowerCase();\n\n    const search = function (nodeList) {\n      const textWithCase = nodeList.reduce((acc, current) => {\n        return acc + current.textContent;\n      }, \"\");\n      const text = textWithCase.toLowerCase();\n      const pos = text.indexOf(query);\n\n      if (pos != -1) {\n        const startNodeIndex = 0,\n              endPos = pos + query.length;\n        let endNodeIndex = 0,\n            l = 0;\n\n        if (pos < nodeList[startNodeIndex].length) {\n          let cfi;\n\n          while (endNodeIndex < nodeList.length - 1) {\n            l += nodeList[endNodeIndex].length;\n\n            if (endPos <= l) {\n              break;\n            }\n\n            endNodeIndex += 1;\n          }\n\n          let startNode = nodeList[startNodeIndex],\n              endNode = nodeList[endNodeIndex];\n          let range = section.document.createRange();\n          range.setStart(startNode, pos);\n          let beforeEndLengthCount = nodeList.slice(0, endNodeIndex).reduce((acc, current) => {\n            return acc + current.textContent.length;\n          }, 0);\n          range.setEnd(endNode, beforeEndLengthCount > endPos ? endPos : endPos - beforeEndLengthCount);\n          cfi = section.cfiFromRange(range);\n          let excerpt = nodeList.slice(0, endNodeIndex + 1).reduce((acc, current) => {\n            return acc + current.textContent;\n          }, \"\");\n\n          if (excerpt.length > excerptLimit) {\n            excerpt = excerpt.substring(pos - excerptLimit / 2, pos + excerptLimit / 2);\n            excerpt = \"...\" + excerpt + \"...\";\n          }\n\n          matches.push({\n            cfi: cfi,\n            excerpt: excerpt\n          });\n        }\n      }\n    };\n\n    const treeWalker = document.createTreeWalker(section.document, NodeFilter.SHOW_TEXT, null, false);\n    let node,\n        nodeList = [];\n\n    while (node = treeWalker.nextNode()) {\n      nodeList.push(node);\n\n      if (nodeList.length == maxSeqEle) {\n        search(nodeList.slice(0, maxSeqEle));\n        nodeList = nodeList.slice(1, maxSeqEle);\n      }\n    }\n\n    if (nodeList.length > 0) {\n      search(nodeList);\n    }\n\n    return matches;\n  }\n  /**\n  * Reconciles the current chapters layout properties with\n  * the global layout properties.\n  * @param {object} globalLayout  The global layout settings object, chapter properties string\n  * @return {object} layoutProperties Object with layout properties\n  */\n\n\n  reconcileLayoutSettings(globalLayout) {\n    //-- Get the global defaults\n    var settings = {\n      layout: globalLayout.layout,\n      spread: globalLayout.spread,\n      orientation: globalLayout.orientation\n    }; //-- Get the chapter's display type\n\n    this.properties.forEach(function (prop) {\n      var rendition = prop.replace(\"rendition:\", \"\");\n      var split = rendition.indexOf(\"-\");\n      var property, value;\n\n      if (split != -1) {\n        property = rendition.slice(0, split);\n        value = rendition.slice(split + 1);\n        settings[property] = value;\n      }\n    });\n    return settings;\n  }\n  /**\n   * Get a CFI from a Range in the Section\n   * @param  {range} _range\n   * @return {string} cfi an EpubCFI string\n   */\n\n\n  cfiFromRange(_range) {\n    return new _epubcfi.default(_range, this.cfiBase).toString();\n  }\n  /**\n   * Get a CFI from an Element in the Section\n   * @param  {element} el\n   * @return {string} cfi an EpubCFI string\n   */\n\n\n  cfiFromElement(el) {\n    return new _epubcfi.default(el, this.cfiBase).toString();\n  }\n  /**\n   * Unload the section document\n   */\n\n\n  unload() {\n    this.document = undefined;\n    this.contents = undefined;\n    this.output = undefined;\n  }\n\n  destroy() {\n    this.unload();\n    this.hooks.serialize.clear();\n    this.hooks.content.clear();\n    this.hooks = undefined;\n    this.idref = undefined;\n    this.linear = undefined;\n    this.properties = undefined;\n    this.index = undefined;\n    this.href = undefined;\n    this.url = undefined;\n    this.next = undefined;\n    this.prev = undefined;\n    this.cfiBase = undefined;\n  }\n\n}\n\nvar _default = Section;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}