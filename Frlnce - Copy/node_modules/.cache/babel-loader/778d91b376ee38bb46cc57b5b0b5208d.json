{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\verify-mobile\\\\verify-mobile.component.jsx\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport Container from \"react-bootstrap/Container\";\nimport Config from \"../../_config/config\";\nimport Form from \"react-bootstrap/Form\";\nimport Parser from \"html-react-parser\";\nimport OTPValidator from \"../../_components/OTPValidator\";\nimport { ILoader } from \"../../_components/iloader/iloader\";\nimport ApiService from \"../../_services/ApiService\";\nimport jwt_decode from \"jwt-decode\";\nimport \"./verify-mobile.styles.css\";\n\nclass VerifyMobile extends React.Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      this.checkMobile();\n    };\n\n    this.checkMobile = async () => {\n      const {\n        mobile: mobileNo,\n        mobilePattern\n      } = this.state; // console.log(mobilePattern.test(mobileNo));\n\n      if (!mobilePattern.test(mobileNo)) {\n        return this.setState({\n          error: true,\n          errorMessage: \"Invalid Mobile Number. Please key in your 10 digit Indian mobile number (without the country code +91 )\"\n        });\n      }\n\n      try {\n        var _res$data, _res$data2;\n\n        this.setState({\n          showLoading: true,\n          error: false\n        });\n        const res = await ApiService.verifyMobile(mobileNo);\n        console.log(res); // if (res?.data?.status === 200) {\n\n        if ((res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.type) === \"success\") {\n          this.setState({\n            showOtpInput: true,\n            showLoading: false\n          }, () => {\n            this.startTimer(\"message\");\n          });\n        } else if ((res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.error_code) === \"E149\") {\n          this.setState({\n            error: true,\n            showLoading: false,\n            errorMessage: \"Sorry. This mobile number is not registered in our database. Did you use an alternative mobile number while signing up?\",\n            loginUserData: {}\n          });\n        } else {\n          this.setState({\n            showLoading: false,\n            error: true,\n            errorMessage: \"Sorry some error occurred\"\n          });\n        }\n      } catch (e) {\n        console.log(e);\n        this.setState({\n          error: true,\n          showLoading: false,\n          errorMessage: \"Sorry some error occurred\"\n        });\n      }\n    };\n\n    this.handleResendMessage = async () => {\n      try {\n        const {\n          mobile\n        } = this.state;\n        const res = await ApiService.resendTextOtp(mobile);\n        console.log(res);\n\n        if (res.data.type === \"success\") {\n          this.startTimer(\"call\");\n        } else {\n          var _res$data3;\n\n          this.setState({\n            showOtpInput: false,\n            error: true,\n            showLoading: false,\n            errorMessage: ((_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.message) || \"Sorry some error occurred\",\n            loginUserData: {}\n          });\n        }\n      } catch (e) {\n        this.setState({\n          showOtpInput: false,\n          error: true,\n          showLoading: false,\n          errorMessage: \"Sorry some error occurred\",\n          loginUserData: {}\n        });\n      }\n    };\n\n    this.handleCallForOtp = async () => {\n      try {\n        const {\n          mobile\n        } = this.state;\n        const res = await ApiService.resendCallOtp(mobile);\n        console.log(res);\n\n        if (res.data.type === \"success\") {\n          this.setState({\n            resendOtp: false,\n            callForOtp: false,\n            showTimer: false,\n            timeLeft: Infinity,\n            enableResendOtp: false\n          });\n        } else {\n          var _res$data4;\n\n          this.setState({\n            showOtpInput: false,\n            error: true,\n            showLoading: false,\n            errorMessage: ((_res$data4 = res.data) === null || _res$data4 === void 0 ? void 0 : _res$data4.message) || \"Sorry some error occurred\",\n            loginUserData: {}\n          });\n        }\n      } catch (e) {\n        this.setState({\n          showOtpInput: false,\n          error: true,\n          showLoading: false,\n          errorMessage: \"Sorry some error occurred\",\n          loginUserData: {}\n        });\n      }\n    };\n\n    this.handleOtpSubmit = async (otp, isSubmitted) => {\n      this.setState({\n        showOtpInput: false\n      });\n      if (!isSubmitted) return;\n      this.setState({\n        showLoading: true\n      });\n      console.log(otp); // const otpData = {\n      //   channel: \"mobile\",\n      //   identifier: this.state.mobile,\n      //   otp,\n      // };\n\n      const {\n        mobile\n      } = this.state;\n\n      try {\n        var _res$data5;\n\n        const res = await ApiService.loginWithOtp(mobile, otp);\n        this.setState({\n          showLoading: false\n        });\n        console.log(res);\n        const {\n          token\n        } = ((_res$data5 = res.data) === null || _res$data5 === void 0 ? void 0 : _res$data5.data) || {};\n\n        if (res.data.status === 404) {\n          return this.setState({\n            error: true,\n            showLoading: false,\n            errorMessage: \"Sorry. This mobile number is not registered in our database. Did you use an alternative mobile number while signing up?\",\n            loginUserData: {}\n          });\n        }\n\n        if (token) {\n          // this.loginToken(token, res.data.data);\n          return this.dologin(token, res.data.data);\n        } else {\n          this.setState({\n            error: true,\n            showLoading: false,\n            errorMessage: \"Invalid Otp\",\n            loginUserData: {}\n          });\n        }\n      } catch (e) {\n        this.setState({\n          error: true,\n          showLoading: false,\n          errorMessage: \"Sorry some error occurred\",\n          loginUserData: {}\n        });\n      }\n    };\n\n    this.startTimer = event => {\n      this.setState({\n        enableResendOtp: true,\n        resendOtp: false,\n        callForOtp: false,\n        showTimer: true,\n        timeLeft: 30\n      }, () => {\n        this.otpInterval = setInterval(() => {\n          if (this.state.timeLeft === 1) {\n            clearInterval(this.otpInterval);\n            this.setState({\n              resendOtp: event === \"message\",\n              showTimer: false,\n              callForOtp: event === \"call\"\n            });\n          } else {\n            this.setState(prevState => ({\n              timeLeft: prevState.timeLeft - 1\n            }));\n          }\n        }, 1000);\n      });\n    };\n\n    this.dologin = (token, testDetails) => {\n      // let loginUserData = this.state.loginUserData;\n      let user = jwt_decode(token);\n      delete user.sub;\n      delete user.jti;\n      delete user.iat;\n      user.token = token;\n      console.log(user, \"<--decoded\");\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      localStorage.setItem(\"enquiryId\", user.enquiryId);\n      localStorage.setItem(\"tenant\", user.tenant);\n      return this.props.history.replace({\n        pathname: \"/testdetails\",\n        state: {\n          testDetails\n        }\n      });\n    };\n\n    this.state = {\n      mobile: \"\",\n      error: false,\n      errorMessage: \"\",\n      otpMessage: \"Successfully sent the One Time Password to your Registered Mobile Number\",\n      userId: \"null\",\n      otpLength: 4,\n      showOtpInput: false,\n      showLoading: false,\n      mobilePattern: /^[0-9]{10}$/,\n      showTimer: false,\n      resendOtp: false,\n      callForOtp: false,\n      timeLeft: Infinity,\n      enableResendOtp: true\n    };\n    this.otpInterval = null;\n  }\n\n  componentWillUnmount() {\n    if (this.otpInterval) {\n      clearInterval(this.otpInterval);\n    }\n  }\n\n  loginToken(token, testDetails) {\n    if (token) {\n      console.log(token);\n      this.setState({\n        loading: true,\n        loaderStyle: \"dark\",\n        connectionErrorMsg: null\n      }, () => {\n        ApiService.fetchLoginToken(token).then(res => {\n          console.log(res, \"<--login\");\n\n          if (res.data.status === 1) {\n            this.setState({\n              loading: false,\n              loginUserData: res.data.data\n            }, () => {\n              this.dologin(testDetails);\n            });\n          } else {\n            this.setState({\n              loading: false,\n              errorMessage: res.data.message\n            });\n          }\n        }, error => {\n          //ErrorCB\n          this.setState({\n            loading: false,\n            connectionErrorMsg: Config.CONNECTION_ERROR_MSG\n          });\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login work-sans-font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-image\",\n      style: {\n        background: `url(${Config.cover}) no-repeat transparent`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"gradient-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }\n    }, \" Enter Your Mobile number\")), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `item-inner ${this.state.error ? \"has-error\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"tel\",\n      name: \"mobile\",\n      onChange: this.onChange,\n      placeholder: \"Mobile Number\",\n      title: \"please enter a valid phone no\",\n      value: this.state.mobile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"institute-sign-in-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"primary button-full ilearn-blue-btn button-md\",\n      type: \"submit\",\n      value: \"Send Otp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 23\n      }\n    })), this.state.error && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 23\n      }\n    }, Parser(this.state.errorMessage)))))), /*#__PURE__*/React.createElement(OTPValidator, {\n      data: {\n        show: this.state.showOtpInput,\n        otpLength: this.state.otpLength,\n        smsAddress: this.state.mobile,\n        message: this.state.otpMessage,\n        userId: this.state.userId\n      },\n      handleResendMessage: this.handleResendMessage,\n      enableResendOtp: this.state.enableResendOtp,\n      showTimer: this.state.showTimer,\n      masterControl: true,\n      timeLeft: this.state.timeLeft,\n      resendOtp: this.state.resendOtp,\n      callForOtp: this.state.callForOtp,\n      onOTPValidatorClose: this.handleOtpSubmit,\n      handleCallForOtp: this.handleCallForOtp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ILoader, {\n      loadingText: \"Please wait...\",\n      isShow: this.state.showLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"verify-mobile-support\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }\n    }, \"Having trouble? Please contact\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"verify-mobile-support-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }\n    }, \"help@unacademy.com\"), \" \", \"for further support.\"));\n  }\n\n}\n\nexport default VerifyMobile;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/verify-mobile/verify-mobile.component.jsx"],"names":["React","FontAwesomeIcon","faArrowLeft","Container","Config","Form","Parser","OTPValidator","ILoader","ApiService","jwt_decode","VerifyMobile","Component","constructor","onChange","e","name","value","target","setState","submitHandler","preventDefault","checkMobile","mobile","mobileNo","mobilePattern","state","test","error","errorMessage","showLoading","res","verifyMobile","console","log","data","type","showOtpInput","startTimer","error_code","loginUserData","handleResendMessage","resendTextOtp","message","handleCallForOtp","resendCallOtp","resendOtp","callForOtp","showTimer","timeLeft","Infinity","enableResendOtp","handleOtpSubmit","otp","isSubmitted","loginWithOtp","token","status","dologin","event","otpInterval","setInterval","clearInterval","prevState","testDetails","user","sub","jti","iat","localStorage","setItem","JSON","stringify","enquiryId","tenant","props","history","replace","pathname","otpMessage","userId","otpLength","componentWillUnmount","loginToken","loading","loaderStyle","connectionErrorMsg","fetchLoginToken","then","CONNECTION_ERROR_MSG","render","background","cover","backgroundSize","backgroundPosition","show","smsAddress"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,4BAAP;;AAEA,MAAMC,YAAN,SAA2BX,KAAK,CAACY,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAsBdC,QAtBc,GAsBFC,CAAD,IAAO;AAChB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,CAAC,CAACG,MAA1B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACH,IAAD,GAAQC;AAAV,OAAd;AACD,KAzBa;;AAAA,SA2BdG,aA3Bc,GA2BGL,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACM,cAAF;AACA,WAAKC,WAAL;AACD,KA9Ba;;AAAA,SAgCdA,WAhCc,GAgCA,YAAY;AACxB,YAAM;AAAEC,QAAAA,MAAM,EAAEC,QAAV;AAAoBC,QAAAA;AAApB,UAAsC,KAAKC,KAAjD,CADwB,CAExB;;AACA,UAAI,CAACD,aAAa,CAACE,IAAd,CAAmBH,QAAnB,CAAL,EAAmC;AACjC,eAAO,KAAKL,QAAL,CAAc;AACnBS,UAAAA,KAAK,EAAE,IADY;AAEnBC,UAAAA,YAAY,EACV;AAHiB,SAAd,CAAP;AAKD;;AAED,UAAI;AAAA;;AACF,aAAKV,QAAL,CAAc;AACZW,UAAAA,WAAW,EAAE,IADD;AAEZF,UAAAA,KAAK,EAAE;AAFK,SAAd;AAIA,cAAMG,GAAG,GAAG,MAAMtB,UAAU,CAACuB,YAAX,CAAwBR,QAAxB,CAAlB;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EANE,CAOF;;AACA,YAAI,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,yBAAAA,GAAG,CAAEI,IAAL,wDAAWC,IAAX,MAAoB,SAAxB,EAAmC;AACjC,eAAKjB,QAAL,CACE;AACEkB,YAAAA,YAAY,EAAE,IADhB;AAEEP,YAAAA,WAAW,EAAE;AAFf,WADF,EAKE,MAAM;AACJ,iBAAKQ,UAAL,CAAgB,SAAhB;AACD,WAPH;AASD,SAVD,MAUO,IAAI,CAAAP,GAAG,SAAH,IAAAA,GAAG,WAAH,0BAAAA,GAAG,CAAEI,IAAL,0DAAWI,UAAX,MAA0B,MAA9B,EAAsC;AAC3C,eAAKpB,QAAL,CAAc;AACZS,YAAAA,KAAK,EAAE,IADK;AAEZE,YAAAA,WAAW,EAAE,KAFD;AAGZD,YAAAA,YAAY,EACV,yHAJU;AAKZW,YAAAA,aAAa,EAAE;AALH,WAAd;AAOD,SARM,MAQA;AACL,eAAKrB,QAAL,CAAc;AACZW,YAAAA,WAAW,EAAE,KADD;AAEZF,YAAAA,KAAK,EAAE,IAFK;AAGZC,YAAAA,YAAY,EAAE;AAHF,WAAd;AAKD;AACF,OAjCD,CAiCE,OAAOd,CAAP,EAAU;AACVkB,QAAAA,OAAO,CAACC,GAAR,CAAYnB,CAAZ;AACA,aAAKI,QAAL,CAAc;AACZS,UAAAA,KAAK,EAAE,IADK;AAEZE,UAAAA,WAAW,EAAE,KAFD;AAGZD,UAAAA,YAAY,EAAE;AAHF,SAAd;AAKD;AACF,KApFa;;AAAA,SAsFdY,mBAtFc,GAsFQ,YAAY;AAChC,UAAI;AACF,cAAM;AAAElB,UAAAA;AAAF,YAAa,KAAKG,KAAxB;AACA,cAAMK,GAAG,GAAG,MAAMtB,UAAU,CAACiC,aAAX,CAAyBnB,MAAzB,CAAlB;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;;AACA,YAAIA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,SAAtB,EAAiC;AAC/B,eAAKE,UAAL,CAAgB,MAAhB;AACD,SAFD,MAEO;AAAA;;AACL,eAAKnB,QAAL,CAAc;AACZkB,YAAAA,YAAY,EAAE,KADF;AAEZT,YAAAA,KAAK,EAAE,IAFK;AAGZE,YAAAA,WAAW,EAAE,KAHD;AAIZD,YAAAA,YAAY,EAAE,eAAAE,GAAG,CAACI,IAAJ,0DAAUQ,OAAV,KAAqB,2BAJvB;AAKZH,YAAAA,aAAa,EAAE;AALH,WAAd;AAOD;AACF,OAfD,CAeE,OAAOzB,CAAP,EAAU;AACV,aAAKI,QAAL,CAAc;AACZkB,UAAAA,YAAY,EAAE,KADF;AAEZT,UAAAA,KAAK,EAAE,IAFK;AAGZE,UAAAA,WAAW,EAAE,KAHD;AAIZD,UAAAA,YAAY,EAAE,2BAJF;AAKZW,UAAAA,aAAa,EAAE;AALH,SAAd;AAOD;AACF,KA/Ga;;AAAA,SAiHdI,gBAjHc,GAiHK,YAAY;AAC7B,UAAI;AACF,cAAM;AAAErB,UAAAA;AAAF,YAAa,KAAKG,KAAxB;AACA,cAAMK,GAAG,GAAG,MAAMtB,UAAU,CAACoC,aAAX,CAAyBtB,MAAzB,CAAlB;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;;AACA,YAAIA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,SAAtB,EAAiC;AAC/B,eAAKjB,QAAL,CAAc;AACZ2B,YAAAA,SAAS,EAAE,KADC;AAEZC,YAAAA,UAAU,EAAE,KAFA;AAGZC,YAAAA,SAAS,EAAE,KAHC;AAIZC,YAAAA,QAAQ,EAAEC,QAJE;AAKZC,YAAAA,eAAe,EAAE;AALL,WAAd;AAOD,SARD,MAQO;AAAA;;AACL,eAAKhC,QAAL,CAAc;AACZkB,YAAAA,YAAY,EAAE,KADF;AAEZT,YAAAA,KAAK,EAAE,IAFK;AAGZE,YAAAA,WAAW,EAAE,KAHD;AAIZD,YAAAA,YAAY,EAAE,eAAAE,GAAG,CAACI,IAAJ,0DAAUQ,OAAV,KAAqB,2BAJvB;AAKZH,YAAAA,aAAa,EAAE;AALH,WAAd;AAOD;AACF,OArBD,CAqBE,OAAOzB,CAAP,EAAU;AACV,aAAKI,QAAL,CAAc;AACZkB,UAAAA,YAAY,EAAE,KADF;AAEZT,UAAAA,KAAK,EAAE,IAFK;AAGZE,UAAAA,WAAW,EAAE,KAHD;AAIZD,UAAAA,YAAY,EAAE,2BAJF;AAKZW,UAAAA,aAAa,EAAE;AALH,SAAd;AAOD;AACF,KAhJa;;AAAA,SAkJdY,eAlJc,GAkJI,OAAOC,GAAP,EAAYC,WAAZ,KAA4B;AAC5C,WAAKnC,QAAL,CAAc;AACZkB,QAAAA,YAAY,EAAE;AADF,OAAd;AAIA,UAAI,CAACiB,WAAL,EAAkB;AAElB,WAAKnC,QAAL,CAAc;AACZW,QAAAA,WAAW,EAAE;AADD,OAAd;AAIAG,MAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ,EAX4C,CAY5C;AACA;AACA;AACA;AACA;;AACA,YAAM;AAAE9B,QAAAA;AAAF,UAAa,KAAKG,KAAxB;;AAEA,UAAI;AAAA;;AACF,cAAMK,GAAG,GAAG,MAAMtB,UAAU,CAAC8C,YAAX,CAAwBhC,MAAxB,EAAgC8B,GAAhC,CAAlB;AACA,aAAKlC,QAAL,CAAc;AACZW,UAAAA,WAAW,EAAE;AADD,SAAd;AAGAG,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,cAAM;AAAEyB,UAAAA;AAAF,YAAY,eAAAzB,GAAG,CAACI,IAAJ,0DAAUA,IAAV,KAAkB,EAApC;;AAEA,YAAIJ,GAAG,CAACI,IAAJ,CAASsB,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,iBAAO,KAAKtC,QAAL,CAAc;AACnBS,YAAAA,KAAK,EAAE,IADY;AAEnBE,YAAAA,WAAW,EAAE,KAFM;AAGnBD,YAAAA,YAAY,EACV,yHAJiB;AAKnBW,YAAAA,aAAa,EAAE;AALI,WAAd,CAAP;AAOD;;AAED,YAAIgB,KAAJ,EAAW;AACT;AACA,iBAAO,KAAKE,OAAL,CAAaF,KAAb,EAAoBzB,GAAG,CAACI,IAAJ,CAASA,IAA7B,CAAP;AACD,SAHD,MAGO;AACL,eAAKhB,QAAL,CAAc;AACZS,YAAAA,KAAK,EAAE,IADK;AAEZE,YAAAA,WAAW,EAAE,KAFD;AAGZD,YAAAA,YAAY,EAAE,aAHF;AAIZW,YAAAA,aAAa,EAAE;AAJH,WAAd;AAMD;AACF,OA7BD,CA6BE,OAAOzB,CAAP,EAAU;AACV,aAAKI,QAAL,CAAc;AACZS,UAAAA,KAAK,EAAE,IADK;AAEZE,UAAAA,WAAW,EAAE,KAFD;AAGZD,UAAAA,YAAY,EAAE,2BAHF;AAIZW,UAAAA,aAAa,EAAE;AAJH,SAAd;AAMD;AACF,KA1Ma;;AAAA,SA4MdF,UA5Mc,GA4MAqB,KAAD,IAAW;AACtB,WAAKxC,QAAL,CACE;AACEgC,QAAAA,eAAe,EAAE,IADnB;AAEEL,QAAAA,SAAS,EAAE,KAFb;AAGEC,QAAAA,UAAU,EAAE,KAHd;AAIEC,QAAAA,SAAS,EAAE,IAJb;AAKEC,QAAAA,QAAQ,EAAE;AALZ,OADF,EAQE,MAAM;AACJ,aAAKW,WAAL,GAAmBC,WAAW,CAAC,MAAM;AACnC,cAAI,KAAKnC,KAAL,CAAWuB,QAAX,KAAwB,CAA5B,EAA+B;AAC7Ba,YAAAA,aAAa,CAAC,KAAKF,WAAN,CAAb;AACA,iBAAKzC,QAAL,CAAc;AACZ2B,cAAAA,SAAS,EAAEa,KAAK,KAAK,SADT;AAEZX,cAAAA,SAAS,EAAE,KAFC;AAGZD,cAAAA,UAAU,EAAEY,KAAK,KAAK;AAHV,aAAd;AAKD,WAPD,MAOO;AACL,iBAAKxC,QAAL,CAAe4C,SAAD,KAAgB;AAC5Bd,cAAAA,QAAQ,EAAEc,SAAS,CAACd,QAAV,GAAqB;AADH,aAAhB,CAAd;AAGD;AACF,SAb6B,EAa3B,IAb2B,CAA9B;AAcD,OAvBH;AAyBD,KAtOa;;AAAA,SAkRdS,OAlRc,GAkRJ,CAACF,KAAD,EAAQQ,WAAR,KAAwB;AAChC;AACA,UAAIC,IAAI,GAAGvD,UAAU,CAAC8C,KAAD,CAArB;AACA,aAAOS,IAAI,CAACC,GAAZ;AACA,aAAOD,IAAI,CAACE,GAAZ;AACA,aAAOF,IAAI,CAACG,GAAZ;AACAH,MAAAA,IAAI,CAACT,KAAL,GAAaA,KAAb;AACAvB,MAAAA,OAAO,CAACC,GAAR,CAAY+B,IAAZ,EAAkB,YAAlB;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAA7B;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCL,IAAI,CAACQ,SAAvC;AACAJ,MAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BL,IAAI,CAACS,MAApC;AAEA,aAAO,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,OAAnB,CAA2B;AAChCC,QAAAA,QAAQ,EAAE,cADsB;AAEhCpD,QAAAA,KAAK,EAAE;AAAEsC,UAAAA;AAAF;AAFyB,OAA3B,CAAP;AAID,KAlSa;;AAEZ,SAAKtC,KAAL,GAAa;AACXH,MAAAA,MAAM,EAAE,EADG;AAEXK,MAAAA,KAAK,EAAE,KAFI;AAGXC,MAAAA,YAAY,EAAE,EAHH;AAIXkD,MAAAA,UAAU,EACR,0EALS;AAMXC,MAAAA,MAAM,EAAE,MANG;AAOXC,MAAAA,SAAS,EAAE,CAPA;AAQX5C,MAAAA,YAAY,EAAE,KARH;AASXP,MAAAA,WAAW,EAAE,KATF;AAUXL,MAAAA,aAAa,EAAE,aAVJ;AAWXuB,MAAAA,SAAS,EAAE,KAXA;AAYXF,MAAAA,SAAS,EAAE,KAZA;AAaXC,MAAAA,UAAU,EAAE,KAbD;AAcXE,MAAAA,QAAQ,EAAEC,QAdC;AAeXC,MAAAA,eAAe,EAAE;AAfN,KAAb;AAiBA,SAAKS,WAAL,GAAmB,IAAnB;AACD;;AAoNDsB,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKtB,WAAT,EAAsB;AACpBE,MAAAA,aAAa,CAAC,KAAKF,WAAN,CAAb;AACD;AACF;;AAEDuB,EAAAA,UAAU,CAAC3B,KAAD,EAAQQ,WAAR,EAAqB;AAC7B,QAAIR,KAAJ,EAAW;AACTvB,MAAAA,OAAO,CAACC,GAAR,CAAYsB,KAAZ;AACA,WAAKrC,QAAL,CACE;AAAEiE,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,WAAW,EAAE,MAA9B;AAAsCC,QAAAA,kBAAkB,EAAE;AAA1D,OADF,EAEE,MAAM;AACJ7E,QAAAA,UAAU,CAAC8E,eAAX,CAA2B/B,KAA3B,EAAkCgC,IAAlC,CACGzD,GAAD,IAAS;AACPE,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAAiB,UAAjB;;AACA,cAAIA,GAAG,CAACI,IAAJ,CAASsB,MAAT,KAAoB,CAAxB,EAA2B;AACzB,iBAAKtC,QAAL,CACE;AAAEiE,cAAAA,OAAO,EAAE,KAAX;AAAkB5C,cAAAA,aAAa,EAAET,GAAG,CAACI,IAAJ,CAASA;AAA1C,aADF,EAEE,MAAM;AACJ,mBAAKuB,OAAL,CAAaM,WAAb;AACD,aAJH;AAMD,WAPD,MAOO;AACL,iBAAK7C,QAAL,CAAc;AACZiE,cAAAA,OAAO,EAAE,KADG;AAEZvD,cAAAA,YAAY,EAAEE,GAAG,CAACI,IAAJ,CAASQ;AAFX,aAAd;AAID;AACF,SAhBH,EAiBGf,KAAD,IAAW;AACT;AACA,eAAKT,QAAL,CAAc;AACZiE,YAAAA,OAAO,EAAE,KADG;AAEZE,YAAAA,kBAAkB,EAAElF,MAAM,CAACqF;AAFf,WAAd;AAID,SAvBH;AAyBD,OA5BH;AA8BD;AACF;;AAoBDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAG,OAAMvF,MAAM,CAACwF,KAAM,yBAD3B;AAELC,QAAAA,cAAc,EAAE,OAFX;AAGLC,QAAAA,kBAAkB,EAAE;AAHf,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CADF,eAKI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAK1E,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAG,cACV,KAAKM,KAAL,CAAWE,KAAX,GAAmB,WAAnB,GAAiC,EAClC,EAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,QAAQ,EAAE,KAAKd,QAHjB;AAIE,MAAA,WAAW,EAAC,eAJd;AAKE,MAAA,KAAK,EAAC,+BALR;AAME,MAAA,KAAK,EAAE,KAAKY,KAAL,CAAWH,MANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,eAgBE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,+CADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAC,UAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhBF,EAuBG,KAAKG,KAAL,CAAWE,KAAX,iBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGtB,MAAM,CAAC,KAAKoB,KAAL,CAAWG,YAAZ,CADT,CAxBJ,CADF,CALJ,CATF,CAFJ,eAmDE,oBAAC,YAAD;AACE,MAAA,IAAI,EAAE;AACJkE,QAAAA,IAAI,EAAE,KAAKrE,KAAL,CAAWW,YADb;AAEJ4C,QAAAA,SAAS,EAAE,KAAKvD,KAAL,CAAWuD,SAFlB;AAGJe,QAAAA,UAAU,EAAE,KAAKtE,KAAL,CAAWH,MAHnB;AAIJoB,QAAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWqD,UAJhB;AAKJC,QAAAA,MAAM,EAAE,KAAKtD,KAAL,CAAWsD;AALf,OADR;AAQE,MAAA,mBAAmB,EAAE,KAAKvC,mBAR5B;AASE,MAAA,eAAe,EAAE,KAAKf,KAAL,CAAWyB,eAT9B;AAUE,MAAA,SAAS,EAAE,KAAKzB,KAAL,CAAWsB,SAVxB;AAWE,MAAA,aAAa,EAAE,IAXjB;AAYE,MAAA,QAAQ,EAAE,KAAKtB,KAAL,CAAWuB,QAZvB;AAaE,MAAA,SAAS,EAAE,KAAKvB,KAAL,CAAWoB,SAbxB;AAcE,MAAA,UAAU,EAAE,KAAKpB,KAAL,CAAWqB,UAdzB;AAeE,MAAA,mBAAmB,EAAE,KAAKK,eAf5B;AAgBE,MAAA,gBAAgB,EAAE,KAAKR,gBAhBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnDF,eAqEE,oBAAC,OAAD;AACE,MAAA,WAAW,EAAE,gBADf;AAEE,MAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWI,WAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArEF,eAyEE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCACiC,GADjC,eAEE;AAAM,MAAA,SAAS,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,EAIU,GAJV,yBAzEF,CADF;AAmFD;;AAzXwC;;AA4X3C,eAAenB,YAAf","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Config from \"../../_config/config\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Parser from \"html-react-parser\";\r\nimport OTPValidator from \"../../_components/OTPValidator\";\r\nimport { ILoader } from \"../../_components/iloader/iloader\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport \"./verify-mobile.styles.css\";\r\n\r\nclass VerifyMobile extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      mobile: \"\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n      otpMessage:\r\n        \"Successfully sent the One Time Password to your Registered Mobile Number\",\r\n      userId: \"null\",\r\n      otpLength: 4,\r\n      showOtpInput: false,\r\n      showLoading: false,\r\n      mobilePattern: /^[0-9]{10}$/,\r\n      showTimer: false,\r\n      resendOtp: false,\r\n      callForOtp: false,\r\n      timeLeft: Infinity,\r\n      enableResendOtp: true,\r\n    };\r\n    this.otpInterval = null;\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.checkMobile();\r\n  };\r\n\r\n  checkMobile = async () => {\r\n    const { mobile: mobileNo, mobilePattern } = this.state;\r\n    // console.log(mobilePattern.test(mobileNo));\r\n    if (!mobilePattern.test(mobileNo)) {\r\n      return this.setState({\r\n        error: true,\r\n        errorMessage:\r\n          \"Invalid Mobile Number. Please key in your 10 digit Indian mobile number (without the country code +91 )\",\r\n      });\r\n    }\r\n\r\n    try {\r\n      this.setState({\r\n        showLoading: true,\r\n        error: false,\r\n      });\r\n      const res = await ApiService.verifyMobile(mobileNo);\r\n      console.log(res);\r\n      // if (res?.data?.status === 200) {\r\n      if (res?.data?.type === \"success\") {\r\n        this.setState(\r\n          {\r\n            showOtpInput: true,\r\n            showLoading: false,\r\n          },\r\n          () => {\r\n            this.startTimer(\"message\");\r\n          }\r\n        );\r\n      } else if (res?.data?.error_code === \"E149\") {\r\n        this.setState({\r\n          error: true,\r\n          showLoading: false,\r\n          errorMessage:\r\n            \"Sorry. This mobile number is not registered in our database. Did you use an alternative mobile number while signing up?\",\r\n          loginUserData: {},\r\n        });\r\n      } else {\r\n        this.setState({\r\n          showLoading: false,\r\n          error: true,\r\n          errorMessage: \"Sorry some error occurred\",\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.setState({\r\n        error: true,\r\n        showLoading: false,\r\n        errorMessage: \"Sorry some error occurred\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleResendMessage = async () => {\r\n    try {\r\n      const { mobile } = this.state;\r\n      const res = await ApiService.resendTextOtp(mobile);\r\n      console.log(res);\r\n      if (res.data.type === \"success\") {\r\n        this.startTimer(\"call\");\r\n      } else {\r\n        this.setState({\r\n          showOtpInput: false,\r\n          error: true,\r\n          showLoading: false,\r\n          errorMessage: res.data?.message || \"Sorry some error occurred\",\r\n          loginUserData: {},\r\n        });\r\n      }\r\n    } catch (e) {\r\n      this.setState({\r\n        showOtpInput: false,\r\n        error: true,\r\n        showLoading: false,\r\n        errorMessage: \"Sorry some error occurred\",\r\n        loginUserData: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCallForOtp = async () => {\r\n    try {\r\n      const { mobile } = this.state;\r\n      const res = await ApiService.resendCallOtp(mobile);\r\n      console.log(res);\r\n      if (res.data.type === \"success\") {\r\n        this.setState({\r\n          resendOtp: false,\r\n          callForOtp: false,\r\n          showTimer: false,\r\n          timeLeft: Infinity,\r\n          enableResendOtp: false,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          showOtpInput: false,\r\n          error: true,\r\n          showLoading: false,\r\n          errorMessage: res.data?.message || \"Sorry some error occurred\",\r\n          loginUserData: {},\r\n        });\r\n      }\r\n    } catch (e) {\r\n      this.setState({\r\n        showOtpInput: false,\r\n        error: true,\r\n        showLoading: false,\r\n        errorMessage: \"Sorry some error occurred\",\r\n        loginUserData: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOtpSubmit = async (otp, isSubmitted) => {\r\n    this.setState({\r\n      showOtpInput: false,\r\n    });\r\n\r\n    if (!isSubmitted) return;\r\n\r\n    this.setState({\r\n      showLoading: true,\r\n    });\r\n\r\n    console.log(otp);\r\n    // const otpData = {\r\n    //   channel: \"mobile\",\r\n    //   identifier: this.state.mobile,\r\n    //   otp,\r\n    // };\r\n    const { mobile } = this.state;\r\n\r\n    try {\r\n      const res = await ApiService.loginWithOtp(mobile, otp);\r\n      this.setState({\r\n        showLoading: false,\r\n      });\r\n      console.log(res);\r\n      const { token } = res.data?.data || {};\r\n\r\n      if (res.data.status === 404) {\r\n        return this.setState({\r\n          error: true,\r\n          showLoading: false,\r\n          errorMessage:\r\n            \"Sorry. This mobile number is not registered in our database. Did you use an alternative mobile number while signing up?\",\r\n          loginUserData: {},\r\n        });\r\n      }\r\n\r\n      if (token) {\r\n        // this.loginToken(token, res.data.data);\r\n        return this.dologin(token, res.data.data);\r\n      } else {\r\n        this.setState({\r\n          error: true,\r\n          showLoading: false,\r\n          errorMessage: \"Invalid Otp\",\r\n          loginUserData: {},\r\n        });\r\n      }\r\n    } catch (e) {\r\n      this.setState({\r\n        error: true,\r\n        showLoading: false,\r\n        errorMessage: \"Sorry some error occurred\",\r\n        loginUserData: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  startTimer = (event) => {\r\n    this.setState(\r\n      {\r\n        enableResendOtp: true,\r\n        resendOtp: false,\r\n        callForOtp: false,\r\n        showTimer: true,\r\n        timeLeft: 30,\r\n      },\r\n      () => {\r\n        this.otpInterval = setInterval(() => {\r\n          if (this.state.timeLeft === 1) {\r\n            clearInterval(this.otpInterval);\r\n            this.setState({\r\n              resendOtp: event === \"message\",\r\n              showTimer: false,\r\n              callForOtp: event === \"call\",\r\n            });\r\n          } else {\r\n            this.setState((prevState) => ({\r\n              timeLeft: prevState.timeLeft - 1,\r\n            }));\r\n          }\r\n        }, 1000);\r\n      }\r\n    );\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    if (this.otpInterval) {\r\n      clearInterval(this.otpInterval);\r\n    }\r\n  }\r\n\r\n  loginToken(token, testDetails) {\r\n    if (token) {\r\n      console.log(token);\r\n      this.setState(\r\n        { loading: true, loaderStyle: \"dark\", connectionErrorMsg: null },\r\n        () => {\r\n          ApiService.fetchLoginToken(token).then(\r\n            (res) => {\r\n              console.log(res, \"<--login\");\r\n              if (res.data.status === 1) {\r\n                this.setState(\r\n                  { loading: false, loginUserData: res.data.data },\r\n                  () => {\r\n                    this.dologin(testDetails);\r\n                  }\r\n                );\r\n              } else {\r\n                this.setState({\r\n                  loading: false,\r\n                  errorMessage: res.data.message,\r\n                });\r\n              }\r\n            },\r\n            (error) => {\r\n              //ErrorCB\r\n              this.setState({\r\n                loading: false,\r\n                connectionErrorMsg: Config.CONNECTION_ERROR_MSG,\r\n              });\r\n            }\r\n          );\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  dologin = (token, testDetails) => {\r\n    // let loginUserData = this.state.loginUserData;\r\n    let user = jwt_decode(token);\r\n    delete user.sub;\r\n    delete user.jti;\r\n    delete user.iat;\r\n    user.token = token;\r\n    console.log(user, \"<--decoded\");\r\n    localStorage.setItem(\"user\", JSON.stringify(user));\r\n    localStorage.setItem(\"enquiryId\", user.enquiryId);\r\n    localStorage.setItem(\"tenant\", user.tenant);\r\n\r\n    return this.props.history.replace({\r\n      pathname: \"/testdetails\",\r\n      state: { testDetails },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login work-sans-font\">\r\n        {\r\n          <Container fluid>\r\n            <div\r\n              className=\"header-image\"\r\n              style={{\r\n                background: `url(${Config.cover}) no-repeat transparent`,\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n              }}\r\n            ></div>\r\n            <div className=\"main-content\">\r\n              <span className=\"gradient-text\">\r\n                <strong> Enter Your Mobile number</strong>\r\n              </span>\r\n              {\r\n                <Form onSubmit={this.submitHandler}>\r\n                  <Form.Group>\r\n                    <div\r\n                      className={`item-inner ${\r\n                        this.state.error ? \"has-error\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <Form.Control\r\n                        type=\"tel\"\r\n                        name=\"mobile\"\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Mobile Number\"\r\n                        title=\"please enter a valid phone no\"\r\n                        value={this.state.mobile}\r\n                      />\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"institute-sign-in-btn\">\r\n                      <input\r\n                        className=\"primary button-full ilearn-blue-btn button-md\"\r\n                        type=\"submit\"\r\n                        value=\"Send Otp\"\r\n                      />\r\n                    </div>\r\n                    {this.state.error && (\r\n                      <div className=\"red\">\r\n                        {Parser(this.state.errorMessage)}\r\n                      </div>\r\n                    )}\r\n                  </Form.Group>\r\n                </Form>\r\n              }\r\n            </div>\r\n          </Container>\r\n        }\r\n        <OTPValidator\r\n          data={{\r\n            show: this.state.showOtpInput,\r\n            otpLength: this.state.otpLength,\r\n            smsAddress: this.state.mobile,\r\n            message: this.state.otpMessage,\r\n            userId: this.state.userId,\r\n          }}\r\n          handleResendMessage={this.handleResendMessage}\r\n          enableResendOtp={this.state.enableResendOtp}\r\n          showTimer={this.state.showTimer}\r\n          masterControl={true}\r\n          timeLeft={this.state.timeLeft}\r\n          resendOtp={this.state.resendOtp}\r\n          callForOtp={this.state.callForOtp}\r\n          onOTPValidatorClose={this.handleOtpSubmit}\r\n          handleCallForOtp={this.handleCallForOtp}\r\n        />\r\n        <ILoader\r\n          loadingText={\"Please wait...\"}\r\n          isShow={this.state.showLoading}\r\n        ></ILoader>\r\n        <div className=\"verify-mobile-support\">\r\n          Having trouble? Please contact{\" \"}\r\n          <span className=\"verify-mobile-support-email\">\r\n            help@unacademy.com\r\n          </span>{\" \"}\r\n          for further support.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VerifyMobile;\r\n"]},"metadata":{},"sourceType":"module"}