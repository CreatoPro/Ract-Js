{"ast":null,"code":"import ApiService from './../_services/ApiService';\nexport { login, logout, register, forgetpwd, resetpwd, changepwd };\n\nfunction login(username, password) {\n  return dispatch => {\n    ApiService.fetchLogin(username, password).then(user => {\n      dispatch({\n        type: \"user\",\n        data: user.data\n      });\n    }, error => {\n      dispatch({\n        type: \"user\",\n        data: error\n      });\n    });\n  };\n}\n\nfunction register(data) {\n  return dispatch => {\n    ApiService.fetchRegister(data).then(user => {\n      dispatch({\n        type: \"register\",\n        data: user.data\n      });\n    }, error => {\n      dispatch({\n        type: \"register\",\n        data: error\n      });\n    });\n  };\n}\n\nfunction forgetpwd(data) {\n  return dispatch => {\n    ApiService.fetchForgetpwd(data).then(user => {\n      dispatch({\n        type: \"forgetpwd\",\n        data: user.data\n      });\n    }, error => {\n      dispatch({\n        type: \"forgetpwd\",\n        data: error\n      });\n    });\n  };\n}\n\nfunction resetpwd(username, newPassword, confirmPassword) {\n  return dispatch => {\n    ApiService.fetchResetpwd(username, newPassword, confirmPassword).then(user => {\n      dispatch({\n        type: \"resetpwd\",\n        data: user.data\n      });\n    }, error => {\n      dispatch({\n        type: \"resetpwd\",\n        data: error\n      });\n    });\n  };\n}\n\nfunction changepwd(username, currentPassword, newPassword, confirmPassword) {\n  return dispatch => {\n    ApiService.fetchChangePwd(username, currentPassword, newPassword, confirmPassword).then(user => {\n      dispatch({\n        type: \"changepwd\",\n        data: user.data\n      });\n    }, error => {\n      dispatch({\n        type: \"changepwd\",\n        data: error\n      });\n    });\n  };\n}\n\nfunction logout() {\n  ApiService.logout();\n}","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/_actions/userActions.js"],"names":["ApiService","login","logout","register","forgetpwd","resetpwd","changepwd","username","password","dispatch","fetchLogin","then","user","type","data","error","fetchRegister","fetchForgetpwd","newPassword","confirmPassword","fetchResetpwd","currentPassword","fetchChangePwd"],"mappings":"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","sourcesContent":["import ApiService from './../_services/ApiService';\r\nexport {\r\n    login,\r\n    logout,\r\n\tregister,\r\n\tforgetpwd,\r\n\tresetpwd,\r\n\tchangepwd\r\n};\r\n\r\nfunction login(username, password) {\r\n    return dispatch => {\r\n        \r\n        ApiService.fetchLogin(username, password)\r\n            .then(\r\n                user => { \r\n                    dispatch({\r\n                        type : \"user\",\r\n                        data : user.data\r\n                    })\r\n                },\r\n                error => {\r\n                    dispatch({\r\n                        type : \"user\",\r\n                        data : error\r\n                    })\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nfunction register(data) {\r\n    return dispatch => {\r\n        \r\n        ApiService.fetchRegister(data)\r\n            .then(\r\n                user => { \r\n                    dispatch({\r\n                        type : \"register\",\r\n                        data : user.data\r\n                    })\r\n                },\r\n                error => {\r\n                    dispatch({\r\n                        type : \"register\",\r\n                        data : error\r\n                    })\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nfunction forgetpwd(data) {\r\n    return dispatch => {\r\n        \r\n        ApiService.fetchForgetpwd(data)\r\n            .then(\r\n                user => { \r\n                    dispatch({\r\n                        type : \"forgetpwd\",\r\n                        data : user.data\r\n                    })\r\n                },\r\n                error => {\r\n                    dispatch({\r\n                        type : \"forgetpwd\",\r\n                        data : error\r\n                    })\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nfunction resetpwd(username, newPassword, confirmPassword) {\r\n    return dispatch => {\r\n        \r\n        ApiService.fetchResetpwd(username, newPassword, confirmPassword)\r\n            .then(\r\n                user => { \r\n                    dispatch({\r\n                        type : \"resetpwd\",\r\n                        data : user.data\r\n                    })\r\n                },\r\n                error => {\r\n                    dispatch({\r\n                        type : \"resetpwd\",\r\n                        data : error\r\n                    })\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nfunction changepwd(username, currentPassword, newPassword, confirmPassword) {\r\n    return dispatch => {\r\n        \r\n        ApiService.fetchChangePwd(username, currentPassword, newPassword, confirmPassword)\r\n            .then(\r\n                user => { \r\n                    dispatch({\r\n                        type : \"changepwd\",\r\n                        data : user.data\r\n                    })\r\n                },\r\n                error => {\r\n                    dispatch({\r\n                        type : \"changepwd\",\r\n                        data : error\r\n                    })\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nfunction logout() {\r\n    ApiService.logout();\r\n}"]},"metadata":{},"sourceType":"module"}