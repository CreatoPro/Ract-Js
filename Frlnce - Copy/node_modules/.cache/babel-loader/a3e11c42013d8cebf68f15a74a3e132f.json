{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\exam-upload\\\\ExamUpload.js\";\nimport React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { connect } from \"react-redux\";\nimport \"./ExamUpload.css\";\nimport uploads from \"./images/uploads.png\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faArrowRight, faFile } from '@fortawesome/free-solid-svg-icons';\nimport Loader from './../../_components/loader/loader';\nimport { getExamUpload } from './../../_actions/examUploadActions';\n\nclass ExamUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      secondsActiveAfterExamSubmit: 0\n    };\n  }\n\n  componentDidMount() {\n    let portlet = JSON.parse(localStorage.getItem('portlet')) || []; //portlet.params.secondsActiveAfterExamSubmit\n\n    this.props.getExamUpload(portlet.params.testCategoryIds, portlet.params.secondsActiveAfterExamSubmit); //this.props.getExamUpload(portlet.params.testCategoryIds,18000);\n\n    this.setState({\n      secondsActiveAfterExamSubmit: portlet.params.secondsActiveAfterExamSubmit\n    });\n  }\n\n  render() {\n    console.log(this.props);\n    let portlet = JSON.parse(localStorage.getItem('portlet')) || [];\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Analysis\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `module-header-inner ${portlet.class ? portlet.class : 'orange-card'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: () => this.routeChange('/dashboard', ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"img\", {\n      src: uploads,\n      alt: \"test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"arrow-set\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    }, \"Pick your exam for upload\"))), loading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 27\n      }\n    }) : this.renderCard()));\n  }\n\n  renderCard() {\n    //console.log(this.props.examupload);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card_list analysis_details examList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, this.props.examupload && this.props.examupload.length ? this.props.examupload.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"cardbody\",\n        onClick: () => this.routeChange(\"/exam/upload/\" + item.id, item.completedOn),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"Book\",\n        icon: faFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"head\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, item.name), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faArrowRight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cardbody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"no_result\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 36\n      }\n    }, \" Looks like you have not submitted any exam in the last \", this.state.secondsActiveAfterExamSubmit / 60, \" minutes \")));\n  }\n  /*routeChange = (card) => {\r\n    this.props.history.push({\r\n      pathname: '/exam/list',\r\n      state: { card: card }});\r\n  };*/\n\n\n  routeChange(path, testEndTime) {\n    this.props.history.push({\n      pathname: path,\n      state: {\n        testEndTime: testEndTime\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  examupload: state.examupload.examupload\n});\n\nconst mapDispatchToProps = {\n  getExamUpload: getExamUpload\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ExamUpload);","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/exam-upload/ExamUpload.js"],"names":["React","Component","Container","connect","uploads","FontAwesomeIcon","faArrowLeft","faArrowRight","faFile","Loader","getExamUpload","ExamUpload","constructor","props","state","loading","secondsActiveAfterExamSubmit","componentDidMount","portlet","JSON","parse","localStorage","getItem","params","testCategoryIds","setState","render","console","log","class","routeChange","renderCard","examupload","length","map","item","index","id","completedOn","name","path","testEndTime","history","push","pathname","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./ExamUpload.css\";\r\nimport uploads from \"./images/uploads.png\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft,faArrowRight,faFile } from '@fortawesome/free-solid-svg-icons';\r\nimport Loader from './../../_components/loader/loader';\r\nimport {getExamUpload} from './../../_actions/examUploadActions';\r\n\r\nclass ExamUpload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      secondsActiveAfterExamSubmit:0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let portlet = JSON.parse(localStorage.getItem('portlet')) || [];\r\n    //portlet.params.secondsActiveAfterExamSubmit\r\n    this.props.getExamUpload(portlet.params.testCategoryIds,portlet.params.secondsActiveAfterExamSubmit);\r\n    //this.props.getExamUpload(portlet.params.testCategoryIds,18000);\r\n    this.setState({ secondsActiveAfterExamSubmit: portlet.params.secondsActiveAfterExamSubmit });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    let portlet = JSON.parse(localStorage.getItem('portlet')) || [];\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"Analysis\">\r\n        {\r\n          <Container fluid>\r\n              <div className=\"module-header\">\r\n                <div className= {`module-header-inner ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n                <div className=\"back\">\r\n                  <FontAwesomeIcon icon={ faArrowLeft } onClick={() => this.routeChange('/dashboard','') }/>\r\n                </div>\r\n                  <img src={uploads} alt=\"test\" /> \r\n                </div>\r\n                <div className=\"arrow-set\">\r\n                  <h4>Pick your exam for upload</h4>\r\n                </div>\r\n              </div>\r\n              \r\n              {loading ?  <Loader />: this.renderCard()}           \r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderCard() {\r\n    //console.log(this.props.examupload);\r\n\t\treturn  <div className=\"card_list analysis_details examList\"> \r\n\t\t{\r\n      this.props.examupload && \r\n      this.props.examupload.length ?\r\n\t\t  this.props.examupload.map((item, index) => {\r\n\t\t\t return (\r\n        <div  key={index} className=\"cardbody\" onClick={() => this.routeChange(\"/exam/upload/\"+ item.id, item.completedOn)}>\r\n          <FontAwesomeIcon className=\"Book\" icon={ faFile } /> \r\n          <h4 className=\"head\">{item.name}</h4>\r\n          <FontAwesomeIcon icon={ faArrowRight }  />\r\n        </div> \r\n\t\t\t  )\r\n      })    \r\n      : <div className=\"cardbody\"> <h4 className=\"no_result\"> Looks like you have not submitted any exam in the last {this.state.secondsActiveAfterExamSubmit/60} minutes </h4></div> \r\n    }\r\n    </div>\r\n  }\r\n  \r\n  /*routeChange = (card) => {\r\n    this.props.history.push({\r\n      pathname: '/exam/list',\r\n      state: { card: card }});\r\n  };*/\r\n\r\n  routeChange(path, testEndTime) {\r\n    this.props.history.push({pathname: path , state: { testEndTime: testEndTime }});\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  examupload: state.examupload.examupload\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getExamUpload: getExamUpload,\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (ExamUpload);\r\n"]},"metadata":{},"sourceType":"module"}