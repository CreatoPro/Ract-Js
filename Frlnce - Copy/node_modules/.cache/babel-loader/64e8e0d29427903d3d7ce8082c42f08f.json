{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\discussion\\\\DiscussionBoardTopic.jsx\";\nimport React, { Component } from \"react\";\nimport { Container, Card, Row, Col, Modal, Form } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faCommentDots, faPaperPlane, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport CKEditor from \"ckeditor4-react\";\nimport ApiService from \"../../_services/ApiService\";\nimport UserService from \"../../_services/UserService\";\nimport { ILoader } from \"./../../_components/iloader/iloader\";\nimport Comment from \"./components/Comment\";\nimport Config from \"./../../_config/config\";\nimport Question from \"./../test-player/components/Question\";\nimport Resource from \"./../learning/components/Resource\";\nimport { ReactComponent as CloseButton } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/xmark-solid.svg\";\nimport { ReactComponent as CameraIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/camera-solid.svg\";\nimport \"./discussion-board-topic.styles.css\";\n\nclass DiscussionBoardTopic extends Component {\n  constructor(props) {\n    super(props); //console.log(\"DiscussionBoardTopic -> constructor()... \");\n\n    this.customModelclicked = e => {\n      if (e.target.className === \"custom-modal-outer\") {\n        this.handleClose();\n      }\n    };\n\n    this.openCamera = () => {\n      this.props.history.push({\n        pathname: \"/camera\",\n        state: {\n          prevStates: this.state,\n          pathParams: this.props.match.params\n        }\n      });\n    };\n\n    this.updateEditor = e => {\n      console.log(\"here\");\n      const v = e.editor.getData(); // const k = \"message\";\n      // let message = { ...this.state.message };\n\n      let message = v;\n      this.setState({\n        message: message\n      }, () => {\n        console.log(this.state.message);\n      }); //console.log(this.state)\n    };\n\n    this.onCommentDelete = data => {\n      console.log(\"DiscussionBoardTopic --> onCommentDelete...\" + JSON.stringify(data));\n      let _data = {\n        id: data.commentId,\n        type: data.type\n      };\n      this.setState({\n        showLoading: true\n      }, () => {\n        ApiService.deleteCommentOrReply(_data).then(res => {\n          //console.log(\"DiscussionBoardTopic -> deleteCommentOrReply(); res : \"+JSON.stringify(res))\n          this.setState({\n            showLoading: false,\n            message: null,\n            comment: null\n          }, () => {\n            this.init();\n          });\n        }, error => {\n          //ErrorCB\n          this.setState({\n            showLoading: false,\n            errorMessage: Config.CONNECTION_ERROR_MSG\n          });\n          console.log(\"DiscussionBoardTopic --> deleteCommentOrReply...error =>\" + JSON.stringify(error));\n        });\n      });\n    };\n\n    this.onCommentReply = comment => {\n      //console.log(\"DiscussionBoardTopic --> onCommentReply...\"+comment.id);\n      this.setState(state => ({\n        showCommentReply: !this.state.showCommentReply,\n        comment: comment,\n        message: null\n      }));\n    };\n\n    this.handleClose = () => this.closeCommentReply();\n\n    this.toggleLoading = () => {\n      //console.log(\"DiscussionBoardTopicList -> toggleLoading()... \");\n      this.setState(state => ({\n        showLoading: !state.showLoading\n      }));\n    };\n\n    this.state = {\n      message: null,\n      showLoading: false,\n      topic: null,\n      open: false,\n      showCommentReply: false,\n      comment: null,\n      commentModalHeader: \"Post Comment\"\n    };\n  }\n\n  componentDidMount() {\n    var _this$props$location$;\n\n    //console.log(\"DiscussionBoardTopic -> componentDidMount()... \");\n    console.log(this.props.location.state);\n\n    if ((_this$props$location$ = this.props.location.state) !== null && _this$props$location$ !== void 0 && _this$props$location$.prevStates) {\n      this.setState({ ...this.props.location.state.prevStates\n      });\n    } else {\n      this.init();\n    }\n  }\n\n  init() {\n    //console.log(\"DiscussionBoardTopic -> init()... \");\n    if (this.props.match.params.topicId) {\n      console.log(\"DiscussionBoardTopic -> init(); IF.....\");\n      this.getDiscussionBoardTopic(this.props.match.params.topicId);\n    } else if (this.props.match.params.resourceId) {\n      console.log(\"DiscussionBoardTopic -> init(); IF ELSE.....\");\n      this.getDiscussionBoardResourceTopic(this.props.match.params.resourceId);\n    } else {\n      console.log(\"DiscussionBoardTopic -> init(); ELSE.....\");\n      this.getDiscussionBoardQuestionTopic(this.props.match.params.questionId);\n    }\n  }\n\n  getDiscussionBoardTopic(topicId) {\n    this.setState({\n      showLoading: true\n    }, () => {\n      ApiService.getDiscussionBoardTopic(topicId).then(res => {\n        console.log(\"DiscussionBoardTopic -> init(); res : \" + JSON.stringify(res));\n        this.setState({\n          showLoading: false,\n          topic: res.data\n        });\n      }, error => {\n        //ErrorCB\n        this.setState({\n          showLoading: false,\n          errorMessage: Config.CONNECTION_ERROR_MSG\n        });\n        console.log(\"DiscussionBoardTopic --> init...error =>\" + JSON.stringify(error));\n      });\n    });\n  }\n\n  getDiscussionBoardQuestionTopic(questionId) {\n    this.setState({\n      showLoading: true\n    }, () => {\n      ApiService.getDiscussionBoardQuestionTopic(questionId).then(res => {\n        console.log(\"DiscussionBoardTopic -> init(); res : \" + JSON.stringify(res));\n        this.setState({\n          showLoading: false,\n          topic: res.data\n        });\n      }, error => {\n        //ErrorCB\n        this.setState({\n          showLoading: false,\n          errorMessage: Config.CONNECTION_ERROR_MSG\n        });\n        console.log(\"DiscussionBoardTopic --> init...error =>\" + JSON.stringify(error));\n      });\n    });\n  }\n\n  getDiscussionBoardResourceTopic(resourceId) {\n    this.setState({\n      showLoading: true\n    }, () => {\n      ApiService.getDiscussionBoardResourceTopic(resourceId).then(res => {\n        console.log(\"getDiscussionBoardResourceTopic -> init(); res : \" + JSON.stringify(res));\n        this.setState({\n          showLoading: false,\n          topic: res.data\n        });\n      }, error => {\n        //ErrorCB\n        this.setState({\n          showLoading: false,\n          errorMessage: Config.CONNECTION_ERROR_MSG\n        });\n        console.log(\"DiscussionBoardTopic --> init...error =>\" + JSON.stringify(error));\n      });\n    });\n  }\n\n  render() {\n    //console.log(\"DiscussionBoardTopic -> render()... \");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, this.state.topic && /*#__PURE__*/React.createElement(React.Fragment, null, this.renderHeader(), this.renderBody(), this.renderFooter()), this.renderLoader()));\n  }\n\n  renderHeader() {\n    //console.log(\"DiscussionBoardTopic -> renderHeader()... \");\n    let CURRENT_PORTLET = JSON.parse(localStorage[\"portlet\"]);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `ilearn-plain-header ${CURRENT_PORTLET.class}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: () => this.props.history.replace(`/discussionBoard/${this.props.match.params.discussionBoardId}/topics`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, this.state.topic.title ? this.state.topic.title : \"Question\"));\n  }\n\n  renderBody() {\n    //console.log(\"DiscussionBoardTopic -> renderBody()... \");\n    let comments = this.state.topic.comments;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.renderTopicContent(), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"p-2 clear-fix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, comments.length), \"\\xA0 Comments\"), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"p-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, comments.map((comment, index) => {\n      return /*#__PURE__*/React.createElement(Comment, {\n        comment: comment,\n        commentPermission: this.state.topic.commentPermission,\n        moderatorPermission: this.state.topic.moderatorPermission,\n        onCommentReply: this.onCommentReply,\n        onCommentDelete: this.onCommentDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 19\n        }\n      });\n    })))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }), this.renderCommentReplyModal());\n  }\n\n  renderTopicContent() {\n    let question = this.state.topic.question ? JSON.parse(this.state.topic.question) : null;\n    let resource = this.props.match.params.resourceId || null;\n    let topicContent = this.state.topic.content;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, !question && !resource && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-info mb-0 p-2 rounded-0\",\n      role: \"alert\",\n      dangerouslySetInnerHTML: {\n        __html: topicContent\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }), question && /*#__PURE__*/React.createElement(\"div\", {\n      class: \"alert alert-info mb-0 p-1 rounded-0\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"p-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Question, {\n      question: question,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    })))), resource && /*#__PURE__*/React.createElement(\"div\", {\n      class: \"alert alert-info mb-0 p-1 rounded-0\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"p-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Resource, {\n      data: this.props.location.state.resource,\n      stepId: this.props.location.state.stepId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n  renderFooter() {\n    //console.log(\"DiscussionBoardTopic -> renderFooter()... \");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.topic && this.state.topic.commentPermission && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ilearn-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"ilearn-footer-col ilearn-blue-btn\",\n      onClick: () => this.addComment(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn ilearn-blue-btn ilearn-footer-btn btn-block text-uppercase\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCommentDots,\n      size: \"lg\",\n      color: \"#fff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 19\n      }\n    }), \" \", \"\\xA0\", /*#__PURE__*/React.createElement(\"b\", {\n      style: {\n        color: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 19\n      }\n    }, \"Leave a comment\"))))));\n  }\n\n  renderLoader() {\n    //console.log(\"DiscussionBoardTopic -> renderLoader()... \");\n    const _loadingText = \"Please wait...\";\n    return /*#__PURE__*/React.createElement(ILoader, {\n      loadingText: _loadingText,\n      isShow: this.state.showLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 7\n      }\n    });\n  }\n\n  renderCommentReplyModal() {\n    //console.log(\"DiscussionBoardTopic -> renderCommentReplyModal()... \");\n    let CURRENT_PORTLET = JSON.parse(localStorage[\"portlet\"]);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-modal-outer\",\n      style: {\n        display: this.state.showCommentReply ? \"flex\" : \"none\"\n      },\n      onClick: this.customModelclicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `ilearn-plain-header text-white ${CURRENT_PORTLET.class} custom-modal-header`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }\n    }, this.state.commentModalHeader, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cusom-modal-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CameraIcon, {\n      onClick: this.openCamera,\n      className: \"custom-modal-icon-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(CloseButton, {\n      onClick: this.handleClose,\n      className: \"custom-modal-icon-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }\n    }, \"Message\"), /*#__PURE__*/React.createElement(CKEditor, {\n      config: {\n        filebrowserBrowseUrl: `${Config.siteUrl}${Config.siteTitle}/FCKeditor/editor/filemanager/browser/default/browser.html?Type=Image&Connector=connectors/jsp/connector` // filebrowserUploadUrl: '/ckfinder/core/connector/php/connector.php?command=QuickUpload&type=Files',\n\n      },\n      name: \"message\",\n      placeholder: \"Compose message\",\n      data: this.state.message,\n      onChange: this.updateEditor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-danger custom-modal-button\",\n      onClick: () => this.handleClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 15\n      }\n    }), \"\\xA0 Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-primary custom-modal-button\",\n      onClick: () => this.postComment(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 13\n      }\n    }, \"Post \\xA0\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPaperPlane,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"script\", {\n      src: \"/ckfinder/ckfinder.js\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 7\n      }\n    }))));\n  }\n\n  postComment() {\n    //console.log(\"DiscussionBoardTopic --> postComment...\"+this.state.message);\n    let message = this.state.message;\n    let comment = this.state.comment;\n\n    if (message && message.trim().length > 0) {\n      if (comment) {\n        //Comment Reply\n        //console.log(\"DiscussionBoardTopic --> commentReply...\");\n        comment.replyContent = message;\n        comment.replyUserId = UserService.getUserId();\n        this.replyComment(comment);\n      } else {\n        //create comment\n        //console.log(\"DiscussionBoardTopic --> createComment ...\");\n        let commentJSON = {\n          topicId: this.state.topic.id,\n          comment: message,\n          userId: UserService.getUserId()\n        };\n        this.createComment(commentJSON);\n      }\n    }\n  }\n\n  replyComment(comment) {\n    //console.log(\"DiscussionBoardTopic --> replyComment...\"+JSON.stringify(comment));\n    this.setState({\n      showLoading: true,\n      commentModalHeader: \"Reply to Comment\",\n      showCommentReply: !this.state.showCommentReply\n    }, () => {\n      ApiService.replyComment(comment).then(res => {\n        //console.log(\"DiscussionBoardTopic -> replyComment(); res : \"+JSON.stringify(res))\n        this.setState({\n          showLoading: false,\n          message: null,\n          comment: null\n        }, () => {\n          this.init();\n        });\n      }, error => {\n        //ErrorCB\n        this.setState({\n          showLoading: false,\n          showCommentReply: !this.state.showCommentReply,\n          errorMessage: Config.CONNECTION_ERROR_MSG\n        });\n        console.log(\"DiscussionBoardTopic --> replyComment...error =>\" + JSON.stringify(error));\n      });\n    });\n  }\n\n  createComment(comment) {\n    //console.log(\"DiscussionBoardTopic --> createComment...\"+JSON.stringify(comment));\n    this.setState({\n      showLoading: true,\n      commentModalHeader: \"Leave a Comment\",\n      showCommentReply: !this.state.showCommentReply\n    }, () => {\n      ApiService.createComment(comment).then(res => {\n        //console.log(\"DiscussionBoardTopic -> createComment(); res : \"+JSON.stringify(res))\n        this.setState({\n          showLoading: false,\n          message: null,\n          comment: null\n        }, () => {\n          this.init();\n        });\n      }, error => {\n        //ErrorCB\n        this.setState({\n          showLoading: false,\n          showCommentReply: !this.state.showCommentReply,\n          errorMessage: Config.CONNECTION_ERROR_MSG\n        });\n        console.log(\"DiscussionBoardTopic --> createComment...error =>\" + JSON.stringify(error));\n      });\n    });\n  }\n\n  addComment() {\n    //console.log(\"DiscussionBoardTopic --> addComment...\");\n    this.setState(state => ({\n      showCommentReply: !this.state.showCommentReply,\n      comment: null,\n      message: null\n    }));\n  }\n\n  closeCommentReply() {\n    this.setState(state => ({\n      showCommentReply: !this.state.showCommentReply,\n      comment: null,\n      message: null\n    }));\n  }\n\n  toggleView(view) {\n    this.setState(state => ({\n      view: view\n    }));\n  }\n\n}\n\nexport { DiscussionBoardTopic };\n/*\r\n    References:\r\n    Card -> https://getbootstrap.com/docs/4.0/components/card/\r\n\r\n*/","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/discussion/DiscussionBoardTopic.jsx"],"names":["React","Component","Container","Card","Row","Col","Modal","Form","FontAwesomeIcon","faArrowLeft","faCommentDots","faPaperPlane","faTimes","CKEditor","ApiService","UserService","ILoader","Comment","Config","Question","Resource","DiscussionBoardTopic","constructor","props","customModelclicked","e","target","className","handleClose","openCamera","history","push","pathname","state","prevStates","pathParams","match","params","updateEditor","console","log","v","editor","getData","message","setState","onCommentDelete","data","JSON","stringify","_data","id","commentId","type","showLoading","deleteCommentOrReply","then","res","comment","init","error","errorMessage","CONNECTION_ERROR_MSG","onCommentReply","showCommentReply","closeCommentReply","toggleLoading","topic","open","commentModalHeader","componentDidMount","location","topicId","getDiscussionBoardTopic","resourceId","getDiscussionBoardResourceTopic","getDiscussionBoardQuestionTopic","questionId","render","renderHeader","renderBody","renderFooter","renderLoader","CURRENT_PORTLET","parse","localStorage","class","replace","discussionBoardId","title","comments","renderTopicContent","length","map","index","commentPermission","moderatorPermission","renderCommentReplyModal","question","resource","topicContent","content","__html","stepId","addComment","color","_loadingText","display","filebrowserBrowseUrl","siteUrl","siteTitle","postComment","trim","replyContent","replyUserId","getUserId","replyComment","commentJSON","userId","createComment","toggleView","view"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container, Card, Row, Col, Modal, Form } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faArrowLeft,\r\n  faCommentDots,\r\n  faPaperPlane,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport CKEditor from \"ckeditor4-react\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport UserService from \"../../_services/UserService\";\r\nimport { ILoader } from \"./../../_components/iloader/iloader\";\r\nimport Comment from \"./components/Comment\";\r\nimport Config from \"./../../_config/config\";\r\nimport Question from \"./../test-player/components/Question\";\r\nimport Resource from \"./../learning/components/Resource\";\r\nimport { ReactComponent as CloseButton } from \"./images/xmark-solid.svg\";\r\nimport { ReactComponent as CameraIcon } from \"./images/camera-solid.svg\";\r\nimport \"./discussion-board-topic.styles.css\";\r\n\r\nclass DiscussionBoardTopic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //console.log(\"DiscussionBoardTopic -> constructor()... \");\r\n    this.state = {\r\n      message: null,\r\n      showLoading: false,\r\n      topic: null,\r\n      open: false,\r\n      showCommentReply: false,\r\n      comment: null,\r\n      commentModalHeader: \"Post Comment\",\r\n    };\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    //console.log(\"DiscussionBoardTopic -> componentDidMount()... \");\r\n    console.log(this.props.location.state);\r\n    if(this.props.location.state?.prevStates){\r\n      this.setState({...this.props.location.state.prevStates})\r\n    }else{\r\n\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  init() {\r\n    //console.log(\"DiscussionBoardTopic -> init()... \");\r\n    if (this.props.match.params.topicId) {\r\n      console.log(\"DiscussionBoardTopic -> init(); IF.....\");\r\n      this.getDiscussionBoardTopic(this.props.match.params.topicId);\r\n    } else if (this.props.match.params.resourceId) {\r\n      console.log(\"DiscussionBoardTopic -> init(); IF ELSE.....\");\r\n      this.getDiscussionBoardResourceTopic(this.props.match.params.resourceId);\r\n    } else {\r\n      console.log(\"DiscussionBoardTopic -> init(); ELSE.....\");\r\n      this.getDiscussionBoardQuestionTopic(this.props.match.params.questionId);\r\n    }\r\n  }\r\n\r\n  getDiscussionBoardTopic(topicId) {\r\n    this.setState({ showLoading: true }, () => {\r\n      ApiService.getDiscussionBoardTopic(topicId).then(\r\n        (res) => {\r\n          console.log(\r\n            \"DiscussionBoardTopic -> init(); res : \" + JSON.stringify(res)\r\n          );\r\n          this.setState({\r\n            showLoading: false,\r\n            topic: res.data,\r\n          });\r\n        },\r\n        (error) => {\r\n          //ErrorCB\r\n          this.setState({\r\n            showLoading: false,\r\n            errorMessage: Config.CONNECTION_ERROR_MSG,\r\n          });\r\n          console.log(\r\n            \"DiscussionBoardTopic --> init...error =>\" + JSON.stringify(error)\r\n          );\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  getDiscussionBoardQuestionTopic(questionId) {\r\n    this.setState({ showLoading: true }, () => {\r\n      ApiService.getDiscussionBoardQuestionTopic(questionId).then(\r\n        (res) => {\r\n          console.log(\r\n            \"DiscussionBoardTopic -> init(); res : \" + JSON.stringify(res)\r\n          );\r\n          this.setState({\r\n            showLoading: false,\r\n            topic: res.data,\r\n          });\r\n        },\r\n        (error) => {\r\n          //ErrorCB\r\n          this.setState({\r\n            showLoading: false,\r\n            errorMessage: Config.CONNECTION_ERROR_MSG,\r\n          });\r\n          console.log(\r\n            \"DiscussionBoardTopic --> init...error =>\" + JSON.stringify(error)\r\n          );\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  getDiscussionBoardResourceTopic(resourceId) {\r\n    this.setState({ showLoading: true }, () => {\r\n      ApiService.getDiscussionBoardResourceTopic(resourceId).then(\r\n        (res) => {\r\n          console.log(\r\n            \"getDiscussionBoardResourceTopic -> init(); res : \" +\r\n              JSON.stringify(res)\r\n          );\r\n          this.setState({\r\n            showLoading: false,\r\n            topic: res.data,\r\n          });\r\n        },\r\n        (error) => {\r\n          //ErrorCB\r\n          this.setState({\r\n            showLoading: false,\r\n            errorMessage: Config.CONNECTION_ERROR_MSG,\r\n          });\r\n          console.log(\r\n            \"DiscussionBoardTopic --> init...error =>\" + JSON.stringify(error)\r\n          );\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"DiscussionBoardTopic -> render()... \");\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          {this.state.topic && (\r\n            <>\r\n              {this.renderHeader()}\r\n              {this.renderBody()}\r\n              {this.renderFooter()}\r\n            </>\r\n          )}\r\n          {this.renderLoader()}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderHeader() {\r\n    //console.log(\"DiscussionBoardTopic -> renderHeader()... \");\r\n    let CURRENT_PORTLET = JSON.parse(localStorage[\"portlet\"]);\r\n    return (\r\n      <div className={`ilearn-plain-header ${CURRENT_PORTLET.class}`}>\r\n        <div className=\"back\">\r\n          <FontAwesomeIcon\r\n            icon={faArrowLeft}\r\n            onClick={()=>this.props.history.replace(`/discussionBoard/${this.props.match.params.discussionBoardId}/topics`)}\r\n          />\r\n        </div>\r\n        {\r\n          <h4>\r\n            {this.state.topic.title ? this.state.topic.title : \"Question\"}\r\n          </h4>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderBody() {\r\n    //console.log(\"DiscussionBoardTopic -> renderBody()... \");\r\n    let comments = this.state.topic.comments;\r\n    return (\r\n      <>\r\n        {this.renderTopicContent()}\r\n        <Card>\r\n          <Card.Header className=\"p-2 clear-fix\">\r\n            <span className=\"badge badge-primary\">{comments.length}</span>&nbsp;\r\n            Comments\r\n          </Card.Header>\r\n          <Card.Body className=\"p-1\">\r\n            <div className=\"list-group\">\r\n              {comments.map((comment, index) => {\r\n                return (\r\n                  <Comment\r\n                    comment={comment}\r\n                    commentPermission={this.state.topic.commentPermission}\r\n                    moderatorPermission={this.state.topic.moderatorPermission}\r\n                    onCommentReply={this.onCommentReply}\r\n                    onCommentDelete={this.onCommentDelete}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n        <br />\r\n        <br />\r\n        {this.renderCommentReplyModal()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderTopicContent() {\r\n    let question = this.state.topic.question\r\n      ? JSON.parse(this.state.topic.question)\r\n      : null;\r\n    let resource = this.props.match.params.resourceId || null;\r\n    let topicContent = this.state.topic.content;\r\n    return (\r\n      <>\r\n        {!question && !resource && (\r\n          <div\r\n            className=\"alert alert-info mb-0 p-2 rounded-0\"\r\n            role=\"alert\"\r\n            dangerouslySetInnerHTML={{ __html: topicContent }}\r\n          ></div>\r\n        )}\r\n        {question && (\r\n          <div class=\"alert alert-info mb-0 p-1 rounded-0\" role=\"alert\">\r\n            <Card>\r\n              <Card.Body className=\"p-1\">\r\n                <Question question={question} />\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        )}\r\n        {resource && (\r\n          <div class=\"alert alert-info mb-0 p-1 rounded-0\" role=\"alert\">\r\n            <Card>\r\n              <Card.Body className=\"p-1\">\r\n                <Resource\r\n                  data={this.props.location.state.resource}\r\n                  stepId={this.props.location.state.stepId}\r\n                />\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderFooter() {\r\n    //console.log(\"DiscussionBoardTopic -> renderFooter()... \");\r\n    return (\r\n      <>\r\n        {this.state.topic && this.state.topic.commentPermission && (\r\n          <div className=\"ilearn-footer\">\r\n            <Row>\r\n              <Col\r\n                className=\"ilearn-footer-col ilearn-blue-btn\"\r\n                onClick={() => this.addComment()}\r\n              >\r\n                <button className=\"btn ilearn-blue-btn ilearn-footer-btn btn-block text-uppercase\">\r\n                  <FontAwesomeIcon\r\n                    icon={faCommentDots}\r\n                    size=\"lg\"\r\n                    color=\"#fff\"\r\n                  />{\" \"}\r\n                  &nbsp;\r\n                  <b style={{ color: \"#fff\" }}>Leave a comment</b>\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderLoader() {\r\n    //console.log(\"DiscussionBoardTopic -> renderLoader()... \");\r\n    const _loadingText = \"Please wait...\";\r\n    return (\r\n      <ILoader\r\n        loadingText={_loadingText}\r\n        isShow={this.state.showLoading}\r\n      ></ILoader>\r\n    );\r\n  }\r\n\r\n  customModelclicked = (e) => {\r\n    if (e.target.className === \"custom-modal-outer\") {\r\n      this.handleClose();\r\n    }\r\n  };\r\n\r\n  openCamera = () => {\r\n    this.props.history.push({\r\n      pathname: \"/camera\",\r\n      state: { prevStates: this.state, pathParams: this.props.match.params },\r\n    });\r\n  };\r\n\r\n  renderCommentReplyModal() {\r\n    //console.log(\"DiscussionBoardTopic -> renderCommentReplyModal()... \");\r\n    let CURRENT_PORTLET = JSON.parse(localStorage[\"portlet\"]);\r\n    return (\r\n      <div\r\n        className=\"custom-modal-outer\"\r\n        style={{ display: this.state.showCommentReply ? \"flex\" : \"none\" }}\r\n        onClick={this.customModelclicked}\r\n      >\r\n        <div className=\"custom-modal\">\r\n          <div\r\n            className={`ilearn-plain-header text-white ${CURRENT_PORTLET.class} custom-modal-header`}\r\n          >\r\n            <h3>{this.state.commentModalHeader} </h3>\r\n            <div className=\"cusom-modal-icons\">\r\n              <CameraIcon\r\n                onClick={this.openCamera}\r\n                className=\"custom-modal-icon-button\"\r\n              />\r\n              <CloseButton\r\n                onClick={this.handleClose}\r\n                className=\"custom-modal-icon-button\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"custom-modal-body\">\r\n            <Form>\r\n              <Form.Group controlId=\"message\">\r\n                <Form.Label>Message</Form.Label>\r\n                <CKEditor\r\n                 config={{\r\n                  filebrowserBrowseUrl: `${Config.siteUrl}${Config.siteTitle}/FCKeditor/editor/filemanager/browser/default/browser.html?Type=Image&Connector=connectors/jsp/connector`,\r\n                  // filebrowserUploadUrl: '/ckfinder/core/connector/php/connector.php?command=QuickUpload&type=Files',\r\n                }\r\n              }\r\n                  name=\"message\"\r\n                  placeholder=\"Compose message\"\r\n                  data={this.state.message}\r\n                  onChange={this.updateEditor}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </div>\r\n          <div className=\"custom-modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-danger custom-modal-button\"\r\n              onClick={() => this.handleClose()}\r\n            >\r\n              <FontAwesomeIcon icon={faTimes} />\r\n              &nbsp; Cancel\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-primary custom-modal-button\"\r\n              onClick={() => this.postComment()}\r\n            >\r\n              Post &nbsp;\r\n              <FontAwesomeIcon icon={faPaperPlane} />\r\n            </button>\r\n      <script src=\"/ckfinder/ckfinder.js\"></script>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  updateEditor = (e) => {\r\n    console.log(\"here\");\r\n    const v = e.editor.getData();\r\n    // const k = \"message\";\r\n    // let message = { ...this.state.message };\r\n    let message = v;\r\n    this.setState({ message: message }, () => {\r\n      console.log(this.state.message);\r\n    });\r\n    //console.log(this.state)\r\n  };\r\n\r\n  postComment() {\r\n    //console.log(\"DiscussionBoardTopic --> postComment...\"+this.state.message);\r\n    let message = this.state.message;\r\n    let comment = this.state.comment;\r\n    if (message && message.trim().length > 0) {\r\n      if (comment) {\r\n        //Comment Reply\r\n        //console.log(\"DiscussionBoardTopic --> commentReply...\");\r\n        comment.replyContent = message;\r\n        comment.replyUserId = UserService.getUserId();\r\n        this.replyComment(comment);\r\n      } else {\r\n        //create comment\r\n        //console.log(\"DiscussionBoardTopic --> createComment ...\");\r\n        let commentJSON = {\r\n          topicId: this.state.topic.id,\r\n          comment: message,\r\n          userId: UserService.getUserId(),\r\n        };\r\n        this.createComment(commentJSON);\r\n      }\r\n    }\r\n  }\r\n\r\n  replyComment(comment) {\r\n    //console.log(\"DiscussionBoardTopic --> replyComment...\"+JSON.stringify(comment));\r\n    this.setState(\r\n      {\r\n        showLoading: true,\r\n        commentModalHeader: \"Reply to Comment\",\r\n        showCommentReply: !this.state.showCommentReply,\r\n      },\r\n      () => {\r\n        ApiService.replyComment(comment).then(\r\n          (res) => {\r\n            //console.log(\"DiscussionBoardTopic -> replyComment(); res : \"+JSON.stringify(res))\r\n            this.setState(\r\n              {\r\n                showLoading: false,\r\n                message: null,\r\n                comment: null,\r\n              },\r\n              () => {\r\n                this.init();\r\n              }\r\n            );\r\n          },\r\n          (error) => {\r\n            //ErrorCB\r\n            this.setState({\r\n              showLoading: false,\r\n              showCommentReply: !this.state.showCommentReply,\r\n              errorMessage: Config.CONNECTION_ERROR_MSG,\r\n            });\r\n            console.log(\r\n              \"DiscussionBoardTopic --> replyComment...error =>\" +\r\n                JSON.stringify(error)\r\n            );\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  createComment(comment) {\r\n    //console.log(\"DiscussionBoardTopic --> createComment...\"+JSON.stringify(comment));\r\n    this.setState(\r\n      {\r\n        showLoading: true,\r\n        commentModalHeader: \"Leave a Comment\",\r\n        showCommentReply: !this.state.showCommentReply,\r\n      },\r\n      () => {\r\n        ApiService.createComment(comment).then(\r\n          (res) => {\r\n            //console.log(\"DiscussionBoardTopic -> createComment(); res : \"+JSON.stringify(res))\r\n            this.setState(\r\n              {\r\n                showLoading: false,\r\n                message: null,\r\n                comment: null,\r\n              },\r\n              () => {\r\n                this.init();\r\n              }\r\n            );\r\n          },\r\n          (error) => {\r\n            //ErrorCB\r\n            this.setState({\r\n              showLoading: false,\r\n              showCommentReply: !this.state.showCommentReply,\r\n              errorMessage: Config.CONNECTION_ERROR_MSG,\r\n            });\r\n            console.log(\r\n              \"DiscussionBoardTopic --> createComment...error =>\" +\r\n                JSON.stringify(error)\r\n            );\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  addComment() {\r\n    //console.log(\"DiscussionBoardTopic --> addComment...\");\r\n    this.setState((state) => ({\r\n      showCommentReply: !this.state.showCommentReply,\r\n      comment: null,\r\n      message: null,\r\n    }));\r\n  }\r\n\r\n  onCommentDelete = (data) => {\r\n    console.log(\r\n      \"DiscussionBoardTopic --> onCommentDelete...\" + JSON.stringify(data)\r\n    );\r\n    let _data = {\r\n      id: data.commentId,\r\n      type: data.type,\r\n    };\r\n\r\n    this.setState({ showLoading: true }, () => {\r\n      ApiService.deleteCommentOrReply(_data).then(\r\n        (res) => {\r\n          //console.log(\"DiscussionBoardTopic -> deleteCommentOrReply(); res : \"+JSON.stringify(res))\r\n          this.setState(\r\n            {\r\n              showLoading: false,\r\n              message: null,\r\n              comment: null,\r\n            },\r\n            () => {\r\n              this.init();\r\n            }\r\n          );\r\n        },\r\n        (error) => {\r\n          //ErrorCB\r\n          this.setState({\r\n            showLoading: false,\r\n            errorMessage: Config.CONNECTION_ERROR_MSG,\r\n          });\r\n          console.log(\r\n            \"DiscussionBoardTopic --> deleteCommentOrReply...error =>\" +\r\n              JSON.stringify(error)\r\n          );\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  onCommentReply = (comment) => {\r\n    //console.log(\"DiscussionBoardTopic --> onCommentReply...\"+comment.id);\r\n    this.setState((state) => ({\r\n      showCommentReply: !this.state.showCommentReply,\r\n      comment: comment,\r\n      message: null,\r\n    }));\r\n  };\r\n\r\n  closeCommentReply() {\r\n    this.setState((state) => ({\r\n      showCommentReply: !this.state.showCommentReply,\r\n      comment: null,\r\n      message: null,\r\n    }));\r\n  }\r\n\r\n  handleClose = () => this.closeCommentReply();\r\n\r\n  toggleView(view) {\r\n    this.setState((state) => ({ view: view }));\r\n  }\r\n\r\n  toggleLoading = () => {\r\n    //console.log(\"DiscussionBoardTopicList -> toggleLoading()... \");\r\n    this.setState((state) => ({ showLoading: !state.showLoading }));\r\n  };\r\n}\r\n\r\nexport { DiscussionBoardTopic };\r\n\r\n/*\r\n    References:\r\n    Card -> https://getbootstrap.com/docs/4.0/components/card/\r\n\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}