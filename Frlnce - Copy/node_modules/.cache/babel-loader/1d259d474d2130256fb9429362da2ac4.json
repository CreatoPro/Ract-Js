{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\login\\\\Forgetpwd.js\";\nimport React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport \"./Login.css\";\nimport cw_logo from \"./images/cw_logo.png\";\nimport Form from \"react-bootstrap/Form\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport Config from \"../../_config/config\";\nimport Parser from 'html-react-parser';\nimport ApiService from \"../../_services/ApiService\";\nimport OTPValidator from './../../_components/OTPValidator';\nimport { ILoader } from './../../_components/iloader/iloader';\n\nclass Forgetpwd extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onOTPValidatorClose = value => {\n      //console.log(\"Register --> onOTPValidatorClose...\"+value);\n      // store user details in local storage to keep user logged in between page refreshes    \n      if (value === true) {\n        this.props.history.push({\n          pathname: '/resetPwd',\n          state: {\n            otp: this.state.otpResponse\n          }\n        });\n      } else {\n        let _otpValidator = {\n          show: false,\n          otp: null,\n          smsAddress: null,\n          message: 'Successfully sent the One Time Password to your Registered Mobile Number',\n          userId: null\n        };\n        this.setState({\n          otpValidator: _otpValidator\n        });\n      }\n    };\n\n    this.state = {\n      username: '',\n      submitted: false,\n      user: null,\n      message: '',\n      otpValidator: {\n        show: false,\n        otpLength: 0,\n        smsAddress: null,\n        message: 'Successfully sent the One Time Password to your Registered Mobile Number',\n        userId: null\n      },\n      otpResponse: null,\n      showLoading: false\n    };\n  }\n\n  routeChange(path) {\n    this.props.history.push(path);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: this.props.history.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-image\",\n      style: {\n        background: `url(${Config.cover}) no-repeat transparent`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"gradient-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \" Recover Password \")), this.renderFormLogin())), this.renderFooter(), /*#__PURE__*/React.createElement(OTPValidator, {\n      data: this.state.otpValidator,\n      onOTPValidatorClose: this.onOTPValidatorClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), this.renderLoader());\n  }\n\n  renderFormLogin() {\n    //console.log(this.props);\n    let {\n      username,\n      submitted\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'item-inner' + (submitted && !username ? ' has-error' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Username\",\n      name: \"username\",\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      value: username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"institute-sign-in-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"primary button-full ilearn-blue-btn button-md\",\n      type: \"button\",\n      value: \"Recover Password\",\n      onClick: () => this.resetPassword(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    })), this.state.message && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }, Parser(this.state.message))));\n  }\n\n  renderFooter() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"institute-cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"institute-top-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \" Powered by \"), \" \", /*#__PURE__*/React.createElement(\"img\", {\n      src: cw_logo,\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 35\n      }\n    }))));\n  }\n\n  renderLoader() {\n    console.log(\"Login -> renderLoader()... \");\n    const _loadingText = 'Please wait...';\n    return /*#__PURE__*/React.createElement(ILoader, {\n      loadingText: _loadingText,\n      isShow: this.state.showLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    });\n  }\n\n  resetPassword() {\n    this.setState({\n      submitted: true\n    });\n    let {\n      username\n    } = this.state;\n\n    if (username) {\n      this.setState({\n        submitted: true,\n        showLoading: true,\n        message: ''\n      }, () => {\n        ApiService.fetchForgetpwd(username).then(res => {\n          //console.log(\"Forgetpwd -> resetPassword(); res : \"+JSON.stringify(res));\n          if (res.data.status === 1) {\n            let _otpValidator = {\n              show: true,\n              otpLength: res.data.data.otpLength,\n              smsAddress: res.data.data.smsAddress,\n              message: res.data.data.otpMessage,\n              userId: res.data.data.userId\n            };\n            this.setState({\n              showLoading: false,\n              otpValidator: _otpValidator,\n              otpResponse: res.data.data\n            });\n          } else {\n            this.setState({\n              showLoading: false,\n              message: res.data.message\n            });\n          }\n        });\n      });\n    }\n  }\n\n}\n\nexport default Forgetpwd;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/login/Forgetpwd.js"],"names":["React","Component","Container","cw_logo","Form","FontAwesomeIcon","faArrowLeft","Config","Parser","ApiService","OTPValidator","ILoader","Forgetpwd","constructor","props","onOTPValidatorClose","value","history","push","pathname","state","otp","otpResponse","_otpValidator","show","smsAddress","message","userId","setState","otpValidator","username","submitted","user","otpLength","showLoading","routeChange","path","render","goBack","background","cover","backgroundSize","backgroundPosition","renderFormLogin","renderFooter","renderLoader","e","target","resetPassword","console","log","_loadingText","fetchForgetpwd","then","res","data","status","otpMessage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"./Login.css\";\r\nimport cw_logo from \"./images/cw_logo.png\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons';\r\nimport Config from \"../../_config/config\";\r\nimport Parser from 'html-react-parser';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport OTPValidator from './../../_components/OTPValidator';\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\n\r\nclass Forgetpwd extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      submitted: false,\r\n      user: null,\r\n      message: '',\r\n      otpValidator: { show:false, \r\n        otpLength: 0, \r\n        smsAddress: null, \r\n        message:'Successfully sent the One Time Password to your Registered Mobile Number',\r\n        userId: null\r\n      },\r\n      otpResponse: null,\r\n      showLoading: false\r\n    };\r\n    \r\n  }\r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  render() {    \r\n    return (\r\n      <div className=\"login\">\r\n        {\r\n          <Container fluid>\r\n            <div className=\"back\">\r\n                  <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n            </div>\r\n            <div className=\"header-image\" style={{background: `url(${Config.cover}) no-repeat transparent`,  backgroundSize: 'cover', backgroundPosition: 'center'}}>\r\n            </div>\r\n            <div className=\"main-content\">\r\n              <span className=\"gradient-text\">\r\n                <strong> Recover Password </strong>\r\n              </span>\r\n              {this.renderFormLogin()}\r\n            </div>\r\n          </Container>\r\n        }\r\n        {this.renderFooter()}\r\n        <OTPValidator data={this.state.otpValidator} \r\n                onOTPValidatorClose={this.onOTPValidatorClose} />\r\n        {this.renderLoader()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFormLogin() {\r\n    //console.log(this.props);\r\n    let {username, submitted} = this.state;\r\n    return (\r\n      <Form>\r\n      <Form.Group>\r\n        <div className={'item-inner' + (submitted && !username ? ' has-error' : '')}>\r\n          <Form.Control type=\"text\" placeholder=\"Username\" name=\"username\" onChange={e => this.setState({username: e.target.value})} value={username} />\r\n        </div>\r\n        <br />\r\n        <div className=\"institute-sign-in-btn\">\r\n          <input className=\"primary button-full ilearn-blue-btn button-md\" type=\"button\" value=\"Recover Password\" onClick={() => this.resetPassword()}/>\r\n        </div>\r\n        { this.state.message && <div className=\"red\">{Parser(this.state.message)}</div> }\r\n      </Form.Group>\r\n     </Form>\r\n    );\r\n  }\r\n\r\n\r\n  renderFooter() {\r\n    return (\r\n      <div className=\"institute-cards\">\r\n        <div className=\"\">\r\n          <div className=\"institute-top-intro\">\r\n            <h6> Powered by </h6> <img src={cw_logo} alt=\"logo\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderLoader() {\r\n    console.log(\"Login -> renderLoader()... \");\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n        <ILoader\r\n            loadingText={_loadingText}\r\n            isShow={this.state.showLoading}\r\n            >\r\n        </ILoader>\r\n    )\r\n  }\r\n\r\n  resetPassword() {\r\n    this.setState({ submitted: true });\r\n    let { username, } = this.state;\r\n    if (username) {\r\n      this.setState({ submitted: true, showLoading: true, message: '' }, () => {\r\n        ApiService.fetchForgetpwd(username)\r\n        .then((res) => {\r\n          //console.log(\"Forgetpwd -> resetPassword(); res : \"+JSON.stringify(res));\r\n          if(res.data.status===1) { \r\n            let _otpValidator = { show:true, \r\n              otpLength: res.data.data.otpLength, \r\n              smsAddress: res.data.data.smsAddress,\r\n              message: res.data.data.otpMessage,\r\n              userId: res.data.data.userId\r\n            }\r\n            this.setState({ showLoading: false, otpValidator: _otpValidator, otpResponse:res.data.data }); \r\n          }\r\n          else {\r\n            this.setState({\r\n              showLoading: false,\r\n              message : res.data.message\r\n            });  \r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  onOTPValidatorClose = value => {\r\n    //console.log(\"Register --> onOTPValidatorClose...\"+value);\r\n    // store user details in local storage to keep user logged in between page refreshes    \r\n    if(value===true) {\r\n      this.props.history.push({\r\n        pathname: '/resetPwd',\r\n        state: { otp: this.state.otpResponse }});\r\n    }\r\n    else {\r\n      let _otpValidator= { show:false, \r\n        otp: null, \r\n        smsAddress: null, \r\n        message:'Successfully sent the One Time Password to your Registered Mobile Number',\r\n        userId: null\r\n      }\r\n      this.setState({ otpValidator: _otpValidator }); \r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default Forgetpwd;\r\n"]},"metadata":{},"sourceType":"module"}