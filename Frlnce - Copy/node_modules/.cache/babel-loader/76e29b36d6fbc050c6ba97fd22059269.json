{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\_components\\\\epub\\\\EpubView\\\\EpubView.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Epub from 'epubjs/lib/index';\nimport defaultStyles from './style'; // MTL removed - line does not seem like a requirement any more (and was causing an error)\n// global.ePub = Epub; // Fix for v3 branch of epub.js -> needs ePub to by a global var\n\nclass EpubView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLocationChange = loc => {\n      const {\n        location,\n        locationChanged\n      } = this.props;\n      const newLocation = loc && loc.start;\n\n      if (location !== newLocation) {\n        this.location = newLocation;\n        locationChanged && locationChanged(newLocation);\n      }\n    };\n\n    this.handleKeyPress = _ref => {\n      let {\n        key\n      } = _ref;\n      key && key === 'ArrowRight' && this.nextPage();\n      key && key === 'ArrowLeft' && this.prevPage();\n    };\n\n    this.state = {\n      isLoaded: false,\n      toc: []\n    };\n    this.viewerRef = /*#__PURE__*/React.createRef();\n    this.location = props.location;\n    this.book = this.rendition = this.prevPage = this.nextPage = null;\n  }\n\n  componentDidMount() {\n    this.initBook(true);\n    document.addEventListener('keyup', this.handleKeyPress, false);\n  }\n\n  initBook() {\n    const {\n      url,\n      tocChanged,\n      epubInitOptions\n    } = this.props;\n\n    if (this.book) {\n      this.book.destroy();\n    }\n\n    this.book = new Epub(url, epubInitOptions);\n    this.book.loaded.navigation.then(_ref2 => {\n      let {\n        toc\n      } = _ref2;\n      this.setState({\n        isLoaded: true,\n        toc: toc\n      }, () => {\n        tocChanged && tocChanged(toc);\n        this.initReader();\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.book = this.rendition = this.prevPage = this.nextPage = null;\n    document.removeEventListener('keyup', this.handleKeyPress, false);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return !this.state.isLoaded || nextProps.location !== this.props.location || nextProps.location !== this.props.location;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location !== this.props.location && this.location !== this.props.location) {\n      this.rendition.display(this.props.location);\n    }\n\n    if (prevProps.url !== this.props.url) {\n      this.initBook();\n    }\n  }\n\n  initReader() {\n    const {\n      toc\n    } = this.state;\n    const {\n      location,\n      epubOptions,\n      getRendition\n    } = this.props;\n    const node = this.viewerRef.current;\n    this.rendition = this.book.renderTo(node, {\n      contained: true,\n      width: '100%',\n      height: '100%',\n      ...epubOptions\n    });\n\n    this.prevPage = () => {\n      this.rendition.prev();\n    };\n\n    this.nextPage = () => {\n      this.rendition.next();\n    };\n\n    this.registerEvents();\n    getRendition && getRendition(this.rendition);\n\n    if (typeof location === 'string' || typeof location === 'number') {\n      this.rendition.display(location);\n    } else if (toc.length > 0 && toc[0].href) {\n      this.rendition.display(toc[0].href);\n    } else {\n      this.rendition.display();\n    }\n  }\n\n  registerEvents() {\n    const {\n      handleKeyPress,\n      handleTextSelected\n    } = this.props;\n    this.rendition.on('locationChanged', this.onLocationChange);\n    this.rendition.on('keyup', handleKeyPress || this.handleKeyPress);\n\n    if (handleTextSelected) {\n      this.rendition.on('selected', handleTextSelected);\n    }\n  }\n\n  renderBook() {\n    const {\n      styles\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.viewerRef,\n      style: styles.view,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 12\n      }\n    });\n  }\n\n  render() {\n    const {\n      isLoaded\n    } = this.state;\n    const {\n      loadingView,\n      styles\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.viewHolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, isLoaded && this.renderBook() || loadingView);\n  }\n\n}\n\nEpubView.defaultProps = {\n  loadingView: null,\n  locationChanged: null,\n  tocChanged: null,\n  styles: defaultStyles,\n  epubOptions: {},\n  epubInitOptions: {}\n};\nEpubView.propTypes = {\n  url: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(ArrayBuffer)]),\n  loadingView: PropTypes.element,\n  location: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  locationChanged: PropTypes.func,\n  tocChanged: PropTypes.func,\n  styles: PropTypes.object,\n  epubInitOptions: PropTypes.object,\n  epubOptions: PropTypes.object,\n  getRendition: PropTypes.func,\n  handleKeyPress: PropTypes.func,\n  handleTextSelected: PropTypes.func\n};\nexport default EpubView;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/_components/epub/EpubView/EpubView.js"],"names":["React","Component","PropTypes","Epub","defaultStyles","EpubView","constructor","props","onLocationChange","loc","location","locationChanged","newLocation","start","handleKeyPress","key","nextPage","prevPage","state","isLoaded","toc","viewerRef","createRef","book","rendition","componentDidMount","initBook","document","addEventListener","url","tocChanged","epubInitOptions","destroy","loaded","navigation","then","setState","initReader","componentWillUnmount","removeEventListener","shouldComponentUpdate","nextProps","componentDidUpdate","prevProps","display","epubOptions","getRendition","node","current","renderTo","contained","width","height","prev","next","registerEvents","length","href","handleTextSelected","on","renderBook","styles","view","render","loadingView","viewHolder","defaultProps","propTypes","oneOfType","string","instanceOf","ArrayBuffer","element","number","func","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Epub from 'epubjs/lib/index'\nimport defaultStyles from './style'\n\n// MTL removed - line does not seem like a requirement any more (and was causing an error)\n// global.ePub = Epub; // Fix for v3 branch of epub.js -> needs ePub to by a global var\n\nclass EpubView extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoaded: false,\n      toc: []\n    }\n    this.viewerRef = React.createRef()\n    this.location = props.location\n    this.book = this.rendition = this.prevPage = this.nextPage = null\n  }\n\n  componentDidMount() {\n    this.initBook(true)\n    document.addEventListener('keyup', this.handleKeyPress, false)\n  }\n\n  initBook() {\n    const { url, tocChanged, epubInitOptions } = this.props\n    if (this.book) {\n      this.book.destroy()\n    }\n    this.book = new Epub(url, epubInitOptions)\n    this.book.loaded.navigation.then(({ toc }) => {\n      this.setState(\n        {\n          isLoaded: true,\n          toc: toc\n        },\n        () => {\n          tocChanged && tocChanged(toc)\n          this.initReader()\n        }\n      )\n    })\n  }\n\n  componentWillUnmount() {\n    this.book = this.rendition = this.prevPage = this.nextPage = null\n    document.removeEventListener('keyup', this.handleKeyPress, false)\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return (\n      !this.state.isLoaded ||\n      nextProps.location !== this.props.location ||\n      nextProps.location !== this.props.location\n    )\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.location !== this.props.location &&\n      this.location !== this.props.location\n    ) {\n      this.rendition.display(this.props.location)\n    }\n    if (prevProps.url !== this.props.url) {\n      this.initBook()\n    }\n  }\n\n  initReader() {\n    const { toc } = this.state\n    const { location, epubOptions, getRendition } = this.props\n    const node = this.viewerRef.current\n    this.rendition = this.book.renderTo(node, {\n      contained: true,\n      width: '100%',\n      height: '100%',\n      ...epubOptions\n    })\n\n    this.prevPage = () => {\n      this.rendition.prev()\n    }\n    this.nextPage = () => {\n      this.rendition.next()\n    }\n    this.registerEvents()\n    getRendition && getRendition(this.rendition)\n\n    if (typeof location === 'string' || typeof location === 'number') {\n      this.rendition.display(location)\n    } else if (toc.length > 0 && toc[0].href) {\n      this.rendition.display(toc[0].href)\n    } else {\n      this.rendition.display()\n    }\n  }\n\n  registerEvents() {\n    const { handleKeyPress, handleTextSelected } = this.props\n    this.rendition.on('locationChanged', this.onLocationChange)\n    this.rendition.on('keyup', handleKeyPress || this.handleKeyPress)\n    if (handleTextSelected) {\n      this.rendition.on('selected', handleTextSelected)\n    }\n  }\n\n  onLocationChange = loc => {\n    const { location, locationChanged } = this.props\n    const newLocation = loc && loc.start\n    if (location !== newLocation) {\n      this.location = newLocation\n      locationChanged && locationChanged(newLocation)\n    }\n  }\n\n  renderBook() {\n    const { styles } = this.props\n    return <div ref={this.viewerRef} style={styles.view} />\n  }\n\n  handleKeyPress = ({ key }) => {\n    key && key === 'ArrowRight' && this.nextPage()\n    key && key === 'ArrowLeft' && this.prevPage()\n  }\n\n  render() {\n    const { isLoaded } = this.state\n    const { loadingView, styles } = this.props\n    return (\n      <div style={styles.viewHolder}>\n        {(isLoaded && this.renderBook()) || loadingView}\n      </div>\n    )\n  }\n}\n\nEpubView.defaultProps = {\n  loadingView: null,\n  locationChanged: null,\n  tocChanged: null,\n  styles: defaultStyles,\n  epubOptions: {},\n  epubInitOptions: {}\n}\n\nEpubView.propTypes = {\n  url: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.instanceOf(ArrayBuffer)\n  ]),\n  loadingView: PropTypes.element,\n  location: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  locationChanged: PropTypes.func,\n  tocChanged: PropTypes.func,\n  styles: PropTypes.object,\n  epubInitOptions: PropTypes.object,\n  epubOptions: PropTypes.object,\n  getRendition: PropTypes.func,\n  handleKeyPress: PropTypes.func,\n  handleTextSelected: PropTypes.func\n}\n\nexport default EpubView\n"]},"metadata":{},"sourceType":"module"}