{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\discussion\\\\DiscussionBoardTopicList.jsx\";\nimport React, { Component } from \"react\";\nimport discussion_icon from \"./images/discussion.png\";\nimport { Container, Card } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faChevronRight, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport ApiService from \"../../_services/ApiService\";\nimport { ILoader } from './../../_components/iloader/iloader';\nimport Utils from \"../../_helpers/utils\";\n\nclass DiscussionBoardTopicList extends Component {\n  constructor(props) {\n    super(props); //console.log(\"DiscussionBoardTopicList -> constructor()... \");\n\n    this.toggleLoading = () => {\n      //console.log(\"DiscussionBoardTopicList -> toggleLoading()... \");\n      this.setState(state => ({\n        showLoading: !state.showLoading\n      }));\n    };\n\n    this.state = {\n      message: null,\n      showLoading: false,\n      discussionBoard: null\n    };\n  }\n\n  componentDidMount() {\n    //console.log(\"DiscussionBoardTopicList -> componentDidMount()... \");\n    this.init();\n  }\n\n  init() {\n    //console.log(\"DiscussionBoardTopicList -> init()... \");\n    this.setState({\n      showLoading: true\n    }, () => {\n      ApiService.getDiscussionBoardTopics(this.props.match.params.id).then(res => {\n        //console.log(\"DiscussionBoardTopicList -> init(); res : \"+JSON.stringify(res))\n        this.setState({\n          showLoading: false,\n          discussionBoard: res.data\n        });\n      });\n    });\n  }\n\n  render() {\n    //console.log(\"DiscussionBoardTopicList -> render()... \");        \n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, this.renderHeader(), this.renderBody(), this.renderLoader())));\n  }\n\n  renderHeader() {\n    //console.log(\"DiscussionBoardTopicList -> renderHeader()... \");\n    let CURRENT_PORTLET = JSON.parse(localStorage['portlet']);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `module-header-inner ${CURRENT_PORTLET.class}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: this.props.history.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"img\", {\n      src: discussion_icon,\n      alt: \"discussion icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"arrow-set\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, this.state.discussionBoard && /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, this.state.discussionBoard.name)));\n  }\n\n  renderBody() {\n    //console.log(\"DiscussionBoardTopicList -> renderBody()... \");\n    let discussionBoard = this.state.discussionBoard;\n    let isMobile = Utils.isMobileDevice();\n    return /*#__PURE__*/React.createElement(React.Fragment, null, discussionBoard && /*#__PURE__*/React.createElement(React.Fragment, null, isMobile === true ? this.renderMobileView(discussionBoard) : this.renderDesktopView(discussionBoard)));\n  }\n\n  renderMobileView(discussionBoard) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ilearn-padding-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, discussionBoard.blogPostBeans.map((topic, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"ilearn-padding-both-sides ilearn-padding-top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        onClick: () => this.viewTopic(topic),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ilearn-item-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"ilearn-item-inner pt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 41\n        }\n      }, topic.title), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faChevronRight,\n        size: \"lg\",\n        color: \"gray\",\n        className: \"float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 41\n        }\n      })))));\n    })), this.renderAddTopic(discussionBoard));\n  }\n\n  renderDesktopView(discussionBoard) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-group-item bg-info list-group-item-action p-3 bg-info border-info active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, \"Posted on\"))), discussionBoard.blogPostBeans.map((topic, index) => {\n      var description = 'NA';\n\n      if (topic.content) {\n        description = topic.content.replace(/<(.|\\n)*?>/g, '');\n        description = description.replace(/&nbsp;/g, '');\n        description = description.replace(/&#39;/g, \"'\");\n      } //var description = Parser(item.description);\n\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list-group-item list-group-item-action p-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row \",\n        key: index,\n        onClick: () => this.viewTopic(topic),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 56\n        }\n      }, index + 1)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col col-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }\n      }, topic.title), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: description\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 57\n        }\n      }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 29\n        }\n      }, topic.postedon)));\n    }))), this.renderAddTopic(discussionBoard));\n  }\n\n  renderAddTopic(discussionBoard) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, discussionBoard.acceptStudentPosts === true && /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-fab btn-success\",\n      \"data-placement\": \"left\",\n      title: \"Add Topic\",\n      onClick: () => this.addTopic(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      size: \"2x\",\n      color: \"white\",\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  addTopic() {\n    let path = '/discussionBoard/' + this.props.match.params.id + '/topic/create';\n    this.props.history.push({\n      pathname: path,\n      state: {\n        discussionBoardId: this.state.discussionBoard.id\n      }\n    });\n  }\n\n  viewTopic(topic) {\n    //console.log(\"DiscussionBoardTopicList -> viewTopic()... \");\n    this.props.history.push('/discussionBoard/' + this.props.match.params.id + '/topic/' + topic.id + '/comments');\n  }\n\n  renderLoader() {\n    //console.log(\"DiscussionBoardTopicList -> renderLoader()... \");\n    const _loadingText = 'Please wait...';\n    return /*#__PURE__*/React.createElement(ILoader, {\n      loadingText: _loadingText,\n      isShow: this.state.showLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    });\n  }\n\n  toggleView(view) {\n    this.setState(state => ({\n      view: view\n    }));\n  }\n\n}\n\nexport { DiscussionBoardTopicList };","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/discussion/DiscussionBoardTopicList.jsx"],"names":["React","Component","discussion_icon","Container","Card","FontAwesomeIcon","faArrowLeft","faChevronRight","faPlus","ApiService","ILoader","Utils","DiscussionBoardTopicList","constructor","props","toggleLoading","setState","state","showLoading","message","discussionBoard","componentDidMount","init","getDiscussionBoardTopics","match","params","id","then","res","data","render","renderHeader","renderBody","renderLoader","CURRENT_PORTLET","JSON","parse","localStorage","class","history","goBack","name","isMobile","isMobileDevice","renderMobileView","renderDesktopView","blogPostBeans","map","topic","index","viewTopic","title","renderAddTopic","description","content","replace","__html","postedon","acceptStudentPosts","addTopic","path","push","pathname","discussionBoardId","_loadingText","toggleView","view"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport discussion_icon from \"./images/discussion.png\";\r\nimport { Container, Card } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faChevronRight, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\nimport Utils from \"../../_helpers/utils\";\r\n\r\nclass DiscussionBoardTopicList extends Component { \r\n\r\n\tconstructor(props) {\r\n        super(props);\r\n        //console.log(\"DiscussionBoardTopicList -> constructor()... \");\r\n        this.state = {\r\n            message: null,\r\n            showLoading: false,\r\n            discussionBoard: null\r\n        };\r\n    }\r\n    \r\n    componentDidMount() {\r\n        //console.log(\"DiscussionBoardTopicList -> componentDidMount()... \");\r\n        this.init();\r\n    }\r\n    \r\n    init() {\r\n        //console.log(\"DiscussionBoardTopicList -> init()... \");\r\n        this.setState({ showLoading: true }, () => {\r\n            ApiService.getDiscussionBoardTopics(this.props.match.params.id)\r\n            .then((res) => {\r\n              //console.log(\"DiscussionBoardTopicList -> init(); res : \"+JSON.stringify(res))\r\n              this.setState({\r\n                showLoading: false,\r\n                discussionBoard : res.data\r\n              });\r\n            });\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        //console.log(\"DiscussionBoardTopicList -> render()... \");        \r\n        return (  \r\n            <>\r\n                <div className=\"Message\">\r\n                    <Container fluid >\r\n                        {this.renderHeader()}\r\n                        {this.renderBody()}\r\n                        {this.renderLoader()}                    \r\n                    </Container>\r\n                </div>\r\n            </>           \r\n              \r\n        );\r\n    }\r\n\r\n    renderHeader() {\r\n        //console.log(\"DiscussionBoardTopicList -> renderHeader()... \");\r\n        let CURRENT_PORTLET = JSON.parse(localStorage['portlet']);\r\n        return (\r\n            <div className=\"module-header\">\r\n                <div className={`module-header-inner ${CURRENT_PORTLET.class}`} >\r\n                    <div className=\"back\">\r\n                        <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n                    </div>\r\n                    <img src={discussion_icon} alt=\"discussion icon\" /> \r\n                </div>\r\n                <div className=\"arrow-set\">\r\n                    {\r\n                        this.state.discussionBoard &&       \r\n                        <h4>{this.state.discussionBoard.name}</h4>  \r\n                    }                         \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderBody() {\r\n        //console.log(\"DiscussionBoardTopicList -> renderBody()... \");\r\n        let discussionBoard = this.state.discussionBoard;\r\n        let isMobile = Utils.isMobileDevice();\r\n        return  (\r\n            <>\r\n            {\r\n                discussionBoard && \r\n                <>\r\n                {\r\n                    isMobile===true? this.renderMobileView(discussionBoard) : \r\n                    this.renderDesktopView(discussionBoard)\r\n                }\r\n                </>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n    \r\n    renderMobileView(discussionBoard) {\r\n        return  (\r\n            <>\r\n            <div className=\"ilearn-padding-top\"> \r\n                {\r\n                    discussionBoard.blogPostBeans.map((topic, index) => {\r\n                        return ( \r\n                            <div key={index} className=\"ilearn-padding-both-sides ilearn-padding-top\">\r\n                                <Card onClick={() => this.viewTopic(topic)}>\r\n                                <Card.Body>\r\n                                    <div className=\"ilearn-item-block\">\r\n                                        <h4 className=\"ilearn-item-inner pt-2\">{topic.title}</h4>\r\n                                        <p ></p>\r\n                                        <FontAwesomeIcon icon={ faChevronRight }  size = 'lg' color=\"gray\" className=\"float-right\"/>\r\n                                    </div>\r\n                                </Card.Body>\r\n                                </Card>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n            { this.renderAddTopic(discussionBoard) }\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderDesktopView(discussionBoard) {\r\n        return ( \r\n            <>\r\n            <Card>\r\n                <Card.Body className=\"p-0\">\r\n                <div className=\"list-group-item bg-info list-group-item-action p-3 bg-info border-info active\">\r\n                <div className=\"row font-weight-bold\">\r\n                    <div className=\"col col-1\">#</div>\r\n                    <div className=\"col col-3\">Name</div>\r\n                    <div className=\"col col-6\">Description</div>\r\n                    <div className=\"col col-2\">Posted on</div>\r\n                </div>\r\n                </div>\r\n                {\r\n                discussionBoard.blogPostBeans.map((topic, index) => {\r\n                    var description = 'NA';\r\n                    if(topic.content){\r\n                        description = topic.content.replace(/<(.|\\n)*?>/g, '');\r\n                        description = description.replace(/&nbsp;/g, '');\r\n                        description = description.replace(/&#39;/g, \"'\");\r\n                    }\r\n                    //var description = Parser(item.description);\r\n                    return (\r\n                        <div className=\"list-group-item list-group-item-action p-3\"> \r\n                        <div className=\"row \" key={index} onClick={() => this.viewTopic(topic)}>\r\n                            <div className=\"col col-1\"><b>{index+1}</b></div>\r\n                            <div className=\"col col-3\">{topic.title}</div>\r\n                            <div className=\"col col-6\"> <div dangerouslySetInnerHTML={{ __html:description}} /> </div>\r\n                            <div className=\"col col-2\">{topic.postedon}</div>\r\n                        </div>\r\n                        </div>\r\n                    )\r\n                })\r\n                }\r\n                </Card.Body>\r\n            </Card>\r\n            { this.renderAddTopic(discussionBoard) }\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderAddTopic(discussionBoard) {\r\n        return (\r\n            <>\r\n            {\r\n                discussionBoard.acceptStudentPosts===true && \r\n                <button type=\"button\" className=\"btn btn-fab btn-success\" data-placement=\"left\" title=\"Add Topic\" onClick={() => this.addTopic()}> \r\n                    <FontAwesomeIcon icon={ faPlus }  size = '2x' color=\"white\" className=\"float-right\"/>\r\n                </button>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n\r\n    addTopic() {\r\n        let path = '/discussionBoard/'+this.props.match.params.id+'/topic/create'\r\n        this.props.history.push({\r\n            pathname: path,\r\n            state: { discussionBoardId: this.state.discussionBoard.id }});   \r\n    }\r\n    \r\n    viewTopic(topic) {\r\n        //console.log(\"DiscussionBoardTopicList -> viewTopic()... \");\r\n        this.props.history.push('/discussionBoard/'+this.props.match.params.id+'/topic/'+topic.id+'/comments');\r\n    }\r\n    \r\n    renderLoader() {\r\n        //console.log(\"DiscussionBoardTopicList -> renderLoader()... \");\r\n        const _loadingText = 'Please wait...';\r\n        return (\r\n            <ILoader\r\n                loadingText={_loadingText}\r\n                isShow={this.state.showLoading}\r\n                >\r\n            </ILoader>\r\n        )\r\n    }\r\n\r\n    toggleView(view) {\r\n        this.setState(state => ({ view: view }));    \r\n    }\r\n\r\n    toggleLoading = () => {\r\n        //console.log(\"DiscussionBoardTopicList -> toggleLoading()... \");\r\n        this.setState(state => ({ showLoading: !state.showLoading }));\r\n    };\r\n\r\n}\r\n\r\n  \r\nexport {DiscussionBoardTopicList};"]},"metadata":{},"sourceType":"module"}