{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\learning\\\\components\\\\Model.jsx\";\nimport React, { Component } from 'react';\nimport CKEditor from 'ckeditor4-react';\nimport { Modal, Form } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport UserService from \"../../../_services/UserService\";\nimport Loader from './../../../_components/loader/loader';\nimport ApiService from \"../../../_services/ApiService\";\nexport default class Model extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateEditor = e => {\n      const v = e.editor.getData();\n      const k = \"message\";\n      let message = { ...this.state.message\n      };\n      message = v;\n      this.setState({\n        message: message\n      });\n    };\n\n    this.state = {\n      message: null,\n      loading: false\n    };\n    this.timeout = 0;\n    this.reloadNotes = this.reloadNotes.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.show !== prevProps.show) {\n      this.setState({\n        message: null\n      });\n      this.props.show && this.reloadNotes();\n    }\n  }\n\n  modeShow(show) {\n    this.props.modeShow(show);\n  }\n\n  reloadNotes() {\n    this.setState({\n      loading: true\n    }, () => {\n      ApiService.loadStudyResourcesNotes(this.props.resourceId, this.props.type).then(res => {\n        console.log(res.data);\n        if (this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n          this.setState({\n            loading: false,\n            message: res.data.note\n          });\n        }, 100);\n      });\n    });\n  }\n\n  postNotes() {\n    let message = this.state.message;\n\n    if (message && message.trim().length > 0) {\n      let commentJSON = {\n        resourceId: this.props.resourceId,\n        note: message,\n        userId: UserService.getUserId()\n      };\n      this.setState({\n        loading: true\n      }, () => {\n        ApiService.saveStudyResourcesNotes(commentJSON, this.props.type).then(res => {\n          this.setState({\n            loading: false,\n            data: res.data\n          });\n          this.props.modeShow(false);\n        });\n      });\n    }\n  }\n\n  render() {\n    let CURRENT_PORTLET = JSON.parse(localStorage['portlet']);\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n      show: this.props.show,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      className: `ilearn-plain-header text-white ${CURRENT_PORTLET.class}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \" \", this.props.title, \" \")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(CKEditor, {\n      name: \"message\",\n      placeholder: \"Compose message\",\n      data: this.state.message,\n      onChange: this.updateEditor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-danger\",\n      onClick: () => this.modeShow(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }), \"\\xA0 Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-primary\",\n      onClick: () => this.postNotes(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, \"Save \\xA0\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPaperPlane,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    })))), loading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }) : '');\n  }\n\n}","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/learning/components/Model.jsx"],"names":["React","Component","CKEditor","Modal","Form","FontAwesomeIcon","faPaperPlane","faTimes","UserService","Loader","ApiService","Model","constructor","props","updateEditor","e","v","editor","getData","k","message","state","setState","loading","timeout","reloadNotes","bind","componentDidUpdate","prevProps","show","modeShow","loadStudyResourcesNotes","resourceId","type","then","res","console","log","data","clearTimeout","setTimeout","note","postNotes","trim","length","commentJSON","userId","getUserId","saveStudyResourcesNotes","render","CURRENT_PORTLET","JSON","parse","localStorage","class","title"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport CKEditor from 'ckeditor4-react';\r\nimport { Modal, Form } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPaperPlane, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport UserService from \"../../../_services/UserService\";\r\nimport Loader from './../../../_components/loader/loader';\r\nimport ApiService from \"../../../_services/ApiService\";\r\n\r\nexport default class Model extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: null,\r\n            loading: false,\r\n        };\r\n        this.timeout =  0;\r\n        this.reloadNotes = this.reloadNotes.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.show !== prevProps.show) {\r\n            this.setState({\r\n                message : null\r\n            });\r\n            this.props.show && this.reloadNotes()\r\n        }\r\n    }\r\n    \r\n    modeShow(show){\r\n        this.props.modeShow(show);\r\n    }\r\n\r\n    updateEditor = (e) => {\r\n        const v = e.editor.getData();\r\n        const k = \"message\";\r\n        let message = {...this.state.message}\r\n        message = v;\r\n        this.setState({message: message});\r\n    }\r\n\r\n    reloadNotes() {\r\n        this.setState({ loading: true }, () => {\r\n          ApiService.loadStudyResourcesNotes(this.props.resourceId, this.props.type)\r\n          .then((res) => {\r\n              console.log(res.data);\r\n              if(this.timeout) clearTimeout(this.timeout);\r\n                this.timeout = setTimeout(() => {\r\n                    this.setState({\r\n                        loading: false,\r\n                        message : res.data.note\r\n                    }); \r\n              }, 100);\r\n          });\r\n        });\t\r\n    }\r\n\r\n    postNotes() {\r\n        let message = this.state.message;\r\n        if(message && message.trim().length>0) {\r\n            let commentJSON={\r\n                resourceId : this.props.resourceId,\r\n                note\t: message,\r\n                userId  : UserService.getUserId()\r\n            }\r\n\r\n            this.setState({ loading: true }, () => {\r\n                ApiService.saveStudyResourcesNotes(commentJSON, this.props.type)\r\n                .then((res) => {\r\n                    this.setState({\r\n                      loading: false,\r\n                      data: res.data,\r\n                    });\r\n                    this.props.modeShow(false);\r\n                });\r\n            });\t\r\n                \r\n        }  \r\n    }\r\n\r\n\r\n    render(){\r\n        let CURRENT_PORTLET = JSON.parse(localStorage['portlet']);\r\n        const { loading } = this.state;\r\n        return (\r\n            <>\r\n            <Modal show={this.props.show} size=\"lg\">\r\n            <Modal.Header className={`ilearn-plain-header text-white ${CURRENT_PORTLET.class}`}>\r\n            <Modal.Title> {this.props.title} </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>                \r\n                <Form>                    \r\n                    <Form.Group controlId=\"message\">\r\n                        <Form.Label></Form.Label>\r\n                        <CKEditor\r\n                            name=\"message\"\r\n                            placeholder=\"Compose message\"\r\n                            data={this.state.message}\r\n                            onChange={this.updateEditor}\r\n                        />\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n               <button type=\"button\" className=\"btn btn-outline-danger\" \r\n                    onClick={() => this.modeShow(false)}\r\n                >\r\n                    <FontAwesomeIcon icon={ faTimes }/>\r\n                    &nbsp; Cancel \r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-outline-primary\" \r\n                    onClick={() => this.postNotes(false)}\r\n                >\r\n                    Save &nbsp;\r\n                    <FontAwesomeIcon icon={ faPaperPlane }/>\r\n                </button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n            {loading ?  <Loader />: ''}\r\n            </>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}