{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\discussion\\\\DiscussionBoard.jsx\";\nimport React, { Component } from 'react';\nimport './discussion.css';\nimport discussion_icon from './images/discussion.png';\nimport { Container, Card, Modal } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport tile from \"./images/tile.svg\";\nimport list from \"./images/list.svg\";\nimport ApiService from '../../_services/ApiService';\nimport { ILoader } from './../../_components/iloader/iloader';\nimport Config from './../../_config/config';\nimport Utils from '../../_helpers/utils';\n\nclass DiscussionBoard extends Component {\n  constructor(props) {\n    super(props); //console.log(\"DiscussionBoard -> constructor()... \");\n\n    this.handleClose = value => {\n      console.log(value);\n      this.setState({\n        showModal: value\n      });\n    };\n\n    this.state = {\n      message: null,\n      showLoading: false,\n      portlet: this.props.location.state.portlet,\n      discussionBoards: [],\n      view: 'grid',\n      disclaimer: {},\n      showModal: false\n    };\n  }\n\n  componentDidMount() {\n    //console.log(\"DiscussionBoard -> componentDidMount()... \");\n    this.init();\n  }\n\n  init() {\n    //console.log(\"DiscussionBoard -> init()... \");\n    Config.CURRENT_PORTLET = this.state.portlet;\n    this.setState({\n      showLoading: true\n    }, () => {\n      ApiService.getDiscussionBoards().then(res => {\n        //console.log(\"DiscussionBoard -> init(); res : \"+JSON.stringify(res));\n        let view = Utils.isMobileDevice() === true ? 'grid' : 'list';\n        console.log(res);\n        this.setState({\n          showLoading: false,\n          discussionBoards: res.data.discussionBoardBeans,\n          view: view,\n          disclaimer: res.data.disclaimer,\n          showModal: res.data.disclaimer.enabled\n        });\n      });\n    });\n  }\n\n  render() {\n    //console.log(\"DiscussionBoard -> render()... \");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Learning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, this.renderHeader(), this.renderBody(), this.renderLoader())), this.viewDisclaimer());\n  }\n\n  renderHeader() {\n    //console.log(\"DiscussionBoard -> renderHeader()... \");\n    let isMobile = Utils.isMobileDevice();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `module-header-inner ${this.props.location.state.portlet.class}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: this.props.history.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"img\", {\n      src: discussion_icon,\n      alt: \"discussion icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"arrow-set\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, isMobile === true ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, this.state.portlet.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, this.state.view === 'list' ? /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"list\",\n      src: tile,\n      className: \"border\",\n      onClick: () => this.toggleView('grid'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"grid\",\n      src: list,\n      className: \"border\",\n      onClick: () => this.toggleView('list'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }))) : /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, this.state.portlet.name)));\n  }\n\n  renderBody() {\n    //console.log(\"DiscussionBoard -> renderBody()... \");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ilearn-padding-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, this.state.view === 'list' ? this.renderList() : this.renderGrid()));\n  }\n\n  renderList() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card_list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, this.state.discussionBoards.map((discussionBoard, index) => {\n      if (!discussionBoard.icon) {\n        discussionBoard.icon = discussion_icon;\n      }\n\n      return /*#__PURE__*/React.createElement(Card, {\n        key: index,\n        onClick: () => this.showDiscussionBoardTopics(discussionBoard.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cardbody align-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: discussionBoard.icon,\n        alt: discussionBoard.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"head\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 19\n        }\n      }, discussionBoard.name))));\n    }));\n  }\n\n  renderGrid() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mobile_course_list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, this.state.discussionBoards.map((discussionBoard, index) => {\n      if (!discussionBoard.icon) {\n        discussionBoard.icon = discussion_icon;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        onClick: () => this.showDiscussionBoardTopics(discussionBoard.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"course_box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: discussionBoard.name,\n        src: discussionBoard.icon,\n        className: \"resposive-image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"head\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 27\n        }\n      }, discussionBoard.name))))))));\n    }));\n  }\n\n  renderLoader() {\n    //console.log(\"DiscussionBoard -> renderLoader()... \");\n    const _loadingText = 'Please wait...';\n    return /*#__PURE__*/React.createElement(ILoader, {\n      loadingText: _loadingText,\n      isShow: this.state.showLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }\n    });\n  }\n\n  showDiscussionBoardTopics(discussionBoardId) {\n    this.props.history.push('/discussionBoard/' + discussionBoardId + '/topics');\n  }\n\n  toggleView(view) {\n    this.setState(state => ({\n      view: view\n    }));\n  }\n\n  viewDisclaimer() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      onClick: () => this.handleClose(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, this.state.disclaimer.name)), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: this.state.disclaimer.text\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-danger\",\n      onClick: () => this.handleClose(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }), \"\\xA0 Close\"))));\n  }\n\n}\n\nexport { DiscussionBoard };","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/discussion/DiscussionBoard.jsx"],"names":["React","Component","discussion_icon","Container","Card","Modal","FontAwesomeIcon","faArrowLeft","faTimes","ApiService","ILoader","Config","Utils","DiscussionBoard","constructor","props","handleClose","value","console","log","setState","showModal","state","message","showLoading","portlet","location","discussionBoards","view","disclaimer","componentDidMount","init","CURRENT_PORTLET","getDiscussionBoards","then","res","isMobileDevice","data","discussionBoardBeans","enabled","render","renderHeader","renderBody","renderLoader","viewDisclaimer","isMobile","class","history","goBack","name","tile","toggleView","list","renderList","renderGrid","map","discussionBoard","index","icon","showDiscussionBoardTopics","id","_loadingText","discussionBoardId","push","__html","text"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './discussion.css'\r\nimport discussion_icon from './images/discussion.png'\r\nimport { Container, Card, Modal } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport tile from './images/tile.svg'\r\nimport list from './images/list.svg'\r\nimport ApiService from '../../_services/ApiService'\r\nimport { ILoader } from './../../_components/iloader/iloader'\r\nimport Config from './../../_config/config'\r\nimport Utils from '../../_helpers/utils'\r\n\r\nclass DiscussionBoard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    //console.log(\"DiscussionBoard -> constructor()... \");\r\n    this.state = {\r\n      message: null,\r\n      showLoading: false,\r\n      portlet: this.props.location.state.portlet,\r\n      discussionBoards: [],\r\n      view: 'grid',\r\n      disclaimer: {},\r\n      showModal: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    //console.log(\"DiscussionBoard -> componentDidMount()... \");\r\n    this.init()\r\n  }\r\n\r\n  init() {\r\n    //console.log(\"DiscussionBoard -> init()... \");\r\n    Config.CURRENT_PORTLET = this.state.portlet\r\n    this.setState({ showLoading: true }, () => {\r\n      ApiService.getDiscussionBoards().then((res) => {\r\n        //console.log(\"DiscussionBoard -> init(); res : \"+JSON.stringify(res));\r\n        let view = Utils.isMobileDevice() === true ? 'grid' : 'list'\r\n        console.log(res)\r\n        this.setState({\r\n          showLoading: false,\r\n          discussionBoards: res.data.discussionBoardBeans,\r\n          view: view,\r\n          disclaimer: res.data.disclaimer,\r\n          showModal: res.data.disclaimer.enabled,\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"DiscussionBoard -> render()... \");\r\n    return (\r\n      <>\r\n        <div className='Learning'>\r\n          <Container fluid>\r\n            {this.renderHeader()}\r\n            {this.renderBody()}\r\n            {this.renderLoader()}\r\n          </Container>\r\n        </div>\r\n        {this.viewDisclaimer()}\r\n      </>\r\n    )\r\n  }\r\n\r\n  renderHeader() {\r\n    //console.log(\"DiscussionBoard -> renderHeader()... \");\r\n    let isMobile = Utils.isMobileDevice()\r\n    return (\r\n      <div className='module-header'>\r\n        <div\r\n          className={`module-header-inner ${this.props.location.state.portlet.class}`}\r\n        >\r\n          <div className='back'>\r\n            <FontAwesomeIcon\r\n              icon={faArrowLeft}\r\n              onClick={this.props.history.goBack}\r\n            />\r\n          </div>\r\n          <img src={discussion_icon} alt='discussion icon' />\r\n        </div>\r\n        <div className='arrow-set'>\r\n          {isMobile === true ? (\r\n            <div className='row'>\r\n              <div className='col-10'>\r\n                <h3>{this.state.portlet.name}</h3>\r\n              </div>\r\n              <div className='col-2'>\r\n                {this.state.view === 'list' ? (\r\n                  <img\r\n                    alt='list'\r\n                    src={tile}\r\n                    className='border'\r\n                    onClick={() => this.toggleView('grid')}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    alt='grid'\r\n                    src={list}\r\n                    className='border'\r\n                    onClick={() => this.toggleView('list')}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <h4>{this.state.portlet.name}</h4>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderBody() {\r\n    //console.log(\"DiscussionBoard -> renderBody()... \");\r\n    return (\r\n      <>\r\n        <div className='ilearn-padding-top'>\r\n          {this.state.view === 'list' ? this.renderList() : this.renderGrid()}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  renderList() {\r\n    return (\r\n      <div className='card_list'>\r\n        {this.state.discussionBoards.map((discussionBoard, index) => {\r\n          if (!discussionBoard.icon) {\r\n            discussionBoard.icon = discussion_icon\r\n          }\r\n          return (\r\n            <Card\r\n              key={index}\r\n              onClick={() => this.showDiscussionBoardTopics(discussionBoard.id)}\r\n            >\r\n              <Card.Body>\r\n                <div className='cardbody align-center'>\r\n                  <img src={discussionBoard.icon} alt={discussionBoard.name} />\r\n                  <h4 className='head'>{discussionBoard.name}</h4>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderGrid() {\r\n    return (\r\n      <div className='mobile_course_list'>\r\n        {this.state.discussionBoards.map((discussionBoard, index) => {\r\n          if (!discussionBoard.icon) {\r\n            discussionBoard.icon = discussion_icon\r\n          }\r\n          return (\r\n            <div\r\n              key={index}\r\n              onClick={() => this.showDiscussionBoardTopics(discussionBoard.id)}\r\n            >\r\n              <div className='row'>\r\n                <div className='col-12'>\r\n                  <div className='course_box'>\r\n                    <div className='card'>\r\n                      <img\r\n                        alt={discussionBoard.name}\r\n                        src={discussionBoard.icon}\r\n                        className='resposive-image'\r\n                      />\r\n                      <div className='head'>\r\n                        <p className='title'>\r\n                          <strong>{discussionBoard.name}</strong>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  handleClose = (value) => {\r\n    console.log(value)\r\n    this.setState({ showModal: value })\r\n  }\r\n\r\n  renderLoader() {\r\n    //console.log(\"DiscussionBoard -> renderLoader()... \");\r\n    const _loadingText = 'Please wait...'\r\n    return (\r\n      <ILoader\r\n        loadingText={_loadingText}\r\n        isShow={this.state.showLoading}\r\n      ></ILoader>\r\n    )\r\n  }\r\n\r\n  showDiscussionBoardTopics(discussionBoardId) {\r\n    this.props.history.push('/discussionBoard/' + discussionBoardId + '/topics')\r\n  }\r\n\r\n  toggleView(view) {\r\n    this.setState((state) => ({ view: view }))\r\n  }\r\n\r\n  viewDisclaimer() {\r\n    return (\r\n      <>\r\n        <Modal show={this.state.showModal} size='lg'>\r\n          <Modal.Header closeButton onClick={() => this.handleClose(false)}>\r\n            <Modal.Title>{this.state.disclaimer.name}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div\r\n              dangerouslySetInnerHTML={{ __html: this.state.disclaimer.text }}\r\n            ></div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <button\r\n              type='button'\r\n              className='btn btn-outline-danger'\r\n              onClick={() => this.handleClose(false)}\r\n            >\r\n              <FontAwesomeIcon icon={faTimes} />\r\n              &nbsp; Close\r\n            </button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport { DiscussionBoard }\r\n"]},"metadata":{},"sourceType":"module"}