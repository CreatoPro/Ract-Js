{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\login\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport \"./Login.css\";\nimport cw_logo from \"./images/cw_logo.png\";\nimport Form from \"react-bootstrap/Form\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport Config from \"../../_config/config\";\nimport ApiService from \"../../_services/ApiService\";\nimport Loader from './../../_components/loader/loader';\nimport OTPValidator from './../../_components/OTPValidator';\nimport swal from 'sweetalert';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateInput = e => {\n      const v = e.target.value;\n      const k = e.target.name;\n      this.setState({\n        [k]: v\n      }); //console.log(this.state)\n    };\n\n    this.onOTPValidatorClose = value => {\n      //console.log(\"Register --> onOTPValidatorClose...\"+value);\n      // store user details in local storage to keep user logged in between page refreshes    \n      if (value === true) {\n        localStorage.setItem('user', JSON.stringify(this.state.loginUserData));\n        this.props.history.push('/');\n      } else {\n        let _otpValidator = {\n          show: false,\n          otpLength: 0,\n          smsAddress: null,\n          message: 'Successfully sent the One Time Password to your Registered Mobile Number',\n          userId: null\n        };\n        this.setState({\n          otpValidator: _otpValidator\n        });\n      }\n    };\n\n    this.state = {\n      loading: false,\n      user: null,\n      list2: [],\n      otpValidator: {\n        show: false,\n        otpLength: 0,\n        smsAddress: null,\n        message: 'Successfully sent the One Time Password to your Registered Mobile Number',\n        userId: null\n      },\n      loginUserData: null\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.reloadRegisterList = this.reloadRegisterList.bind(this);\n  }\n\n  routeChange(path) {\n    this.props.history.push(path);\n  }\n\n  componentDidMount() {\n    var _this$props$location, _this$props$location$;\n\n    const mobile = (_this$props$location = this.props.location) === null || _this$props$location === void 0 ? void 0 : (_this$props$location$ = _this$props$location.state) === null || _this$props$location$ === void 0 ? void 0 : _this$props$location$.mobile;\n\n    if (mobile) {\n      this.setState({\n        contactNumber: mobile\n      });\n    }\n\n    this.init();\n  }\n\n  init() {\n    this.reloadRegisterList();\n    this.reloadCountryCodeList();\n  }\n\n  reloadRegisterList() {\n    this.setState({\n      loading: true\n    }, () => {\n      ApiService.fetchRegisterList().then(res => {\n        let quickEnquiryForm = res.data.data;\n        let openIdLoginData1 = sessionStorage.getItem('openIdLoginData');\n\n        if (openIdLoginData1) {\n          console.log(\"OpenId Login Data: \" + openIdLoginData1);\n          let openIdLoginData = JSON.parse(openIdLoginData1);\n          quickEnquiryForm.openLoginId = openIdLoginData.userID;\n          quickEnquiryForm.openLoginType = openIdLoginData.openLoginTypeId;\n\n          for (let index = 0; index < quickEnquiryForm.fields.length; index++) {\n            if (quickEnquiryForm.fields[index].enableStatus == 1) {\n              if (quickEnquiryForm.fields[index].name == \"firstName\" && openIdLoginData.first_name) {\n                quickEnquiryForm.fields[index].response = openIdLoginData.first_name;\n              } else if (quickEnquiryForm.fields[index].name == \"lastName\" && openIdLoginData.last_name) {\n                quickEnquiryForm.fields[index].response = openIdLoginData.last_name;\n              } else if (quickEnquiryForm.fields[index].name == \"email\" && openIdLoginData.email) {\n                quickEnquiryForm.fields[index].response = openIdLoginData.email;\n              } else if (quickEnquiryForm.fields[index].name == \"userName\" && openIdLoginData.email) {\n                quickEnquiryForm.fields[index].response = openIdLoginData.email;\n              }\n            }\n          }\n        }\n\n        this.setState({\n          loading: false,\n          list: quickEnquiryForm\n        });\n      });\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true,\n      loading: true\n    });\n    let registerForm = this.state.list;\n    let myForm = document.getElementById('myForm');\n    let formData = new FormData(myForm); //registerForm.platform = \"Android\";\n\n    formData.forEach((value, key) => {\n      for (let i = 0; i < registerForm.fields.length; i++) {\n        if (registerForm.fields[i].name == key && registerForm.fields[i].enableStatus == 1) {\n          registerForm.fields[i].response = value;\n        }\n      }\n    });\n    let openIdLoginData1 = sessionStorage.getItem('openIdLoginData');\n\n    if (openIdLoginData1) {\n      //console.log(\"OpenId Login Data: \"+openIdLoginData1);\n      let openIdLoginData = JSON.parse(openIdLoginData1);\n      registerForm.openLoginId = openIdLoginData.userID;\n      registerForm.openLoginType = openIdLoginData.openLoginTypeId;\n    } //console.log(JSON.stringify(registerForm));\n\n\n    ApiService.fetchRegister(registerForm).then(res => {\n      console.log(res);\n      /*  {\"status\":1,\r\n      \"message\":\"Thank you for the details you entered.<br/>Registration done successfully.\",\r\n      \"data\":{\"userId\":64715,\"status\":1,\"userName\":\"testotp\",\"enquiryId\":76310,\"enquiryName\":\"testotp\",\r\n      \"userTypeId\":2,\"instructorId\":0,\"instructorName\":null,\"allowMultipleUser\":0,\"emailId\":\"testotp@cw.com\",\r\n      \"mobileNumber\":\"9848040040\",\"address\":\"\",\"otpEnableStatus\":1,\"otp\":\"883796\",\"smsAddress\":\"CWAVES\",\r\n      \"otpMessage\":\"Successfully sent the One Time Password to your Registered Mobile Number \r\n      <br/>98**0***40 <br/> and Email <br/>t****p@cw.com.\"}}\r\n      */\n\n      if (res.data.status == 1) {\n        console.log(\"Register Data : \" + JSON.stringify(res.data.data));\n\n        if (res.data.data.otpEnableStatus && res.data.data.otpEnableStatus === 1) {\n          //validate OTP\n          let _otpValidator = {\n            show: true,\n            otpLength: res.data.data.otpLength,\n            smsAddress: res.data.data.smsAddress,\n            message: res.data.data.otpMessage,\n            userId: res.data.data.userId\n          };\n          this.setState({\n            loading: false,\n            otpValidator: _otpValidator,\n            loginUserData: res.data.data\n          });\n        } else {\n          // store user details in local storage to keep user logged in between page refreshes\n          localStorage.setItem('user', JSON.stringify(res.data.data));\n          this.props.history.push('/');\n        }\n      } else if (res.data.status == 0) {\n        this.setState({\n          loading: false,\n          list: res.data.data\n        });\n      } else {\n        this.showErrorAlert(\"Somethig went wrong, Please try again later.\");\n      }\n    });\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: this.props.history.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-image\",\n      style: {\n        background: `url(${Config.cover}) no-repeat transparent`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"gradient-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, \" Register \")), loading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 27\n      }\n    }) : this.renderFormLogin())), this.renderFooter()), /*#__PURE__*/React.createElement(OTPValidator, {\n      data: this.state.otpValidator,\n      onOTPValidatorClose: this.onOTPValidatorClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  renderFormLogin() {\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      id: \"myForm\",\n      className: \"registrationForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }\n    }, this.renderCard(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"institute-sign-in-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"primary button-full ilearn-blue-btn button-md\",\n      type: \"submit\",\n      value: \"Register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n  reloadCountryCodeList() {\n    this.setState({\n      loading: true\n    }, () => {\n      ApiService.fetchCountries().then(res => {\n        this.setState({\n          loading: false,\n          list2: res.data.data\n        });\n      });\n    });\n  }\n\n  renderCard() {\n    let data = this.state.list;\n    let options = this.state.list2;\n    let field = \"\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card_list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 5\n      }\n    }, data && data.fields.map((item, index) => {\n      if (item.enableStatus == 1 && item.type != \"tagType\") {\n        if (item.type == \"select\") {\n          field = /*#__PURE__*/React.createElement(Form.Group, {\n            controlId: \"exampleForm.SelectCustomSizeSm\",\n            className: \"select\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 24\n            }\n          }, /*#__PURE__*/React.createElement(Form.Label, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 27\n            }\n          }, item.displayName), /*#__PURE__*/React.createElement(Form.Control, {\n            as: \"select\",\n            name: item.name,\n            defaultValue: item.response,\n            onChange: this.updateInput,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 27\n            }\n          }, item.options.map((c, i) => /*#__PURE__*/React.createElement(\"option\", {\n            value: c.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 31\n            }\n          }, c.name))));\n        } else if (item.name == \"contactNumberCountryCode\") {\n          field = /*#__PURE__*/React.createElement(\"div\", {\n            className: 'item-inner',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 24\n            }\n          }, /*#__PURE__*/React.createElement(Form.Control, {\n            as: \"select\",\n            name: item.name,\n            defaultValue: item.response,\n            onChange: this.updateInput,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 27\n            }\n          }, options.map((c, i) => /*#__PURE__*/React.createElement(\"option\", {\n            value: c.countryCode,\n            selected: c.defaultCountry,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 31\n            }\n          }, \"+\", c.countryCode))));\n        } else {\n          field = /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: 'item-inner',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(Form.Control, {\n            type: item.type,\n            placeholder: item.displayName,\n            name: item.name,\n            value: this.state[item.name],\n            defaultValue: item.response,\n            onChange: this.updateInput,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }\n          })), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 27\n            }\n          }));\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: item.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }\n        }, field, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"error\",\n          style: item.errorMessage ? {} : {\n            display: 'none'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }\n        }, item.errorMessage));\n      }\n    }));\n  }\n\n  renderFooter() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"institute-cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"institute-top-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }\n    }, \" Powered by \"), \" \", /*#__PURE__*/React.createElement(\"img\", {\n      src: cw_logo,\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 35\n      }\n    }))));\n  }\n\n  showErrorAlert(message) {\n    swal({\n      text: message,\n      icon: \"warning\",\n      button: \"Ok\",\n      allowOutsideClick: false,\n      closeOnClickOutside: false,\n      closeOnEsc: false\n    }).then(exit => {\n      this.init();\n    });\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/login/Register.js"],"names":["React","Component","Container","cw_logo","Form","FontAwesomeIcon","faArrowLeft","Config","ApiService","Loader","OTPValidator","swal","Register","constructor","props","updateInput","e","v","target","value","k","name","setState","onOTPValidatorClose","localStorage","setItem","JSON","stringify","state","loginUserData","history","push","_otpValidator","show","otpLength","smsAddress","message","userId","otpValidator","loading","user","list2","onSubmit","bind","reloadRegisterList","routeChange","path","componentDidMount","mobile","location","contactNumber","init","reloadCountryCodeList","fetchRegisterList","then","res","quickEnquiryForm","data","openIdLoginData1","sessionStorage","getItem","console","log","openIdLoginData","parse","openLoginId","userID","openLoginType","openLoginTypeId","index","fields","length","enableStatus","first_name","response","last_name","email","list","preventDefault","submitted","registerForm","myForm","document","getElementById","formData","FormData","forEach","key","i","fetchRegister","status","otpEnableStatus","otpMessage","showErrorAlert","render","goBack","background","cover","backgroundSize","backgroundPosition","renderFormLogin","renderFooter","renderCard","fetchCountries","options","field","map","item","type","displayName","c","id","countryCode","defaultCountry","errorMessage","display","text","icon","button","allowOutsideClick","closeOnClickOutside","closeOnEsc","exit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"./Login.css\";\r\nimport cw_logo from \"./images/cw_logo.png\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport Config from \"../../_config/config\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Loader from './../../_components/loader/loader';\r\nimport OTPValidator from './../../_components/OTPValidator';\r\nimport swal from 'sweetalert';\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\t    loading: false,\r\n      user: null,\r\n      list2:[],\r\n      otpValidator: { show:false, \r\n        otpLength: 0, \r\n        smsAddress: null, \r\n        message:'Successfully sent the One Time Password to your Registered Mobile Number',\r\n        userId: null\r\n      },\r\n      loginUserData: null\r\n    };\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\t  this.reloadRegisterList = this.reloadRegisterList.bind(this);\r\n  }\r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const mobile = this.props.location?.state?.mobile;\r\n    if(mobile){\r\n      this.setState({contactNumber:mobile});\r\n    }\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.reloadRegisterList();\r\n\t  this.reloadCountryCodeList();  \r\n  }\r\n  \r\n  reloadRegisterList() {\r\n      this.setState({ loading: true }, () => {\r\n        ApiService.fetchRegisterList()\r\n        .then((res) => {\r\n            let quickEnquiryForm = res.data.data;\r\n            let openIdLoginData1 = sessionStorage.getItem('openIdLoginData');\r\n            if(openIdLoginData1) {\r\n              console.log(\"OpenId Login Data: \"+openIdLoginData1);\r\n              let openIdLoginData = JSON.parse(openIdLoginData1);\r\n              quickEnquiryForm.openLoginId = openIdLoginData.userID;\r\n              quickEnquiryForm.openLoginType = openIdLoginData.openLoginTypeId;\r\n              for(let index=0; index<quickEnquiryForm.fields.length; index++) {\r\n                if(quickEnquiryForm.fields[index].enableStatus==1) {\r\n                  if(quickEnquiryForm.fields[index].name==\"firstName\" && openIdLoginData.first_name) {\r\n                    quickEnquiryForm.fields[index].response=openIdLoginData.first_name;  \r\n                  }\r\n                  else if(quickEnquiryForm.fields[index].name==\"lastName\" && openIdLoginData.last_name) {\r\n                    quickEnquiryForm.fields[index].response=openIdLoginData.last_name;\r\n                  }\r\n                  else if(quickEnquiryForm.fields[index].name==\"email\" && openIdLoginData.email) {\r\n                    quickEnquiryForm.fields[index].response=openIdLoginData.email;\r\n                  }\r\n                  else if(quickEnquiryForm.fields[index].name==\"userName\" && openIdLoginData.email) {\r\n                    quickEnquiryForm.fields[index].response=openIdLoginData.email;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            this.setState({\r\n              loading: false,\r\n              list: quickEnquiryForm\r\n            });\r\n        });\r\n      });\t\r\n  }\r\n  \r\n  updateInput = (e) => {\r\n        const v = e.target.value;\r\n        const k = e.target.name;\r\n        this.setState({[k]:v});\r\n        //console.log(this.state)\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.setState({ submitted: true, loading: true });\r\n      let registerForm = this.state.list;\r\n      let myForm = document.getElementById('myForm');\r\n      let formData = new FormData(myForm);\r\n      //registerForm.platform = \"Android\";\r\n      formData.forEach((value, key) => {\r\n        for (let i = 0; i < registerForm.fields.length; i++) {\r\n          if(registerForm.fields[i].name==key && registerForm.fields[i].enableStatus==1){\r\n             registerForm.fields[i].response= value;\r\n          }\r\n        }\t      \r\n      });\r\n      let openIdLoginData1 = sessionStorage.getItem('openIdLoginData');\r\n      if(openIdLoginData1) {\r\n        //console.log(\"OpenId Login Data: \"+openIdLoginData1);\r\n        let openIdLoginData = JSON.parse(openIdLoginData1);\r\n        registerForm.openLoginId = openIdLoginData.userID;\r\n        registerForm.openLoginType = openIdLoginData.openLoginTypeId;\r\n      }\r\n\t  //console.log(JSON.stringify(registerForm));\r\n\t  ApiService.fetchRegister(registerForm)\r\n        .then((res) => {\r\n          console.log(res);\r\n          /*  {\"status\":1,\r\n        \"message\":\"Thank you for the details you entered.<br/>Registration done successfully.\",\r\n        \"data\":{\"userId\":64715,\"status\":1,\"userName\":\"testotp\",\"enquiryId\":76310,\"enquiryName\":\"testotp\",\r\n        \"userTypeId\":2,\"instructorId\":0,\"instructorName\":null,\"allowMultipleUser\":0,\"emailId\":\"testotp@cw.com\",\r\n        \"mobileNumber\":\"9848040040\",\"address\":\"\",\"otpEnableStatus\":1,\"otp\":\"883796\",\"smsAddress\":\"CWAVES\",\r\n        \"otpMessage\":\"Successfully sent the One Time Password to your Registered Mobile Number \r\n        <br/>98**0***40 <br/> and Email <br/>t****p@cw.com.\"}}\r\n      */\r\n\t\t\tif(res.data.status==1) {\r\n        console.log(\"Register Data : \"+JSON.stringify(res.data.data));\r\n        if(res.data.data.otpEnableStatus && res.data.data.otpEnableStatus === 1) { //validate OTP\r\n          let _otpValidator = { show:true, \r\n            otpLength: res.data.data.otpLength, \r\n            smsAddress: res.data.data.smsAddress,\r\n            message: res.data.data.otpMessage,\r\n            userId: res.data.data.userId\r\n          }\r\n          this.setState({ loading: false,\r\n            otpValidator: _otpValidator,\r\n            loginUserData: res.data.data \r\n          });                         \r\n        }\r\n        else {        \r\n          // store user details in local storage to keep user logged in between page refreshes\r\n          localStorage.setItem('user', JSON.stringify(res.data.data));\r\n          this.props.history.push('/');\r\n        }\r\n      }\r\n      else if(res.data.status==0) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t  loading: false,\r\n\t\t\t\t  list: res.data.data\r\n\t\t\t\t});        \r\n\t\t\t}\r\n      else {\r\n        this.showErrorAlert(\"Somethig went wrong, Please try again later.\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n\tconst { loading } = this.state;\r\n    return (\r\n      <>\r\n      <div className=\"login\">\r\n        {\r\n          <Container fluid>\r\n            <div className=\"back\">\r\n                  <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n            </div>\r\n            <div className=\"header-image\"  style={{background: `url(${Config.cover}) no-repeat transparent`,  backgroundSize: 'cover', backgroundPosition: 'center'}}> </div>\r\n            <div className=\"main-content\">\r\n              <span className=\"gradient-text\">\r\n                <strong> Register </strong>\r\n              </span>\r\n              {loading ?  <Loader />: this.renderFormLogin()}\r\n            </div>\r\n          </Container>\r\n        }\r\n        {this.renderFooter()}\r\n      </div>\r\n      <OTPValidator data={this.state.otpValidator} \r\n                onOTPValidatorClose={this.onOTPValidatorClose} />\r\n\t\t\t</>\r\n    );\r\n  }\r\n\r\n  onOTPValidatorClose = value => {\r\n    //console.log(\"Register --> onOTPValidatorClose...\"+value);\r\n    // store user details in local storage to keep user logged in between page refreshes    \r\n    if(value===true) {\r\n      localStorage.setItem('user', JSON.stringify(this.state.loginUserData));\r\n      this.props.history.push('/');\r\n    }\r\n    else {\r\n      let _otpValidator= { show:false, \r\n        otpLength: 0, \r\n        smsAddress: null, \r\n        message:'Successfully sent the One Time Password to your Registered Mobile Number',\r\n        userId: null\r\n      }\r\n      this.setState({ otpValidator: _otpValidator }); \r\n    }      \r\n}\r\n\r\n  renderFormLogin() {\r\n    return (\r\n      <Form onSubmit={this.onSubmit} id=\"myForm\" className=\"registrationForm\">\r\n      <Form.Group>\r\n       {this.renderCard()}\r\n        <div className=\"institute-sign-in-btn\">\r\n          <input className=\"primary button-full ilearn-blue-btn button-md\" type=\"submit\" value=\"Register\" />\r\n        </div>\r\n      </Form.Group>\r\n     </Form>\r\n    );\r\n  }\r\n  \r\n  reloadCountryCodeList() {\r\n      this.setState({ loading: true }, () => {\r\n        ApiService.fetchCountries()\r\n        .then((res) => {\r\n            this.setState({\r\n              loading: false,\r\n              list2: res.data.data\r\n            });\r\n        });\r\n      });\t\r\n  }\r\n\r\n  renderCard() {\r\n    let data = this.state.list;\r\n\t  let options = this.state.list2;\r\n    let field = \"\";\r\n\t\treturn (\r\n    <div className=\"card_list\"> \r\n\t\t{\r\n        \r\n\t\t  data && data.fields.map((item, index) => {\r\n          if(item.enableStatus==1 && item.type != \"tagType\") {\r\n            if(item.type == \"select\"){\r\n              field =  <Form.Group controlId=\"exampleForm.SelectCustomSizeSm\" className=\"select\">\r\n                          <Form.Label>{item.displayName}</Form.Label>\r\n                          <Form.Control as=\"select\"  name={item.name} defaultValue={item.response} onChange={this.updateInput}>\r\n                            { item.options.map((c, i) =>\r\n                              <option value={c.id}>{c.name}</option>\r\n                            )}\r\n                          </Form.Control>\r\n                        </Form.Group>;\r\n            }\r\n            else if(item.name==\"contactNumberCountryCode\") {\r\n              field =  <div className={'item-inner'}>\r\n                          <Form.Control as=\"select\"  name={item.name} defaultValue={item.response} onChange={this.updateInput}>\r\n                            { options.map((c, i) =>\r\n                              <option value={c.countryCode} selected={c.defaultCountry}>+{c.countryCode}</option>\r\n                            )}\r\n                          </Form.Control>\r\n                        </div>;\r\n\t\t\t      }\r\n            else {\r\n               field =  <div>\r\n                          <div className={'item-inner'}>\r\n                            <Form.Control type={item.type} placeholder={item.displayName} name={item.name} value={this.state[item.name]} defaultValue={item.response} onChange={this.updateInput}/>\r\n                          </div>\r\n                          <br /> \r\n                        </div>;\r\n            }\r\n            return (\r\n              <div className={item.name}> \r\n                {field}\r\n\t\t\t\t        <div  className=\"error\"  style={item.errorMessage ? {}:{display:'none'}}>{item.errorMessage}</div>\r\n              </div> \r\n            )\r\n          }\r\n\t\t\t  })\r\n    }\r\n    </div>\r\n    );\r\n  }\r\n\r\n  renderFooter() {\r\n    return (\r\n      <div className=\"institute-cards\">\r\n        <div className=\"\">\r\n          <div className=\"institute-top-intro\">\r\n            <h6> Powered by </h6> <img src={cw_logo} alt=\"logo\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  showErrorAlert(message) {\r\n    swal({\r\n        text: message,\r\n        icon: \"warning\",\r\n        button: \"Ok\",\r\n        allowOutsideClick: false,\r\n        closeOnClickOutside: false,\r\n        closeOnEsc: false\r\n    }).then(exit => {\r\n      this.init();\r\n    });\r\n}\r\n}\r\n\r\n\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}