{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\biometric-attendance\\\\BiometricAttendance.js\";\nimport React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { connect } from \"react-redux\";\nimport \"./BiometricAttendance.css\";\nimport \"./circle.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport Card from 'react-bootstrap/Card';\nimport Loader from './../../_components/loader/loader';\nimport getBiometricAttendance from './../../_actions/bioMetricAttendanceActions';\n\nclass BiometricAttendance extends Component {\n  constructor(props) {\n    super(props);\n\n    this.routeChange = card => {\n      this.props.history.push({\n        pathname: '/bioMetricAttendance/semester',\n        state: {\n          card: card\n        }\n      });\n    };\n\n    this.state = {\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.getBiometricAttendance();\n  }\n\n  render() {\n    console.log(this.props);\n    let portlet = JSON.parse(localStorage.getItem('portlet'));\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"BiometricAttendance\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `module-header-step2 ${portlet.class ? portlet.class : 'orange-card'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: this.props.history.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, \"Biometric Attendance\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 27\n      }\n    }), loading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }\n    }) : this.renderCard()));\n  }\n\n  renderCard() {\n    var data = \"\";\n\n    if (this.props.biometricattendance.data) {\n      data = JSON.parse(this.props.biometricattendance.data);\n      console.log(data);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"attendance card_list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, this.props.biometricattendance.data && data.map((item, index) => {\n      return /*#__PURE__*/React.createElement(Card, {\n        className: `card`,\n        key: index,\n        onClick: () => this.routeChange(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cardbody\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"half\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 8\n        }\n      }, item.semesterName), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"topic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, \"Active Days \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"activecount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 55\n        }\n      }, item.totalData.activeDays)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"topic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, \"Present\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"presentcount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 50\n        }\n      }, \" \", item.totalData.presents)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"topic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, \"Absent\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"absentcount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 49\n        }\n      }, \" \", item.totalData.absent))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"half\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `c100 small green p${Math.round(item.totalData.presentPercentage)}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, item.totalData.presentPercentage, \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"slice\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"bar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 10\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"fill\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 10\n        }\n      })))))));\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  biometricattendance: state.biometricattendance.biometricattendance\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getBiometricAttendance: () => dispatch(getBiometricAttendance())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BiometricAttendance);","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/biometric-attendance/BiometricAttendance.js"],"names":["React","Component","Container","connect","FontAwesomeIcon","faArrowLeft","Card","Loader","getBiometricAttendance","BiometricAttendance","constructor","props","routeChange","card","history","push","pathname","state","loading","componentDidMount","render","console","log","portlet","JSON","parse","localStorage","getItem","class","goBack","renderCard","data","biometricattendance","map","item","index","semesterName","totalData","activeDays","presents","absent","Math","round","presentPercentage","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./BiometricAttendance.css\";\r\nimport \"./circle.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Loader from './../../_components/loader/loader';\r\nimport getBiometricAttendance from './../../_actions/bioMetricAttendanceActions';\r\n\r\nclass BiometricAttendance extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getBiometricAttendance();\r\n  }\r\n  \r\n  routeChange = (card) => {\r\n    this.props.history.push({\r\n      pathname: '/bioMetricAttendance/semester',\r\n      state: { card: card }});\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n\tlet portlet = JSON.parse(localStorage.getItem('portlet'));\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"BiometricAttendance\">\r\n        {\r\n          <Container fluid>\r\n\t\t      <div className={`module-header-step2 ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n\t\t\t\t  <div className=\"back\">\r\n\t\t\t\t\t<FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <h4>Biometric Attendance</h4>\r\n              </div><br /><br />\r\n\t\t\t  {loading ?  <Loader />: this.renderCard()}   \r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  renderCard() {\r\n\t    var data =\"\";\r\n\t\tif(this.props.biometricattendance.data){\r\n\t\t  data = JSON.parse(this.props.biometricattendance.data);\r\n\t\t  console.log(data);\r\n\t\t}\r\n\t\t\r\n\t\treturn  <div className=\"attendance card_list\"> \r\n\t\t{\r\n\t\r\n\t\t\tthis.props.biometricattendance.data && data.map((item, index) => {\r\n\t\t     return ( \r\n\t\t\t     <Card className={`card`} key={index} onClick={() =>this.routeChange(item)}>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t  <div className=\"cardbody\">\r\n\t\t\t\t\t    <div className=\"half\">\r\n\t\t\t\t\t\t\t<h4>{item.semesterName}</h4>\r\n\t\t\t\t\t\t\t<p><span className=\"topic\">Active Days </span> <span className=\"activecount\">{item.totalData.activeDays}</span></p>\r\n\t\t\t\t\t\t\t<p><span className=\"topic\">Present</span> <span className=\"presentcount\"> {item.totalData.presents}</span></p>\r\n\t\t\t\t\t\t\t<p><span className=\"topic\">Absent</span> <span className=\"absentcount\"> {item.totalData.absent}</span></p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t <div className=\"half\">\r\n\t\t\t\t\t\t   <div className={`c100 small green p${Math.round(item.totalData.presentPercentage)}`}>\r\n\t\t\t\t\t\t\t\t<span>{item.totalData.presentPercentage}%</span>\r\n\t\t\t\t\t\t\t\t<div class=\"slice\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"bar\"></div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"fill\"></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t </Card>\r\n\t\t\t  )\r\n\t\t\t})\r\n        }\r\n       </div>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  biometricattendance: state.biometricattendance.biometricattendance\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getBiometricAttendance: () => dispatch(getBiometricAttendance())\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (BiometricAttendance);\r\n"]},"metadata":{},"sourceType":"module"}