{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\test-player\\\\components\\\\Question.jsx\";\nimport React, { Component } from 'react';\nimport { QUESTION_TYPES } from \"./Types\";\nexport default class Question extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let question = this.props.question;\n    let opt = [];\n    let list_choices = [];\n    let list_matches = [];\n    let aplpha = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\n    let aplpha2 = ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W'];\n\n    if (question.questionCategory == QUESTION_TYPES[5].value) {\n      question.choices.map((option, index) => list_choices.push( /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"choiceString\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 36\n        }\n      }, option.choiceString, \". \")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: option.name\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }\n      })))));\n      question.matches.map((option, index) => list_matches.push( /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"choiceString\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 39\n        }\n      }, option.choiceString, \".\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: option.name\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 14\n        }\n      })))));\n      opt.push( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mtf_statement\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"mtf_statement_table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"mtf_statement_head\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colspan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colspan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 44\n        }\n      }, \"Column I\"))), list_choices), /*#__PURE__*/React.createElement(\"td\", {\n        colspan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colspan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 44\n        }\n      }, \"Column II\"))), list_matches)))));\n    } else {\n      question.choices.map((option, i) => opt.push( /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"optionsro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }\n      }, \"( \", option.choiceString, \" )\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        dangerouslySetInnerHTML: {\n          __html: option.name\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      })))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"test-player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"qstatement_div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"qstatement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: question.statement\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, opt))));\n  }\n\n}","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/test-player/components/Question.jsx"],"names":["React","Component","QUESTION_TYPES","Question","constructor","props","render","question","opt","list_choices","list_matches","aplpha","aplpha2","questionCategory","value","choices","map","option","index","push","choiceString","__html","name","matches","i","statement"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,cAAR,QAA6B,SAA7B;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAgC;AAC3CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACN;;AAEEC,EAAAA,MAAM,GAAE;AACV,QAAIC,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAA1B;AACM,QAAIC,GAAG,GAAE,EAAT;AACN,QAAIC,YAAY,GAAG,EAAnB;AAAuB,QAAIC,YAAY,GAAG,EAAnB;AACvB,QAAIC,MAAM,GAAI,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,CAAd;AACA,QAAIC,OAAO,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,CAAd;;AACA,QAAGL,QAAQ,CAACM,gBAAT,IAA6BX,cAAc,CAAC,CAAD,CAAd,CAAkBY,KAAlD,EAAwD;AACvDP,MAAAA,QAAQ,CAACQ,OAAT,CAAiBC,GAAjB,CAAqB,CAACC,MAAD,EAAQC,KAAR,KACpBT,YAAY,CAACU,IAAb,eAAkB;AAAI,QAAA,GAAG,EAAED,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAChB;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,MAAM,CAACG,YAAX,OAA7B,CADgB,eAEhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAK,QAAA,uBAAuB,EAAE;AAAEC,UAAAA,MAAM,EAACJ,MAAM,CAACK;AAAhB,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFgB,CAAlB,CADD;AAQAf,MAAAA,QAAQ,CAACgB,OAAT,CAAiBP,GAAjB,CAAqB,CAACC,MAAD,EAAQC,KAAR,KACpBR,YAAY,CAACS,IAAb,eAAkB;AAAI,QAAA,GAAG,EAAED,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACb;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,MAAM,CAACG,YAAX,MAA7B,CADa,eAEb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAK,QAAA,uBAAuB,EAAE;AAAEC,UAAAA,MAAM,EAACJ,MAAM,CAACK;AAAhB,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFa,CAAlB,CADD;AAQAd,MAAAA,GAAG,CAACW,IAAJ,eACC;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmB;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhB,CAAnB,CADF,EAEGV,YAFH,CADD,eAKC;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmB;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAhB,CAAnB,CADF,EAEGC,YAFH,CALD,CADA,CADD,CADD;AAiBA,KAlCD,MAkCK;AACJH,MAAAA,QAAQ,CAACQ,OAAT,CAAiBC,GAAjB,CAAqB,CAACC,MAAD,EAAQO,CAAR,KACrBhB,GAAG,CAACW,IAAJ,eAAS;AAAI,QAAA,GAAG,EAAEK,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACP;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA8BP,MAAM,CAACG,YAArC,OADO,eAEP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAK;AAAG,QAAA,uBAAuB,EAAE;AAAEC,UAAAA,MAAM,EAACJ,MAAM,CAACK;AAAhB,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL,CAFO,CAAT,CADA;AAMA;;AAED,wBACC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAG,MAAA,uBAAuB,EAAE;AAAED,QAAAA,MAAM,EAACd,QAAQ,CAACkB;AAAlB,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADD,eAIC;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEjB,GADF,CAJD,CADD,CADD,CADD;AAcG;;AApE0C","sourcesContent":["import React, {Component} from 'react';\r\nimport {QUESTION_TYPES} from \"./Types\"\r\n\r\nexport default class Question extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\t}\r\n    \r\n    render(){\r\n\t\tlet question = this.props.question;\r\n        let opt =[];\r\n\t\tlet list_choices = []; let list_matches = [];\r\n\t\tlet aplpha =  ['A','B','C','D','E','F','G','H'];\r\n\t\tlet aplpha2 = ['P','Q','R','S','T','U','V','W'];\r\n\t\tif(question.questionCategory == QUESTION_TYPES[5].value){\r\n\t\t\tquestion.choices.map((option,index) => \r\n\t\t\t\tlist_choices.push(<tr key={index}>\r\n\t\t\t\t\t\t<td className=\"choiceString\"><p>{option.choiceString}. </p></td>\r\n\t\t\t\t\t\t<td><div dangerouslySetInnerHTML={{ __html:option.name}} /></td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)\r\n\t\t\t)\r\n\r\n\t\t\tquestion.matches.map((option,index) => \r\n\t\t\t\tlist_matches.push(<tr key={index}>\r\n\t\t\t\t\t\t\t\t\t<td className=\"choiceString\"><p>{option.choiceString}.</p></td>\r\n\t\t\t\t\t\t\t\t\t<td><div dangerouslySetInnerHTML={{ __html:option.name}} /></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t)\r\n\r\n\t\t\topt.push(\r\n\t\t\t\t<div className=\"mtf_statement\">\r\n\t\t\t\t\t<table className=\"mtf_statement_table\">\r\n\t\t\t\t\t<tr className=\"mtf_statement_head\">\r\n\t\t\t\t\t\t<td colspan=\"2\">\r\n\t\t\t\t\t\t\t\t<tr align=\"center\"><td colspan=\"2\"><b>Column I</b></td></tr>\r\n\t\t\t\t\t\t\t\t{list_choices}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td colspan=\"2\">\r\n\t\t\t\t\t\t\t\t<tr align=\"center\"><td colspan=\"2\"><b>Column II</b></td></tr>\r\n\t\t\t\t\t\t\t\t{list_matches}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tquestion.choices.map((option,i) => \r\n\t\t\topt.push(<li key={i}>\r\n\t\t\t\t\t<div className=\"optionsro\">( {option.choiceString} )</div>\r\n\t\t\t\t\t<div><p dangerouslySetInnerHTML={{ __html:option.name}}></p></div>\r\n\t\t\t\t</li>)\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"test-player\">\r\n\t\t\t\t<div className=\"qstatement_div\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div id=\"qstatement\">\r\n\t\t\t\t\t\t<p dangerouslySetInnerHTML={{ __html:question.statement}}></p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<ul className=\"options\">\r\n\t\t\t\t\t\t\t{opt}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}