{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\login\\\\Resetpwd.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { resetpwd } from './../../_actions/userActions';\nimport Container from \"react-bootstrap/Container\";\nimport \"./Login.css\";\nimport cw_logo from \"./images/cw_logo.png\";\nimport Form from \"react-bootstrap/Form\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport Config from \"../../_config/config\";\nimport Parser from 'html-react-parser';\n\nclass Resetpwd extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      newPassword: '',\n      confirmPassword: '',\n      submitted: false,\n      user: null\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  routeChange(path) {\n    this.props.history.push(path);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    let {\n      newPassword,\n      confirmPassword\n    } = this.state;\n\n    if (newPassword && confirmPassword) {\n      if (newPassword != confirmPassword) {\n        this.setState({\n          message: \"Password and confirm Password must be same.\"\n        });\n      } else {\n        let userName = this.props.location.state.otp.userName;\n        this.props.resetpwd(userName, newPassword, confirmPassword);\n        this.setState({\n          message: \"\"\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: () => this.routeChange('/login'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-image\",\n      style: {\n        background: `url(${Config.cover}) no-repeat transparent`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"gradient-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \" Reset Password \")), this.renderFormLogin())), this.renderFooter());\n  }\n\n  renderFormLogin() {\n    console.log(this.props);\n    let {\n      newPassword,\n      confirmPassword,\n      submitted\n    } = this.state;\n    let {\n      user\n    } = this.props;\n\n    if (user.user.status == 1) {\n      this.props.history.push('/login');\n    }\n\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'item-inner',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"userName\",\n      editable: false,\n      defaultValue: this.props.location.state.otp.userName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'item-inner' + (submitted && !newPassword ? ' has-error' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"New Password\",\n      name: \"newPassword\",\n      onChange: e => this.setState({\n        newPassword: e.target.value\n      }),\n      value: newPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'item-inner' + (submitted && !confirmPassword ? ' has-error' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      name: \"confirmPassword\",\n      onChange: e => this.setState({\n        confirmPassword: e.target.value\n      }),\n      value: confirmPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"institute-sign-in-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"primary button-full ilearn-blue-btn button-md\",\n      type: \"submit\",\n      value: \"CHANGE PASSWORD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    })), user.user.messag && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, Parser(user.user.messag)), this.state.message && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    }, Parser(this.state.message))));\n  }\n\n  renderFooter() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"institute-cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"institute-top-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \" Powered by \"), \" \", /*#__PURE__*/React.createElement(\"img\", {\n      src: cw_logo,\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 35\n      }\n    }))));\n  }\n\n}\n\nfunction mapState(state) {\n  return {\n    user: state.user\n  };\n}\n\nconst actionCreators = {\n  resetpwd: resetpwd\n};\nexport default connect(mapState, actionCreators)(Resetpwd);","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/login/Resetpwd.js"],"names":["React","Component","connect","resetpwd","Container","cw_logo","Form","FontAwesomeIcon","faArrowLeft","Config","Parser","Resetpwd","constructor","props","state","username","newPassword","confirmPassword","submitted","user","onSubmit","bind","routeChange","path","history","push","e","preventDefault","setState","message","userName","location","otp","render","background","cover","backgroundSize","backgroundPosition","renderFormLogin","renderFooter","console","log","status","target","value","messag","mapState","actionCreators"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { resetpwd } from './../../_actions/userActions';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"./Login.css\";\r\nimport cw_logo from \"./images/cw_logo.png\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons';\r\nimport Config from \"../../_config/config\";\r\nimport Parser from 'html-react-parser';\r\n\r\nclass Resetpwd extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n\t    newPassword: '',\r\n      confirmPassword: '',\r\n      submitted: false,\r\n      user: null\r\n    };\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.setState({ submitted: true });\r\n    let { newPassword, confirmPassword } = this.state;\r\n    if (newPassword && confirmPassword) {\r\n\t  if(newPassword != confirmPassword){\r\n        this.setState({ message: \"Password and confirm Password must be same.\"});\r\n      }else{\r\n\t\tlet userName = this.props.location.state.otp.userName;\r\n\t    this.props.resetpwd(userName, newPassword, confirmPassword);\r\n        this.setState({ message: \"\"});\r\n\t  }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"login\">\r\n        {\r\n          <Container fluid>\r\n            <div className=\"back\">\r\n                  <FontAwesomeIcon icon={ faArrowLeft } onClick={() => this.routeChange('/login')} />\r\n            </div>\r\n            <div className=\"header-image\" style={{background: `url(${Config.cover}) no-repeat transparent`,  backgroundSize: 'cover', backgroundPosition: 'center'}}>\r\n            </div>\r\n            <div className=\"main-content\">\r\n              <span className=\"gradient-text\">\r\n                <strong> Reset Password </strong>\r\n              </span>\r\n              {this.renderFormLogin()}\r\n            </div>\r\n          </Container>\r\n        }\r\n        {this.renderFooter()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFormLogin() {\r\n    console.log(this.props);\r\n    let {newPassword, confirmPassword, submitted} = this.state;\r\n    let {user} = this.props;\r\n\tif(user.user.status == 1){\r\n\t\tthis.props.history.push('/login');\r\n\t}\r\n\t\r\n    return (\r\n      <Form onSubmit={this.onSubmit}>\r\n      <Form.Group>\r\n        <div className={'item-inner'}>\r\n          <Form.Control type=\"text\" name=\"userName\" editable={false} defaultValue={this.props.location.state.otp.userName} />\r\n        </div>\r\n        <br />\r\n        <div className={'item-inner' + (submitted && !newPassword ? ' has-error' : '')}>\r\n          <Form.Control type=\"password\" placeholder=\"New Password\" name=\"newPassword\" onChange={e => this.setState({newPassword: e.target.value})} value={newPassword} />\r\n        </div>\r\n        <br />\r\n        <div className={'item-inner' + (submitted && !confirmPassword ? ' has-error' : '')}>\r\n          <Form.Control type=\"password\" placeholder=\"Confirm Password\" name=\"confirmPassword\" onChange={e => this.setState({confirmPassword: e.target.value})} value={confirmPassword} />\r\n        </div>\r\n        <div className=\"institute-sign-in-btn\">\r\n          <input className=\"primary button-full ilearn-blue-btn button-md\" type=\"submit\" value=\"CHANGE PASSWORD\" />\r\n        </div>\r\n\t\t{ user.user.messag && <div className=\"red\">{Parser(user.user.messag)}</div>}\r\n        { this.state.message && <div className=\"red\">{Parser(this.state.message)}</div>}\r\n      </Form.Group>\r\n     </Form>\r\n    );\r\n  }\r\n\r\n\r\n  renderFooter() {\r\n    return (\r\n      <div className=\"institute-cards\">\r\n        <div className=\"\">\r\n          <div className=\"institute-top-intro\">\r\n            <h6> Powered by </h6> <img src={cw_logo} alt=\"logo\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  return {\r\n    user : state.user\r\n  };\r\n}\r\n\r\nconst actionCreators = {\r\n  resetpwd: resetpwd,\r\n};\r\n\r\nexport default connect(mapState, actionCreators)(Resetpwd);\r\n"]},"metadata":{},"sourceType":"module"}