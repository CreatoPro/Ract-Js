{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\learning\\\\LearningSteps.js\";\nimport React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Config from '../../_config/config';\nimport \"./Learning.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faArrowRight, faThLarge, faThList, faDesktop, faBook, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport Card from 'react-bootstrap/Card';\nimport ApiService from \"../../_services/ApiService\";\nimport Loader from './../../_components/loader/loader';\nimport Accordion from 'react-bootstrap/Accordion';\nimport ico_text_format from \"./images/ico_text-format.svg\";\nimport ico_test from \"./images/ico_test.svg\";\nimport swal from 'sweetalert';\nimport Notes from \"./components/Notes\";\nimport NotesForwarding from \"./components/notes-forwarding.component\";\nimport { StudyResourceType } from \"../../_constants/studyResourceTypes\";\n\nclass LearningSteps extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n      message: null,\n      loading: false,\n      view: \"grid\",\n      title: \"\",\n      notes: false,\n      lock: false\n    };\n    this.reloadLearningStepsList = this.reloadLearningStepsList.bind(this);\n    this.resumeLearningActivity = this.resumeLearningActivity.bind(this);\n  }\n\n  componentDidMount() {\n    var _this$props, _this$props$match, _this$props$match$par, _this$props2;\n\n    this.setState({\n      learnId: ((_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$match = _this$props.match) === null || _this$props$match === void 0 ? void 0 : (_this$props$match$par = _this$props$match.params) === null || _this$props$match$par === void 0 ? void 0 : _this$props$match$par.id) || this.props.learnId,\n      lock: (_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : _this$props2.lock\n    });\n    this.reloadLearningStepsList();\n  }\n\n  changeView(view) {\n    this.setState({\n      view: view\n    });\n  }\n\n  reloadLearningStepsList() {\n    let that = this;\n    this.setState({\n      loading: true\n    }, () => {\n      ApiService.fetchLearningStepsDesktop(this.state.learnId).then(res => {\n        this.setState({\n          loading: false,\n          list: res.data.groups,\n          title: res.data.name\n        });\n        let visit = localStorage.getItem('firstVisit') || false;\n\n        if (visit == \"true\" && that.state.lock != true) {\n          setTimeout(function () {\n            that.resumeLearningActivity();\n          }, 500);\n        }\n      });\n    });\n  }\n\n  resumeLearningActivity() {\n    ApiService.resumeStudyResourcesLearningActivity(this.state.learnId).then(res => {\n      if (res.data.id) {\n        swal({\n          title: \"Resume Confirmation\",\n          text: \"Would you like to resume from where you last left ?\",\n          dangerMode: true,\n          buttons: true,\n          className: 'blue-card'\n        }).then(willResume => {\n          if (willResume) {\n            let stepid = this.state.list[res.data.groupIndex].steps[res.data.stepIndex].id;\n            this.props.history.push({\n              pathname: '/lesson/steps/attachments/' + stepid + '/details/' + res.data.id,\n              state: {\n                groupIndex: res.data.groupIndex,\n                stepIndex: res.data.stepIndex,\n                lessonPlanId: this.state.learnId\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  routeChange(path, groupIndex, stepIndex) {\n    var learnId = this.state.learnId;\n    this.props.history.push({\n      pathname: path,\n      state: {\n        groupIndex: groupIndex,\n        stepIndex: stepIndex,\n        lessonPlanId: learnId\n      }\n    });\n  }\n\n  showNotes(status) {\n    this.setState({\n      notes: status\n    });\n  }\n\n  downloadTest(testid) {\n    window.open('/TestInstructions/' + testid + '?lms=' + this.state.learnId, \"Start Test\", 'height=' + window.screen.height + ',width=' + window.screen.width);\n  }\n\n  toggleActive(id) {\n    this.setState({\n      activeId: id\n    });\n  }\n\n  render() {\n    var _this$props3, _this$props3$location;\n\n    const {\n      loading\n    } = this.state;\n    let portlet = JSON.parse(localStorage.getItem('portlet'));\n    var deafult_cover_img = \"https://tuningfork-testing.s3.amazonaws.com/triangles%5Cuploads/study_resource/lessonPlan/photos%5C242.jpg\";\n    var courseImg = (_this$props3 = this.props) !== null && _this$props3 !== void 0 && (_this$props3$location = _this$props3.location) !== null && _this$props3$location !== void 0 && _this$props3$location.state ? this.props.location.state.card.icon : \"\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"LearningSteps\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, this.state.lock != true ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-header courseView\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `module-header-step2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: () => this.routeChange('/lessonPlan/15/' + portlet.params.resourceSubTypeId + '/Learning Modules'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, this.state.title && this.state.title), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: this.state.view === 'grid' ? \"active list_grid_view\" : \"list_grid_view\",\n      icon: faThLarge,\n      onClick: () => this.changeView('grid'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: this.state.view === 'list' ? \"active list_grid_view\" : \"list_grid_view\",\n      icon: faThList,\n      onClick: () => this.changeView('list'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }))) : \"\", /*#__PURE__*/React.createElement(\"figure\", {\n      className: \"mobile_course_image\",\n      style: {\n        background: ' linear-gradient(to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0) 59%, rgba(255, 255, 255, 0.65) 100%), url(' + courseImg + ') center center repeat, url(' + deafult_cover_img + ') center center repeat'\n      },\n      id: \"sticky_img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }), loading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"mobile_course\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"headTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 23\n      }\n    }, this.state.title && this.state.title), this.state.lock != true ? this.state.notes ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"MynotesClose\",\n      icon: faTimesCircle,\n      onClick: () => this.showNotes(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"Mynotes\",\n      icon: faBook,\n      onClick: () => this.showNotes(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 135\n      }\n    }) : \"\"), this.state.notes ? /*#__PURE__*/React.createElement(NotesForwarding, {\n      id: this.state.learnId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 26\n      }\n    }) : this.state.view === 'list' ? this.renderList() : this.renderGrid()))\n    /*: : this.state.view === 'grid'? \r\n    <Container>\r\n      <div class=\"mobile_course\">\r\n        <div className=\"headTitle\">\r\n          <h1>{this.state.title && this.state.title}</h1> \r\n          {  \r\n            this.state.notes ? \r\n            <FontAwesomeIcon className=\"MynotesClose\" icon={ faTimesCircle } onClick={() => this.showNotes(false) }  /> : <FontAwesomeIcon className=\"Mynotes\" icon={ faBook } onClick={() => this.showNotes(true) } /> \r\n          }\r\n        </div>\r\n        {this.state.notes ? <Notes id={this.state.learnId} /> : this.renderGrid() }                    \r\n      </div> \r\n    </Container>\r\n    \r\n    <>\r\n      <Container>\r\n        <div class=\"mobile_course\">  \r\n          <div className=\"headTitle\">\r\n            <h1>{this.state.title && this.state.title}</h1> \r\n            {  \r\n              this.state.notes ? \r\n              <FontAwesomeIcon className=\"MynotesClose\" icon={ faTimesCircle } onClick={() => this.showNotes(false) }  /> : <FontAwesomeIcon className=\"Mynotes\" icon={ faBook } onClick={() => this.showNotes(true) } /> \r\n            }\r\n          </div>\r\n        </div>\r\n        {this.state.notes ? <Notes id={this.state.learnId} /> : '' }  \r\n      </Container>\r\n      { this.state.notes ? '' : this.renderDesktop()}\r\n    </>*/\n    ));\n  }\n\n  renderList() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list card_list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    }, this.state.list.sort((a, b) => a.sortOrder - b.sortOrder).map((item, index) => {\n      if (item.groupTitle == \"nogroup\") {\n        item.groupTitle = \"\";\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        class: \"text_blue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }\n      }, item.name), /*#__PURE__*/React.createElement(Card, {\n        className: \"no_border_lrt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cardbody\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }\n      }, item.steps.sort((a, b) => a.sortOrder - b.sortOrder).map((s, i) => {\n        var status = 1;\n\n        if (s.startDate) {\n          status = this.checkDateStatus(s.startDate, s.endDate);\n        }\n\n        return status == 1 ? /*#__PURE__*/React.createElement(\"p\", {\n          className: \"option\",\n          \"data-group\": index,\n          \"data-step\": i,\n          onClick: () => this.routeChange('/lesson/steps/attachments/' + s.id + '/' + s.name.replace(/\\//g, \" \"), index, i),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 36\n          }\n        }, s.name, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faArrowRight,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 44\n          }\n        })) : /*#__PURE__*/React.createElement(\"p\", {\n          className: \"option\",\n          \"data-group\": index,\n          \"data-step\": i,\n          onClick: () => this.showAlert(status, s.startDate, s.endDate),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 33\n          }\n        }, s.name, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          icon: faArrowRight,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 44\n          }\n        }));\n      })))));\n    }));\n  }\n\n  renderGrid() {\n    return /*#__PURE__*/React.createElement(Accordion, {\n      className: \"grid accordion\",\n      defaultActiveKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }\n    }, this.state.list.sort((a, b) => a.sortOrder - b.sortOrder).map((item, index) => {\n      if (item.groupTitle == \"nogroup\") {\n        item.groupTitle = \"\";\n      }\n\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-10 col-sm-10 border-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"head-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 31\n        }\n      }, item.name, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2 col-sm-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 27\n        }\n      }, this.state.lock === true ? /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        className: \"lock float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 31\n        }\n      }) : /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Button,\n        onClick: () => this.toggleActive(index),\n        variant: \"link\",\n        eventKey: index + 1,\n        className: this.state.activeId == index ? 'arrow float-right' : 'arrow collapsed float-right',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 30\n        }\n      })))), this.renderSubsections(item, index + 1));\n    }));\n  }\n  /*renderDesktop() { \r\n    let user = JSON.parse(localStorage.getItem('user')) || [];\r\n    var url = Config.siteUrl+ 'studentportal/studentPortal.do?reqCode=fetchLessonPlanSteps&lessonPlan='+this.state.learnId+'&token='+ user.token;\r\n    return <iframe  class=\"iframe100\" width=\"100%\" title=\"My Programs\" src={url}></iframe>;\r\n  }*/\n\n\n  renderSubsections(section, groupIndex) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: groupIndex,\n      className: this.state.list.length == 1 ? 'show' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"step3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    }, section.steps.sort((a, b) => a.sortOrder - b.sortOrder).map((s, stepIndex) => {\n      var status = 1;\n\n      if (s.startDate) {\n        status = this.checkDateStatus(s.startDate, s.endDate);\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"text_blue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 33\n        }\n      }, s.name), this.renderResources(s.id, s.resources, groupIndex, stepIndex, status, s.startDate, s.endDate));\n    })))));\n  }\n\n  renderResources(sid, resources, groupIndex, stepIndex, status, startDate, endDate) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, resources.sort((a, b) => a.sortOrder - b.sortOrder).map((r, index) => {\n      if (r.type == \"test\") {\n        var button;\n\n        if (r.status == \"Launch\") {\n          var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\n\n          if (oldTests.filter(test => test.id == r.id).length == 0) {\n            button = /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => this.downloadTest(r.id),\n              className: \"download blue-card launch\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 31\n              }\n            }, \"Launch\");\n          } else {\n            button = /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => this.downloadTest(r.id),\n              className: \"download blue-card launch\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 31\n              }\n            }, \"Launch\");\n          }\n        } else if (r.status == \"Time Out\") {\n          button = /*#__PURE__*/React.createElement(\"button\", {\n            className: \"download blue-light-card\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 27\n            }\n          }, r.status);\n        } else if (r.status == \"View Result\") {\n          button = /*#__PURE__*/React.createElement(\"button\", {\n            onClick: () => this.routeChange('/test-result/' + this.state.learnId + '/' + r.id),\n            className: \"download green-card\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 27\n            }\n          }, r.status);\n        } else {\n          var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\n\n          if (oldTests.filter(test => test.id == r.id).length == 0) {\n            button = /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => this.downloadTest(r.id),\n              className: \"download blue-card launch\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 31\n              }\n            }, \"Launch\");\n          } else {\n            button = /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => this.downloadTest(r.id),\n              className: \"download blue-card launch\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 31\n              }\n            }, \"Launch\");\n          }\n        }\n\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: ico_test,\n          className: \"icon\",\n          alt: \"text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 23\n          }\n        }), r.name, button);\n      } else {\n        return status == 1 ? /*#__PURE__*/React.createElement(\"li\", {\n          key: index,\n          onClick: () => this.displayStudyResource(r, '/lesson/steps/attachments/' + sid + '/details/' + r.id, groupIndex - 1, stepIndex, index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: ico_text_format,\n          className: \"icon\",\n          alt: \"text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }\n        }), r.name) : /*#__PURE__*/React.createElement(\"li\", {\n          key: index,\n          onClick: () => this.showAlert(status, startDate, endDate),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: ico_text_format,\n          className: \"icon\",\n          alt: \"text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 25\n          }\n        }), r.name);\n      }\n    }));\n  }\n\n  displayStudyResource(studyResource, path, groupIndex, stepIndex, resourceIndex) {\n    let _path = '';\n    let data = {\n      studyResource: studyResource\n    };\n\n    if (parseInt(studyResource.studyResourceType) === StudyResourceType.FEEDBACK_FORM) {\n      _path = '/feedback/form/' + studyResource.id;\n      this.props.history.push({\n        pathname: _path,\n        state: data\n      });\n    } else {\n      this.props.history.push({\n        pathname: path,\n        state: {\n          groupIndex: groupIndex,\n          stepIndex: stepIndex,\n          resourceIndex: resourceIndex,\n          lessonPlanId: this.state.learnId\n        }\n      });\n    }\n  }\n\n  checkDateStatus(startDate, endDate) {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0');\n    var yyyy = today.getFullYear();\n    today = mm + '/' + dd + '/' + yyyy;\n\n    if (startDate && endDate) {\n      var startdatearray = startDate.split(\"/\");\n      var startDate = startdatearray[1] + '/' + startdatearray[0] + '/' + '20' + startdatearray[2];\n      var enddatearray = endDate.split(\"/\");\n      var endDate = enddatearray[1] + '/' + enddatearray[0] + '/' + '20' + enddatearray[2];\n      return this.dateCheck(startDate, endDate, today);\n    } else if (startDate) {\n      var startdatearray = startDate.split(\"/\");\n      var startDate = startdatearray[1] + '/' + startdatearray[0] + '/' + '20' + startdatearray[2];\n      return this.dateCompare(startDate, today);\n    }\n  }\n\n  dateCheck(from, to, today) {\n    var fDate, lDate, cDate;\n    fDate = Date.parse(from);\n    lDate = Date.parse(to);\n    cDate = Date.parse(today);\n\n    if (cDate <= lDate && cDate >= fDate) {\n      return 1;\n    } else {\n      return this.dateCompare(from, today);\n    }\n  }\n\n  dateCompare(d1, d2) {\n    const date1 = new Date(d1);\n    const date2 = new Date(d2);\n\n    if (date1 > date2) {\n      return 2;\n    } else if (date1 < date2) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  showAlert(status, startDate, endDate) {\n    swal({\n      title: \"Alert\",\n      text: status ? \"This content is not yet Activated for you. You can access it on \" + startDate : \"This content is no longer available for you. Your access to it has expired on \" + endDate,\n      dangerMode: true,\n      buttons: true,\n      className: 'blue-card'\n    }).then(willResume => {\n      if (willResume) {}\n    });\n  }\n\n}\n\nexport default LearningSteps;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/learning/LearningSteps.js"],"names":["React","Component","Container","Button","Config","FontAwesomeIcon","faArrowLeft","faArrowRight","faThLarge","faThList","faDesktop","faBook","faTimesCircle","Card","ApiService","Loader","Accordion","swal","Notes","NotesForwarding","StudyResourceType","LearningSteps","constructor","props","state","list","message","loading","view","title","notes","lock","reloadLearningStepsList","bind","resumeLearningActivity","componentDidMount","setState","learnId","match","params","id","changeView","that","fetchLearningStepsDesktop","then","res","data","groups","name","visit","localStorage","getItem","setTimeout","resumeStudyResourcesLearningActivity","text","dangerMode","buttons","className","willResume","stepid","groupIndex","steps","stepIndex","history","push","pathname","lessonPlanId","routeChange","path","showNotes","status","downloadTest","testid","window","open","screen","height","width","toggleActive","activeId","render","portlet","JSON","parse","deafult_cover_img","courseImg","location","card","icon","resourceSubTypeId","background","renderList","renderGrid","sort","a","b","sortOrder","map","item","index","groupTitle","s","i","startDate","checkDateStatus","endDate","replace","showAlert","renderSubsections","section","length","renderResources","resources","sid","r","type","button","oldTests","filter","test","ico_test","displayStudyResource","ico_text_format","studyResource","resourceIndex","_path","parseInt","studyResourceType","FEEDBACK_FORM","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","startdatearray","split","enddatearray","dateCheck","dateCompare","from","to","fDate","lDate","cDate","d1","d2","date1","date2"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Config from '../../_config/config'\r\nimport \"./Learning.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft,faArrowRight,faThLarge,faThList, faDesktop, faBook, faTimesCircle  } from '@fortawesome/free-solid-svg-icons';\r\nimport Card from 'react-bootstrap/Card'\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Loader from './../../_components/loader/loader';\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport ico_text_format from \"./images/ico_text-format.svg\";\r\nimport ico_test from \"./images/ico_test.svg\";\r\nimport swal from 'sweetalert';\r\nimport Notes from \"./components/Notes\";\r\nimport NotesForwarding from \"./components/notes-forwarding.component\";\r\nimport { StudyResourceType } from \"../../_constants/studyResourceTypes\";\r\n\r\nclass LearningSteps extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      message: null,\r\n      loading: false,\r\n      view: \"grid\",\r\n      title:\"\",\r\n      notes:false,\r\n      lock:false\r\n    };\r\n    this.reloadLearningStepsList = this.reloadLearningStepsList.bind(this);\r\n    this.resumeLearningActivity = this.resumeLearningActivity.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n    this.setState({\r\n      learnId: this.props?.match?.params?.id || this.props.learnId ,\r\n      lock: this.props?.lock\r\n    });\r\n    this.reloadLearningStepsList();\r\n  }\r\n\r\n  changeView(view) {\r\n    this.setState({view: view});    \r\n  }\r\n\r\n  reloadLearningStepsList() {\r\n    let that = this;\r\n    this.setState({ loading: true }, () => {\r\n      ApiService.fetchLearningStepsDesktop(this.state.learnId)\r\n      .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n            list: res.data.groups,\r\n            title: res.data.name\r\n          });\r\n          let visit = localStorage.getItem('firstVisit') || false;\r\n          if(visit==\"true\" && that.state.lock != true){\r\n            setTimeout(function() {\r\n              that.resumeLearningActivity();\r\n            }, 500);\r\n          }\r\n      });\r\n    });\t\r\n  }\r\n\r\n  resumeLearningActivity(){\r\n      ApiService.resumeStudyResourcesLearningActivity(this.state.learnId)\r\n      .then((res) => {\r\n        if(res.data.id){\r\n          swal({\r\n            title: \"Resume Confirmation\",\r\n            text: \"Would you like to resume from where you last left ?\",\r\n            dangerMode: true,\r\n            buttons: true,\r\n            className: 'blue-card'\r\n          })\r\n          .then((willResume) => {\r\n            if (willResume) {\r\n              let stepid = this.state.list[res.data.groupIndex].steps[res.data.stepIndex].id;\r\n              this.props.history.push({\r\n                pathname: '/lesson/steps/attachments/'+stepid+'/details/'+res.data.id,\r\n                state: { groupIndex: res.data.groupIndex,stepIndex: res.data.stepIndex, lessonPlanId:this.state.learnId }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\t\r\n  }\r\n\r\n  routeChange(path,groupIndex,stepIndex) {\r\n    var learnId = this.state.learnId;\r\n    this.props.history.push({\r\n      pathname: path,\r\n      state: { groupIndex: groupIndex,stepIndex: stepIndex, lessonPlanId: learnId }\r\n    });\r\n  }\r\n\r\n  showNotes(status){\r\n    this.setState({\r\n      notes: status\r\n    });\r\n  }\r\n\r\n\r\n  downloadTest(testid) {\r\n      window.open('/TestInstructions/'+testid+'?lms='+this.state.learnId, \"Start Test\", 'height=' + window.screen.height + ',width=' + window.screen.width);    \r\n  }\r\n\r\n  toggleActive(id) {\r\n    this.setState({activeId: id});\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    let portlet = JSON.parse(localStorage.getItem('portlet'));\r\n    var deafult_cover_img = \"https://tuningfork-testing.s3.amazonaws.com/triangles%5Cuploads/study_resource/lessonPlan/photos%5C242.jpg\";\r\n    var courseImg = this.props?.location?.state ? this.props.location.state.card.icon : \"\";\r\n    return (\r\n      <div className=\"LearningSteps\">\r\n        {\r\n          <Container fluid>\r\n               { \r\n               this.state.lock != true ?\r\n              <div className=\"module-header courseView\">\r\n                <div className={`module-header-step2`}>\r\n                <div className=\"back\">  \r\n                  <FontAwesomeIcon icon={ faArrowLeft } onClick={() => this.routeChange('/lessonPlan/15/'+portlet.params.resourceSubTypeId+'/Learning Modules') } />\r\n                </div>\r\n                <h4>{this.state.title && this.state.title}</h4> \r\n                <FontAwesomeIcon className={this.state.view === 'grid' ? \"active list_grid_view\": \"list_grid_view\"} icon={ faThLarge } onClick={() => this.changeView('grid')} />\r\n                <FontAwesomeIcon className={this.state.view === 'list' ? \"active list_grid_view\": \"list_grid_view\"} icon={ faThList }  onClick={() => this.changeView('list')} /> \r\n                {/*<FontAwesomeIcon className={this.state.view === 'desktop' ? \"active list_grid_view\": \"list_grid_view\"} icon={ faDesktop }  onClick={() => this.changeView('desktop')} />*/}\r\n                </div>\r\n              </div> : \"\"\r\n              }\r\n              <figure className=\"mobile_course_image\" \r\n                style={{ background: ' linear-gradient(to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0) 59%, rgba(255, 255, 255, 0.65) 100%), url('+courseImg+') center center repeat, url('+deafult_cover_img+') center center repeat' }} id=\"sticky_img\" \r\n            />\r\n            {  \r\n                loading ? <Loader />: \r\n                <Container>\r\n                <div class=\"mobile_course\">\r\n                    <div className=\"headTitle\">\r\n                      <h1>{this.state.title && this.state.title}</h1> \r\n                      {  \r\n                        this.state.lock != true ?\r\n                        this.state.notes ? \r\n                        <FontAwesomeIcon className=\"MynotesClose\" icon={ faTimesCircle } onClick={() => this.showNotes(false) }  /> : <FontAwesomeIcon className=\"Mynotes\" icon={ faBook } onClick={() => this.showNotes(true) } /> \r\n                        : \"\"\r\n                      }\r\n                    </div>\r\n                    {  \r\n                        this.state.notes ? \r\n                         <NotesForwarding id={this.state.learnId} /> \r\n                         : this.state.view === 'list'? this.renderList() \r\n                         : this.renderGrid() \r\n                    }\r\n                </div> \r\n                </Container>\r\n                /*: : this.state.view === 'grid'? \r\n                <Container>\r\n                  <div class=\"mobile_course\">\r\n                    <div className=\"headTitle\">\r\n                      <h1>{this.state.title && this.state.title}</h1> \r\n                      {  \r\n                        this.state.notes ? \r\n                        <FontAwesomeIcon className=\"MynotesClose\" icon={ faTimesCircle } onClick={() => this.showNotes(false) }  /> : <FontAwesomeIcon className=\"Mynotes\" icon={ faBook } onClick={() => this.showNotes(true) } /> \r\n                      }\r\n                    </div>\r\n                    {this.state.notes ? <Notes id={this.state.learnId} /> : this.renderGrid() }                    \r\n                  </div> \r\n                </Container>\r\n                \r\n                <>\r\n                  <Container>\r\n                    <div class=\"mobile_course\">  \r\n                      <div className=\"headTitle\">\r\n                        <h1>{this.state.title && this.state.title}</h1> \r\n                        {  \r\n                          this.state.notes ? \r\n                          <FontAwesomeIcon className=\"MynotesClose\" icon={ faTimesCircle } onClick={() => this.showNotes(false) }  /> : <FontAwesomeIcon className=\"Mynotes\" icon={ faBook } onClick={() => this.showNotes(true) } /> \r\n                        }\r\n                      </div>\r\n                    </div>\r\n                    {this.state.notes ? <Notes id={this.state.learnId} /> : '' }  \r\n                  </Container>\r\n                  { this.state.notes ? '' : this.renderDesktop()}\r\n                </>*/\r\n            }\r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderList() {\r\n\t\treturn  <div className=\"list card_list\"> \r\n\t\t{\r\n      this.state.list.sort((a, b) => a.sortOrder - b.sortOrder)\r\n      .map((item, index) => {\r\n\t\t    if(item.groupTitle ==\"nogroup\"){\r\n\t\t\t\t  item.groupTitle =\"\";\r\n\t\t\t  }\r\n        return (\r\n          <div key={index}>  \r\n              <h4 class=\"text_blue\">{item.name}</h4>\r\n              <Card className=\"no_border_lrt\"> \r\n                  <Card.Body>\r\n                    <div className=\"cardbody\">\r\n                      { \r\n                        item.steps.sort((a, b) => a.sortOrder - b.sortOrder)\r\n                        .map((s, i) =>\r\n                        {\r\n                          var status = 1;\r\n                          if(s.startDate){\r\n                             status = this.checkDateStatus(s.startDate,s.endDate);     \r\n                          }                                                                          \r\n                          return ( \r\n                                status == 1 ?\r\n                                   <p className=\"option\" data-group={index} data-step={i} onClick={() => this.routeChange('/lesson/steps/attachments/' + s.id + '/'+ s.name.replace(/\\//g, \" \"),index,i)}>\r\n                                  {s.name} <FontAwesomeIcon icon={ faArrowRight }  />\r\n                                   </p>\r\n                                :\r\n                                <p className=\"option\" data-group={index} data-step={i} onClick={() => this.showAlert(status, s.startDate, s.endDate)}>\r\n                                  {s.name} <FontAwesomeIcon icon={ faArrowRight }  />\r\n                                </p>\r\n\r\n                          )\r\n                        }\r\n                        )\r\n                      }\r\n                    </div>\r\n                  </Card.Body>\r\n              </Card>\r\n          </div> \t\r\n        )\r\n      })\r\n    }\r\n    </div>\r\n  }\r\n\r\n  renderGrid() {\r\n    \r\n\t\treturn  <Accordion className=\"grid accordion\" defaultActiveKey=\"0\">\r\n\t\t{\r\n      this.state.list.sort((a, b) => a.sortOrder - b.sortOrder)\r\n      .map((item, index) => {\r\n\t\t    if(item.groupTitle ==\"nogroup\"){\r\n\t\t\t\t    item.groupTitle =\"\";\r\n\t\t\t  }\r\n\t\t\t  return (\r\n              <li className=\"card\">\r\n                  <div className=\"card-header\">\r\n                      <div className=\"row\">\r\n                          <div className=\"col-10 col-sm-10 border-right\">\r\n                              <span className=\"head-title\">{item.name} </span> \r\n                          </div> \r\n                          <div className=\"col-2 col-sm-2\">\r\n                            {\r\n                              this.state.lock === true ?\r\n                              <Accordion.Toggle as={Button} variant=\"link\" className='lock float-right'></Accordion.Toggle>\r\n                             :\r\n                             <Accordion.Toggle as={Button} onClick={() => this.toggleActive(index)} variant=\"link\" eventKey={index+1} className={this.state.activeId == index ? 'arrow float-right' : 'arrow collapsed float-right'}>\r\n                             </Accordion.Toggle>\r\n                            }\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                  {this.renderSubsections(item, index+1)}\r\n              </li>) \t\r\n      })\r\n    }\r\n    </Accordion>\r\n  }\r\n\r\n  /*renderDesktop() { \r\n    let user = JSON.parse(localStorage.getItem('user')) || [];\r\n    var url = Config.siteUrl+ 'studentportal/studentPortal.do?reqCode=fetchLessonPlanSteps&lessonPlan='+this.state.learnId+'&token='+ user.token;\r\n    return <iframe  class=\"iframe100\" width=\"100%\" title=\"My Programs\" src={url}></iframe>;\r\n  }*/\r\n\r\n  renderSubsections(section, groupIndex) {\r\n\r\n    return (\r\n        <>\r\n        <Accordion.Collapse eventKey={groupIndex} className={this.state.list.length==1 ? 'show' : '' }>\r\n            <div className=\"card-body\">\r\n                <ul className=\"step3\">\r\n                    {\r\n                    section.steps.sort((a, b) => a.sortOrder - b.sortOrder).map((s, stepIndex) => {\r\n                        \r\n                        var status = 1;\r\n                        if(s.startDate){\r\n                          status = this.checkDateStatus(s.startDate,s.endDate);     \r\n                        }\r\n\r\n                        return ( \r\n                              <>\r\n                                <h5 className=\"text_blue\">{s.name}</h5>\r\n                                 { this.renderResources(s.id,s.resources,groupIndex, stepIndex, status, s.startDate, s.endDate) }\r\n                              </>\r\n                        )\r\n                    })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </Accordion.Collapse>\r\n        </>\r\n    );\r\n  }\r\n\r\n  renderResources(sid, resources, groupIndex, stepIndex, status, startDate, endDate) {\r\n    return (\r\n        <>\r\n            {\r\n            resources.sort((a, b) => a.sortOrder - b.sortOrder).map((r, index) => {\r\n              if(r.type==\"test\"){\t\t\t\t\r\n                var button;\r\n                if(r.status==\"Launch\"){\r\n                  var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n                  if (oldTests.filter(test=> test.id == r.id).length == 0){\r\n                    button =  <button onClick={() => this.downloadTest(r.id)} className=\"download blue-card launch\">Launch</button>\r\n                  }else{\r\n                    button =  <button onClick={() => this.downloadTest(r.id)} className=\"download blue-card launch\">Launch</button>\r\n                  }\r\n                }else if(r.status == \"Time Out\"){\r\n                  button= <button className=\"download blue-light-card\">{r.status}</button>\r\n                }else if(r.status == \"View Result\"){\r\n                  button= <button onClick={() => this.routeChange('/test-result/'+this.state.learnId+'/'+r.id)} className=\"download green-card\">{r.status}</button>\r\n                }else{\r\n                  var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n                  if (oldTests.filter(test=> test.id == r.id).length == 0){\r\n                    button =  <button onClick={() => this.downloadTest(r.id)} className=\"download blue-card launch\">Launch</button>\r\n                  }else{\r\n                    button =  <button onClick={() => this.downloadTest(r.id)} className=\"download blue-card launch\">Launch</button>\r\n                  }\r\n                }\r\n\r\n                return (\r\n                  <li key={index}>\r\n                      <img src={ico_test} className=\"icon\" alt=\"text\" /> \r\n                      {r.name}\r\n                      {button}\r\n                  </li>\r\n                )\r\n                \r\n                \r\n              }else{\r\n                return ( \r\n                      status == 1 ?\r\n                      <li key={index}  onClick={() => this.displayStudyResource(r, '/lesson/steps/attachments/'+ sid + '/details/' + r.id, groupIndex-1, stepIndex, index)} >\r\n                        <img src={ico_text_format} className=\"icon\" alt=\"text\" />\r\n                        {r.name}\r\n                      </li> \r\n                      :\r\n                      <li key={index}  onClick={() => this.showAlert(status, startDate, endDate)} >\r\n                        <img src={ico_text_format} className=\"icon\" alt=\"text\" />\r\n                        {r.name}\r\n                      </li>\r\n                )\r\n              }\r\n            })\r\n            }\r\n        </>\r\n    );\r\n  }\r\n\r\n  displayStudyResource(studyResource, path, groupIndex, stepIndex, resourceIndex) {\r\n    let _path = '';\r\n    let data = {studyResource: studyResource};\r\n    if(parseInt(studyResource.studyResourceType)===StudyResourceType.FEEDBACK_FORM) {\t\t\r\n      _path = '/feedback/form/'+studyResource.id;\r\n      this.props.history.push({pathname: _path, state: data});\r\n    }\r\n    else {\r\n      this.props.history.push({\r\n        pathname: path,\r\n        state: { groupIndex: groupIndex,stepIndex: stepIndex, resourceIndex: resourceIndex, lessonPlanId: this.state.learnId}\r\n      });  \r\n    }  \r\n  }\r\n\r\n  checkDateStatus(startDate,endDate){\r\n      var today = new Date();\r\n      var dd = String(today.getDate()).padStart(2, '0');\r\n      var mm = String(today.getMonth() + 1).padStart(2, '0');\r\n      var yyyy = today.getFullYear();\r\n      today = mm + '/' + dd + '/' + yyyy;\r\n\r\n      if(startDate && endDate){\r\n          var startdatearray = startDate.split(\"/\");\r\n          var startDate = startdatearray[1] + '/' + startdatearray[0] + '/' + '20' + startdatearray[2];\r\n          var enddatearray = endDate.split(\"/\");\r\n          var endDate = enddatearray[1] + '/' + enddatearray[0] + '/' + '20' + enddatearray[2];\r\n          return this.dateCheck(startDate,endDate,today);\r\n      }else if(startDate){\r\n          var startdatearray =startDate.split(\"/\");\r\n          var startDate = startdatearray[1] + '/' + startdatearray[0] + '/' + '20' + startdatearray[2];\r\n          return this.dateCompare(startDate,today);\r\n      }\r\n  }\r\n\r\n  dateCheck(from,to,today) {\r\n      var fDate,lDate,cDate;\r\n      fDate = Date.parse(from);\r\n      lDate = Date.parse(to);\r\n      cDate = Date.parse(today);\r\n      if((cDate <= lDate && cDate >= fDate)) {\r\n          return 1;\r\n      }else{\r\n          return this.dateCompare(from,today);\r\n      } \r\n  }\r\n\r\n  dateCompare(d1, d2){\r\n      const date1 = new Date(d1);\r\n      const date2 = new Date(d2);\r\n      if(date1 > date2){\r\n          return 2;\r\n      } else if(date1 < date2){\r\n          return 0;\r\n      } else{\r\n          return 1;\r\n      }\r\n  }\r\n\r\n  showAlert(status, startDate, endDate){\r\n    swal({\r\n      title: \"Alert\",\r\n      text:  status ? \"This content is not yet Activated for you. You can access it on \"+ startDate  : \"This content is no longer available for you. Your access to it has expired on \"+endDate,\r\n      dangerMode: true,\r\n      buttons: true,\r\n      className: 'blue-card'\r\n    })\r\n    .then((willResume) => {\r\n      if (willResume) {\r\n        \r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default LearningSteps;\r\n"]},"metadata":{},"sourceType":"module"}