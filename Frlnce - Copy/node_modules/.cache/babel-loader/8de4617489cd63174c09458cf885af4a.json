{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\profile\\\\ChangePassword.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { changepwd } from './../../_actions/userActions';\nimport Container from \"react-bootstrap/Container\";\nimport \"./Profile.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport Form from \"react-bootstrap/Form\";\nimport Config from \"../../_config/config\";\n\nclass ChangePassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: '',\n      message: '',\n      submitted: false,\n      user: null\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    let {\n      currentPassword,\n      newPassword,\n      confirmPassword\n    } = this.state;\n\n    if (currentPassword && newPassword && confirmPassword) {\n      if (newPassword != confirmPassword) {\n        this.setState({\n          message: \"Password and confirm Password must be same.\"\n        });\n      } else {\n        let auth = JSON.parse(localStorage.getItem('user'));\n        var userName = auth.userName;\n        this.props.changepwd(userName, currentPassword, newPassword, confirmPassword);\n        this.setState({\n          message: \"\"\n        });\n      }\n    }\n  }\n\n  routeChange(path) {\n    this.props.history.push(path);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: () => this.routeChange('/dashboard'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n      src: Config.cover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 44\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"gradient-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \" CHANGE PASSWORD \")), this.renderFormChangePwd())));\n  }\n\n  renderFormChangePwd() {\n    //console.log(this.props);\n    let auth = JSON.parse(localStorage.getItem('user'));\n    let {\n      currentPassword,\n      newPassword,\n      confirmPassword,\n      submitted\n    } = this.state;\n    let {\n      user\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'item-inner',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"userName\",\n      editable: false,\n      defaultValue: auth.userName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'item-inner' + (submitted && !currentPassword ? ' has-error' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Current Password\",\n      name: \"currentPassword\",\n      onChange: e => this.setState({\n        currentPassword: e.target.value\n      }),\n      value: currentPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'item-inner' + (submitted && !newPassword ? ' has-error' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"New Password\",\n      name: \"newPassword\",\n      onChange: e => this.setState({\n        newPassword: e.target.value\n      }),\n      value: newPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'item-inner' + (submitted && !confirmPassword ? ' has-error' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      name: \"confirmPassword\",\n      onChange: e => this.setState({\n        confirmPassword: e.target.value\n      }),\n      value: confirmPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"institute-sign-in-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"primary button-full ilearn-blue-btn button-md\",\n      type: \"submit\",\n      value: \"CHANGE PASSWORD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    })), user.user.message && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 32\n      }\n    }, user.user.message), this.state.message && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }, this.state.message)));\n  }\n\n}\n\nfunction mapState(state) {\n  return {\n    user: state.user\n  };\n}\n\nconst actionCreators = {\n  changepwd: changepwd\n};\nexport default connect(mapState, actionCreators)(ChangePassword);","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/profile/ChangePassword.js"],"names":["React","Component","connect","changepwd","Container","FontAwesomeIcon","faArrowLeft","Form","Config","ChangePassword","constructor","props","state","currentPassword","newPassword","confirmPassword","message","submitted","user","onSubmit","bind","e","preventDefault","setState","auth","JSON","parse","localStorage","getItem","userName","routeChange","path","history","push","render","cover","renderFormChangePwd","target","value","mapState","actionCreators"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { changepwd } from './../../_actions/userActions';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"./Profile.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Config from \"../../_config/config\";\r\n\r\nclass ChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPassword: '',\r\n      newPassword: '',\r\n      confirmPassword: '',\r\n      message:'',\r\n      submitted: false,\r\n      user: null\r\n    };\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.setState({ submitted: true });\r\n    let { currentPassword, newPassword, confirmPassword } = this.state;\r\n    if (currentPassword && newPassword && confirmPassword) {\r\n      if(newPassword != confirmPassword){\r\n        this.setState({ message: \"Password and confirm Password must be same.\"});\r\n      }else{\r\n        let auth = JSON.parse(localStorage.getItem('user'));\r\n        var userName = auth.userName;\r\n        this.props.changepwd(userName, currentPassword, newPassword, confirmPassword);\r\n        this.setState({ message: \"\"});\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"login\">\r\n        {\r\n          <Container fluid>\r\n            <div className=\"back\">\r\n                  <FontAwesomeIcon icon={ faArrowLeft } onClick={() => this.routeChange('/dashboard')} />\r\n            </div>\r\n            <div className=\"header-image\"> <img src={Config.cover} /></div>\r\n            <div className=\"main-content\">\r\n              <span className=\"gradient-text\">\r\n                <strong> CHANGE PASSWORD </strong>\r\n              </span>\r\n              {this.renderFormChangePwd()}\r\n            </div>\r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFormChangePwd() {\r\n    //console.log(this.props);\r\n    let auth = JSON.parse(localStorage.getItem('user'));\r\n    let {currentPassword, newPassword, confirmPassword, submitted} = this.state;\r\n    let {user} = this.props;\r\n\r\n    return (\r\n      <Form onSubmit={this.onSubmit}>\r\n      <Form.Group>\r\n        <div className={'item-inner'}>\r\n          <Form.Control type=\"text\" name=\"userName\" editable={false} defaultValue={auth.userName} />\r\n        </div>\r\n        <br />\r\n        <div className={'item-inner' + (submitted && !currentPassword ? ' has-error' : '')}>\r\n          <Form.Control type=\"password\" placeholder=\"Current Password\" name=\"currentPassword\" onChange={e => this.setState({currentPassword: e.target.value})} value={currentPassword} />\r\n        </div>\r\n        <br />\r\n        <div className={'item-inner' + (submitted && !newPassword ? ' has-error' : '')}>\r\n          <Form.Control type=\"password\" placeholder=\"New Password\" name=\"newPassword\" onChange={e => this.setState({newPassword: e.target.value})} value={newPassword} />\r\n        </div>\r\n        <br />\r\n        <div className={'item-inner' + (submitted && !confirmPassword ? ' has-error' : '')}>\r\n          <Form.Control type=\"password\" placeholder=\"Confirm Password\" name=\"confirmPassword\" onChange={e => this.setState({confirmPassword: e.target.value})} value={confirmPassword} />\r\n        </div>\r\n        <div className=\"institute-sign-in-btn\">\r\n          <input className=\"primary button-full ilearn-blue-btn button-md\" type=\"submit\" value=\"CHANGE PASSWORD\" />\r\n        </div>\r\n        { user.user.message && <div>{user.user.message}</div> }\r\n        { this.state.message && <div>{this.state.message}</div>}\r\n      </Form.Group>\r\n     </Form>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nfunction mapState(state) {\r\n  return {\r\n    user : state.user\r\n  };\r\n}\r\n\r\nconst actionCreators = {\r\n  changepwd: changepwd,\r\n};\r\n\r\nexport default connect(mapState, actionCreators)(ChangePassword);\r\n"]},"metadata":{},"sourceType":"module"}