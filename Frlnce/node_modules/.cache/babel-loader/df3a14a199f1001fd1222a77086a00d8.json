{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\analysis\\\\AnalysisReportDetails.js\";\nimport React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport ApiService from \"../../_services/ApiService\";\nimport Loader from './../../_components/loader/loader';\nimport Chart from \"chart.js\";\n\nclass AnalysisReportDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = /*#__PURE__*/React.createRef();\n\n    this.buildChart = () => {\n      let t1 = {};\n      t1.label = 'Marks';\n      t1.data = [];\n      t1.backgroundColor = [];\n      t1.borderColor = [];\n      t1.borderWidth = 1;\n      let t2 = {};\n      t2.label = 'Topper';\n      t2.data = [];\n      t2.backgroundColor = [];\n      t2.borderColor = [];\n      t2.borderWidth = 1;\n      let t3 = {};\n      t3.label = 'Total';\n      t3.data = [];\n      t3.backgroundColor = [];\n      t3.borderColor = [];\n      t3.borderWidth = 1;\n      let labels = [];\n      let barChartData = {};\n      let data = this.state.list;\n\n      if (typeof data !== 'undefined' || data != null) {\n        data.barGraphData && data.barGraphData.map((item, index) => {\n          if (index == 0) {\n            item.name = \"Test\";\n          }\n\n          labels.push(item.name);\n          t1.data.push(item.marks);\n          t1.backgroundColor.push('rgba(0, 128 ,0, 0.8)');\n          t1.borderColor.push('rgba(0, 128 ,0, 1)');\n          t2.data.push(item.toppermarks);\n          t2.backgroundColor.push('rgba(255, 0, 0, 0.8)');\n          t2.borderColor.push('rgba(255, 0, 0, 1)');\n          t3.data.push(item.totalmarks);\n          t3.backgroundColor.push('rgba(31, 119, 180, 0.8)');\n          t3.borderColor.push('rgba(31, 119, 180, 1)');\n        });\n        barChartData = {\n          labels: labels,\n          datasets: [t1, t2, t3]\n        };\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\n        myChartRef.height = 700;\n        new Chart(myChartRef, {\n          type: \"bar\",\n          data: barChartData,\n          options: {\n            legend: {\n              display: true,\n              position: 'bottom',\n              labels: {\n                fontColor: \"#000080\"\n              }\n            },\n            responsive: true,\n            maintainAspectRatio: true\n          }\n        });\n      }\n    };\n\n    this.state = {\n      list: [],\n      message: null,\n      loading: false,\n      result: 0\n    };\n    this.reloadTestResult = this.reloadTestResult.bind(this);\n  }\n\n  componentDidMount() {\n    this.reloadTestResult();\n    this.buildChart();\n  }\n\n  componentDidUpdate() {\n    this.buildChart();\n  }\n\n  reloadTestResult() {\n    var id = this.props.match.params.id;\n    this.setState({\n      loading: true\n    }, () => {\n      ApiService.fetchTestResult(id).then(res => {\n        this.setState({\n          loading: false,\n          list: res.data.data,\n          result: res.data.result\n        });\n      });\n    });\n  }\n\n  routeChange(path) {\n    this.props.history.push(path);\n  }\n\n  render() {\n    let portlet = JSON.parse(localStorage.getItem('portlet'));\n    const {\n      loading\n    } = this.state;\n    let data = this.state.list;\n\n    if (this.state.result == 1) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"testlist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"learn-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `module-header-step2 AnalysisReport ${portlet.class ? portlet.class : 'orange-card'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"back\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faArrowLeft,\n        onClick: this.props.history.goBack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 8\n        }\n      })), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }\n      }, \"Online Tests Result\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"testResult\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, data.showAnalysisButtons == 1 && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"resultbtn orange-card\",\n        onClick: () => this.routeChange('/test-result-detail/' + this.props.match.params.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 48\n        }\n      }, \"Detailed Profiling\"), data.showAnalysisButtons == 1 && /*#__PURE__*/React.createElement(\"button\", {\n        className: `resultbtn ${portlet.class ? portlet.class : 'orange-card'}`,\n        onClick: () => {\n          var _this$props, _this$props$location, _this$props$location$, _this$props2, _this$props2$match, _this$props2$match$pa;\n\n          return this.props.history.push({\n            pathname: `/test-result/${(_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$location = _this$props.location) === null || _this$props$location === void 0 ? void 0 : (_this$props$location$ = _this$props$location.state) === null || _this$props$location$ === void 0 ? void 0 : _this$props$location$.testId}/${(_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : (_this$props2$match = _this$props2.match) === null || _this$props2$match === void 0 ? void 0 : (_this$props2$match$pa = _this$props2$match.params) === null || _this$props2$match$pa === void 0 ? void 0 : _this$props2$match$pa.id}`,\n            state: {\n              showQuestionWiseAnalysis: true\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 47\n        }\n      }, \"Question Wise Analysis\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"testResult\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card_list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, \"Your Performance in Test\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"testgraph\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"canvas\", {\n        id: \"myChart\",\n        ref: this.chartRef,\n        height: \"230vh\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }\n      })))), loading ? /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 23\n        }\n      }) : this.renderCard()));\n    } else {\n      let msg = /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, \"No Result Found\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"testlist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `module-header-step2 AnalysisReport ${portlet.class ? portlet.class : 'orange-card'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"AnalysisReport\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"back\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faArrowLeft,\n        onClick: this.props.history.goBack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, \"Online Tests Result\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"testResult\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }, loading ? /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }\n      }) : msg), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"testgraph\",\n        style: {\n          display: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"canvas\", {\n        id: \"myChart\",\n        ref: this.chartRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }\n      }))));\n    }\n  }\n\n  renderCard() {\n    let data = this.state.list;\n\n    if (typeof data !== 'undefined' || data != null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"testResult\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card_list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, \"Your Performance in Test\"), /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"blue-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }, \"Sec\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, \"Marks\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, \"Max\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, \"%\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, \"CH\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }, \"CA\")), data.testTableData && data.testTableData.sort((a, b) => a.sortOrder - b.sortOrder).map((item, index) => {\n        if (item.sortOrder == 100) {\n          item.sectionName = \"Test Total\";\n        }\n\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }\n        }, item.sectionName)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }\n        }, item.marks), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }\n        }, item.totalMarks), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }\n        }, item.percentage), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }\n        }, item.testHighestPercentage), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }\n        }, item.testAveragePercentage));\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }\n      }), this.renderLegends());\n    }\n  }\n\n  renderLegends() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card_list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, \"Legends\"), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, \"Sec\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, \"Section\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, \"Max\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, \"Maximum Marks\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, \"%\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }, \"Percentage\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, \"CH\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, \"Course Highest\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, \"CA\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }, \"Course Average\"))));\n  }\n\n}\n\nexport default AnalysisReportDetails;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/analysis/AnalysisReportDetails.js"],"names":["React","Component","Container","FontAwesomeIcon","faArrowLeft","ApiService","Loader","Chart","AnalysisReportDetails","constructor","props","chartRef","createRef","buildChart","t1","label","data","backgroundColor","borderColor","borderWidth","t2","t3","labels","barChartData","state","list","barGraphData","map","item","index","name","push","marks","toppermarks","totalmarks","datasets","myChartRef","current","getContext","height","type","options","legend","display","position","fontColor","responsive","maintainAspectRatio","message","loading","result","reloadTestResult","bind","componentDidMount","componentDidUpdate","id","match","params","setState","fetchTestResult","then","res","routeChange","path","history","render","portlet","JSON","parse","localStorage","getItem","class","goBack","showAnalysisButtons","pathname","location","testId","showQuestionWiseAnalysis","renderCard","msg","testTableData","sort","a","b","sortOrder","sectionName","totalMarks","percentage","testHighestPercentage","testAveragePercentage","renderLegends"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Loader from './../../_components/loader/loader';\r\nimport Chart from \"chart.js\";\r\n\r\nclass AnalysisReportDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      message: null,\r\n      loading: false,\r\n      result: 0\r\n    };\r\n    this.reloadTestResult = this.reloadTestResult.bind(this);\r\n  }\r\n  chartRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.reloadTestResult();\r\n    this.buildChart();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.buildChart();\r\n  }\r\n\r\n  reloadTestResult() {\r\n    var id = this.props.match.params.id;\r\n    this.setState({ loading: true }, () => {\r\n      ApiService.fetchTestResult(id)\r\n      .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n            list: res.data.data,\r\n            result : res.data.result\r\n          });\r\n      });\r\n    });\t\r\n  }\r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  render() {\r\n\tlet portlet = JSON.parse(localStorage.getItem('portlet'));\r\n    const { loading } = this.state;\r\n\tlet data = this.state.list;\r\n    if(this.state.result==1){\r\n    return (\r\n      <div className=\"testlist\">\r\n        {\r\n          <Container fluid>\r\n          <div className=\"learn-header\">\r\n          <div className={`module-header-step2 AnalysisReport ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n\t\t\t\t\t<div className=\"back\">\r\n\t\t\t\t\t  <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h4>Online Tests Result</h4>\r\n          </div>\r\n          </div>\r\n          <div className=\"testResult\">\r\n               {data.showAnalysisButtons==1 && <button className=\"resultbtn orange-card\" onClick={() => this.routeChange('/test-result-detail/'+this.props.match.params.id)} >Detailed Profiling</button>}\r\n               {/* {data.showAnalysisButtons==1 && <button className=\"resultbtn orange-card\" onClick={() => this.routeChange('/test-result-question-wise/'+this.props.match.params.id)} >Question Wise Analysis</button>} */}\r\n              {data.showAnalysisButtons==1 && <button className={`resultbtn ${portlet.class ? portlet.class : 'orange-card'}`}  onClick={()=> this.props.history.push({pathname: `/test-result/${this.props?.location?.state?.testId}/${this.props?.match?.params?.id}`, state: {showQuestionWiseAnalysis:true}})} >Question Wise Analysis</button>}\r\n          </div>\r\n          <div className=\"testResult\">\r\n              <div className=\"card_list\">\r\n                <h4>Your Performance in Test</h4>\r\n                <div className=\"testgraph\">\r\n                  <canvas id=\"myChart\" ref={this.chartRef} height=\"230vh\"/>\r\n                </div>\r\n              </div>\r\n          </div>\r\n\r\n          {loading ?  <Loader />: this.renderCard()}           \r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n    }else{\r\n      let msg = <h4>No Result Found</h4>;\r\n      return (\r\n        <div className=\"testlist\">\r\n          {\r\n            <Container fluid>\r\n            <div className={`module-header-step2 AnalysisReport ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n            <div className=\"AnalysisReport\">\r\n            <div className=\"back\">\r\n              <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n            </div>\r\n            <h4>Online Tests Result</h4>\r\n            </div>\r\n            </div>\r\n              <div className=\"testResult\">\r\n                {loading ?  <Loader />: msg}\r\n              </div>\r\n              <div className=\"testgraph\" style={{display: \"none\"}}>\r\n                  <canvas id=\"myChart\" ref={this.chartRef} />\r\n              </div>\r\n            </Container>\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderCard() {\r\n    let data = this.state.list;\r\n    if(typeof(data) !== 'undefined' || data != null){\r\n      return  <div className=\"testResult\">\r\n              <div className=\"card_list\">\r\n                <h4>Your Performance in Test</h4>\r\n                <table>\r\n                  <tr className=\"blue-card\">\r\n                    <th>Sec</th>\r\n                    <th>Marks</th>\r\n                    <th>Max</th>\r\n                    <th>%</th>\r\n                    <th>CH</th>\r\n                    <th>CA</th>\r\n                  </tr>\r\n      {\r\n        data.testTableData && data.testTableData.sort((a, b) => a.sortOrder - b.sortOrder)\r\n            .map((item, index) => {\r\n            if(item.sortOrder==100){ item.sectionName = \"Test Total\";  }\r\n            return ( \r\n              <tr key={index}>\r\n                <td><b>{item.sectionName}</b></td>\r\n                <td>{item.marks}</td>\r\n                <td>{item.totalMarks}</td>\r\n                <td>{item.percentage}</td>\r\n                <td>{item.testHighestPercentage}</td>\r\n                <td>{item.testAveragePercentage}</td>\r\n              </tr>\r\n            )\r\n          })\r\n      }\r\n      </table>\r\n      </div><br />\r\n      {this.renderLegends()} \r\n      </div>\r\n    }\r\n  }\r\n\r\n  renderLegends() {\r\n    return (\r\n      <div className=\"card_list\">\r\n      <h4>Legends</h4>\r\n      <table>  \r\n      <tr>\r\n        <td><b>Sec</b></td>\r\n        <td>Section</td>        \r\n      </tr>\r\n      <tr>\r\n        <td><b>Max</b></td>\r\n        <td>Maximum Marks</td>        \r\n      </tr>\r\n      <tr>\r\n        <td><b>%</b></td>\r\n        <td>Percentage</td>        \r\n      </tr>\r\n      <tr>\r\n        <td><b>CH</b></td>\r\n\r\n        <td>Course Highest</td>        \r\n      </tr>\r\n      <tr>\r\n        <td><b>CA</b></td>\r\n        <td>Course Average</td>        \r\n      </tr>\r\n      </table> \r\n      </div>\r\n    )\r\n  }\r\n\r\n  buildChart = () => {\r\n    let t1 = {};\r\n    t1.label = 'Marks';\r\n    t1.data = [];\r\n    t1.backgroundColor = [];\r\n    t1.borderColor = [];\r\n    t1.borderWidth = 1;\r\n\r\n    let t2 = {};\r\n    t2.label = 'Topper';\r\n    t2.data = [];\r\n    t2.backgroundColor = [];\r\n    t2.borderColor = [];\r\n    t2.borderWidth = 1;\r\n\r\n    let t3 = {};\r\n    t3.label = 'Total';\r\n    t3.data = [];\r\n    t3.backgroundColor = [];\r\n    t3.borderColor = [];\r\n    t3.borderWidth = 1;\r\n    let labels = [];\r\n    let barChartData = {};\r\n    let data = this.state.list;\r\n    if(typeof(data) !== 'undefined' || data != null){\r\n      data.barGraphData && data.barGraphData.map((item, index) => {\r\n\t\t          if(index==0){ item.name = \"Test\"; }\r\n                  labels.push(item.name);\r\n\r\n                  t1.data.push(item.marks);\r\n                  t1.backgroundColor.push('rgba(0, 128 ,0, 0.8)');\r\n                  t1.borderColor.push('rgba(0, 128 ,0, 1)');\r\n\r\n                  t2.data.push(item.toppermarks);\r\n                  t2.backgroundColor.push('rgba(255, 0, 0, 0.8)');\r\n                  t2.borderColor.push('rgba(255, 0, 0, 1)');\r\n\r\n                  t3.data.push(item.totalmarks);\r\n                  t3.backgroundColor.push('rgba(31, 119, 180, 0.8)');\r\n                  t3.borderColor.push('rgba(31, 119, 180, 1)');\r\n      });\r\n\r\n      barChartData = {\r\n          labels: labels,\r\n          datasets: [t1,t2,t3]\r\n      }\r\n\r\n\r\n    const myChartRef = this.chartRef.current.getContext(\"2d\"); \r\n\tmyChartRef.height = 700; \r\n    new Chart(myChartRef, {\r\n        type: \"bar\",\r\n        data:  barChartData,\r\n        options: {\r\n          legend: {\r\n            display: true,\r\n            position: 'bottom',\r\n            labels: {\r\n              fontColor: \"#000080\",\r\n            }\r\n          },\r\n          responsive: true,\r\n          maintainAspectRatio: true\r\n        }\r\n    });\r\n   }\r\n  }\r\n\r\n}\r\n\r\nexport default AnalysisReportDetails;\r\n"]},"metadata":{},"sourceType":"module"}