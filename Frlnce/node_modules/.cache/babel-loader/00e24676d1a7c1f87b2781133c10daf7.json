{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\feedback-form\\\\studentfedback.component.jsx\";\nimport React from \"react\";\nimport ApiService from \"../../_services/ApiService\";\nimport { ILoader } from \"../../_components/iloader/iloader\";\nimport { ListGroup, ListGroupItem, Badge } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nclass StudentFeedback extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = async () => {\n      let employeeId = this.props.match.params.instructorId || 0;\n      let courseId = this.props.match.params.courseId || 0;\n      this.setState({\n        showLoading: true\n      });\n      const apiData = await ApiService.getFeedbackForm(this.props.match.params.id, 0, employeeId, courseId);\n      console.log(\"FeedbackForm -> init(); res : \" + JSON.stringify(apiData.data.data));\n      this.setState({\n        studentFeedbackData: apiData.data\n      }, () => {\n        this.setState({\n          showLoading: false\n        });\n      });\n    };\n\n    this.state = {\n      showLoading: false,\n      studentFeedbackData: {}\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  giveFeedback(feedbackFormId, studentData, courseId) {\n    let instructorId = 0;\n    let instructorName = '';\n    let userId = studentData === null || studentData === void 0 ? void 0 : studentData.userId;\n\n    let _path = '/feedback/form/' + feedbackFormId + '/instructor/' + instructorId + '/course/' + courseId;\n\n    let data = {\n      'instructorName': instructorName,\n      'userId': userId\n    };\n    data.studyResource = {\n      id: feedbackFormId,\n      name: 'Feedback1'\n    };\n    this.props.history.push({\n      pathname: _path,\n      state: data\n    });\n  }\n\n  render() {\n    var _this$state$studentFe, _this$state$studentFe2, _this$state$studentFe3, _this$state$studentFe4;\n\n    let CURRENT_PORTLET = JSON.parse(localStorage[\"portlet\"]);\n    console.log((_this$state$studentFe = this.state.studentFeedbackData.data) === null || _this$state$studentFe === void 0 ? void 0 : _this$state$studentFe.userBeans);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ILoader, {\n      loadingText: \"Please wait...\",\n      isShow: this.state.showLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `ilearn-plain-header ${CURRENT_PORTLET.class}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: this.props.history.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }\n    }, (_this$state$studentFe2 = this.state.studentFeedbackData.data) === null || _this$state$studentFe2 === void 0 ? void 0 : _this$state$studentFe2.name)), /*#__PURE__*/React.createElement(ListGroup, {\n      className: \"list-group-flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, (_this$state$studentFe3 = this.state.studentFeedbackData.data) === null || _this$state$studentFe3 === void 0 ? void 0 : (_this$state$studentFe4 = _this$state$studentFe3.userBeans) === null || _this$state$studentFe4 === void 0 ? void 0 : _this$state$studentFe4.map((studentData, index) => {\n      return /*#__PURE__*/React.createElement(ListGroupItem, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, studentData.studentName, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, studentData.receivedFeedback === \"TRUE\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Badge, {\n        variant: \"success\",\n        className: \"instructor_feedback_button\",\n        onClick: () => this.giveFeedback(this.props.match.params.id, studentData, 0),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 23\n        }\n      }, \"Feedback Given\"), \" \"), studentData.receivedFeedback === \"FALSE\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Badge, {\n        variant: \"warning\",\n        className: \"instructor_feedback_button\",\n        onClick: () => this.giveFeedback(this.props.match.params.id, studentData, 0),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 23\n        }\n      }, \"Give Feedback\"), \" \")));\n    })));\n  }\n\n}\n\nexport default StudentFeedback;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/feedback-form/studentfedback.component.jsx"],"names":["React","ApiService","ILoader","ListGroup","ListGroupItem","Badge","FontAwesomeIcon","faArrowLeft","StudentFeedback","Component","constructor","props","fetchData","employeeId","match","params","instructorId","courseId","setState","showLoading","apiData","getFeedbackForm","id","console","log","JSON","stringify","data","studentFeedbackData","state","componentDidMount","giveFeedback","feedbackFormId","studentData","instructorName","userId","_path","studyResource","name","history","push","pathname","render","CURRENT_PORTLET","parse","localStorage","userBeans","class","goBack","map","index","studentName","receivedFeedback"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport { ILoader } from \"../../_components/iloader/iloader\";\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Badge,\r\n} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faArrowLeft,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass StudentFeedback extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showLoading: false,\r\n      studentFeedbackData: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData = async () => {\r\n    let employeeId = this.props.match.params.instructorId || 0;\r\n    let courseId = this.props.match.params.courseId || 0;\r\n    this.setState({ showLoading: true });\r\n    const apiData = await ApiService.getFeedbackForm(\r\n      this.props.match.params.id,\r\n      0,\r\n      employeeId,\r\n      courseId\r\n    );\r\n\r\n    console.log(\r\n      \"FeedbackForm -> init(); res : \" +\r\n    JSON.stringify(apiData.data.data)\r\n    );\r\n\r\n    this.setState({ studentFeedbackData: apiData.data }, () => {\r\n      this.setState({ showLoading: false });\r\n    });\r\n\r\n   \r\n  };\r\n\r\n  giveFeedback(feedbackFormId, studentData, courseId) {\r\n    let instructorId = 0\r\n    let instructorName = ''\r\n    let userId=studentData?.userId\r\n    let _path = '/feedback/form/'+feedbackFormId+'/instructor/'+instructorId+'/course/'+courseId;\r\n    let data = {'instructorName': instructorName, 'userId': userId};\r\n    data.studyResource = {id:feedbackFormId, name:'Feedback1'};\r\n    this.props.history.push({pathname: _path, state: data});\r\n  }\r\n\r\n  render() {\r\n    let CURRENT_PORTLET = JSON.parse(localStorage[\"portlet\"]);\r\n    console.log(this.state.studentFeedbackData.data?.userBeans);\r\n    return (\r\n      <div>\r\n        <ILoader\r\n          loadingText={\"Please wait...\"}\r\n          isShow={this.state.showLoading}\r\n        ></ILoader>\r\n\r\n        <div className={`ilearn-plain-header ${CURRENT_PORTLET.class}`}>\r\n          <div className=\"back\">\r\n            <FontAwesomeIcon\r\n              icon={faArrowLeft}\r\n              onClick={this.props.history.goBack}\r\n            />\r\n          </div>\r\n          {<h4>{this.state.studentFeedbackData.data?.name}</h4>}\r\n        </div>\r\n\r\n        <ListGroup className=\"list-group-flush\">\r\n          {this.state.studentFeedbackData.data?.userBeans?.map((studentData, index) => {\r\n            \r\n            return (\r\n              <ListGroupItem key={index}>\r\n                {studentData.studentName}\r\n                <div>\r\n                  {studentData.receivedFeedback === \"TRUE\" && (\r\n                    <>\r\n                      <Badge\r\n                        variant=\"success\"\r\n                        className=\"instructor_feedback_button\"\r\n                        onClick={()=>this.giveFeedback(this.props.match.params.id,studentData, 0)}\r\n                      >\r\n                        Feedback Given\r\n                      </Badge>{\" \"}\r\n                    </>\r\n                  )}\r\n                  {studentData.receivedFeedback === \"FALSE\" && (\r\n                    <>\r\n                      <Badge\r\n                        variant=\"warning\"\r\n                        className=\"instructor_feedback_button\"\r\n                        onClick={()=>this.giveFeedback(this.props.match.params.id,studentData, 0)}\r\n                      >\r\n                        Give Feedback\r\n                      </Badge>{\" \"}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </ListGroupItem>\r\n            );\r\n          })}\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentFeedback;\r\n"]},"metadata":{},"sourceType":"module"}