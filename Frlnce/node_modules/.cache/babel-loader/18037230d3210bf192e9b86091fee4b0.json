{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\test\\\\TestSubmit.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ApiService from \"../../_services/ApiService\";\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport './Test.css';\nimport Loader from './../../_components/loader/loader';\nimport swal from 'sweetalert';\n\nclass TestSubmit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.goBack = () => {\n      this.props.history.replace('/TestList/' + this.props.match.params.pid);\n    };\n\n    this.EndExam = () => {\n      var online = navigator.onLine;\n      var testObject = JSON.parse(localStorage.getItem('tests')) || [];\n      var i = this.state.index;\n\n      if (online == true) {\n        var question_array = [];\n\n        for (var j = 0; j < testObject[i].questions.length; j++) {\n          var answers = '';\n          var marks = '';\n          let category = testObject[i].questions[j].questionCategory;\n\n          if (category == 1 || category == 26) {\n            for (var k = 0; k < testObject[i].questions[j].choices.length; k++) {\n              if (testObject[i].questions[j].choices[k].checked == 1) {\n                answers += testObject[i].questions[j].choices[k].id + ',';\n\n                if (testObject[i].questions[j].choices[k].correct == true) {\n                  marks = testObject[i].questions[j].marks;\n                } else {\n                  marks = \"-\" + testObject[i].questions[j].negativeMarks;\n                }\n              }\n            }\n\n            if (answers) {\n              answers = answers.replace(/,(?=\\s*$)/, '');\n            }\n\n            question_array.push({\n              questionId: \"\" + testObject[i].questions[j].id + \"\",\n              answers: \"\" + answers + \"\",\n              qnType: \"mcq\",\n              marks: \"\" + marks + \"\",\n              timeTaken: \"3600\"\n            });\n          } else if (category == 4 || category == 7 || category == 0 || category == 5) {\n            //alert(testObject[i].questions[j].answered);\n            if (testObject[i].questions[j].answered == undefined) {\n              testObject[i].questions[j].answered = '';\n            } //alert(testObject[i].questions[j].answered);\n\n\n            question_array.push({\n              questionId: \"\" + testObject[i].questions[j].id + \"\",\n              answers: \"\" + testObject[i].questions[j].answered + \"\",\n              qnType: \"textAnswer\",\n              marks: \"\" + marks + \"\",\n              timeTaken: \"3600\"\n            });\n          } else if (category == 2) {\n            var questionId = testObject[i].questions[j].id;\n            var arr = testObject[i].questions[j].answered;\n            var answered = {};\n\n            if (arr != undefined) {\n              for (var c = 0; c < arr.length; c++) {\n                var cur = arr[c];\n                var choice = cur.split(\":\")[0];\n                var match = cur.split(\":\")[1];\n\n                if (answered[choice]) {\n                  var matches = answered[choice];\n                  matches.push(match);\n                  answered[choice] = matches;\n                } else {\n                  var matches = [];\n                  matches.push(match);\n                  answered[choice] = matches;\n                }\n              }\n            }\n\n            var answers = Object.keys(answered);\n            var attemptedAnswer = \"\";\n\n            for (var d = 0; d < answers.length; d++) {\n              var choice = answers[d];\n              attemptedAnswer += choice + \":\";\n\n              for (var e = 0; e < answered[choice].length; e++) {\n                attemptedAnswer += answered[choice][e] + \";\";\n              }\n\n              attemptedAnswer = attemptedAnswer.slice(0, attemptedAnswer.length - 1);\n              attemptedAnswer += \",\";\n            }\n\n            attemptedAnswer = attemptedAnswer.slice(0, attemptedAnswer.length - 1);\n            question_array.push({\n              questionId: \"\" + questionId + \"\",\n              answers: \"\" + attemptedAnswer + \"\",\n              qnType: \"mcq\",\n              marks: \"5\",\n              timeTaken: \"3600\"\n            });\n          }\n        }\n\n        let user = JSON.parse(localStorage.getItem('user')) || [];\n\n        if (!user.userName) {\n          user.userName = \"\";\n          user.enquiryId = localStorage.getItem('enquiryId');\n        }\n\n        var tempDate = new Date();\n        var date = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate() + ' ' + tempDate.getHours() + ':' + tempDate.getMinutes() + ':' + tempDate.getSeconds();\n        var json_data = {\n          \"info\": {\n            \"studentCode\": \"\" + user.userName + \"\",\n            \"enquiryId\": \"\" + user.enquiryId + \"\",\n            \"testId\": \"\" + testObject[i].id + \"\",\n            \"testPaperId\": \"0\",\n            \"startDate\": \"\" + date + \"\",\n            \"timeTaken\": \"\" + this.state.testTime + \"\"\n          },\n          \"attempts\": question_array\n        };\n        ApiService.endExam(json_data).then(res => {\n          if (res.data.status == 1) {\n            for (var i = 0; i < testObject.length; i++) {\n              if (testObject[i].id == this.props.match.params.id) {\n                testObject.splice(i, 1); //remove item from array\n              }\n            }\n\n            localStorage.setItem(\"tests\", JSON.stringify(testObject));\n            this.goBack();\n          } else {\n            swal({\n              title: \"Alert\",\n              text: \"Unable to submit test. Please Try Again\",\n              dangerMode: true\n            });\n          }\n        });\n      } else {\n        swal({\n          title: \"Alert\",\n          text: \"Could not Connect to Server. Please check your Internet connection and try again Later.\",\n          dangerMode: true\n        }).then(endExam => {\n          if (endExam) {\n            testObject[i].submit = 1;\n            localStorage.setItem(\"tests\", JSON.stringify(testObject));\n            this.goBack();\n          }\n        });\n      }\n    };\n\n    this.state = {\n      questions: [],\n      message: null,\n      question_num: 0,\n      mark: false,\n      checked: false,\n      tests: []\n    };\n    this.node = /*#__PURE__*/React.createRef();\n    this.reloadQuestionList = this.reloadQuestionList.bind(this);\n  }\n\n  componentDidMount() {\n    this.reloadQuestionList();\n  }\n\n  componentDidUpdate() {\n    this.EndExam();\n  }\n\n  reloadQuestionList() {\n    var testObject = JSON.parse(localStorage.getItem('tests')) || [];\n\n    for (var i = 0; i < testObject.length; i++) {\n      if (testObject[i].id == this.props.match.params.id) {\n        this.setState({\n          index: i\n        });\n        this.setState({\n          testId: testObject[i].id\n        });\n        this.setState({\n          questions: testObject[i].questions\n        });\n        this.setState({\n          testName: testObject[i].name\n        });\n\n        if (testObject[i].resumeTime) {\n          this.setState({\n            testTime: parseInt(testObject[i].resumeTime)\n          });\n        } else {\n          this.setState({\n            testTime: parseInt(testObject[i].testTime) * 60\n          });\n        }\n\n        this.setState({\n          totalMarks: testObject[i].totalMarks\n        });\n        this.setState({\n          noOfQuestions: testObject[i].noOfQuestions\n        });\n        localStorage.setItem('test_id', i);\n        localStorage.setItem('test_catid', this.props.match.params.pid);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"test-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"testclose\",\n      id: \"testclose\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimesCircle,\n      onClick: this.closeExamAlert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 5\n      }\n    }, this.state.testName), /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nexport default TestSubmit;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/test/TestSubmit.js"],"names":["React","Component","FontAwesomeIcon","ApiService","faTimesCircle","Loader","swal","TestSubmit","constructor","props","goBack","history","replace","match","params","pid","EndExam","online","navigator","onLine","testObject","JSON","parse","localStorage","getItem","i","state","index","question_array","j","questions","length","answers","marks","category","questionCategory","k","choices","checked","id","correct","negativeMarks","push","questionId","qnType","timeTaken","answered","undefined","arr","c","cur","choice","split","matches","Object","keys","attemptedAnswer","d","e","slice","user","userName","enquiryId","tempDate","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","json_data","testTime","endExam","then","res","data","status","splice","setItem","stringify","title","text","dangerMode","submit","message","question_num","mark","tests","node","createRef","reloadQuestionList","bind","componentDidMount","componentDidUpdate","setState","testId","testName","name","resumeTime","parseInt","totalMarks","noOfQuestions","render","closeExamAlert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport './Test.css';\r\nimport Loader from './../../_components/loader/loader';\r\nimport swal from 'sweetalert';\r\n\r\nclass TestSubmit extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            questions: [],\r\n            message: null,\r\n\t\t\tquestion_num : 0,\r\n\t\t\tmark: false,\r\n\t\t\tchecked:false,\r\n\t\t\ttests:[],\r\n\t\t};\r\n\t\tthis.node = React.createRef();\r\n\t\tthis.reloadQuestionList = this.reloadQuestionList.bind(this);\r\n\t}\r\n\t\r\n    componentDidMount() {\r\n\t\tthis.reloadQuestionList();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(){\r\n\t\tthis.EndExam();\r\n\t}\r\n\r\n    reloadQuestionList() {\r\n\t\tvar testObject = JSON.parse(localStorage.getItem('tests')) || [];\r\n\t\tfor(var i=0; i<testObject.length; i++){\r\n            if(testObject[i].id==this.props.match.params.id){\r\n\t\t\t\tthis.setState({index:i});\r\n\t\t\t\tthis.setState({testId: testObject[i].id});\r\n\t\t\t\tthis.setState({questions: testObject[i].questions});\r\n\t\t\t\tthis.setState({testName: testObject[i].name});\r\n\t\t\t\tif(testObject[i].resumeTime){\r\n\t\t\t\t  this.setState({testTime: parseInt(testObject[i].resumeTime)});\r\n\t\t\t\t}else{\r\n\t\t\t\t  this.setState({testTime: parseInt(testObject[i].testTime)*60});\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({totalMarks: testObject[i].totalMarks});\r\n\t\t\t\tthis.setState({noOfQuestions: testObject[i].noOfQuestions});\r\n\t\t\t\tlocalStorage.setItem('test_id', i);\r\n\t\t\t\tlocalStorage.setItem('test_catid', this.props.match.params.pid);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tgoBack = () => {\r\n\t\tthis.props.history.replace('/TestList/'+this.props.match.params.pid);\r\n\t}\r\n\r\n    EndExam = () => {\r\n\t var online = navigator.onLine;\r\n\t var testObject = JSON.parse(localStorage.getItem('tests')) || [];\r\n\t var i = this.state.index;\r\n\t if(online == true){\r\n        var question_array = [];\r\n\t\tfor (var j = 0; j < testObject[i].questions.length; j++) {\r\n\t\t\t var answers =''; var marks='';\r\n\t\t\t let category = testObject[i].questions[j].questionCategory;\r\n\t\t\t if(category==1 || category==26){\r\n\t\t\t\tfor(var k=0; k < testObject[i].questions[j].choices.length; k++){\r\n\t\t\t\t\tif(testObject[i].questions[j].choices[k].checked==1){\r\n\t\t\t\t\t\tanswers += testObject[i].questions[j].choices[k].id+',';\r\n\t\t\t\t\t\tif(testObject[i].questions[j].choices[k].correct==true){\r\n\t\t\t\t\t\t\tmarks = testObject[i].questions[j].marks;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tmarks = \"-\"+testObject[i].questions[j].negativeMarks;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(answers){ answers = answers.replace(/,(?=\\s*$)/, ''); }\r\n\t\t\t\tquestion_array.push({\r\n\t\t\t\t\tquestionId: \"\"+testObject[i].questions[j].id+\"\",\r\n\t\t\t\t\tanswers: \"\"+answers+\"\",\r\n\t\t\t\t\tqnType:\"mcq\",\r\n\t\t\t\t\tmarks : \"\"+marks+\"\",\r\n\t\t\t\t\ttimeTaken : \"3600\"\r\n\t\t\t\t});\r\n\t\t\t}else if(category==4 || category==7 || category==0 || category==5){\r\n\t\t\t\t//alert(testObject[i].questions[j].answered);\r\n\t\t\t\tif(testObject[i].questions[j].answered==undefined){\r\n\t\t\t\t\ttestObject[i].questions[j].answered = '';\r\n\t\t\t\t}\r\n\t\t\t\t//alert(testObject[i].questions[j].answered);\r\n\t\t\t\tquestion_array.push({\r\n\t\t\t\t\tquestionId: \"\"+testObject[i].questions[j].id+\"\",\r\n\t\t\t\t\tanswers: \"\"+testObject[i].questions[j].answered+\"\",\r\n\t\t\t\t\tqnType:\"textAnswer\",\r\n\t\t\t\t\tmarks : \"\"+marks+\"\",\r\n\t\t\t\t\ttimeTaken : \"3600\"\r\n\t\t\t\t});\r\n\t\t\t}else if(category==2){\r\n\t\t\t\tvar questionId = testObject[i].questions[j].id;\r\n\t\t\t\tvar arr = testObject[i].questions[j].answered;\r\n\r\n\t\t\t\tvar answered = {};\r\n\t\t\t\tif(arr!=undefined){\r\n\t\t\t\t\tfor(var c = 0 ; c < arr.length ; c++){\r\n\t\t\t\t\t\tvar cur = arr[c];\r\n\t\t\t\t\t\tvar choice  = cur.split(\":\")[0];\r\n\t\t\t\t\t\tvar match  = cur.split(\":\")[1];\r\n\t\t\t\t\t\tif(answered[choice]){\r\n\t\t\t\t\t\t\tvar matches = answered[choice] ;\r\n\t\t\t\t\t\t\tmatches.push(match)\r\n\t\t\t\t\t\t\tanswered[choice] = matches; \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tvar matches = [];\r\n\t\t\t\t\t\t\tmatches.push(match)\r\n\t\t\t\t\t\t\tanswered[choice] = matches;     \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t    }\r\n\r\n\t\t\t\tvar answers = Object.keys(answered);\r\n\t\t\t\tvar attemptedAnswer = \"\";\r\n\t\t\t\tfor(var d = 0 ; d < answers.length ; d++){\r\n\t\t\t\t\tvar choice = answers[d];\r\n\t\t\t\t\tattemptedAnswer+=choice+\":\"\r\n\t\t\t\t\tfor(var e = 0 ; e < answered[choice].length ; e++){\r\n\t\t\t\t\t\tattemptedAnswer+=answered[choice][e]+\";\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\tattemptedAnswer = attemptedAnswer.slice(0, attemptedAnswer.length - 1);\r\n\t\t\t\t\tattemptedAnswer+=\",\"\r\n\t\t\t\t}\r\n\t\t\t\tattemptedAnswer = attemptedAnswer.slice(0, attemptedAnswer.length - 1);\r\n\r\n                question_array.push({\r\n\t\t\t\t\tquestionId: \"\"+questionId+\"\",\r\n\t\t\t\t\tanswers: \"\"+attemptedAnswer+\"\",\r\n\t\t\t\t\tqnType:\"mcq\",\r\n\t\t\t\t\tmarks : \"5\",\r\n\t\t\t\t\ttimeTaken : \"3600\"\r\n\t\t\t\t}); \r\n\t\t\t}\r\n\t\t}\t\r\n\t\tlet user = JSON.parse(localStorage.getItem('user')) || [];\r\n\t\tif(!user.userName){\r\n\t\t\tuser.userName = \"\";\r\n\t\t\tuser.enquiryId = localStorage.getItem('enquiryId');\r\n\t\t}\r\n\t\t\r\n\t\tvar tempDate = new Date();\r\n        var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() +' '+ tempDate.getHours()+':'+ tempDate.getMinutes()+':'+ tempDate.getSeconds();\r\n\t\tvar json_data  = {\r\n\t\t\t\"info\" : {\r\n\t\t\t   \"studentCode\"   : \"\"+user.userName+\"\",\r\n\t\t\t   \"enquiryId\"     : \"\"+user.enquiryId+\"\",\r\n\t\t\t   \"testId\"        : \"\"+testObject[i].id+\"\",\r\n\t\t\t   \"testPaperId\"   : \"0\",\r\n\t\t\t   \"startDate\"     : \"\"+date+\"\",\r\n\t\t\t   \"timeTaken\"     : \"\"+this.state.testTime+\"\"\r\n\t\t\t},\r\n\t\t\t\"attempts\" : question_array\r\n\t\t}\r\n\r\n\t\tApiService.endExam(json_data)\r\n\t\t.then((res) => {\r\n\t\t   if(res.data.status==1){\r\n\t\t\t for (var i = 0; i < testObject.length; i++) {\r\n\t\t\t   if (testObject[i].id == this.props.match.params.id) {\r\n\t\t\t\t testObject.splice(i, 1); //remove item from array\r\n\t\t\t   }\r\n\t\t\t }\r\n\t\t\t localStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t\t\t this.goBack();\r\n\t\t   }else{\r\n\t\t\t   swal({\r\n\t\t\t\ttitle: \"Alert\",\r\n\t\t\t\ttext: \"Unable to submit test. Please Try Again\",\r\n\t\t\t\tdangerMode: true,\r\n\t\t       });\r\n\t\t   }\r\n\t\t});\r\n\t}else{\r\n\t\t swal({\r\n\t\t\ttitle: \"Alert\",\r\n\t\t\ttext: \"Could not Connect to Server. Please check your Internet connection and try again Later.\",\r\n\t\t\tdangerMode: true,\r\n\t\t  })\r\n\t\t  .then(endExam => {\r\n\t\t\t\tif (endExam) {\r\n\t\t\t\t\ttestObject[i].submit=1;\r\n\t\t            localStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t\t            this.goBack();\r\n\t\t\t\t}\r\n\t\t  });\r\n        \r\n\t}\r\n\r\n   }\r\n\t\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"test-header\">\r\n\t\t\t\t<div className=\"testclose\" id=\"testclose\">\r\n\t\t\t\t\t<FontAwesomeIcon icon={ faTimesCircle } onClick={this.closeExamAlert} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<h4>{this.state.testName}</h4>\r\n\t\t\t\t{<Loader />}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\t\r\n    }\r\n\t\t\r\n}\r\n\r\nexport default TestSubmit;"]},"metadata":{},"sourceType":"module"}