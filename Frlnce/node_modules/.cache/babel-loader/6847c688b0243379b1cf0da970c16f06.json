{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\_components\\\\video-player\\\\MediaElement.jsx\";\nimport React, { Component } from 'react';\nimport flvjs from 'flv.js';\nimport hlsjs from 'hls.js';\nimport 'mediaelement';\nimport 'mediaelement/build/renderers/vimeo'; // Import stylesheet and shims\n\nimport 'mediaelement/build/mediaelementplayer.min.css';\nimport 'mediaelement/build/mediaelement-flash-video.swf';\nexport default class MediaElement extends Component {\n  constructor(props) {\n    console.log(\"MediaElement --> constructor()...\");\n    super(props);\n    this.state = {};\n    this.state = {\n      currentTime: 0.0,\n      hlsPlayer: null\n    }; // This binding is necessary to make `this` work in the callback\n    // this.handlePlayer = this.handlePlayer.bind(this);\n    //this.handleTimeUpdate = this.handleTimeUpdate.bind(this);\n\n    this.doOnOrientationChange = this.doOnOrientationChange.bind(this);\n    window.addEventListener('orientationchange', this.doOnOrientationChange);\n  }\n\n  success(media, node, instance) {\n    // Your action when media was successfully loaded\n    //console.log(\"MediaElement --> success()...\");\n    this.doOnOrientationChange();\n  }\n\n  error(media) {// Your action when media had an error loading\n  }\n\n  render() {\n    console.log(\"MediaElement --> constructor()...controls\" + this.props.controls);\n    const props = this.props,\n          sources = JSON.parse(props.sources),\n          tracks = JSON.parse(props.tracks),\n          sourceTags = [],\n          tracksTags = [];\n\n    for (let i = 0, total = sources.length; i < total; i++) {\n      const source = sources[i];\n      sourceTags.push(`<source src=\"${source.src}\" type=\"${source.type}\">`);\n    }\n\n    for (let i = 0, total = tracks.length; i < total; i++) {\n      const track = tracks[i]; //tracksTags.push(`<track src=\"${track.src}\" kind=\"${track.kind}\" srclang=\"${track.lang}\"${(track.label ? ` label=${track.label}` : '')}>`);\n\n      tracksTags.push(`<track src=\"${track.src}\" kind=\"${track.kind}\" \n\t\t\tsrclang=\"${track.lang}\" \n\t\t\t${track.label ? ` label=${track.label}` : ''} \n\t\t\t${track.label && track.label === 'en' ? 'default' : ''} \n\t\t\t>`);\n    }\n\n    const mediaBody = `${sourceTags.join(\"\\n\")}\n\t\t\t\t${tracksTags.join(\"\\n\")}`,\n          mediaHtml = props.mediaType === 'video' ? `<video id=\"${props.id}\" style=\"width:100%;height:100%;\"  width=\"${props.width}\" height=\"${props.height}\"${props.poster ? ` poster=${props.poster}` : ''}\n\t\t\t\t\t${props.controls ? ' controls' : ''}\n\t\t\t\t\t${props.preload ? ` preload=\"${props.preload}\"` : ''}>\n\t\t\t\t\t${mediaBody}\n\t\t\t\t</video>` : `<audio id=\"${props.id}\" width=\"${props.width}\" controls>\n\t\t\t\t\t${mediaBody}\n\t\t\t\t</audio>`;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: mediaHtml\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    });\n  }\n\n  componentDidMount() {\n    const {\n      MediaElementPlayer\n    } = global;\n\n    if (!MediaElementPlayer) {\n      return;\n    }\n\n    const options = Object.assign({}, JSON.parse(this.props.options), {\n      // Read the Notes below for more explanation about how to set up the path for shims\n      pluginPath: './static/media/',\n      success: (media, node, instance) => this.success(media, node, instance),\n      error: (media, node) => this.error(media, node)\n    });\n    window.flvjs = flvjs;\n    window.Hls = hlsjs; //this.setState({player: new MediaElementPlayer(this.props.id, options)});\n\n    /*\r\n        //Setting resume time/play start time.\r\n        this.setState({player: new MediaElementPlayer(this.props.id, options).setCurrentTime(30)});\r\n    */\n    //Adding Event listeners\n\n    this.setState({\n      player: new MediaElementPlayer(this.props.id, options)\n    }, () => {\n      this.state.player.media.addEventListener('timeupdate', this.handlePlayerEvent.bind(this, 'timeupdate'));\n      this.state.player.media.addEventListener('loadeddata', this.handlePlayerEvent.bind(this, 'loadeddata'));\n      this.state.player.media.addEventListener('play', this.handlePlayerEvent.bind(this, 'play'));\n      this.state.player.media.addEventListener('pause', this.handlePlayerEvent.bind(this, 'pause'));\n      this.state.player.media.addEventListener('ended', this.handlePlayerEvent.bind(this, 'ended'));\n      this.state.player.media.addEventListener('seeked', this.handlePlayerEvent.bind(this, 'seeked'));\n      this.state.player.media.addEventListener('volumechange', this.handlePlayerEvent.bind(this, 'volumechange'));\n      var hlsPlayer = document.getElementById('mediaelementvideopalyer1_native_hls');\n\n      if (hlsPlayer) {\n        hlsPlayer.addEventListener('timeupdate', this.handlePlayerEvent.bind(this, 'timeupdate'));\n        hlsPlayer.addEventListener('loadeddata', this.handlePlayerEvent.bind(this, 'loadeddata'));\n        hlsPlayer.addEventListener('play', this.handlePlayerEvent.bind(this, 'play'));\n        hlsPlayer.addEventListener('pause', this.handlePlayerEvent.bind(this, 'pause'));\n        hlsPlayer.addEventListener('ended', this.handlePlayerEvent.bind(this, 'ended'));\n        hlsPlayer.addEventListener('seeked', this.handlePlayerEvent.bind(this, 'seeked'));\n        hlsPlayer.addEventListener('volumechange', this.handlePlayerEvent.bind(this, 'volumechange'));\n      }\n    });\n  }\n\n  handleTimeUpdate() {\n    console.log(\"MediaElement --> handleTimeUpdate()... Current time \" + this.state.player.media.getCurrentTime());\n    /* this.setState(state => ({\r\n         currentTime: this.state.player.media.getCurrentTime()\r\n     }));*/\n  }\n\n  handlePlayerEvent(playerState) {\n    //console.log(\"MediaElement --> handlePlayerEvent()... Current time \"+this.state.player.media.getCurrentTime());\n    let eventData = {\n      event: playerState,\n      currenTime: this.state.player.media.getCurrentTime()\n    };\n    const {\n      onPlayerEvent = f => f\n    } = this.props;\n    onPlayerEvent(eventData);\n  }\n\n  doOnOrientationChange() {\n    let orientation = window.screen.orientation; //console.log(\"doOnOrientationChange()...\"+orientation);\n\n    try {\n      switch (orientation.angle) {\n        case -90:\n        case 90:\n          //console.log(\"landscape\");\n          {\n            if (this.state && this.state.player) {\n              this.state.player.enterFullScreen();\n            }\n          }\n          break;\n\n        default:\n          //console.log(\"portrait\");\n          {\n            if (this.state && this.state.player) {\n              this.state.player.exitFullScreen();\n            }\n          }\n          break;\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.player) {\n      try {\n        this.state.player.remove();\n        this.setState({\n          player: null\n        });\n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/_components/video-player/MediaElement.jsx"],"names":["React","Component","flvjs","hlsjs","MediaElement","constructor","props","console","log","state","currentTime","hlsPlayer","doOnOrientationChange","bind","window","addEventListener","success","media","node","instance","error","render","controls","sources","JSON","parse","tracks","sourceTags","tracksTags","i","total","length","source","push","src","type","track","kind","lang","label","mediaBody","join","mediaHtml","mediaType","id","width","height","poster","preload","__html","componentDidMount","MediaElementPlayer","global","options","Object","assign","pluginPath","Hls","setState","player","handlePlayerEvent","document","getElementById","handleTimeUpdate","getCurrentTime","playerState","eventData","event","currenTime","onPlayerEvent","f","orientation","screen","angle","enterFullScreen","exitFullScreen","err","message","componentWillUnmount","remove"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport flvjs from 'flv.js';\r\nimport hlsjs from 'hls.js';\r\nimport 'mediaelement';\r\nimport 'mediaelement/build/renderers/vimeo';\r\n\r\n// Import stylesheet and shims\r\nimport 'mediaelement/build/mediaelementplayer.min.css';\r\nimport 'mediaelement/build/mediaelement-flash-video.swf';\r\n\r\nexport default class MediaElement extends Component {\r\n\r\n    state = {}\r\n    \r\n    constructor(props) {\r\n\t\tconsole.log(\"MediaElement --> constructor()...\");\r\n        super(props);\r\n        this.state = {currentTime: 0.0, hlsPlayer: null};\r\n        \r\n        // This binding is necessary to make `this` work in the callback\r\n       // this.handlePlayer = this.handlePlayer.bind(this);\r\n\t\t//this.handleTimeUpdate = this.handleTimeUpdate.bind(this);\r\n\t\tthis.doOnOrientationChange = this.doOnOrientationChange.bind(this);\r\n\t\twindow.addEventListener('orientationchange', this.doOnOrientationChange);\r\n    }\r\n\r\n\tsuccess(media, node, instance) {\r\n\t\t// Your action when media was successfully loaded\r\n\t\t//console.log(\"MediaElement --> success()...\");\r\n\t\tthis.doOnOrientationChange();\r\n\t}\r\n\r\n\terror(media) {\r\n\t\t// Your action when media had an error loading\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.log(\"MediaElement --> constructor()...controls\"+this.props.controls);\r\n\t\tconst\r\n\t\t\tprops = this.props,\r\n\t\t\tsources = JSON.parse(props.sources),\r\n\t\t\ttracks = JSON.parse(props.tracks),\r\n\t\t\tsourceTags = [],\r\n\t\t\ttracksTags = []\r\n\t\t;\r\n\r\n\t\tfor (let i = 0, total = sources.length; i < total; i++) {\r\n\t\t\tconst source = sources[i];\r\n\t\t\tsourceTags.push(`<source src=\"${source.src}\" type=\"${source.type}\">`);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0, total = tracks.length; i < total; i++) {\r\n\t\t\tconst track = tracks[i];\r\n\t\t\t//tracksTags.push(`<track src=\"${track.src}\" kind=\"${track.kind}\" srclang=\"${track.lang}\"${(track.label ? ` label=${track.label}` : '')}>`);\r\n\t\t\ttracksTags.push(`<track src=\"${track.src}\" kind=\"${track.kind}\" \r\n\t\t\tsrclang=\"${track.lang}\" \r\n\t\t\t${(track.label ? ` label=${track.label}` : '' )} \r\n\t\t\t${(track.label && track.label==='en')? 'default' :''} \r\n\t\t\t>`);\r\n\t\t}\r\n\r\n\t\tconst\r\n\t\t\tmediaBody = `${sourceTags.join(\"\\n\")}\r\n\t\t\t\t${tracksTags.join(\"\\n\")}`,\r\n\t\t\tmediaHtml = props.mediaType === 'video' ?\r\n\t\t\t\t`<video id=\"${props.id}\" style=\"width:100%;height:100%;\"  width=\"${props.width}\" height=\"${props.height}\"${(props.poster ? ` poster=${props.poster}` : '')}\r\n\t\t\t\t\t${(props.controls ? ' controls' : '')}\r\n\t\t\t\t\t${(props.preload ? ` preload=\"${props.preload}\"` : '')}>\r\n\t\t\t\t\t${mediaBody}\r\n\t\t\t\t</video>` :\r\n\t\t\t\t`<audio id=\"${props.id}\" width=\"${props.width}\" controls>\r\n\t\t\t\t\t${mediaBody}\r\n\t\t\t\t</audio>`\r\n\t\t;\r\n\r\n\t\treturn (<div dangerouslySetInnerHTML={{__html: mediaHtml}}></div>);\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst {MediaElementPlayer} = global;\t\t\r\n\t\tif (!MediaElementPlayer) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst options = Object.assign({}, JSON.parse(this.props.options), {\r\n\t\t\t// Read the Notes below for more explanation about how to set up the path for shims\r\n\t\t\tpluginPath: './static/media/',\r\n\t\t\tsuccess: (media, node, instance) => this.success(media, node, instance),\r\n\t\t\terror: (media, node) => this.error(media, node)\r\n\t\t});\t\t\r\n\t\twindow.flvjs = flvjs;\r\n\t\twindow.Hls = hlsjs;\r\n\t\t//this.setState({player: new MediaElementPlayer(this.props.id, options)});\r\n        /*\r\n            //Setting resume time/play start time.\r\n            this.setState({player: new MediaElementPlayer(this.props.id, options).setCurrentTime(30)});\r\n        */\r\n       \r\n        //Adding Event listeners\r\n        this.setState({player: new MediaElementPlayer(this.props.id, options)}, \r\n            () => {\r\n                this.state.player.media.addEventListener('timeupdate', this.handlePlayerEvent.bind(this,'timeupdate'));\r\n                this.state.player.media.addEventListener('loadeddata', this.handlePlayerEvent.bind(this,'loadeddata'));\r\n                this.state.player.media.addEventListener('play', this.handlePlayerEvent.bind(this,'play'));\r\n                this.state.player.media.addEventListener('pause', this.handlePlayerEvent.bind(this,'pause'));\r\n                this.state.player.media.addEventListener('ended', this.handlePlayerEvent.bind(this,'ended'));\r\n                this.state.player.media.addEventListener('seeked', this.handlePlayerEvent.bind(this,'seeked'));\r\n                this.state.player.media.addEventListener('volumechange', this.handlePlayerEvent.bind(this,'volumechange'));\r\n                var hlsPlayer = document.getElementById('mediaelementvideopalyer1_native_hls');\r\n                if(hlsPlayer) {\r\n                    hlsPlayer.addEventListener('timeupdate',this.handlePlayerEvent.bind(this,'timeupdate'))\r\n                    hlsPlayer.addEventListener('loadeddata',this.handlePlayerEvent.bind(this,'loadeddata'));\r\n                    hlsPlayer.addEventListener('play',this.handlePlayerEvent.bind(this,'play'));\r\n                    hlsPlayer.addEventListener('pause',this.handlePlayerEvent.bind(this,'pause'));\r\n                    hlsPlayer.addEventListener('ended',this.handlePlayerEvent.bind(this,'ended'));\r\n                    hlsPlayer.addEventListener('seeked',this.handlePlayerEvent.bind(this,'seeked'));\r\n                    hlsPlayer.addEventListener('volumechange', this.handlePlayerEvent.bind(this,'volumechange'));\r\n                }\r\n            }\r\n        );\r\n    }\r\n    \r\n    handleTimeUpdate() {\r\n        console.log(\"MediaElement --> handleTimeUpdate()... Current time \"+this.state.player.media.getCurrentTime());\r\n       /* this.setState(state => ({\r\n            currentTime: this.state.player.media.getCurrentTime()\r\n        }));*/\r\n    }\r\n\r\n    handlePlayerEvent(playerState) {\r\n        //console.log(\"MediaElement --> handlePlayerEvent()... Current time \"+this.state.player.media.getCurrentTime());\r\n\t\tlet eventData={event: playerState, currenTime: this.state.player.media.getCurrentTime()}\r\n        const { onPlayerEvent = f => f } = this.props;\r\n        onPlayerEvent(eventData);  \r\n\t}\r\n\r\n\tdoOnOrientationChange() {\r\n\t\tlet orientation = window.screen.orientation;\r\n\t\t//console.log(\"doOnOrientationChange()...\"+orientation);\r\n\t\ttry {\r\n\t\t\tswitch(orientation.angle) { \r\n\t\t\t\tcase -90:\r\n\t\t\t\tcase 90:\r\n\t\t\t\t//console.log(\"landscape\");\r\n\t\t\t\t{\r\n\t\t\t\tif(this.state && this.state.player) {\r\n\t\t\t\t\tthis.state.player.enterFullScreen();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t//console.log(\"portrait\");\r\n\t\t\t\t{\r\n\t\t\t\t\tif(this.state && this.state.player) {\r\n\t\t\t\t\t\tthis.state.player.exitFullScreen();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(err) {\r\n\t\t\tconsole.log(err.message);\t\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tif (this.state.player) {\r\n            try {\r\n                this.state.player.remove();\r\n\t\t\t    this.setState({player: null});\r\n            }\r\n            catch(err) {\r\n                console.log(err.message);\r\n            }\t\t\t\r\n\t\t}\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}