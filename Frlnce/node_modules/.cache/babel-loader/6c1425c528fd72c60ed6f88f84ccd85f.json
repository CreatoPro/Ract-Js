{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _core = require(\"../../utils/core\");\n\nvar _default2 = _interopRequireDefault(require(\"../default\"));\n\nvar _snap = _interopRequireDefault(require(\"../helpers/snap\"));\n\nvar _constants = require(\"../../utils/constants\");\n\nvar _debounce = _interopRequireDefault(require(\"lodash/debounce\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nclass ContinuousViewManager extends _default2.default {\n  constructor(options) {\n    super(options);\n    this.name = \"continuous\";\n    this.settings = (0, _core.extend)(this.settings || {}, {\n      infinite: true,\n      overflow: undefined,\n      axis: undefined,\n      writingMode: undefined,\n      flow: \"scrolled\",\n      offset: 500,\n      offsetDelta: 250,\n      width: undefined,\n      height: undefined,\n      snap: false,\n      afterScrolledTimeout: 10,\n      allowScriptedContent: false,\n      allowPopups: false\n    });\n    (0, _core.extend)(this.settings, options.settings || {}); // Gap can be 0, but defaults doesn't handle that\n\n    if (options.settings.gap != \"undefined\" && options.settings.gap === 0) {\n      this.settings.gap = options.settings.gap;\n    }\n\n    this.viewSettings = {\n      ignoreClass: this.settings.ignoreClass,\n      axis: this.settings.axis,\n      flow: this.settings.flow,\n      layout: this.layout,\n      width: 0,\n      height: 0,\n      forceEvenPages: false,\n      allowScriptedContent: this.settings.allowScriptedContent,\n      allowPopups: this.settings.allowPopups\n    };\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n  }\n\n  display(section, target) {\n    return _default2.default.prototype.display.call(this, section, target).then(function () {\n      return this.fill();\n    }.bind(this));\n  }\n\n  fill(_full) {\n    var full = _full || new _core.defer();\n    this.q.enqueue(() => {\n      return this.check();\n    }).then(result => {\n      if (result) {\n        this.fill(full);\n      } else {\n        full.resolve();\n      }\n    });\n    return full.promise;\n  }\n\n  moveTo(offset) {\n    // var bounds = this.stage.bounds();\n    // var dist = Math.floor(offset.top / bounds.height) * bounds.height;\n    var distX = 0,\n        distY = 0;\n    var offsetX = 0,\n        offsetY = 0;\n\n    if (!this.isPaginated) {\n      distY = offset.top;\n      offsetY = offset.top + this.settings.offsetDelta;\n    } else {\n      distX = Math.floor(offset.left / this.layout.delta) * this.layout.delta;\n      offsetX = distX + this.settings.offsetDelta;\n    }\n\n    if (distX > 0 || distY > 0) {\n      this.scrollBy(distX, distY, true);\n    }\n  }\n\n  afterResized(view) {\n    this.emit(_constants.EVENTS.MANAGERS.RESIZE, view.section);\n  } // Remove Previous Listeners if present\n\n\n  removeShownListeners(view) {\n    // view.off(\"shown\", this.afterDisplayed);\n    // view.off(\"shown\", this.afterDisplayedAbove);\n    view.onDisplayed = function () {};\n  }\n\n  add(section) {\n    var view = this.createView(section);\n    this.views.append(view);\n    view.on(_constants.EVENTS.VIEWS.RESIZED, bounds => {\n      view.expanded = true;\n    });\n    view.on(_constants.EVENTS.VIEWS.AXIS, axis => {\n      this.updateAxis(axis);\n    });\n    view.on(_constants.EVENTS.VIEWS.WRITING_MODE, mode => {\n      this.updateWritingMode(mode);\n    }); // view.on(EVENTS.VIEWS.SHOWN, this.afterDisplayed.bind(this));\n\n    view.onDisplayed = this.afterDisplayed.bind(this);\n    view.onResize = this.afterResized.bind(this);\n    return view.display(this.request);\n  }\n\n  append(section) {\n    var view = this.createView(section);\n    view.on(_constants.EVENTS.VIEWS.RESIZED, bounds => {\n      view.expanded = true;\n    });\n    view.on(_constants.EVENTS.VIEWS.AXIS, axis => {\n      this.updateAxis(axis);\n    });\n    view.on(_constants.EVENTS.VIEWS.WRITING_MODE, mode => {\n      this.updateWritingMode(mode);\n    });\n    this.views.append(view);\n    view.onDisplayed = this.afterDisplayed.bind(this);\n    return view;\n  }\n\n  prepend(section) {\n    var view = this.createView(section);\n    view.on(_constants.EVENTS.VIEWS.RESIZED, bounds => {\n      this.counter(bounds);\n      view.expanded = true;\n    });\n    view.on(_constants.EVENTS.VIEWS.AXIS, axis => {\n      this.updateAxis(axis);\n    });\n    view.on(_constants.EVENTS.VIEWS.WRITING_MODE, mode => {\n      this.updateWritingMode(mode);\n    });\n    this.views.prepend(view);\n    view.onDisplayed = this.afterDisplayed.bind(this);\n    return view;\n  }\n\n  counter(bounds) {\n    if (this.settings.axis === \"vertical\") {\n      this.scrollBy(0, bounds.heightDelta, true);\n    } else {\n      this.scrollBy(bounds.widthDelta, 0, true);\n    }\n  }\n\n  update(_offset) {\n    var container = this.bounds();\n    var views = this.views.all();\n    var viewsLength = views.length;\n    var visible = [];\n    var offset = typeof _offset != \"undefined\" ? _offset : this.settings.offset || 0;\n    var isVisible;\n    var view;\n    var updating = new _core.defer();\n    var promises = [];\n\n    for (var i = 0; i < viewsLength; i++) {\n      view = views[i];\n      isVisible = this.isVisible(view, offset, offset, container);\n\n      if (isVisible === true) {\n        // console.log(\"visible \" + view.index, view.displayed);\n        if (!view.displayed) {\n          let displayed = view.display(this.request).then(function (view) {\n            view.show();\n          }, err => {\n            view.hide();\n          });\n          promises.push(displayed);\n        } else {\n          view.show();\n        }\n\n        visible.push(view);\n      } else {\n        this.q.enqueue(view.destroy.bind(view)); // console.log(\"hidden \" + view.index, view.displayed);\n\n        clearTimeout(this.trimTimeout);\n        this.trimTimeout = setTimeout(function () {\n          this.q.enqueue(this.trim.bind(this));\n        }.bind(this), 250);\n      }\n    }\n\n    if (promises.length) {\n      return Promise.all(promises).catch(err => {\n        updating.reject(err);\n      });\n    } else {\n      updating.resolve();\n      return updating.promise;\n    }\n  }\n\n  check(_offsetLeft, _offsetTop) {\n    var checking = new _core.defer();\n    var newViews = [];\n    var horizontal = this.settings.axis === \"horizontal\";\n    var delta = this.settings.offset || 0;\n\n    if (_offsetLeft && horizontal) {\n      delta = _offsetLeft;\n    }\n\n    if (_offsetTop && !horizontal) {\n      delta = _offsetTop;\n    }\n\n    var bounds = this._bounds; // bounds saved this until resize\n\n    let offset = horizontal ? this.scrollLeft : this.scrollTop;\n    let visibleLength = horizontal ? Math.floor(bounds.width) : bounds.height;\n    let contentLength = horizontal ? this.container.scrollWidth : this.container.scrollHeight;\n    let writingMode = this.writingMode && this.writingMode.indexOf(\"vertical\") === 0 ? \"vertical\" : \"horizontal\";\n    let rtlScrollType = this.settings.rtlScrollType;\n    let rtl = this.settings.direction === \"rtl\";\n\n    if (!this.settings.fullsize) {\n      // Scroll offset starts at width of element\n      if (rtl && rtlScrollType === \"default\" && writingMode === \"horizontal\") {\n        offset = contentLength - visibleLength - offset;\n      } // Scroll offset starts at 0 and goes negative\n\n\n      if (rtl && rtlScrollType === \"negative\" && writingMode === \"horizontal\") {\n        offset = offset * -1;\n      }\n    } else {\n      // Scroll offset starts at 0 and goes negative\n      if (horizontal && rtl && rtlScrollType === \"negative\" || !horizontal && rtl && rtlScrollType === \"default\") {\n        offset = offset * -1;\n      }\n    }\n\n    let prepend = () => {\n      let first = this.views.first();\n      let prev = first && first.section.prev();\n\n      if (prev) {\n        newViews.push(this.prepend(prev));\n      }\n    };\n\n    let append = () => {\n      let last = this.views.last();\n      let next = last && last.section.next();\n\n      if (next) {\n        newViews.push(this.append(next));\n      }\n    };\n\n    let end = offset + visibleLength + delta;\n    let start = offset - delta;\n\n    if (end >= contentLength) {\n      append();\n    }\n\n    if (start < 0) {\n      prepend();\n    }\n\n    let promises = newViews.map(view => {\n      return view.display(this.request);\n    });\n\n    if (newViews.length) {\n      return Promise.all(promises).then(() => {\n        return this.check();\n      }).then(() => {\n        // Check to see if anything new is on screen after rendering\n        return this.update(delta);\n      }, err => {\n        return err;\n      });\n    } else {\n      this.q.enqueue(function () {\n        this.update();\n      }.bind(this));\n      checking.resolve(false);\n      return checking.promise;\n    }\n  }\n\n  trim() {\n    var task = new _core.defer();\n    var displayed = this.views.displayed();\n    var first = displayed[0];\n    var last = displayed[displayed.length - 1];\n    var firstIndex = this.views.indexOf(first);\n    var lastIndex = this.views.indexOf(last);\n    var above = this.views.slice(0, firstIndex);\n    var below = this.views.slice(lastIndex + 1); // Erase all but last above\n\n    for (var i = 0; i < above.length - 1; i++) {\n      this.erase(above[i], above);\n    } // Erase all except first below\n\n\n    for (var j = 1; j < below.length; j++) {\n      this.erase(below[j]);\n    }\n\n    task.resolve();\n    return task.promise;\n  }\n\n  erase(view, above) {\n    //Trim\n    var prevTop;\n    var prevLeft;\n\n    if (!this.settings.fullsize) {\n      prevTop = this.container.scrollTop;\n      prevLeft = this.container.scrollLeft;\n    } else {\n      prevTop = window.scrollY;\n      prevLeft = window.scrollX;\n    }\n\n    var bounds = view.bounds();\n    this.views.remove(view);\n\n    if (above) {\n      if (this.settings.axis === \"vertical\") {\n        this.scrollTo(0, prevTop - bounds.height, true);\n      } else {\n        if (this.settings.direction === 'rtl') {\n          if (!this.settings.fullsize) {\n            this.scrollTo(prevLeft, 0, true);\n          } else {\n            this.scrollTo(prevLeft + Math.floor(bounds.width), 0, true);\n          }\n        } else {\n          this.scrollTo(prevLeft - Math.floor(bounds.width), 0, true);\n        }\n      }\n    }\n  }\n\n  addEventListeners(stage) {\n    window.addEventListener(\"unload\", function (e) {\n      this.ignore = true; // this.scrollTo(0,0);\n\n      this.destroy();\n    }.bind(this));\n    this.addScrollListeners();\n\n    if (this.isPaginated && this.settings.snap) {\n      this.snapper = new _snap.default(this, this.settings.snap && typeof this.settings.snap === \"object\" && this.settings.snap);\n    }\n  }\n\n  addScrollListeners() {\n    var scroller;\n    this.tick = _core.requestAnimationFrame;\n    let dir = this.settings.direction === \"rtl\" && this.settings.rtlScrollType === \"default\" ? -1 : 1;\n    this.scrollDeltaVert = 0;\n    this.scrollDeltaHorz = 0;\n\n    if (!this.settings.fullsize) {\n      scroller = this.container;\n      this.scrollTop = this.container.scrollTop;\n      this.scrollLeft = this.container.scrollLeft;\n    } else {\n      scroller = window;\n      this.scrollTop = window.scrollY * dir;\n      this.scrollLeft = window.scrollX * dir;\n    }\n\n    this._onScroll = this.onScroll.bind(this);\n    scroller.addEventListener(\"scroll\", this._onScroll);\n    this._scrolled = (0, _debounce.default)(this.scrolled.bind(this), 30); // this.tick.call(window, this.onScroll.bind(this));\n\n    this.didScroll = false;\n  }\n\n  removeEventListeners() {\n    var scroller;\n\n    if (!this.settings.fullsize) {\n      scroller = this.container;\n    } else {\n      scroller = window;\n    }\n\n    scroller.removeEventListener(\"scroll\", this._onScroll);\n    this._onScroll = undefined;\n  }\n\n  onScroll() {\n    let scrollTop;\n    let scrollLeft;\n    let dir = this.settings.direction === \"rtl\" && this.settings.rtlScrollType === \"default\" ? -1 : 1;\n\n    if (!this.settings.fullsize) {\n      scrollTop = this.container.scrollTop;\n      scrollLeft = this.container.scrollLeft;\n    } else {\n      scrollTop = window.scrollY * dir;\n      scrollLeft = window.scrollX * dir;\n    }\n\n    this.scrollTop = scrollTop;\n    this.scrollLeft = scrollLeft;\n\n    if (!this.ignore) {\n      this._scrolled();\n    } else {\n      this.ignore = false;\n    }\n\n    this.scrollDeltaVert += Math.abs(scrollTop - this.prevScrollTop);\n    this.scrollDeltaHorz += Math.abs(scrollLeft - this.prevScrollLeft);\n    this.prevScrollTop = scrollTop;\n    this.prevScrollLeft = scrollLeft;\n    clearTimeout(this.scrollTimeout);\n    this.scrollTimeout = setTimeout(function () {\n      this.scrollDeltaVert = 0;\n      this.scrollDeltaHorz = 0;\n    }.bind(this), 150);\n    clearTimeout(this.afterScrolled);\n    this.didScroll = false;\n  }\n\n  scrolled() {\n    this.q.enqueue(function () {\n      return this.check();\n    }.bind(this));\n    this.emit(_constants.EVENTS.MANAGERS.SCROLL, {\n      top: this.scrollTop,\n      left: this.scrollLeft\n    });\n    clearTimeout(this.afterScrolled);\n    this.afterScrolled = setTimeout(function () {\n      // Don't report scroll if we are about the snap\n      if (this.snapper && this.snapper.supportsTouch && this.snapper.needsSnap()) {\n        return;\n      }\n\n      this.emit(_constants.EVENTS.MANAGERS.SCROLLED, {\n        top: this.scrollTop,\n        left: this.scrollLeft\n      });\n    }.bind(this), this.settings.afterScrolledTimeout);\n  }\n\n  next() {\n    let delta = this.layout.props.name === \"pre-paginated\" && this.layout.props.spread ? this.layout.props.delta * 2 : this.layout.props.delta;\n    if (!this.views.length) return;\n\n    if (this.isPaginated && this.settings.axis === \"horizontal\") {\n      this.scrollBy(delta, 0, true);\n    } else {\n      this.scrollBy(0, this.layout.height, true);\n    }\n\n    this.q.enqueue(function () {\n      return this.check();\n    }.bind(this));\n  }\n\n  prev() {\n    let delta = this.layout.props.name === \"pre-paginated\" && this.layout.props.spread ? this.layout.props.delta * 2 : this.layout.props.delta;\n    if (!this.views.length) return;\n\n    if (this.isPaginated && this.settings.axis === \"horizontal\") {\n      this.scrollBy(-delta, 0, true);\n    } else {\n      this.scrollBy(0, -this.layout.height, true);\n    }\n\n    this.q.enqueue(function () {\n      return this.check();\n    }.bind(this));\n  }\n\n  updateFlow(flow) {\n    if (this.rendered && this.snapper) {\n      this.snapper.destroy();\n      this.snapper = undefined;\n    }\n\n    super.updateFlow(flow, \"scroll\");\n\n    if (this.rendered && this.isPaginated && this.settings.snap) {\n      this.snapper = new _snap.default(this, this.settings.snap && typeof this.settings.snap === \"object\" && this.settings.snap);\n    }\n  }\n\n  destroy() {\n    super.destroy();\n\n    if (this.snapper) {\n      this.snapper.destroy();\n    }\n  }\n\n}\n\nvar _default = ContinuousViewManager;\nexports.default = _default;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/node_modules/epubjs/lib/managers/continuous/index.js"],"names":["Object","defineProperty","exports","value","default","_core","require","_default2","_interopRequireDefault","_snap","_constants","_debounce","obj","__esModule","ContinuousViewManager","constructor","options","name","settings","extend","infinite","overflow","undefined","axis","writingMode","flow","offset","offsetDelta","width","height","snap","afterScrolledTimeout","allowScriptedContent","allowPopups","gap","viewSettings","ignoreClass","layout","forceEvenPages","scrollTop","scrollLeft","display","section","target","prototype","call","then","fill","bind","_full","full","defer","q","enqueue","check","result","resolve","promise","moveTo","distX","distY","offsetX","offsetY","isPaginated","top","Math","floor","left","delta","scrollBy","afterResized","view","emit","EVENTS","MANAGERS","RESIZE","removeShownListeners","onDisplayed","add","createView","views","append","on","VIEWS","RESIZED","bounds","expanded","AXIS","updateAxis","WRITING_MODE","mode","updateWritingMode","afterDisplayed","onResize","request","prepend","counter","heightDelta","widthDelta","update","_offset","container","all","viewsLength","length","visible","isVisible","updating","promises","i","displayed","show","err","hide","push","destroy","clearTimeout","trimTimeout","setTimeout","trim","Promise","catch","reject","_offsetLeft","_offsetTop","checking","newViews","horizontal","_bounds","visibleLength","contentLength","scrollWidth","scrollHeight","indexOf","rtlScrollType","rtl","direction","fullsize","first","prev","last","next","end","start","map","task","firstIndex","lastIndex","above","slice","below","erase","j","prevTop","prevLeft","window","scrollY","scrollX","remove","scrollTo","addEventListeners","stage","addEventListener","e","ignore","addScrollListeners","snapper","scroller","tick","requestAnimationFrame","dir","scrollDeltaVert","scrollDeltaHorz","_onScroll","onScroll","_scrolled","scrolled","didScroll","removeEventListeners","removeEventListener","abs","prevScrollTop","prevScrollLeft","scrollTimeout","afterScrolled","SCROLL","supportsTouch","needsSnap","SCROLLED","props","spread","updateFlow","rendered","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _core = require(\"../../utils/core\");\n\nvar _default2 = _interopRequireDefault(require(\"../default\"));\n\nvar _snap = _interopRequireDefault(require(\"../helpers/snap\"));\n\nvar _constants = require(\"../../utils/constants\");\n\nvar _debounce = _interopRequireDefault(require(\"lodash/debounce\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass ContinuousViewManager extends _default2.default {\n  constructor(options) {\n    super(options);\n    this.name = \"continuous\";\n    this.settings = (0, _core.extend)(this.settings || {}, {\n      infinite: true,\n      overflow: undefined,\n      axis: undefined,\n      writingMode: undefined,\n      flow: \"scrolled\",\n      offset: 500,\n      offsetDelta: 250,\n      width: undefined,\n      height: undefined,\n      snap: false,\n      afterScrolledTimeout: 10,\n      allowScriptedContent: false,\n      allowPopups: false\n    });\n    (0, _core.extend)(this.settings, options.settings || {}); // Gap can be 0, but defaults doesn't handle that\n\n    if (options.settings.gap != \"undefined\" && options.settings.gap === 0) {\n      this.settings.gap = options.settings.gap;\n    }\n\n    this.viewSettings = {\n      ignoreClass: this.settings.ignoreClass,\n      axis: this.settings.axis,\n      flow: this.settings.flow,\n      layout: this.layout,\n      width: 0,\n      height: 0,\n      forceEvenPages: false,\n      allowScriptedContent: this.settings.allowScriptedContent,\n      allowPopups: this.settings.allowPopups\n    };\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n  }\n\n  display(section, target) {\n    return _default2.default.prototype.display.call(this, section, target).then(function () {\n      return this.fill();\n    }.bind(this));\n  }\n\n  fill(_full) {\n    var full = _full || new _core.defer();\n    this.q.enqueue(() => {\n      return this.check();\n    }).then(result => {\n      if (result) {\n        this.fill(full);\n      } else {\n        full.resolve();\n      }\n    });\n    return full.promise;\n  }\n\n  moveTo(offset) {\n    // var bounds = this.stage.bounds();\n    // var dist = Math.floor(offset.top / bounds.height) * bounds.height;\n    var distX = 0,\n        distY = 0;\n    var offsetX = 0,\n        offsetY = 0;\n\n    if (!this.isPaginated) {\n      distY = offset.top;\n      offsetY = offset.top + this.settings.offsetDelta;\n    } else {\n      distX = Math.floor(offset.left / this.layout.delta) * this.layout.delta;\n      offsetX = distX + this.settings.offsetDelta;\n    }\n\n    if (distX > 0 || distY > 0) {\n      this.scrollBy(distX, distY, true);\n    }\n  }\n\n  afterResized(view) {\n    this.emit(_constants.EVENTS.MANAGERS.RESIZE, view.section);\n  } // Remove Previous Listeners if present\n\n\n  removeShownListeners(view) {\n    // view.off(\"shown\", this.afterDisplayed);\n    // view.off(\"shown\", this.afterDisplayedAbove);\n    view.onDisplayed = function () {};\n  }\n\n  add(section) {\n    var view = this.createView(section);\n    this.views.append(view);\n    view.on(_constants.EVENTS.VIEWS.RESIZED, bounds => {\n      view.expanded = true;\n    });\n    view.on(_constants.EVENTS.VIEWS.AXIS, axis => {\n      this.updateAxis(axis);\n    });\n    view.on(_constants.EVENTS.VIEWS.WRITING_MODE, mode => {\n      this.updateWritingMode(mode);\n    }); // view.on(EVENTS.VIEWS.SHOWN, this.afterDisplayed.bind(this));\n\n    view.onDisplayed = this.afterDisplayed.bind(this);\n    view.onResize = this.afterResized.bind(this);\n    return view.display(this.request);\n  }\n\n  append(section) {\n    var view = this.createView(section);\n    view.on(_constants.EVENTS.VIEWS.RESIZED, bounds => {\n      view.expanded = true;\n    });\n    view.on(_constants.EVENTS.VIEWS.AXIS, axis => {\n      this.updateAxis(axis);\n    });\n    view.on(_constants.EVENTS.VIEWS.WRITING_MODE, mode => {\n      this.updateWritingMode(mode);\n    });\n    this.views.append(view);\n    view.onDisplayed = this.afterDisplayed.bind(this);\n    return view;\n  }\n\n  prepend(section) {\n    var view = this.createView(section);\n    view.on(_constants.EVENTS.VIEWS.RESIZED, bounds => {\n      this.counter(bounds);\n      view.expanded = true;\n    });\n    view.on(_constants.EVENTS.VIEWS.AXIS, axis => {\n      this.updateAxis(axis);\n    });\n    view.on(_constants.EVENTS.VIEWS.WRITING_MODE, mode => {\n      this.updateWritingMode(mode);\n    });\n    this.views.prepend(view);\n    view.onDisplayed = this.afterDisplayed.bind(this);\n    return view;\n  }\n\n  counter(bounds) {\n    if (this.settings.axis === \"vertical\") {\n      this.scrollBy(0, bounds.heightDelta, true);\n    } else {\n      this.scrollBy(bounds.widthDelta, 0, true);\n    }\n  }\n\n  update(_offset) {\n    var container = this.bounds();\n    var views = this.views.all();\n    var viewsLength = views.length;\n    var visible = [];\n    var offset = typeof _offset != \"undefined\" ? _offset : this.settings.offset || 0;\n    var isVisible;\n    var view;\n    var updating = new _core.defer();\n    var promises = [];\n\n    for (var i = 0; i < viewsLength; i++) {\n      view = views[i];\n      isVisible = this.isVisible(view, offset, offset, container);\n\n      if (isVisible === true) {\n        // console.log(\"visible \" + view.index, view.displayed);\n        if (!view.displayed) {\n          let displayed = view.display(this.request).then(function (view) {\n            view.show();\n          }, err => {\n            view.hide();\n          });\n          promises.push(displayed);\n        } else {\n          view.show();\n        }\n\n        visible.push(view);\n      } else {\n        this.q.enqueue(view.destroy.bind(view)); // console.log(\"hidden \" + view.index, view.displayed);\n\n        clearTimeout(this.trimTimeout);\n        this.trimTimeout = setTimeout(function () {\n          this.q.enqueue(this.trim.bind(this));\n        }.bind(this), 250);\n      }\n    }\n\n    if (promises.length) {\n      return Promise.all(promises).catch(err => {\n        updating.reject(err);\n      });\n    } else {\n      updating.resolve();\n      return updating.promise;\n    }\n  }\n\n  check(_offsetLeft, _offsetTop) {\n    var checking = new _core.defer();\n    var newViews = [];\n    var horizontal = this.settings.axis === \"horizontal\";\n    var delta = this.settings.offset || 0;\n\n    if (_offsetLeft && horizontal) {\n      delta = _offsetLeft;\n    }\n\n    if (_offsetTop && !horizontal) {\n      delta = _offsetTop;\n    }\n\n    var bounds = this._bounds; // bounds saved this until resize\n\n    let offset = horizontal ? this.scrollLeft : this.scrollTop;\n    let visibleLength = horizontal ? Math.floor(bounds.width) : bounds.height;\n    let contentLength = horizontal ? this.container.scrollWidth : this.container.scrollHeight;\n    let writingMode = this.writingMode && this.writingMode.indexOf(\"vertical\") === 0 ? \"vertical\" : \"horizontal\";\n    let rtlScrollType = this.settings.rtlScrollType;\n    let rtl = this.settings.direction === \"rtl\";\n\n    if (!this.settings.fullsize) {\n      // Scroll offset starts at width of element\n      if (rtl && rtlScrollType === \"default\" && writingMode === \"horizontal\") {\n        offset = contentLength - visibleLength - offset;\n      } // Scroll offset starts at 0 and goes negative\n\n\n      if (rtl && rtlScrollType === \"negative\" && writingMode === \"horizontal\") {\n        offset = offset * -1;\n      }\n    } else {\n      // Scroll offset starts at 0 and goes negative\n      if (horizontal && rtl && rtlScrollType === \"negative\" || !horizontal && rtl && rtlScrollType === \"default\") {\n        offset = offset * -1;\n      }\n    }\n\n    let prepend = () => {\n      let first = this.views.first();\n      let prev = first && first.section.prev();\n\n      if (prev) {\n        newViews.push(this.prepend(prev));\n      }\n    };\n\n    let append = () => {\n      let last = this.views.last();\n      let next = last && last.section.next();\n\n      if (next) {\n        newViews.push(this.append(next));\n      }\n    };\n\n    let end = offset + visibleLength + delta;\n    let start = offset - delta;\n\n    if (end >= contentLength) {\n      append();\n    }\n\n    if (start < 0) {\n      prepend();\n    }\n\n    let promises = newViews.map(view => {\n      return view.display(this.request);\n    });\n\n    if (newViews.length) {\n      return Promise.all(promises).then(() => {\n        return this.check();\n      }).then(() => {\n        // Check to see if anything new is on screen after rendering\n        return this.update(delta);\n      }, err => {\n        return err;\n      });\n    } else {\n      this.q.enqueue(function () {\n        this.update();\n      }.bind(this));\n      checking.resolve(false);\n      return checking.promise;\n    }\n  }\n\n  trim() {\n    var task = new _core.defer();\n    var displayed = this.views.displayed();\n    var first = displayed[0];\n    var last = displayed[displayed.length - 1];\n    var firstIndex = this.views.indexOf(first);\n    var lastIndex = this.views.indexOf(last);\n    var above = this.views.slice(0, firstIndex);\n    var below = this.views.slice(lastIndex + 1); // Erase all but last above\n\n    for (var i = 0; i < above.length - 1; i++) {\n      this.erase(above[i], above);\n    } // Erase all except first below\n\n\n    for (var j = 1; j < below.length; j++) {\n      this.erase(below[j]);\n    }\n\n    task.resolve();\n    return task.promise;\n  }\n\n  erase(view, above) {\n    //Trim\n    var prevTop;\n    var prevLeft;\n\n    if (!this.settings.fullsize) {\n      prevTop = this.container.scrollTop;\n      prevLeft = this.container.scrollLeft;\n    } else {\n      prevTop = window.scrollY;\n      prevLeft = window.scrollX;\n    }\n\n    var bounds = view.bounds();\n    this.views.remove(view);\n\n    if (above) {\n      if (this.settings.axis === \"vertical\") {\n        this.scrollTo(0, prevTop - bounds.height, true);\n      } else {\n        if (this.settings.direction === 'rtl') {\n          if (!this.settings.fullsize) {\n            this.scrollTo(prevLeft, 0, true);\n          } else {\n            this.scrollTo(prevLeft + Math.floor(bounds.width), 0, true);\n          }\n        } else {\n          this.scrollTo(prevLeft - Math.floor(bounds.width), 0, true);\n        }\n      }\n    }\n  }\n\n  addEventListeners(stage) {\n    window.addEventListener(\"unload\", function (e) {\n      this.ignore = true; // this.scrollTo(0,0);\n\n      this.destroy();\n    }.bind(this));\n    this.addScrollListeners();\n\n    if (this.isPaginated && this.settings.snap) {\n      this.snapper = new _snap.default(this, this.settings.snap && typeof this.settings.snap === \"object\" && this.settings.snap);\n    }\n  }\n\n  addScrollListeners() {\n    var scroller;\n    this.tick = _core.requestAnimationFrame;\n    let dir = this.settings.direction === \"rtl\" && this.settings.rtlScrollType === \"default\" ? -1 : 1;\n    this.scrollDeltaVert = 0;\n    this.scrollDeltaHorz = 0;\n\n    if (!this.settings.fullsize) {\n      scroller = this.container;\n      this.scrollTop = this.container.scrollTop;\n      this.scrollLeft = this.container.scrollLeft;\n    } else {\n      scroller = window;\n      this.scrollTop = window.scrollY * dir;\n      this.scrollLeft = window.scrollX * dir;\n    }\n\n    this._onScroll = this.onScroll.bind(this);\n    scroller.addEventListener(\"scroll\", this._onScroll);\n    this._scrolled = (0, _debounce.default)(this.scrolled.bind(this), 30); // this.tick.call(window, this.onScroll.bind(this));\n\n    this.didScroll = false;\n  }\n\n  removeEventListeners() {\n    var scroller;\n\n    if (!this.settings.fullsize) {\n      scroller = this.container;\n    } else {\n      scroller = window;\n    }\n\n    scroller.removeEventListener(\"scroll\", this._onScroll);\n    this._onScroll = undefined;\n  }\n\n  onScroll() {\n    let scrollTop;\n    let scrollLeft;\n    let dir = this.settings.direction === \"rtl\" && this.settings.rtlScrollType === \"default\" ? -1 : 1;\n\n    if (!this.settings.fullsize) {\n      scrollTop = this.container.scrollTop;\n      scrollLeft = this.container.scrollLeft;\n    } else {\n      scrollTop = window.scrollY * dir;\n      scrollLeft = window.scrollX * dir;\n    }\n\n    this.scrollTop = scrollTop;\n    this.scrollLeft = scrollLeft;\n\n    if (!this.ignore) {\n      this._scrolled();\n    } else {\n      this.ignore = false;\n    }\n\n    this.scrollDeltaVert += Math.abs(scrollTop - this.prevScrollTop);\n    this.scrollDeltaHorz += Math.abs(scrollLeft - this.prevScrollLeft);\n    this.prevScrollTop = scrollTop;\n    this.prevScrollLeft = scrollLeft;\n    clearTimeout(this.scrollTimeout);\n    this.scrollTimeout = setTimeout(function () {\n      this.scrollDeltaVert = 0;\n      this.scrollDeltaHorz = 0;\n    }.bind(this), 150);\n    clearTimeout(this.afterScrolled);\n    this.didScroll = false;\n  }\n\n  scrolled() {\n    this.q.enqueue(function () {\n      return this.check();\n    }.bind(this));\n    this.emit(_constants.EVENTS.MANAGERS.SCROLL, {\n      top: this.scrollTop,\n      left: this.scrollLeft\n    });\n    clearTimeout(this.afterScrolled);\n    this.afterScrolled = setTimeout(function () {\n      // Don't report scroll if we are about the snap\n      if (this.snapper && this.snapper.supportsTouch && this.snapper.needsSnap()) {\n        return;\n      }\n\n      this.emit(_constants.EVENTS.MANAGERS.SCROLLED, {\n        top: this.scrollTop,\n        left: this.scrollLeft\n      });\n    }.bind(this), this.settings.afterScrolledTimeout);\n  }\n\n  next() {\n    let delta = this.layout.props.name === \"pre-paginated\" && this.layout.props.spread ? this.layout.props.delta * 2 : this.layout.props.delta;\n    if (!this.views.length) return;\n\n    if (this.isPaginated && this.settings.axis === \"horizontal\") {\n      this.scrollBy(delta, 0, true);\n    } else {\n      this.scrollBy(0, this.layout.height, true);\n    }\n\n    this.q.enqueue(function () {\n      return this.check();\n    }.bind(this));\n  }\n\n  prev() {\n    let delta = this.layout.props.name === \"pre-paginated\" && this.layout.props.spread ? this.layout.props.delta * 2 : this.layout.props.delta;\n    if (!this.views.length) return;\n\n    if (this.isPaginated && this.settings.axis === \"horizontal\") {\n      this.scrollBy(-delta, 0, true);\n    } else {\n      this.scrollBy(0, -this.layout.height, true);\n    }\n\n    this.q.enqueue(function () {\n      return this.check();\n    }.bind(this));\n  }\n\n  updateFlow(flow) {\n    if (this.rendered && this.snapper) {\n      this.snapper.destroy();\n      this.snapper = undefined;\n    }\n\n    super.updateFlow(flow, \"scroll\");\n\n    if (this.rendered && this.isPaginated && this.settings.snap) {\n      this.snapper = new _snap.default(this, this.settings.snap && typeof this.settings.snap === \"object\" && this.settings.snap);\n    }\n  }\n\n  destroy() {\n    super.destroy();\n\n    if (this.snapper) {\n      this.snapper.destroy();\n    }\n  }\n\n}\n\nvar _default = ContinuousViewManager;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}