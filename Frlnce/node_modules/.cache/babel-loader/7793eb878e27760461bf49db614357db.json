{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\detailed-profiling\\\\detailed-profiling.component.jsx\";\nimport React from \"react\";\nimport ApiService from \"../../_services/ApiService\";\nimport Loader from \"./../../_components/loader/loader\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport Container from \"react-bootstrap/Container\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { ReactComponent as TickMark } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/circle-check-solid.svg\";\nimport { ReactComponent as Xmark } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/circle-xmark-solid.svg\";\nimport utils from \"../../_helpers/utils\";\nimport \"./detailed-profiling.styles.css\";\n\nclass DetailedProfiling extends React.Component {\n  constructor() {\n    super();\n\n    this.questionWiseAnalysis = async () => {\n      const {\n        resultUrl\n      } = this.props.location.state || {};\n      const {\n        detailedProfiling\n      } = resultUrl || {};\n      let id = this.props.match.params.id;\n      this.setState({\n        loading: true\n      });\n\n      if (detailedProfiling) {\n        console.log(\"here\");\n\n        try {\n          var _res$data;\n\n          const res = await ApiService.fetchGetUrl(detailedProfiling);\n\n          if (((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.message) === \"Success\") {\n            console.log(res.data.data);\n            this.setState({\n              usingS3: true\n            });\n            return this.processData(res.data);\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      }\n\n      try {\n        var _res$data2;\n\n        const res = await ApiService.questionWiseAnalysis(id);\n        console.log(\"here\");\n\n        if (((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.message) === \"Success\") {\n          console.log(res.data.data);\n          this.processData(res.data);\n        }\n      } catch (err) {\n        console.log(err);\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.processData = data => {\n      var _data$data, _data$data$sections;\n\n      const profilingData = {\n        summary: data.data.summary,\n        testName: data.data.testName\n      };\n      const tagSections = [];\n      (_data$data = data.data) === null || _data$data === void 0 ? void 0 : (_data$data$sections = _data$data.sections) === null || _data$data$sections === void 0 ? void 0 : _data$data$sections.forEach(oldSection => {\n        oldSection.questions.forEach(question => {\n          question.tags.forEach(oldTagSection => {\n            oldTagSection.tags.forEach(tag => {\n              // creating tag section\n              let tagSecIndex = null;\n              tagSections.forEach((tagSection, index) => {\n                if (tagSection.majorTagName === oldTagSection.name) {\n                  tagSecIndex = index;\n                }\n              });\n\n              if (tagSecIndex === null) {\n                tagSecIndex = tagSections.length;\n                tagSections.push({\n                  majorTagName: oldTagSection.name,\n                  sections: []\n                });\n              } // creating sections\n\n\n              let secIndex = null;\n              tagSections[tagSecIndex].sections.forEach((section, index) => {\n                if (section.sectionId === oldSection.sectionId) {\n                  secIndex = index;\n                }\n              });\n\n              if (secIndex === null) {\n                secIndex = tagSections[tagSecIndex].sections.length;\n                tagSections[tagSecIndex].sections.push({\n                  sectionName: oldSection.sectionName,\n                  sectionId: oldSection.sectionId,\n                  tags: []\n                });\n              } // creating tags\n\n\n              let tagIndex = null;\n              tagSections[tagSecIndex].sections[secIndex].tags.forEach((newTag, index) => {\n                if (newTag.id === tag.id) {\n                  tagIndex = index;\n                }\n              });\n\n              if (tagIndex === null) {\n                tagIndex = tagSections[tagSecIndex].sections[secIndex].tags.length;\n                tagSections[tagSecIndex].sections[secIndex].tags.push({\n                  name: tag.name,\n                  id: tag.id,\n                  questions: []\n                });\n              }\n\n              tagSections[tagSecIndex].sections[secIndex].tags[tagIndex].questions.push({\n                questionId: question.questionId,\n                id: question.id,\n                index: question.index,\n                correctString: question.correctString,\n                attemptStatus: question.attemptStatus,\n                attemptId: question.attemptId,\n                testId: question.testId\n              }); // calculating no of attempts and correct\n\n              if (question.attemptStatus === -1) {\n                tagSections[tagSecIndex].sections[secIndex].tags[tagIndex].notAttempt = (tagSections[tagSecIndex].sections[secIndex].tags[tagIndex].notAttempt || 0) + 1;\n              } else if (question.attemptStatus === 0) {\n                tagSections[tagSecIndex].sections[secIndex].tags[tagIndex].wrong = (tagSections[tagSecIndex].sections[secIndex].tags[tagIndex].wrong || 0) + 1;\n              } else if (question.attemptStatus === 1) {\n                tagSections[tagSecIndex].sections[secIndex].tags[tagIndex].right = (tagSections[tagSecIndex].sections[secIndex].tags[tagIndex].right || 0) + 1;\n              } // calculating marks\n\n\n              tagSections[tagSecIndex].sections[secIndex].tags[tagIndex].totalMarks = (tagSections[tagSecIndex].sections[secIndex].tags[tagIndex].totalMarks || 0) + parseFloat(question.actualMarks);\n              tagSections[tagSecIndex].sections[secIndex].tags[tagIndex].marksObtain = (tagSections[tagSecIndex].sections[secIndex].tags[tagIndex].marksObtain || 0) + parseFloat(question.marks);\n            });\n          });\n        });\n      });\n      profilingData.tagSections = tagSections;\n      this.setState({\n        loading: false,\n        profilingData\n      });\n    };\n\n    this.openSolution = question => {\n      console.log(question);\n      ApiService.viewSolution(question === null || question === void 0 ? void 0 : question.testId, question === null || question === void 0 ? void 0 : question.index, question === null || question === void 0 ? void 0 : question.id).then(res => {\n        this.setState({\n          solutionData: res.data,\n          solutionCorrectString: (question === null || question === void 0 ? void 0 : question.correctString) || \"\"\n        }, () => {\n          this.setState({\n            showSolution: true\n          });\n        });\n      }).catch(err => {\n        this.setState({\n          showModal: true\n        });\n        console.log(err);\n      });\n    };\n\n    this.closeSolution = () => {\n      this.setState({\n        showSolution: false,\n        solutionCorrectString: \"\"\n      });\n    };\n\n    this.goBack = () => {\n      const {\n        resultUrl\n      } = this.props.location.state || {};\n      if (resultUrl) return this.props.history.push(\"/testdetails\");\n      this.props.history.goBack();\n    };\n\n    this.QuestionGem = _ref => {\n      let {\n        question\n      } = _ref;\n      const gemColor = {\n        1: \"question-success\",\n        0: \"question-fail\",\n        \"-1\": \"question-neutral\"\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => this.openSolution(question),\n        className: `${gemColor[question === null || question === void 0 ? void 0 : question.attemptStatus]} profiling-question-block`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 7\n        }\n      }, question.index);\n    };\n\n    this.AttemptsBar = _ref2 => {\n      let {\n        tag\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profiling-full-width\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          gridTemplateColumns: `${(tag === null || tag === void 0 ? void 0 : tag.right) || 0}fr ${(tag === null || tag === void 0 ? void 0 : tag.wrong) || 0}fr ${(tag === null || tag === void 0 ? void 0 : tag.notAttempt) || 0}fr`\n        },\n        className: \"profiling-progress-bar question-neutral\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"question-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"question-fail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"question-neutral\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profiling-heading profiling-center-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"question-success-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }\n      }, (tag === null || tag === void 0 ? void 0 : tag.right) || 0), \"/\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"question-fail-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 9\n        }\n      }, (tag === null || tag === void 0 ? void 0 : tag.wrong) || 0), \"/\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"question-neutral-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 9\n        }\n      }, (tag === null || tag === void 0 ? void 0 : tag.notAttempt) || 0)));\n    };\n\n    this.AccuracyBar = _ref3 => {\n      var _ref4;\n\n      let {\n        tag\n      } = _ref3;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profiling-full-width\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          gridTemplateColumns: `${(tag === null || tag === void 0 ? void 0 : tag.right) || 0}fr \n                          ${(tag === null || tag === void 0 ? void 0 : tag.wrong) || 0}fr`\n        },\n        className: \"profiling-progress-bar question-neutral\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"question-success animate-progress\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"question-neutral\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profiling-heading profiling-center-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 7\n        }\n      }, (_ref4 = ((tag === null || tag === void 0 ? void 0 : tag.right) || 0) / (((tag === null || tag === void 0 ? void 0 : tag.wrong) || 0) + ((tag === null || tag === void 0 ? void 0 : tag.right) || 0)) * 100 || 0) === null || _ref4 === void 0 ? void 0 : _ref4.toFixed(1), \"%\"));\n    };\n\n    this.RenderOnPc = () => {\n      var _this$state$profiling, _this$state$profiling2;\n\n      const {\n        AttemptsBar,\n        AccuracyBar,\n        QuestionGem\n      } = this;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, (_this$state$profiling = this.state.profilingData) === null || _this$state$profiling === void 0 ? void 0 : (_this$state$profiling2 = _this$state$profiling.tagSections) === null || _this$state$profiling2 === void 0 ? void 0 : _this$state$profiling2.map((tagSection, index) => {\n        var _tagSection$sections;\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"profiling-section-name profiling-heading\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }\n        }, tagSection.majorTagName), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"profiling-tag-block\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"profiling-row profiling-heading profiling-tag-header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"profiling-column\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }\n        }, \"Sections\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"profiling-column\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }\n        }, \"Topics\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"profiling-column\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }\n        }, \"Questions\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"profiling-column\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }\n        }, \"Questions Attempted\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"profiling-column\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }\n        }, \"Marks\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"profiling-column\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }\n        }, \"Attempts\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"profiling-column\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }\n        }, \"Accuracy\")), tagSection === null || tagSection === void 0 ? void 0 : (_tagSection$sections = tagSection.sections) === null || _tagSection$sections === void 0 ? void 0 : _tagSection$sections.map((section, index2) => {\n          var _section$tags;\n\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: index2,\n            className: \"profiling-row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              gridRow: `span ${section.tags.length}`\n            },\n            className: \"profiling-column profiling-center profiling-heading\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }\n          }, section.sectionName), section === null || section === void 0 ? void 0 : (_section$tags = section.tags) === null || _section$tags === void 0 ? void 0 : _section$tags.map((tag, index3) => {\n            var _tag$questions;\n\n            return /*#__PURE__*/React.createElement(React.Fragment, {\n              key: index3,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"profiling-column\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 23\n              }\n            }, tag.name), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"profiling-column profiling-question-container\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 23\n              }\n            }, tag === null || tag === void 0 ? void 0 : (_tag$questions = tag.questions) === null || _tag$questions === void 0 ? void 0 : _tag$questions.map((question, index4) => /*#__PURE__*/React.createElement(QuestionGem, {\n              key: index4,\n              question: question,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 27\n              }\n            }))), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"profiling-column\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 23\n              }\n            }, ((tag === null || tag === void 0 ? void 0 : tag.right) || 0) + ((tag === null || tag === void 0 ? void 0 : tag.wrong) || 0), \"/\", ((tag === null || tag === void 0 ? void 0 : tag.right) || 0) + ((tag === null || tag === void 0 ? void 0 : tag.wrong) || 0) + ((tag === null || tag === void 0 ? void 0 : tag.notAttempt) || 0)), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"profiling-column\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 25\n              }\n            }, tag === null || tag === void 0 ? void 0 : tag.marksObtain, \"/\", tag === null || tag === void 0 ? void 0 : tag.totalMarks), /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 25\n              }\n            }, \"[\", \" \", ((tag === null || tag === void 0 ? void 0 : tag.marksObtain) / (tag === null || tag === void 0 ? void 0 : tag.totalMarks) * 100).toFixed(2), \"% ]\")), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"profiling-column profiling-center\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(AttemptsBar, {\n              tag: tag,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 25\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"profiling-column profiling-center\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(AccuracyBar, {\n              tag: tag,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 25\n              }\n            })));\n          }));\n        })));\n      }));\n    };\n\n    this.RenderOnMobile = () => {\n      var _profilingData$tagSec;\n\n      const {\n        profilingData\n      } = this.state;\n      const {\n        AttemptsBar,\n        AccuracyBar,\n        QuestionGem\n      } = this;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"detailed-profiling-mobile-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 7\n        }\n      }, profilingData === null || profilingData === void 0 ? void 0 : (_profilingData$tagSec = profilingData.tagSections) === null || _profilingData$tagSec === void 0 ? void 0 : _profilingData$tagSec.map((tagSection, index) => {\n        var _tagSection$sections2;\n\n        return tagSection === null || tagSection === void 0 ? void 0 : (_tagSection$sections2 = tagSection.sections) === null || _tagSection$sections2 === void 0 ? void 0 : _tagSection$sections2.map((section, index2) => {\n          var _section$tags2;\n\n          return section === null || section === void 0 ? void 0 : (_section$tags2 = section.tags) === null || _section$tags2 === void 0 ? void 0 : _section$tags2.map((tag, index3) => {\n            var _tag$questions2;\n\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"detailed-profiling-mobile-box\",\n              key: index3,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              className: \"detailed-profiling-mobile-section-name\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }\n            }, section.sectionName), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"detailed-profiling-mobile-tag-name\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 17\n              }\n            }, tagSection.majorTagName, \" - \", tag.name), /*#__PURE__*/React.createElement(\"span\", {\n              className: \"profiling-mobile-marks-wrapper\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              className: \"profiling-mobile-heading\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }\n            }, \"Marks:-\"), /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }\n            }, tag === null || tag === void 0 ? void 0 : tag.marksObtain, \"/\", tag === null || tag === void 0 ? void 0 : tag.totalMarks), /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }\n            }, \"[ \", ((tag === null || tag === void 0 ? void 0 : tag.marksObtain) / (tag === null || tag === void 0 ? void 0 : tag.totalMarks) * 100).toFixed(2), \"% ]\")), /*#__PURE__*/React.createElement(\"span\", {\n              className: \"profiling-mobile-heading profiling-heading-mg\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }\n            }, \"Questions:-\"), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"profiling-question-container\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }\n            }, tag === null || tag === void 0 ? void 0 : (_tag$questions2 = tag.questions) === null || _tag$questions2 === void 0 ? void 0 : _tag$questions2.map((question, index4) => /*#__PURE__*/React.createElement(QuestionGem, {\n              key: index4,\n              question: question,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 21\n              }\n            }))), /*#__PURE__*/React.createElement(\"span\", {\n              className: \"profiling-mobile-heading profiling-heading-mg\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }\n            }, \"Question Attempts:-\"), /*#__PURE__*/React.createElement(AttemptsBar, {\n              tag: tag,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              className: \"profiling-mobile-heading profiling-heading-mg\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }\n            }, \"Accuracy:-\"), /*#__PURE__*/React.createElement(AccuracyBar, {\n              tag: tag,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }\n            }));\n          });\n        });\n      }));\n    };\n\n    this.state = {\n      loading: false,\n      profilingData: {},\n      showSolution: false,\n      solutionCorrectString: \"\",\n      usingS3: false\n    };\n  }\n\n  componentDidMount() {\n    this.questionWiseAnalysis();\n  }\n\n  render() {\n    var _this$state$profiling3, _this$state$profiling4, _this$state$profiling5, _this$state$profiling6, _this$state$solutionD, _this$state$solutionD2, _this$state$solutionD6, _this$state$solutionD7, _this$state$solutionD8;\n\n    let portlet = JSON.parse(localStorage.getItem(\"portlet\")) || {};\n    const {\n      RenderOnPc,\n      RenderOnMobile\n    } = this;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.loading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `module-header-step2 ${portlet !== null && portlet !== void 0 && portlet.class ? portlet === null || portlet === void 0 ? void 0 : portlet.class : \"orange-card\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: this.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 19\n      }\n    }, \"Detailed Profiling \", this.state.usingS3 && \"*\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profiling-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profiling-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"profiling-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 19\n      }\n    }, \"Test Name : \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"profiling-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 19\n      }\n    }, this.state.profilingData.testName)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"profiling-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 19\n      }\n    }, \"Marks Scored : \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"profiling-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 19\n      }\n    }, `${(_this$state$profiling3 = this.state.profilingData) === null || _this$state$profiling3 === void 0 ? void 0 : (_this$state$profiling4 = _this$state$profiling3.summary) === null || _this$state$profiling4 === void 0 ? void 0 : _this$state$profiling4.marksObtained}/${(_this$state$profiling5 = this.state.profilingData) === null || _this$state$profiling5 === void 0 ? void 0 : (_this$state$profiling6 = _this$state$profiling5.summary) === null || _this$state$profiling6 === void 0 ? void 0 : _this$state$profiling6.totalMarks}`)), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"detailed-profiling-download-test\",\n      onClick: window.print,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 17\n      }\n    }, \"Download Page\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profiling-body-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profiling-legend profiling-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 19\n      }\n    }, \"Legend: \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"profiling-gem-width question-success profiling-question-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"profiling-legend-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 19\n      }\n    }, \"Correct \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"profiling-gem-width question-fail profiling-question-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"profiling-legend-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 19\n      }\n    }, \"Wrong \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"profiling-gem-width question-neutral profiling-question-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 19\n      }\n    }, \"Unattempted \")), utils.isMobileDevice() ? /*#__PURE__*/React.createElement(RenderOnMobile, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(RenderOnPc, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showSolution,\n      onHide: this.closeSolution,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      className: \"text-uppercase\",\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 19\n      }\n    }, this.state.solutionData ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 25\n      }\n    }, \"Question: \"), /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: (_this$state$solutionD = this.state.solutionData) === null || _this$state$solutionD === void 0 ? void 0 : _this$state$solutionD.questionStatement\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 25\n      }\n    }), (_this$state$solutionD2 = this.state.solutionData) === null || _this$state$solutionD2 === void 0 ? void 0 : _this$state$solutionD2.choiceGroup1.map((choice, i) => {\n      var _this$state$solutionD3, _this$state$solutionD4, _this$state$solutionD5;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"solution-choice-string\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 31\n        }\n      }, choice.choiceString), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"solution-choice\",\n        key: i,\n        dangerouslySetInnerHTML: {\n          __html: choice.choiceValue\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 31\n        }\n      }), this.state.solutionCorrectString === ((_this$state$solutionD3 = this.state.solutionData) === null || _this$state$solutionD3 === void 0 ? void 0 : _this$state$solutionD3.studentResponse) ? choice.choiceString === ((_this$state$solutionD4 = this.state.solutionData) === null || _this$state$solutionD4 === void 0 ? void 0 : _this$state$solutionD4.studentResponse) && /*#__PURE__*/React.createElement(TickMark, {\n        className: \"success-option\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 35\n        }\n      }) : /*#__PURE__*/React.createElement(React.Fragment, null, choice.choiceString === this.state.solutionCorrectString && /*#__PURE__*/React.createElement(TickMark, {\n        className: \"correct-option\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 37\n        }\n      }), choice.choiceString === ((_this$state$solutionD5 = this.state.solutionData) === null || _this$state$solutionD5 === void 0 ? void 0 : _this$state$solutionD5.studentResponse) && /*#__PURE__*/React.createElement(Xmark, {\n        className: \"wrong-option\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 37\n        }\n      })));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer-box\",\n      style: {\n        color: `var(${this.state.solutionCorrectString === ((_this$state$solutionD6 = this.state.solutionData) === null || _this$state$solutionD6 === void 0 ? void 0 : _this$state$solutionD6.studentResponse) ? \"--success\" : \"--danger\"})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 27\n      }\n    }, \"Correct Answer : \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 27\n      }\n    }, this.state.solutionCorrectString), \" |\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 27\n      }\n    }, \"My Answer : \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 27\n      }\n    }, (_this$state$solutionD7 = this.state.solutionData) === null || _this$state$solutionD7 === void 0 ? void 0 : _this$state$solutionD7.studentResponse)), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 25\n      }\n    }, \"Solution: \"), /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: (_this$state$solutionD8 = this.state.solutionData) === null || _this$state$solutionD8 === void 0 ? void 0 : _this$state$solutionD8.solution\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 25\n      }\n    })) : /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 23\n      }\n    }, \"Data is not uploaded\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      className: \"text-uppercase\",\n      onClick: this.closeSolution,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 21\n      }\n    }, \"Close\")))))));\n  }\n\n}\n\nexport default DetailedProfiling;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/detailed-profiling/detailed-profiling.component.jsx"],"names":["React","ApiService","Loader","FontAwesomeIcon","faArrowLeft","Container","Modal","Button","utils","DetailedProfiling","Component","constructor","questionWiseAnalysis","resultUrl","props","location","state","detailedProfiling","id","match","params","setState","loading","console","log","res","fetchGetUrl","data","message","usingS3","processData","err","profilingData","summary","testName","tagSections","sections","forEach","oldSection","questions","question","tags","oldTagSection","tag","tagSecIndex","tagSection","index","majorTagName","name","length","push","secIndex","section","sectionId","sectionName","tagIndex","newTag","questionId","correctString","attemptStatus","attemptId","testId","notAttempt","wrong","right","totalMarks","parseFloat","actualMarks","marksObtain","marks","openSolution","viewSolution","then","solutionData","solutionCorrectString","showSolution","catch","showModal","closeSolution","goBack","history","QuestionGem","gemColor","AttemptsBar","gridTemplateColumns","AccuracyBar","toFixed","RenderOnPc","map","index2","gridRow","index3","index4","RenderOnMobile","componentDidMount","render","portlet","JSON","parse","localStorage","getItem","class","marksObtained","window","print","isMobileDevice","__html","questionStatement","choiceGroup1","choice","i","choiceString","choiceValue","studentResponse","color","solution"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;;;AAGA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAO,iCAAP;;AAEA,MAAMC,iBAAN,SAAgCT,KAAK,CAACU,SAAtC,CAAgD;AAC9CC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAedC,oBAfc,GAeS,YAAY;AACjC,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,KAApB,IAA6B,EAAnD;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAwBJ,SAAS,IAAI,EAA3C;AACA,UAAIK,EAAE,GAAG,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBF,EAAjC;AAEA,WAAKG,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACA,UAAIL,iBAAJ,EAAuB;AACrBM,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,YAAI;AAAA;;AACF,gBAAMC,GAAG,GAAG,MAAMxB,UAAU,CAACyB,WAAX,CAAuBT,iBAAvB,CAAlB;;AACA,cAAI,cAAAQ,GAAG,CAACE,IAAJ,wDAAUC,OAAV,MAAsB,SAA1B,EAAqC;AACnCL,YAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACE,IAAJ,CAASA,IAArB;AACA,iBAAKN,QAAL,CAAc;AAAEQ,cAAAA,OAAO,EAAE;AAAX,aAAd;AACA,mBAAO,KAAKC,WAAL,CAAiBL,GAAG,CAACE,IAArB,CAAP;AACD;AACF,SAPD,CAOE,OAAOI,GAAP,EAAY;AACZR,UAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACD;AACF;;AACD,UAAI;AAAA;;AACF,cAAMN,GAAG,GAAG,MAAMxB,UAAU,CAACW,oBAAX,CAAgCM,EAAhC,CAAlB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,YAAI,eAAAC,GAAG,CAACE,IAAJ,0DAAUC,OAAV,MAAsB,SAA1B,EAAqC;AACnCL,UAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACE,IAAJ,CAASA,IAArB;AACA,eAAKG,WAAL,CAAiBL,GAAG,CAACE,IAArB;AACD;AACF,OAPD,CAOE,OAAOI,GAAP,EAAY;AACZR,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACA,aAAKV,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD;AACF,KA7Ca;;AAAA,SA+CdQ,WA/Cc,GA+CCH,IAAD,IAAU;AAAA;;AACtB,YAAMK,aAAa,GAAG;AACpBC,QAAAA,OAAO,EAAEN,IAAI,CAACA,IAAL,CAAUM,OADC;AAEpBC,QAAAA,QAAQ,EAAEP,IAAI,CAACA,IAAL,CAAUO;AAFA,OAAtB;AAIA,YAAMC,WAAW,GAAG,EAApB;AAEA,oBAAAR,IAAI,CAACA,IAAL,iFAAWS,QAAX,4EAAqBC,OAArB,CAA8BC,UAAD,IAAgB;AAC3CA,QAAAA,UAAU,CAACC,SAAX,CAAqBF,OAArB,CAA8BG,QAAD,IAAc;AACzCA,UAAAA,QAAQ,CAACC,IAAT,CAAcJ,OAAd,CAAuBK,aAAD,IAAmB;AACvCA,YAAAA,aAAa,CAACD,IAAd,CAAmBJ,OAAnB,CAA4BM,GAAD,IAAS;AAClC;AACA,kBAAIC,WAAW,GAAG,IAAlB;AACAT,cAAAA,WAAW,CAACE,OAAZ,CAAoB,CAACQ,UAAD,EAAaC,KAAb,KAAuB;AACzC,oBAAID,UAAU,CAACE,YAAX,KAA4BL,aAAa,CAACM,IAA9C,EAAoD;AAClDJ,kBAAAA,WAAW,GAAGE,KAAd;AACD;AACF,eAJD;;AAMA,kBAAIF,WAAW,KAAK,IAApB,EAA0B;AACxBA,gBAAAA,WAAW,GAAGT,WAAW,CAACc,MAA1B;AACAd,gBAAAA,WAAW,CAACe,IAAZ,CAAiB;AACfH,kBAAAA,YAAY,EAAEL,aAAa,CAACM,IADb;AAEfZ,kBAAAA,QAAQ,EAAE;AAFK,iBAAjB;AAID,eAfiC,CAiBlC;;;AACA,kBAAIe,QAAQ,GAAG,IAAf;AACAhB,cAAAA,WAAW,CAACS,WAAD,CAAX,CAAyBR,QAAzB,CAAkCC,OAAlC,CAA0C,CAACe,OAAD,EAAUN,KAAV,KAAoB;AAC5D,oBAAIM,OAAO,CAACC,SAAR,KAAsBf,UAAU,CAACe,SAArC,EAAgD;AAC9CF,kBAAAA,QAAQ,GAAGL,KAAX;AACD;AACF,eAJD;;AAMA,kBAAIK,QAAQ,KAAK,IAAjB,EAAuB;AACrBA,gBAAAA,QAAQ,GAAGhB,WAAW,CAACS,WAAD,CAAX,CAAyBR,QAAzB,CAAkCa,MAA7C;AACAd,gBAAAA,WAAW,CAACS,WAAD,CAAX,CAAyBR,QAAzB,CAAkCc,IAAlC,CAAuC;AACrCI,kBAAAA,WAAW,EAAEhB,UAAU,CAACgB,WADa;AAErCD,kBAAAA,SAAS,EAAEf,UAAU,CAACe,SAFe;AAGrCZ,kBAAAA,IAAI,EAAE;AAH+B,iBAAvC;AAKD,eAhCiC,CAkClC;;;AACA,kBAAIc,QAAQ,GAAG,IAAf;AACApB,cAAAA,WAAW,CAACS,WAAD,CAAX,CAAyBR,QAAzB,CAAkCe,QAAlC,EAA4CV,IAA5C,CAAiDJ,OAAjD,CACE,CAACmB,MAAD,EAASV,KAAT,KAAmB;AACjB,oBAAIU,MAAM,CAACtC,EAAP,KAAcyB,GAAG,CAACzB,EAAtB,EAA0B;AACxBqC,kBAAAA,QAAQ,GAAGT,KAAX;AACD;AACF,eALH;;AAOA,kBAAIS,QAAQ,KAAK,IAAjB,EAAuB;AACrBA,gBAAAA,QAAQ,GACNpB,WAAW,CAACS,WAAD,CAAX,CAAyBR,QAAzB,CAAkCe,QAAlC,EAA4CV,IAA5C,CAAiDQ,MADnD;AAEAd,gBAAAA,WAAW,CAACS,WAAD,CAAX,CAAyBR,QAAzB,CAAkCe,QAAlC,EAA4CV,IAA5C,CAAiDS,IAAjD,CAAsD;AACpDF,kBAAAA,IAAI,EAAEL,GAAG,CAACK,IAD0C;AAEpD9B,kBAAAA,EAAE,EAAEyB,GAAG,CAACzB,EAF4C;AAGpDqB,kBAAAA,SAAS,EAAE;AAHyC,iBAAtD;AAKD;;AACDJ,cAAAA,WAAW,CAACS,WAAD,CAAX,CAAyBR,QAAzB,CAAkCe,QAAlC,EAA4CV,IAA5C,CACEc,QADF,EAEEhB,SAFF,CAEYW,IAFZ,CAEiB;AACfO,gBAAAA,UAAU,EAAEjB,QAAQ,CAACiB,UADN;AAEfvC,gBAAAA,EAAE,EAAEsB,QAAQ,CAACtB,EAFE;AAGf4B,gBAAAA,KAAK,EAAEN,QAAQ,CAACM,KAHD;AAIfY,gBAAAA,aAAa,EAAElB,QAAQ,CAACkB,aAJT;AAKfC,gBAAAA,aAAa,EAAEnB,QAAQ,CAACmB,aALT;AAMfC,gBAAAA,SAAS,EAAEpB,QAAQ,CAACoB,SANL;AAOfC,gBAAAA,MAAM,EAAErB,QAAQ,CAACqB;AAPF,eAFjB,EApDkC,CAgElC;;AACA,kBAAIrB,QAAQ,CAACmB,aAAT,KAA2B,CAAC,CAAhC,EAAmC;AACjCxB,gBAAAA,WAAW,CAACS,WAAD,CAAX,CAAyBR,QAAzB,CAAkCe,QAAlC,EAA4CV,IAA5C,CACEc,QADF,EAEEO,UAFF,GAGE,CAAC3B,WAAW,CAACS,WAAD,CAAX,CAAyBR,QAAzB,CAAkCe,QAAlC,EAA4CV,IAA5C,CAAiDc,QAAjD,EACEO,UADF,IACgB,CADjB,IACsB,CAJxB;AAKD,eAND,MAMO,IAAItB,QAAQ,CAACmB,aAAT,KAA2B,CAA/B,EAAkC;AACvCxB,gBAAAA,WAAW,CAACS,WAAD,CAAX,CAAyBR,QAAzB,CAAkCe,QAAlC,EAA4CV,IAA5C,CAAiDc,QAAjD,EAA2DQ,KAA3D,GACE,CAAC5B,WAAW,CAACS,WAAD,CAAX,CAAyBR,QAAzB,CAAkCe,QAAlC,EAA4CV,IAA5C,CAAiDc,QAAjD,EACEQ,KADF,IACW,CADZ,IACiB,CAFnB;AAGD,eAJM,MAIA,IAAIvB,QAAQ,CAACmB,aAAT,KAA2B,CAA/B,EAAkC;AACvCxB,gBAAAA,WAAW,CAACS,WAAD,CAAX,CAAyBR,QAAzB,CAAkCe,QAAlC,EAA4CV,IAA5C,CAAiDc,QAAjD,EAA2DS,KAA3D,GACE,CAAC7B,WAAW,CAACS,WAAD,CAAX,CAAyBR,QAAzB,CAAkCe,QAAlC,EAA4CV,IAA5C,CAAiDc,QAAjD,EACES,KADF,IACW,CADZ,IACiB,CAFnB;AAGD,eA/EiC,CAiFlC;;;AACA7B,cAAAA,WAAW,CAACS,WAAD,CAAX,CAAyBR,QAAzB,CAAkCe,QAAlC,EAA4CV,IAA5C,CACEc,QADF,EAEEU,UAFF,GAGE,CAAC9B,WAAW,CAACS,WAAD,CAAX,CAAyBR,QAAzB,CAAkCe,QAAlC,EAA4CV,IAA5C,CAAiDc,QAAjD,EACEU,UADF,IACgB,CADjB,IACsBC,UAAU,CAAC1B,QAAQ,CAAC2B,WAAV,CAJlC;AAKAhC,cAAAA,WAAW,CAACS,WAAD,CAAX,CAAyBR,QAAzB,CAAkCe,QAAlC,EAA4CV,IAA5C,CACEc,QADF,EAEEa,WAFF,GAGE,CAACjC,WAAW,CAACS,WAAD,CAAX,CAAyBR,QAAzB,CAAkCe,QAAlC,EAA4CV,IAA5C,CAAiDc,QAAjD,EACEa,WADF,IACiB,CADlB,IACuBF,UAAU,CAAC1B,QAAQ,CAAC6B,KAAV,CAJnC;AAKD,aA5FD;AA6FD,WA9FD;AA+FD,SAhGD;AAiGD,OAlGD;AAoGArC,MAAAA,aAAa,CAACG,WAAd,GAA4BA,WAA5B;AAEA,WAAKd,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,KADG;AAEZU,QAAAA;AAFY,OAAd;AAID,KAhKa;;AAAA,SAkKdsC,YAlKc,GAkKE9B,QAAD,IAAc;AAC3BjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AACAvC,MAAAA,UAAU,CAACsE,YAAX,CAAwB/B,QAAxB,aAAwBA,QAAxB,uBAAwBA,QAAQ,CAAEqB,MAAlC,EAA0CrB,QAA1C,aAA0CA,QAA1C,uBAA0CA,QAAQ,CAAEM,KAApD,EAA2DN,QAA3D,aAA2DA,QAA3D,uBAA2DA,QAAQ,CAAEtB,EAArE,EACGsD,IADH,CACS/C,GAAD,IAAS;AACb,aAAKJ,QAAL,CACE;AACEoD,UAAAA,YAAY,EAAEhD,GAAG,CAACE,IADpB;AAEE+C,UAAAA,qBAAqB,EAAE,CAAAlC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEkB,aAAV,KAA2B;AAFpD,SADF,EAKE,MAAM;AACJ,eAAKrC,QAAL,CAAc;AACZsD,YAAAA,YAAY,EAAE;AADF,WAAd;AAGD,SATH;AAWD,OAbH,EAcGC,KAdH,CAcU7C,GAAD,IAAS;AACd,aAAKV,QAAL,CAAc;AACZwD,UAAAA,SAAS,EAAE;AADC,SAAd;AAGAtD,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACD,OAnBH;AAoBD,KAxLa;;AAAA,SA0Ld+C,aA1Lc,GA0LE,MAAM;AACpB,WAAKzD,QAAL,CAAc;AACZsD,QAAAA,YAAY,EAAE,KADF;AAEZD,QAAAA,qBAAqB,EAAE;AAFX,OAAd;AAID,KA/La;;AAAA,SAiMdK,MAjMc,GAiML,MAAM;AACb,YAAM;AAAElE,QAAAA;AAAF,UAAgB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,KAApB,IAA6B,EAAnD;AACA,UAAIH,SAAJ,EAAe,OAAO,KAAKC,KAAL,CAAWkE,OAAX,CAAmB9B,IAAnB,CAAwB,cAAxB,CAAP;AACf,WAAKpC,KAAL,CAAWkE,OAAX,CAAmBD,MAAnB;AACD,KArMa;;AAAA,SAuMdE,WAvMc,GAuMA,QAAkB;AAAA,UAAjB;AAAEzC,QAAAA;AAAF,OAAiB;AAC9B,YAAM0C,QAAQ,GAAG;AACf,WAAG,kBADY;AAEf,WAAG,eAFY;AAGf,cAAM;AAHS,OAAjB;AAKA,0BACE;AACE,QAAA,OAAO,EAAE,MAAM,KAAKZ,YAAL,CAAkB9B,QAAlB,CADjB;AAEE,QAAA,SAAS,EAAG,GACV0C,QAAQ,CAAC1C,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEmB,aAAX,CACT,2BAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGnB,QAAQ,CAACM,KANZ,CADF;AAUD,KAvNa;;AAAA,SAyNdqC,WAzNc,GAyNA;AAAA,UAAC;AAAExC,QAAAA;AAAF,OAAD;AAAA,0BACZ;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,KAAK,EAAE;AACLyC,UAAAA,mBAAmB,EAAG,GAAE,CAAAzC,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEqB,KAAL,KAAc,CAAE,MAAK,CAAArB,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEoB,KAAL,KAAc,CAAE,MAC3D,CAAApB,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEmB,UAAL,KAAmB,CACpB;AAHI,SADT;AAME,QAAA,SAAS,EAAC,yCANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,eASE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,eAUE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF,eAaE;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyC,CAAAnB,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEqB,KAAL,KAAc,CAAvD,CADF,oBAEE;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC,CAAArB,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEoB,KAAL,KAAc,CAApD,CAFF,oBAGE;AAAM,QAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyC,CAAApB,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEmB,UAAL,KAAmB,CAA5D,CAHF,CAbF,CADY;AAAA,KAzNA;;AAAA,SA+OduB,WA/Oc,GA+OA;AAAA;;AAAA,UAAC;AAAE1C,QAAAA;AAAF,OAAD;AAAA,0BACZ;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,KAAK,EAAE;AACLyC,UAAAA,mBAAmB,EAAG,GAAE,CAAAzC,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEqB,KAAL,KAAc,CAAE;AAClD,4BAA4B,CAAArB,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEoB,KAAL,KAAc,CAAE;AAF7B,SADT;AAKE,QAAA,SAAS,EAAC,yCALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,eAQE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF,eAWE;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEK,CAAC,CAAApB,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEqB,KAAL,KAAc,CAAf,KAAqB,CAAC,CAAArB,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEoB,KAAL,KAAc,CAAf,KAAqB,CAAApB,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEqB,KAAL,KAAc,CAAnC,CAArB,CAAD,GAAgE,GAAhE,IACA,CAHJ,0CACG,MAGEsB,OAHF,CAGU,CAHV,CADH,MAXF,CADY;AAAA,KA/OA;;AAAA,SAqQdC,UArQc,GAqQD,MAAM;AAAA;;AACjB,YAAM;AAACJ,QAAAA,WAAD;AAAcE,QAAAA,WAAd;AAA2BJ,QAAAA;AAA3B,UAA0C,IAAhD;AACA,0BACE,mEACG,KAAKjE,KAAL,CAAWgB,aADd,oFACG,sBAA0BG,WAD7B,2DACG,uBAAuCqD,GAAvC,CAA2C,CAAC3C,UAAD,EAAaC,KAAb;AAAA;;AAAA,4BAC1C;AAAK,UAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,UAAU,CAACE,YADd,CADF,eAIE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,sDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,eAIE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAJF,eAKE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,eAME;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAOE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,CADF,EAUGF,UAVH,aAUGA,UAVH,+CAUGA,UAAU,CAAET,QAVf,yDAUG,qBAAsBoD,GAAtB,CAA0B,CAACpC,OAAD,EAAUqC,MAAV;AAAA;;AAAA,8BACzB;AAAK,YAAA,GAAG,EAAEA,MAAV;AAAkB,YAAA,SAAS,EAAC,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AACE,YAAA,KAAK,EAAE;AAAEC,cAAAA,OAAO,EAAG,QAAOtC,OAAO,CAACX,IAAR,CAAaQ,MAAO;AAAvC,aADT;AAEE,YAAA,SAAS,EAAC,qDAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIGG,OAAO,CAACE,WAJX,CADF,EAOGF,OAPH,aAOGA,OAPH,wCAOGA,OAAO,CAAEX,IAPZ,kDAOG,cAAe+C,GAAf,CAAmB,CAAC7C,GAAD,EAAMgD,MAAN;AAAA;;AAAA,gCAClB,oBAAC,KAAD,CAAO,QAAP;AAAgB,cAAA,GAAG,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAmChD,GAAG,CAACK,IAAvC,CADF,eAEE;AAAK,cAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGL,GADH,aACGA,GADH,yCACGA,GAAG,CAAEJ,SADR,mDACG,eAAgBiD,GAAhB,CAAoB,CAAChD,QAAD,EAAWoD,MAAX,kBACnB,oBAAC,WAAD;AAAa,cAAA,GAAG,EAAEA,MAAlB;AAA0B,cAAA,QAAQ,EAAEpD,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,CADH,CAFF,eAOE;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACG,CAAC,CAAAG,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEqB,KAAL,KAAc,CAAf,KAAqB,CAAArB,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEoB,KAAL,KAAc,CAAnC,CADH,OAEG,CAAC,CAAApB,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEqB,KAAL,KAAc,CAAf,KACE,CAAArB,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEoB,KAAL,KAAc,CADhB,KAEE,CAAApB,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEmB,UAAL,KAAmB,CAFrB,CAFH,CAPF,eAaE;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGnB,GADH,aACGA,GADH,uBACGA,GAAG,CAAEyB,WADR,OACsBzB,GADtB,aACsBA,GADtB,uBACsBA,GAAG,CAAEsB,UAD3B,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,GADJ,EAEG,CAAE,CAAAtB,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEyB,WAAL,KAAmBzB,GAAnB,aAAmBA,GAAnB,uBAAmBA,GAAG,CAAEsB,UAAxB,CAAD,GAAuC,GAAxC,EAA6CqB,OAA7C,CACC,CADD,CAFH,QAJF,CAbF,eAyBE;AAAK,cAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE,oBAAC,WAAD;AAAa,cAAA,GAAG,EAAE3C,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAzBF,eA4BE;AAAK,cAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE,oBAAC,WAAD;AAAa,cAAA,GAAG,EAAEA,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CA5BF,CADkB;AAAA,WAAnB,CAPH,CADyB;AAAA,SAA1B,CAVH,CAJF,CAD0C;AAAA,OAA3C,CADH,CADF;AAkED,KAzUa;;AAAA,SA2UdkD,cA3Uc,GA2UG,MAAM;AAAA;;AACrB,YAAM;AAAE7D,QAAAA;AAAF,UAAoB,KAAKhB,KAA/B;AACA,YAAM;AAACmE,QAAAA,WAAD;AAAcE,QAAAA,WAAd;AAA2BJ,QAAAA;AAA3B,UAA0C,IAAhD;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGjD,aADH,aACGA,aADH,gDACGA,aAAa,CAAEG,WADlB,0DACG,sBAA4BqD,GAA5B,CAAgC,CAAC3C,UAAD,EAAaC,KAAb;AAAA;;AAAA,eAC/BD,UAD+B,aAC/BA,UAD+B,gDAC/BA,UAAU,CAAET,QADmB,0DAC/B,sBAAsBoD,GAAtB,CAA0B,CAACpC,OAAD,EAAUqC,MAAV;AAAA;;AAAA,iBACxBrC,OADwB,aACxBA,OADwB,yCACxBA,OAAO,CAAEX,IADe,mDACxB,eAAe+C,GAAf,CAAmB,CAAC7C,GAAD,EAAMgD,MAAN;AAAA;;AAAA,gCACjB;AAAK,cAAA,SAAS,EAAC,+BAAf;AAA+C,cAAA,GAAG,EAAEA,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAM,cAAA,SAAS,EAAC,wCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGvC,OAAO,CAACE,WADX,CADF,eAIE;AAAK,cAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGT,UAAU,CAACE,YADd,SAC+BJ,GAAG,CAACK,IADnC,CAJF,eAOE;AAAM,cAAA,SAAS,EAAC,gCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAM,cAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGL,GADH,aACGA,GADH,uBACGA,GAAG,CAAEyB,WADR,OACsBzB,GADtB,aACsBA,GADtB,uBACsBA,GAAG,CAAEsB,UAD3B,CAHF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACK,CAAE,CAAAtB,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEyB,WAAL,KAAmBzB,GAAnB,aAAmBA,GAAnB,uBAAmBA,GAAG,CAAEsB,UAAxB,CAAD,GAAuC,GAAxC,EAA6CqB,OAA7C,CAAqD,CAArD,CADL,QANF,CAPF,eAkBE;AAAM,cAAA,SAAS,EAAC,+CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAlBF,eAmBE;AAAK,cAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACG3C,GADH,aACGA,GADH,0CACGA,GAAG,CAAEJ,SADR,oDACG,gBAAgBiD,GAAhB,CAAoB,CAAChD,QAAD,EAAWoD,MAAX,kBACnB,oBAAC,WAAD;AAAa,cAAA,GAAG,EAAEA,MAAlB;AAA0B,cAAA,QAAQ,EAAEpD,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,CADH,CAnBF,eAwBE;AAAM,cAAA,SAAS,EAAC,+CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAxBF,eA2BE,oBAAC,WAAD;AAAa,cAAA,GAAG,EAAEG,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF,eA4BE;AAAM,cAAA,SAAS,EAAC,+CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BA5BF,eA6BE,oBAAC,WAAD;AAAa,cAAA,GAAG,EAAEA,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BF,CADiB;AAAA,WAAnB,CADwB;AAAA,SAA1B,CAD+B;AAAA,OAAhC,CADH,CADF;AAyCD,KAvXa;;AAEZ,SAAK3B,KAAL,GAAa;AACXM,MAAAA,OAAO,EAAE,KADE;AAEXU,MAAAA,aAAa,EAAE,EAFJ;AAGX2C,MAAAA,YAAY,EAAE,KAHH;AAIXD,MAAAA,qBAAqB,EAAE,EAJZ;AAKX7C,MAAAA,OAAO,EAAE;AALE,KAAb;AAOD;;AAEDiE,EAAAA,iBAAiB,GAAG;AAClB,SAAKlF,oBAAL;AACD;;AA4WDmF,EAAAA,MAAM,GAAG;AAAA;;AACP,QAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,KAA+C,EAA7D;AACA,UAAK;AAACb,MAAAA,UAAD;AAAaM,MAAAA;AAAb,QAA+B,IAApC;AAEA,wBACE,0CACG,KAAK7E,KAAL,CAAWM,OAAX,gBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAG,uBACV0E,OAAO,SAAP,IAAAA,OAAO,WAAP,IAAAA,OAAO,CAAEK,KAAT,GAAiBL,OAAjB,aAAiBA,OAAjB,uBAAiBA,OAAO,CAAEK,KAA1B,GAAkC,aACnC,EAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEjG,WAAvB;AAAoC,MAAA,OAAO,EAAE,KAAK2E,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwB,KAAK/D,KAAL,CAAWa,OAAX,IAAsB,GAA9C,CAJF,CALF,CADF,CADF,eAeE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKb,KAAL,CAAWgB,aAAX,CAAyBE,QAD5B,CAFF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,GAAD,0BAAG,KAAKlB,KAAL,CAAWgB,aAAd,qFAAG,uBAA0BC,OAA7B,2DAAG,uBAAmCqE,aAAc,IAApD,0BAAuD,KAAKtF,KAAL,CAAWgB,aAAlE,qFAAuD,uBAA0BC,OAAjF,2DAAuD,uBAAmCgC,UAAW,EADxG,CAFF,CAPF,eAaE;AACE,MAAA,SAAS,EAAC,kCADZ;AAEE,MAAA,OAAO,EAAEsC,MAAM,CAACC,KAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAbF,CADF,eAqBE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,MAAA,SAAS,EAAC,+DAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAM,MAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAM,MAAA,SAAS,EAAC,4DAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE;AAAM,MAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAM,MAAA,SAAS,EAAC,+DAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,CADF,EAUGhG,KAAK,CAACiG,cAAN,kBACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBAGC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,eAeE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAE,KAAKzF,KAAL,CAAW2D,YADnB;AAEE,MAAA,MAAM,EAAE,KAAKG,aAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,SAAS,EAAC,gBAAxB;AAAyC,MAAA,WAAW,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,eAOE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK9D,KAAL,CAAWyD,YAAX,gBACC,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,MAAA,uBAAuB,EAAE;AACvBiC,QAAAA,MAAM,2BAAE,KAAK1F,KAAL,CAAWyD,YAAb,0DAAE,sBAAyBkC;AADV,OAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,4BAOG,KAAK3F,KAAL,CAAWyD,YAPd,2DAOG,uBAAyBmC,YAAzB,CAAsCpB,GAAtC,CACC,CAACqB,MAAD,EAASC,CAAT;AAAA;;AAAA,0BACE;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,MAAM,CAACE,YADV,CADF,eAIE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,GAAG,EAAED,CAFP;AAGE,QAAA,uBAAuB,EAAE;AACvBJ,UAAAA,MAAM,EAAEG,MAAM,CAACG;AADQ,SAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAWG,KAAKhG,KAAL,CAAW0D,qBAAX,gCACD,KAAK1D,KAAL,CAAWyD,YADV,2DACD,uBAAyBwC,eADxB,IAECJ,MAAM,CAACE,YAAP,gCACE,KAAK/F,KAAL,CAAWyD,YADb,2DACE,uBAAyBwC,eAD3B,kBAEE,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJH,gBAOC,0CACGJ,MAAM,CAACE,YAAP,KACC,KAAK/F,KAAL,CAAW0D,qBADZ,iBAEC,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAKGmC,MAAM,CAACE,YAAP,gCACC,KAAK/F,KAAL,CAAWyD,YADZ,2DACC,uBACIwC,eAFL,kBAGC,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,CAlBJ,CADF;AAAA,KADD,CAPH,eA0CE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAG,OACN,KAAKlG,KAAL,CAAW0D,qBAAX,gCACA,KAAK1D,KAAL,CAAWyD,YADX,2DACA,uBAAyBwC,eADzB,IAEI,WAFJ,GAGI,UACL;AANI,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAXF,EAWiC,GAXjC,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKjG,KAAL,CAAW0D,qBAAlB,CAZF,QAYoD,GAZpD,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbF,EAa4B,GAb5B,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACG,KAAK1D,KAAL,CAAWyD,YADd,2DACG,uBAAyBwC,eAD5B,CAdF,CA1CF,eA4DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5DF,eA6DE;AACE,MAAA,uBAAuB,EAAE;AACvBP,QAAAA,MAAM,4BAAE,KAAK1F,KAAL,CAAWyD,YAAb,2DAAE,uBAAyB0C;AADV,OAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7DF,CADD,gBAqEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAtEJ,CAPF,eAgFE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,QADV;AAEE,MAAA,SAAS,EAAC,gBAFZ;AAGE,MAAA,OAAO,EAAE,KAAKrC,aAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAhFF,CAfF,CArBF,CAfF,CAJJ,CADF;AAwJD;;AAthB6C;;AAyhBhD,eAAerE,iBAAf","sourcesContent":["import React from \"react\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Loader from \"./../../_components/loader/loader\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { ReactComponent as TickMark } from \"./images/circle-check-solid.svg\";\r\nimport { ReactComponent as Xmark } from \"./images/circle-xmark-solid.svg\";\r\nimport utils from \"../../_helpers/utils\";\r\nimport \"./detailed-profiling.styles.css\";\r\n\r\nclass DetailedProfiling extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: false,\r\n      profilingData: {},\r\n      showSolution: false,\r\n      solutionCorrectString: \"\",\r\n      usingS3: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.questionWiseAnalysis();\r\n  }\r\n\r\n  questionWiseAnalysis = async () => {\r\n    const { resultUrl } = this.props.location.state || {};\r\n    const { detailedProfiling } = resultUrl || {};\r\n    let id = this.props.match.params.id;\r\n\r\n    this.setState({ loading: true });\r\n    if (detailedProfiling) {\r\n      console.log(\"here\");\r\n      try {\r\n        const res = await ApiService.fetchGetUrl(detailedProfiling);\r\n        if (res.data?.message === \"Success\") {\r\n          console.log(res.data.data);\r\n          this.setState({ usingS3: true });\r\n          return this.processData(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    try {\r\n      const res = await ApiService.questionWiseAnalysis(id);\r\n      console.log(\"here\");\r\n      if (res.data?.message === \"Success\") {\r\n        console.log(res.data.data);\r\n        this.processData(res.data);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  processData = (data) => {\r\n    const profilingData = {\r\n      summary: data.data.summary,\r\n      testName: data.data.testName,\r\n    };\r\n    const tagSections = [];\r\n\r\n    data.data?.sections?.forEach((oldSection) => {\r\n      oldSection.questions.forEach((question) => {\r\n        question.tags.forEach((oldTagSection) => {\r\n          oldTagSection.tags.forEach((tag) => {\r\n            // creating tag section\r\n            let tagSecIndex = null;\r\n            tagSections.forEach((tagSection, index) => {\r\n              if (tagSection.majorTagName === oldTagSection.name) {\r\n                tagSecIndex = index;\r\n              }\r\n            });\r\n\r\n            if (tagSecIndex === null) {\r\n              tagSecIndex = tagSections.length;\r\n              tagSections.push({\r\n                majorTagName: oldTagSection.name,\r\n                sections: [],\r\n              });\r\n            }\r\n\r\n            // creating sections\r\n            let secIndex = null;\r\n            tagSections[tagSecIndex].sections.forEach((section, index) => {\r\n              if (section.sectionId === oldSection.sectionId) {\r\n                secIndex = index;\r\n              }\r\n            });\r\n\r\n            if (secIndex === null) {\r\n              secIndex = tagSections[tagSecIndex].sections.length;\r\n              tagSections[tagSecIndex].sections.push({\r\n                sectionName: oldSection.sectionName,\r\n                sectionId: oldSection.sectionId,\r\n                tags: [],\r\n              });\r\n            }\r\n\r\n            // creating tags\r\n            let tagIndex = null;\r\n            tagSections[tagSecIndex].sections[secIndex].tags.forEach(\r\n              (newTag, index) => {\r\n                if (newTag.id === tag.id) {\r\n                  tagIndex = index;\r\n                }\r\n              }\r\n            );\r\n            if (tagIndex === null) {\r\n              tagIndex =\r\n                tagSections[tagSecIndex].sections[secIndex].tags.length;\r\n              tagSections[tagSecIndex].sections[secIndex].tags.push({\r\n                name: tag.name,\r\n                id: tag.id,\r\n                questions: [],\r\n              });\r\n            }\r\n            tagSections[tagSecIndex].sections[secIndex].tags[\r\n              tagIndex\r\n            ].questions.push({\r\n              questionId: question.questionId,\r\n              id: question.id,\r\n              index: question.index,\r\n              correctString: question.correctString,\r\n              attemptStatus: question.attemptStatus,\r\n              attemptId: question.attemptId,\r\n              testId: question.testId,\r\n            });\r\n\r\n            // calculating no of attempts and correct\r\n            if (question.attemptStatus === -1) {\r\n              tagSections[tagSecIndex].sections[secIndex].tags[\r\n                tagIndex\r\n              ].notAttempt =\r\n                (tagSections[tagSecIndex].sections[secIndex].tags[tagIndex]\r\n                  .notAttempt || 0) + 1;\r\n            } else if (question.attemptStatus === 0) {\r\n              tagSections[tagSecIndex].sections[secIndex].tags[tagIndex].wrong =\r\n                (tagSections[tagSecIndex].sections[secIndex].tags[tagIndex]\r\n                  .wrong || 0) + 1;\r\n            } else if (question.attemptStatus === 1) {\r\n              tagSections[tagSecIndex].sections[secIndex].tags[tagIndex].right =\r\n                (tagSections[tagSecIndex].sections[secIndex].tags[tagIndex]\r\n                  .right || 0) + 1;\r\n            }\r\n\r\n            // calculating marks\r\n            tagSections[tagSecIndex].sections[secIndex].tags[\r\n              tagIndex\r\n            ].totalMarks =\r\n              (tagSections[tagSecIndex].sections[secIndex].tags[tagIndex]\r\n                .totalMarks || 0) + parseFloat(question.actualMarks);\r\n            tagSections[tagSecIndex].sections[secIndex].tags[\r\n              tagIndex\r\n            ].marksObtain =\r\n              (tagSections[tagSecIndex].sections[secIndex].tags[tagIndex]\r\n                .marksObtain || 0) + parseFloat(question.marks);\r\n          });\r\n        });\r\n      });\r\n    });\r\n\r\n    profilingData.tagSections = tagSections;\r\n\r\n    this.setState({\r\n      loading: false,\r\n      profilingData,\r\n    });\r\n  };\r\n\r\n  openSolution = (question) => {\r\n    console.log(question);\r\n    ApiService.viewSolution(question?.testId, question?.index, question?.id)\r\n      .then((res) => {\r\n        this.setState(\r\n          {\r\n            solutionData: res.data,\r\n            solutionCorrectString: question?.correctString || \"\",\r\n          },\r\n          () => {\r\n            this.setState({\r\n              showSolution: true,\r\n            });\r\n          }\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          showModal: true,\r\n        });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  closeSolution = () => {\r\n    this.setState({\r\n      showSolution: false,\r\n      solutionCorrectString: \"\",\r\n    });\r\n  };\r\n\r\n  goBack = () => {\r\n    const { resultUrl } = this.props.location.state || {};\r\n    if (resultUrl) return this.props.history.push(\"/testdetails\");\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  QuestionGem = ({ question }) => {\r\n    const gemColor = {\r\n      1: \"question-success\",\r\n      0: \"question-fail\",\r\n      \"-1\": \"question-neutral\",\r\n    };\r\n    return (\r\n      <div\r\n        onClick={() => this.openSolution(question)}\r\n        className={`${\r\n          gemColor[question?.attemptStatus]\r\n        } profiling-question-block`}\r\n      >\r\n        {question.index}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  AttemptsBar = ({ tag }) => (\r\n    <div className=\"profiling-full-width\">\r\n      <div\r\n        style={{\r\n          gridTemplateColumns: `${tag?.right || 0}fr ${tag?.wrong || 0}fr ${\r\n            tag?.notAttempt || 0\r\n          }fr`,\r\n        }}\r\n        className=\"profiling-progress-bar question-neutral\"\r\n      >\r\n        <div className=\"question-success\"></div>\r\n        <div className=\"question-fail\"></div>\r\n        <div className=\"question-neutral\"></div>\r\n      </div>\r\n      <div className=\"profiling-heading profiling-center-text\">\r\n        <span className=\"question-success-text\">{tag?.right || 0}</span>/\r\n        <span className=\"question-fail-text\">{tag?.wrong || 0}</span>/\r\n        <span className=\"question-neutral-text\">{tag?.notAttempt || 0}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  AccuracyBar = ({ tag }) => (\r\n    <div className=\"profiling-full-width\">\r\n      <div\r\n        style={{\r\n          gridTemplateColumns: `${tag?.right || 0}fr \r\n                          ${tag?.wrong || 0}fr`,\r\n        }}\r\n        className=\"profiling-progress-bar question-neutral\"\r\n      >\r\n        <div className=\"question-success animate-progress\"></div>\r\n        <div className=\"question-neutral\"></div>\r\n      </div>\r\n      <div className=\"profiling-heading profiling-center-text\">\r\n        {(\r\n          ((tag?.right || 0) / ((tag?.wrong || 0) + (tag?.right || 0))) * 100 ||\r\n          0\r\n        )?.toFixed(1)}\r\n        %\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  RenderOnPc = () => {\r\n    const {AttemptsBar, AccuracyBar, QuestionGem} = this;\r\n    return (\r\n      <>\r\n        {this.state.profilingData?.tagSections?.map((tagSection, index) => (\r\n          <div key={index}>\r\n            <div className=\"profiling-section-name profiling-heading\">\r\n              {tagSection.majorTagName}\r\n            </div>\r\n            <div className=\"profiling-tag-block\">\r\n              <div className=\"profiling-row profiling-heading profiling-tag-header\">\r\n                <div className=\"profiling-column\">Sections</div>\r\n                <div className=\"profiling-column\">Topics</div>\r\n                <div className=\"profiling-column\">Questions</div>\r\n                <div className=\"profiling-column\">Questions Attempted</div>\r\n                <div className=\"profiling-column\">Marks</div>\r\n                <div className=\"profiling-column\">Attempts</div>\r\n                <div className=\"profiling-column\">Accuracy</div>\r\n              </div>\r\n              {tagSection?.sections?.map((section, index2) => (\r\n                <div key={index2} className=\"profiling-row\">\r\n                  <div\r\n                    style={{ gridRow: `span ${section.tags.length}` }}\r\n                    className=\"profiling-column profiling-center profiling-heading\"\r\n                  >\r\n                    {section.sectionName}\r\n                  </div>\r\n                  {section?.tags?.map((tag, index3) => (\r\n                    <React.Fragment key={index3}>\r\n                      <div className=\"profiling-column\">{tag.name}</div>\r\n                      <div className=\"profiling-column profiling-question-container\">\r\n                        {tag?.questions?.map((question, index4) => (\r\n                          <QuestionGem key={index4} question={question} />\r\n                        ))}\r\n                      </div>\r\n                      <div className=\"profiling-column\">\r\n                        {(tag?.right || 0) + (tag?.wrong || 0)}/\r\n                        {(tag?.right || 0) +\r\n                          (tag?.wrong || 0) +\r\n                          (tag?.notAttempt || 0)}\r\n                      </div>\r\n                      <div className=\"profiling-column\">\r\n                        <div>\r\n                          {tag?.marksObtain}/{tag?.totalMarks}\r\n                        </div>\r\n                        <div>\r\n                          [{\" \"}\r\n                          {((tag?.marksObtain / tag?.totalMarks) * 100).toFixed(\r\n                            2\r\n                          )}\r\n                          % ]\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"profiling-column profiling-center\">\r\n                        <AttemptsBar tag={tag} />\r\n                      </div>\r\n                      <div className=\"profiling-column profiling-center\">\r\n                        <AccuracyBar tag={tag} />\r\n                      </div>\r\n                    </React.Fragment>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  RenderOnMobile = () => {\r\n    const { profilingData } = this.state;\r\n    const {AttemptsBar, AccuracyBar, QuestionGem} = this;\r\n    return (\r\n      <div className=\"detailed-profiling-mobile-wrapper\">\r\n        {profilingData?.tagSections?.map((tagSection, index) =>\r\n          tagSection?.sections?.map((section, index2) =>\r\n            section?.tags?.map((tag, index3) => (\r\n              <div className=\"detailed-profiling-mobile-box\" key={index3}>\r\n                <span className=\"detailed-profiling-mobile-section-name\">\r\n                  {section.sectionName}\r\n                </span>\r\n                <div className=\"detailed-profiling-mobile-tag-name\">\r\n                  {tagSection.majorTagName} - {tag.name}\r\n                </div>\r\n                <span className=\"profiling-mobile-marks-wrapper\">\r\n                  <span className=\"profiling-mobile-heading\">Marks:-</span>\r\n\r\n                  <div>\r\n                    {tag?.marksObtain}/{tag?.totalMarks}\r\n                  </div>\r\n                  <div>\r\n                    [ {((tag?.marksObtain / tag?.totalMarks) * 100).toFixed(2)}%\r\n                    ]\r\n                  </div>\r\n                </span>\r\n                <span className=\"profiling-mobile-heading profiling-heading-mg\">Questions:-</span>\r\n                <div className=\"profiling-question-container\">\r\n                  {tag?.questions?.map((question, index4) => (\r\n                    <QuestionGem key={index4} question={question} />\r\n                  ))}\r\n                </div>\r\n                <span className=\"profiling-mobile-heading profiling-heading-mg\">\r\n                  Question Attempts:-\r\n                </span>\r\n                <AttemptsBar tag={tag} />\r\n                <span className=\"profiling-mobile-heading profiling-heading-mg\">Accuracy:-</span>\r\n                <AccuracyBar tag={tag} />\r\n              </div>\r\n            ))\r\n          )\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let portlet = JSON.parse(localStorage.getItem(\"portlet\")) || {};\r\n    const{RenderOnPc, RenderOnMobile} = this;\r\n\r\n    return (\r\n      <>\r\n        {this.state.loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div>\r\n            <Container fluid>\r\n              <div\r\n                className={`module-header-step2 ${\r\n                  portlet?.class ? portlet?.class : \"orange-card\"\r\n                }`}\r\n              >\r\n                <div className=\"\">\r\n                  <div className=\"back\">\r\n                    <FontAwesomeIcon icon={faArrowLeft} onClick={this.goBack} />\r\n                  </div>\r\n                  <h4>Detailed Profiling {this.state.usingS3 && \"*\"}</h4>\r\n                </div>\r\n              </div>\r\n            </Container>\r\n            <div className=\"profiling-container\">\r\n              <div className=\"profiling-header\">\r\n                <div>\r\n                  <span className=\"profiling-heading\">Test Name : </span>\r\n                  <span className=\"profiling-details\">\r\n                    {this.state.profilingData.testName}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"profiling-heading\">Marks Scored : </span>\r\n                  <span className=\"profiling-details\">\r\n                    {`${this.state.profilingData?.summary?.marksObtained}/${this.state.profilingData?.summary?.totalMarks}`}\r\n                  </span>\r\n                </div>\r\n                <button\r\n                  className=\"detailed-profiling-download-test\"\r\n                  onClick={window.print}\r\n                >\r\n                  Download Page\r\n                </button>\r\n              </div>\r\n              <div className=\"profiling-body-wrapper\">\r\n                <div className=\"profiling-legend profiling-heading\">\r\n                  <span>Legend: </span>\r\n                  <span className=\"profiling-gem-width question-success profiling-question-block\"></span>\r\n                  <span className=\"profiling-legend-text\">Correct </span>\r\n                  <span className=\"profiling-gem-width question-fail profiling-question-block\"></span>\r\n                  <span className=\"profiling-legend-text\">Wrong </span>\r\n                  <span className=\"profiling-gem-width question-neutral profiling-question-block\"></span>\r\n                  <span>Unattempted </span>\r\n                </div>\r\n                {utils.isMobileDevice() ? (\r\n                  <RenderOnMobile />\r\n                ) : (\r\n                  <RenderOnPc />\r\n                )}\r\n                <Modal\r\n                  show={this.state.showSolution}\r\n                  onHide={this.closeSolution}\r\n                >\r\n                  <Modal.Header className=\"text-uppercase\" closeButton>\r\n                    <Modal.Title></Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    {this.state.solutionData ? (\r\n                      <>\r\n                        <h4>Question: </h4>\r\n                        <div\r\n                          dangerouslySetInnerHTML={{\r\n                            __html: this.state.solutionData?.questionStatement,\r\n                          }}\r\n                        ></div>\r\n                        {this.state.solutionData?.choiceGroup1.map(\r\n                          (choice, i) => (\r\n                            <div key={i}>\r\n                              <span className=\"solution-choice-string\">\r\n                                {choice.choiceString}\r\n                              </span>\r\n                              <div\r\n                                className=\"solution-choice\"\r\n                                key={i}\r\n                                dangerouslySetInnerHTML={{\r\n                                  __html: choice.choiceValue,\r\n                                }}\r\n                              ></div>\r\n                              {this.state.solutionCorrectString ===\r\n                              this.state.solutionData?.studentResponse ? (\r\n                                choice.choiceString ===\r\n                                  this.state.solutionData?.studentResponse && (\r\n                                  <TickMark className=\"success-option\" />\r\n                                )\r\n                              ) : (\r\n                                <>\r\n                                  {choice.choiceString ===\r\n                                    this.state.solutionCorrectString && (\r\n                                    <TickMark className=\"correct-option\" />\r\n                                  )}\r\n                                  {choice.choiceString ===\r\n                                    this.state.solutionData\r\n                                      ?.studentResponse && (\r\n                                    <Xmark className=\"wrong-option\" />\r\n                                  )}\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          )\r\n                        )}\r\n                        <div\r\n                          className=\"answer-box\"\r\n                          style={{\r\n                            color: `var(${\r\n                              this.state.solutionCorrectString ===\r\n                              this.state.solutionData?.studentResponse\r\n                                ? \"--success\"\r\n                                : \"--danger\"\r\n                            })`,\r\n                          }}\r\n                        >\r\n                          <span>Correct Answer : </span>{\" \"}\r\n                          <span>{this.state.solutionCorrectString}</span> |{\" \"}\r\n                          <span>My Answer : </span>{\" \"}\r\n                          <span>\r\n                            {this.state.solutionData?.studentResponse}\r\n                          </span>\r\n                        </div>\r\n                        <h4>Solution: </h4>\r\n                        <div\r\n                          dangerouslySetInnerHTML={{\r\n                            __html: this.state.solutionData?.solution,\r\n                          }}\r\n                        ></div>\r\n                      </>\r\n                    ) : (\r\n                      <h5>Data is not uploaded</h5>\r\n                    )}\r\n                  </Modal.Body>\r\n                  <Modal.Footer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"text-uppercase\"\r\n                      onClick={this.closeSolution}\r\n                    >\r\n                      Close\r\n                    </Button>\r\n                  </Modal.Footer>\r\n                </Modal>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetailedProfiling;\r\n"]},"metadata":{},"sourceType":"module"}