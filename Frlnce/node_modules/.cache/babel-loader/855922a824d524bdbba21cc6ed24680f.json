{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { initializeFirebase, askForPermissionToReceiveNotifications, saveNotification } from \"./push-notification\"; //import serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport store from './_helpers/store';\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n})), document.getElementById('root')); //serviceWorker();\n\nserviceWorker.register();\ninitializeFirebase(); //console.log(\">> In Index.js initializeFirebase().....\");\n\nif (!localStorage.getItem(\"notification-token\")) {\n  //console.log(\"In Index.js notification-token not exists!...\");\n  askForPermissionToReceiveNotifications();\n} else {\n  navigator.serviceWorker.addEventListener(\"message\", messageEvent => {\n    //console.log(\">> Index.js Notification Mesage Received : \"+JSON.stringify(messageEvent.data));\n\n    /*\n    {\"firebaseMessaging\":{\"type\":\"notification-clicked\",\n    \"payload\":{\"data\":{\"resourceSubTypeId\":\"0\",\"resourceId\":\"0\",\n    \"gcm.notification.sound\":\"default\",\"resourceTypeId\":\"0\",\"messageId\":\"1471\",\n    \"message\":\"Testing PWA push msg\"},\"from\":\"999041119542\",\"priority\":\"high\",\n    \"notification\":{\"title\":\"Triangles-iLearn\",\"body\":\"Testing PWA push msg\",\n    \"click_action\":\"FCM_PLUGIN_ACTIVITY\"},\"collapse_key\":\"do_not_collapse\"}}}\n    */\n\n    /*{\"firebaseMessaging\":{\"type\":\"push-received\",..... */\n    let notificationJSON = messageEvent.data.firebaseMessaging.payload.data;\n\n    if (notificationJSON) {\n      saveNotification(notificationJSON);\n    }\n  });\n}","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","initializeFirebase","askForPermissionToReceiveNotifications","saveNotification","Provider","store","render","document","getElementById","register","localStorage","getItem","navigator","addEventListener","messageEvent","notificationJSON","data","firebaseMessaging","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,kBAAT,EAA6BC,sCAA7B,EAAqEC,gBAArE,QAA6F,qBAA7F,C,CACA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,sCAAP;AAEA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEAP,QAAQ,CAACQ,MAAT,eACC,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADH,CADD,EAIAE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJA,E,CAMA;;AACAR,aAAa,CAACS,QAAd;AAEAR,kBAAkB,G,CAClB;;AACA,IAAG,CAACS,YAAY,CAACC,OAAb,CAAqB,oBAArB,CAAJ,EAAgD;AAC5C;AACAT,EAAAA,sCAAsC;AACzC,CAHD,MAIK;AACDU,EAAAA,SAAS,CAACZ,aAAV,CAAwBa,gBAAxB,CAAyC,SAAzC,EAAqDC,YAAD,IAAkB;AAClE;;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACO;AACC,QAAIC,gBAAgB,GAAGD,YAAY,CAACE,IAAb,CAAkBC,iBAAlB,CAAoCC,OAApC,CAA4CF,IAAnE;;AACA,QAAGD,gBAAH,EAAqB;AACjBZ,MAAAA,gBAAgB,CAACY,gBAAD,CAAhB;AACH;AAEJ,GAhBD;AAiBH","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { initializeFirebase, askForPermissionToReceiveNotifications, saveNotification } from \"./push-notification\";\n//import serviceWorker from \"./serviceWorker\";\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport store from './_helpers/store';\n\nReactDOM.render(\n <Provider store={store}>\n    <App />\n</Provider>, \ndocument.getElementById('root'));\n\n//serviceWorker();\nserviceWorker.register();\n\ninitializeFirebase();\n//console.log(\">> In Index.js initializeFirebase().....\");\nif(!localStorage.getItem(\"notification-token\")) {\n    //console.log(\"In Index.js notification-token not exists!...\");\n    askForPermissionToReceiveNotifications();\n}\nelse {\n    navigator.serviceWorker.addEventListener(\"message\", (messageEvent) => {\n        //console.log(\">> Index.js Notification Mesage Received : \"+JSON.stringify(messageEvent.data));\n        /*\n        {\"firebaseMessaging\":{\"type\":\"notification-clicked\",\n        \"payload\":{\"data\":{\"resourceSubTypeId\":\"0\",\"resourceId\":\"0\",\n        \"gcm.notification.sound\":\"default\",\"resourceTypeId\":\"0\",\"messageId\":\"1471\",\n        \"message\":\"Testing PWA push msg\"},\"from\":\"999041119542\",\"priority\":\"high\",\n        \"notification\":{\"title\":\"Triangles-iLearn\",\"body\":\"Testing PWA push msg\",\n        \"click_action\":\"FCM_PLUGIN_ACTIVITY\"},\"collapse_key\":\"do_not_collapse\"}}}\n        */\n       /*{\"firebaseMessaging\":{\"type\":\"push-received\",..... */\n        let notificationJSON = messageEvent.data.firebaseMessaging.payload.data;\n        if(notificationJSON) {\n            saveNotification(notificationJSON);\n        }\n       \n    });\n}\n\n\n"]},"metadata":{},"sourceType":"module"}