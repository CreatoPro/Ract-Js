{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\test\\\\TestResult.js\";\nimport React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle, faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport ApiService from \"../../_services/ApiService\";\nimport Loader from \"./../../_components/loader/loader\";\nimport Chart from \"chart.js\";\nimport { ReactComponent as PdfIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/file-lines-solid.svg\";\nimport { ReactComponent as TickMark } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/circle-check-solid.svg\";\nimport { ReactComponent as Xmark } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/circle-xmark-solid.svg\";\nimport UserService from \"../../_services/UserService\";\nimport Config from \"../../_config/config\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport \"./testResult.styles.css\";\nimport { config } from \"mediaelement\";\n\nclass TestResult extends Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = /*#__PURE__*/React.createRef();\n\n    this.getResultFromSigned = async resultUrl => {\n      const {\n        viewResult\n      } = resultUrl;\n      console.log(resultUrl, \"result\");\n\n      try {\n        var _res$data;\n\n        const res = await ApiService.fetchGetUrl(viewResult);\n        console.log(res);\n\n        if (((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.message) === \"Success\") {\n          this.setState({\n            loading: false,\n            list: res.data.data,\n            result: res.data.result,\n            message: res.data.message,\n            usingS3: true\n          });\n          return {\n            res: true,\n            err: false\n          };\n        }\n\n        return {\n          res: false,\n          err: true\n        };\n      } catch (err) {\n        console.log(err);\n        return {\n          res: false,\n          err: true\n        };\n      }\n    };\n\n    this.getTopRankers = () => {\n      var _list$summary, _list$summary$toprank;\n\n      const {\n        list\n      } = this.state;\n      if (!(list !== null && list !== void 0 && (_list$summary = list.summary) !== null && _list$summary !== void 0 && (_list$summary$toprank = _list$summary.toprankers) !== null && _list$summary$toprank !== void 0 && _list$summary$toprank.enableStatus)) return;\n      ApiService.getTopRankers(this.props.match.params.id).then(res => {\n        console.log(res.data, \"top rankers\");\n        this.setState({\n          topRankers: res.data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.logout = () => {\n      this.props.history.push({\n        pathname: \"/logout\",\n        state: {\n          redirectRoute: \"/loginwithmobile\"\n        }\n      });\n    };\n\n    this.sortQuestionWiseAnalysis = sections => {\n      if (!sections) return [];\n      const newSections = sections.map(section => {\n        var _section$questions;\n\n        section.questions = section === null || section === void 0 ? void 0 : (_section$questions = section.questions) === null || _section$questions === void 0 ? void 0 : _section$questions.sort((questOne, questTwo) => {\n          if ((parseInt(questOne.questionOrder) || 0) >= (parseInt(questTwo.questionOrder) || 0)) return 1;else return -1;\n        });\n        console.log(section.questions);\n        return section;\n      });\n      console.log(newSections);\n      return newSections;\n    };\n\n    this.requestDataNew = async () => {\n      this.setState({\n        usingS3: false\n      });\n      const {\n        resultUrl\n      } = this.state;\n      const {\n        detailedProfiling\n      } = resultUrl || {};\n      const id = this.props.match.params.id;\n      this.setState({\n        loading: true,\n        list: [],\n        message: null,\n        result: 0\n      });\n\n      if (detailedProfiling) {\n        try {\n          var _res$data2;\n\n          console.log(\"here success\");\n          const res = await ApiService.fetchGetUrl(detailedProfiling);\n\n          if (((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.message) === \"Success\") {\n            var _data$summary;\n\n            let {\n              data\n            } = res.data;\n            console.log(data);\n\n            if ((data === null || data === void 0 ? void 0 : (_data$summary = data.summary) === null || _data$summary === void 0 ? void 0 : _data$summary.setId) > 0) {\n              data.sections = this.sortQuestionWiseAnalysis(data === null || data === void 0 ? void 0 : data.sections);\n            }\n\n            return this.setState({\n              loading: false,\n              list: data,\n              result: res.data.result,\n              message: res.data.message,\n              displaying: \"questionWiseAnalysis\",\n              usingS3: true\n            }, () => {\n              this.getTopRankers();\n            });\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      }\n\n      try {\n        var _data$summary2;\n\n        console.log(\"here success\");\n        const res = await ApiService.questionWiseAnalysis(id);\n        console.log(res);\n        let {\n          data\n        } = res.data;\n        console.log(data);\n\n        if ((data === null || data === void 0 ? void 0 : (_data$summary2 = data.summary) === null || _data$summary2 === void 0 ? void 0 : _data$summary2.setId) > 0) {\n          data.sections = this.sortQuestionWiseAnalysis(data === null || data === void 0 ? void 0 : data.sections);\n        }\n\n        this.setState({\n          loading: false,\n          list: data,\n          result: res.data.result,\n          message: res.data.message,\n          displaying: \"questionWiseAnalysis\"\n        }, () => {\n          this.getTopRankers();\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.openResultPdf = () => {\n      let enquiryId = UserService.getEnquiryId();\n      let token = UserService.getToken();\n      let id = this.props.match.params.id; // window.open();\n      // https://triangles.edusquares.com/triangles/offlineTestPaper.do?reqCode=viewPaper&testId=178&enquiryId=35076\n\n      window.open(`${Config.siteUrl}${Config.siteTitle}/offlineTestPaper.do?reqCode=viewPaper&testId=${id}&enquiryId=${enquiryId}&token=${token}`);\n    };\n\n    this.downloadSolution = type => {\n      var _this$state$list;\n\n      console.log(type);\n      window.open((_this$state$list = this.state.list) === null || _this$state$list === void 0 ? void 0 : _this$state$list.summary[type]);\n    };\n\n    this.openSolution = question => {\n      console.log(question);\n      ApiService.viewSolution(question === null || question === void 0 ? void 0 : question.testId, question === null || question === void 0 ? void 0 : question.index, question === null || question === void 0 ? void 0 : question.id).then(res => {\n        this.setState({\n          solutionData: res.data,\n          solutionCorrectString: (question === null || question === void 0 ? void 0 : question.correctString) || \"\"\n        }, () => {\n          this.setState({\n            showModal: true\n          });\n        });\n      }).catch(err => {\n        this.setState({\n          showModal: true\n        });\n        console.log(err);\n      });\n    };\n\n    this.closeSolution = () => {\n      this.setState({\n        showModal: false,\n        solutionCorrectString: \"\"\n      });\n    };\n\n    this.renderRanks = () => {\n      var _this$state$list2;\n\n      const {\n        testRank,\n        schoolRank,\n        batchRank,\n        studentGrade,\n        externalResult\n      } = ((_this$state$list2 = this.state.list) === null || _this$state$list2 === void 0 ? void 0 : _this$state$list2.barGraphData[0]) || {};\n      let externResultArr = [];\n      if (externalResult) externResultArr = externalResult.split(\",\");\n      const [onlineCode, onlineDisc, offlineCode, offlineDisc] = externResultArr;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"test-result-ranks\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 9\n        }\n      }, testRank && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"test-result-rank-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-result-rank-heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 15\n        }\n      }, \"All India Rank\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-details-fancy test-details-rank-value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 15\n        }\n      }, testRank)), schoolRank && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"test-result-rank-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-result-rank-heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 15\n        }\n      }, \"State Rank\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-details-fancy test-details-rank-value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 15\n        }\n      }, schoolRank)), batchRank && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"test-result-rank-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-result-rank-heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 15\n        }\n      }, \"City Rank\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-details-fancy test-details-rank-value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 15\n        }\n      }, batchRank)), studentGrade && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"test-result-rank-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-result-rank-heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 15\n        }\n      }, \"Scholarship Code\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-details-fancy test-details-rank-value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 15\n        }\n      }, studentGrade))), externalResult && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"test-result-rank-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-rank-scholarship\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-rank-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 15\n        }\n      }, \"Congratulations! \\uD83C\\uDF89\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-reult-clickable\",\n        onClick: () => window.location = \"https://www.unacademy.com\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 15\n        }\n      }, \"You have won\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-rank-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 17\n        }\n      }, onlineDisc, \"% scholarship\"), \" \", \"on Unacademy Plus subscription. Use code:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-result-fancy test-rank-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 17\n        }\n      }, onlineCode), \" \", \"to claim it.\"), offlineCode && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-reult-clickable\",\n        onClick: () => window.location = \"https://unacademy.com/offline/centres\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 19\n        }\n      }), \" You have won\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-rank-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 19\n        }\n      }, offlineDisc, \"% scholarship\"), \" \", \"on Unacademy Centre subscription. Use code:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-result-fancy test-rank-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 19\n        }\n      }, offlineCode), \" \", \"to claim it.\"))));\n    };\n\n    this.displayRank = () => {\n      this.setState({\n        showTopRankers: true\n      });\n    };\n\n    this.closeRanks = () => {\n      this.setState({\n        showTopRankers: false\n      });\n    };\n\n    this.buildChart = () => {\n      let t1 = {};\n      t1.label = \"Marks\";\n      t1.data = [];\n      t1.backgroundColor = [];\n      t1.borderColor = [];\n      t1.borderWidth = 1;\n      let t2 = {};\n      t2.label = \"Topper\";\n      t2.data = [];\n      t2.backgroundColor = [];\n      t2.borderColor = [];\n      t2.borderWidth = 1;\n      let t3 = {};\n      t3.label = \"Total\";\n      t3.data = [];\n      t3.backgroundColor = [];\n      t3.borderColor = [];\n      t3.borderWidth = 1;\n      let labels = [];\n      let barChartData = {};\n      let data = this.state.list;\n\n      if (typeof data !== \"undefined\" || data != null) {\n        data.barGraphData && data.barGraphData.map((item, index) => {\n          if (index == 0) {\n            item.name = \"Test\";\n          }\n\n          labels.push(item.name);\n          t1.data.push(item.marks);\n          t1.backgroundColor.push(\"rgba(0, 128 ,0, 0.8)\");\n          t1.borderColor.push(\"rgba(0, 128 ,0, 1)\");\n          t2.data.push(item.toppermarks);\n          t2.backgroundColor.push(\"rgba(255, 0, 0, 0.8)\");\n          t2.borderColor.push(\"rgba(255, 0, 0, 1)\");\n          t3.data.push(item.totalmarks);\n          t3.backgroundColor.push(\"rgba(31, 119, 180, 0.8)\");\n          t3.borderColor.push(\"rgba(31, 119, 180, 1)\");\n        });\n        barChartData = {\n          labels: labels,\n          datasets: [t1, t2, t3]\n        };\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\n        myChartRef.height = 700;\n        new Chart(myChartRef, {\n          type: \"bar\",\n          data: barChartData,\n          options: {\n            legend: {\n              display: true,\n              position: \"bottom\",\n              labels: {\n                fontColor: \"#000080\"\n              }\n            },\n            scales: {\n              yAxes: [{\n                display: true,\n                ticks: {\n                  beginAtZero: true,\n                  min: 0\n                }\n              }]\n            },\n            responsive: true,\n            maintainAspectRatio: true\n          }\n        });\n      }\n    };\n\n    this.state = {\n      list: [],\n      message: null,\n      loading: false,\n      studentPdfResponse: false,\n      pdfUploadStatus: false,\n      result: 0,\n      displaying: \"barGraphData\",\n      showModal: false,\n      solutionData: null,\n      topRankers: {},\n      showTopRankers: false,\n      solutionCorrectString: \"\",\n      resultUrl: {},\n      usingS3: false\n    };\n    this.reloadTestResult = this.reloadTestResult.bind(this); //this.checkPaperUpload = this.checkPaperUpload.bind(this);\n  }\n\n  async componentDidMount() {\n    var _this$props$location$;\n\n    console.log(\"top rankers\");\n    console.log(this.props.match.params.id, \"top rankers\");\n    const {\n      resultUrl\n    } = this.props.location.state || {};\n\n    if ((_this$props$location$ = this.props.location.state) !== null && _this$props$location$ !== void 0 && _this$props$location$.showQuestionWiseAnalysis) {\n      console.log(\"Hello\");\n      this.requestDataNew(); // this.getTopRankers();\n    } else {\n      if (resultUrl) {\n        this.setState({\n          resultUrl\n        });\n        const {\n          res\n        } = await this.getResultFromSigned(resultUrl);\n        if (res) return;\n      }\n\n      this.reloadTestResult();\n    }\n\n    localStorage.removeItem(\"test_id\");\n    /** compare date validation */\n\n    /*if(this.props.location.state != undefined){\r\n      var testEndDate = this.props.location.state.testEndDate;\r\n      if(testEndDate != \"--\" && testEndDate !=\"\"){\r\n        testEndDate = testEndDate.substring(0, testEndDate.length - 9);\r\n        console.log(testEndDate);\r\n        var to = this.changeDateFormat(testEndDate,'dd/MM/yy','MM/dd/yy');\r\n        var currentDate = new Date()\r\n        var day = currentDate.getDate()\r\n        var month = currentDate.getMonth() + 1\r\n        var year = currentDate.getFullYear()\r\n        var today = month + \"/\" + day + \"/\" + year;\r\n        var from = to + ' 00:00';\r\n        to = today + ' 00:00';\r\n        if(this.isFromBiggerThanTo(from, to)){\r\n          this.setState({\r\n            studentPdfResponse:true\r\n          });\r\n          this.checkPaperUpload();\r\n        }\r\n      }\r\n    }*/\n\n    /** compare date validation */\n  }\n\n  componentDidUpdate() {\n    let testResult = this.state.list;\n\n    if ((!(testResult !== null && testResult !== void 0 && testResult.resultViewerMode) || (testResult === null || testResult === void 0 ? void 0 : testResult.resultViewerMode) == 1) && this.state.displaying === \"barGraphData\") {\n      if (Config.siteTitle === \"unsat\" || Config.siteTitle === \"unsat2\") return;\n      this.buildChart();\n    }\n  }\n\n  reloadTestResult() {\n    var id = this.props.match.params.id;\n    this.setState({\n      loading: true\n    }, () => {\n      ApiService.fetchTestResult(id).then(res => {\n        console.log(res);\n\n        if (res.data.data.resultViewerMode === 2) {\n          console.log(\"top rankers here\");\n          this.getTopRankers();\n        }\n\n        this.setState({\n          loading: false,\n          list: res.data.data,\n          result: res.data.result,\n          message: res.data.message\n        });\n      });\n    });\n  }\n\n  checkPaperUpload() {\n    var id = this.props.match.params.id;\n    this.setState({\n      loading: true\n    }, () => {\n      ApiService.fetchTestPaperUploadStatus(id).then(res => {\n        if (res.data.status == 1) {\n          this.setState({\n            loading: false,\n            url: res.data.url,\n            pdfUploadStatus: false\n          });\n        } else {\n          if (this.state.studentPdfResponse == true) {\n            this.setState({\n              pdfUploadStatus: true\n            });\n          } else {\n            this.setState({\n              pdfUploadStatus: false\n            });\n          }\n        }\n      });\n    });\n  }\n\n  routeChange(pathname, state) {\n    console.log(pathname, state);\n\n    if (state) {\n      console.log(\"here\");\n      return this.props.history.push({\n        pathname,\n        state\n      });\n    }\n\n    this.props.history.push(pathname);\n  }\n\n  changeDateFormat(value, inputFormat, outputFormat) {\n    let outputSplitter = \"/\";\n    let strOutputFormat = outputFormat.split(outputSplitter).map(i => i.toUpperCase());\n\n    if (strOutputFormat.length != 3) {\n      strOutputFormat = outputFormat.split(\"-\");\n      outputSplitter = \"-\";\n    }\n\n    if (strOutputFormat.length != 3) throw new Error(\"wrong output format splitter :(\");\n    let date = null;\n\n    if (value instanceof Date) {\n      date = {\n        [\"YYYY\"]: value.getUTCFullYear(),\n        [\"MM\"]: value.getMonth() + 1,\n        [\"DD\"]: value.getDate()\n      };\n    }\n\n    if (typeof value == \"string\") {\n      let inputSplitter = \"/\";\n      var strInputFormat = inputFormat.split(inputSplitter).map(i => i.toUpperCase());\n\n      if (strInputFormat.length != 3) {\n        strInputFormat = inputFormat.split(\"-\");\n        inputSplitter = \"-\";\n      }\n\n      if (strInputFormat.length != 3) throw new Error(\"wrong input format splitter :(\");\n      let dateElements = value.split(inputSplitter);\n      if (dateElements.length != 3) throw new Error(\"wrong value :(\");\n      date = {\n        [strInputFormat[0]]: dateElements[0],\n        [strInputFormat[1]]: dateElements[1],\n        [strInputFormat[2]]: dateElements[2]\n      };\n    }\n\n    if (!date) throw new Error(\"unsupported value type:(\");\n    let result = date[strOutputFormat[0]] + outputSplitter + date[strOutputFormat[1]] + outputSplitter + date[strOutputFormat[2]];\n    return result;\n  }\n\n  isFromBiggerThanTo(dtmfrom, dtmto) {\n    return new Date(dtmfrom).getTime() >= new Date(dtmto).getTime();\n  }\n\n  closeWindow() {\n    var _window$opener, _window$opener$locati;\n\n    (_window$opener = window.opener) === null || _window$opener === void 0 ? void 0 : (_window$opener$locati = _window$opener.location) === null || _window$opener$locati === void 0 ? void 0 : _window$opener$locati.reload();\n    window.close();\n  }\n\n  render() {\n    let portlet = JSON.parse(localStorage.getItem(\"portlet\")) || [];\n    var pid = this.props.match.params.pid;\n    const {\n      loading\n    } = this.state;\n\n    if (this.state.result == 1) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"testlist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `module-header-step2 ${portlet.class ? portlet.class : \"orange-card\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"back\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 19\n        }\n      }, Config.siteTitle === \"unsat\" || Config.siteTitle === \"unsat2\" ? this.state.displaying === \"questionWiseAnalysis\" ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faArrowLeft,\n        onClick: () => this.props.history.replace(\"/testdetails\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logout-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-result-logout\",\n        onClick: this.logout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 27\n        }\n      }, \"Logout\")) : pid == 1 || pid === \"null\" ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTimesCircle,\n        onClick: () => this.closeWindow(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 23\n        }\n      }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faArrowLeft,\n        onClick: this.props.history.goBack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 19\n        }\n      }, \"Test Result \", this.state.usingS3 && \"*\"))), loading ? /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 26\n        }\n      }) : this.renderTestResult()));\n    } else {\n      let msg = /*#__PURE__*/React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: this.state.message\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 9\n        }\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"testlist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `module-header-step2 ${portlet.class ? portlet.class : \"orange-card\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"AnalysisReport\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"back\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 19\n        }\n      }, (Config.siteTitle === \"unsat\" || Config.siteTitle === \"unsat2\") && this.state.resultUrl.detailedProfiling ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logout-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-result-logout\",\n        onClick: this.logout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 25\n        }\n      }, \"Logout\")) : pid == 1 || pid === \"null\" ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTimesCircle,\n        onClick: () => this.closeWindow(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 23\n        }\n      }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faArrowLeft,\n        onClick: this.props.history.goBack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 19\n        }\n      }, \"Online Tests Result\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"testResult\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }\n      }, this.state.loading ? /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 39\n        }\n      }) : msg, this.state.pdfUploadStatus == true && /*#__PURE__*/React.createElement(\"button\", {\n        className: `resultbtn ${portlet.class ? portlet.class : \"orange-card\"}`,\n        onClick: () => this.routeChange(\"/test/upload/\" + this.props.match.params.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 19\n        }\n      }, \"Upload PDF\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"testgraph\",\n        style: {\n          display: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"canvas\", {\n        id: \"myChart\",\n        ref: this.chartRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 17\n        }\n      }))));\n    }\n  }\n\n  renderTestResult() {\n    let testResult = this.state.list;\n\n    if (testResult !== null && testResult !== void 0 && testResult.resultViewerMode && (testResult === null || testResult === void 0 ? void 0 : testResult.resultViewerMode) == 2 || this.state.displaying === \"questionWiseAnalysis\") {\n      return this.renderTestResultView2();\n    } else {\n      return this.renderTestResultView1();\n    }\n  }\n\n  renderTestResultView1() {\n    let data = this.state.list;\n    let portlet = JSON.parse(localStorage.getItem(\"portlet\")) || [];\n    const RenderRanks = this.renderRanks;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"test-result-logo-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"test-result-logo\",\n      src: `https://webfront.edusquares.com/${Config.siteTitle}/files/logos/logo.png`,\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(RenderRanks, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 10\n      }\n    }), this.renderCard(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"testResult\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 9\n      }\n    }, data.showAnalysisButtons == 1 && /*#__PURE__*/React.createElement(\"button\", {\n      className: `resultbtn ${portlet.class ? portlet.class : \"orange-card\"}`,\n      onClick: () => this.routeChange(\"/detailed-profiling/\" + this.props.match.params.id, this.state.resultUrl.detailedProfiling ? {\n        resultUrl: this.state.resultUrl\n      } : null),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 13\n      }\n    }, \"Detailed Profiling\"), data.showAnalysisButtons == 1 && /*#__PURE__*/React.createElement(\"button\", {\n      className: `resultbtn ${portlet.class ? portlet.class : \"orange-card\"}`,\n      onClick: this.requestDataNew,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 13\n      }\n    }, \"Question Wise Analysis\")), Config.siteTitle === \"unsat\" || Config.siteTitle === \"unsat2\" ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"testResult\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"result_card_list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"testgraph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"myChart\",\n      ref: this.chartRef,\n      height: \"230vh\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n  renderTestResultView2() {\n    var _this$state$topRanker, _this$state$list3, _this$state$list3$sum, _this$state$list3$sum2, _this$state$solutionD, _this$state$solutionD2, _this$state$solutionD6, _this$state$solutionD7, _this$state$solutionD8, _this$state$topRanker3, _this$state$list8, _this$state$list8$sum, _this$state$list8$sum2, _this$state$list8$sum3, _this$state$topRanker4;\n\n    let result = this.state.list;\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    let portlet = JSON.parse(localStorage.getItem(\"portlet\")) || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"testResult\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"result_card_list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"test-name-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 15\n      }\n    }, result.testName), (_this$state$topRanker = this.state.topRankers.rankers) === null || _this$state$topRanker === void 0 ? void 0 : _this$state$topRanker.map(data => {\n      if (user.studentCode === data.studentCode) {\n        var _this$state$topRanker2;\n\n        return /*#__PURE__*/React.createElement(\"h6\", {\n          className: \"rank-info\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 21\n          }\n        }, \" \", \"Your Rank is\", \" \", `${data.schoolRank}/${(_this$state$topRanker2 = this.state.topRankers.rankers) === null || _this$state$topRanker2 === void 0 ? void 0 : _this$state$topRanker2.length}`);\n      }\n\n      return null;\n    })), ((_this$state$list3 = this.state.list) === null || _this$state$list3 === void 0 ? void 0 : (_this$state$list3$sum = _this$state$list3.summary) === null || _this$state$list3$sum === void 0 ? void 0 : (_this$state$list3$sum2 = _this$state$list3$sum.toprankers) === null || _this$state$list3$sum2 === void 0 ? void 0 : _this$state$list3$sum2.enableStatus) && /*#__PURE__*/React.createElement(Button, {\n      onClick: this.displayRank,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 15\n      }\n    }, \"Top Rankers\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"test_summary_card blue-card test-result-mg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 17\n      }\n    }, \"Summary\"), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: \"text-center summary-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 21\n      }\n    }, \"Total Questions\"), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"text-center summary-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 21\n      }\n    }, \"Total Marks\"), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"text-center summary-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 21\n      }\n    }, \"Your Score\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 21\n      }\n    }, result.summary.numberOfQuestions), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 21\n      }\n    }, result.summary.totalMarks), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bolder\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 23\n      }\n    }, result.summary.marksObtained)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"test_summary_card blue-card test-result-mg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 17\n      }\n    }, \"Attempt Summary\"), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: \"text-center summary-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 21\n      }\n    }, \"Correct\"), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"text-center summary-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 21\n      }\n    }, \"Wrong\"), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"text-center summary-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 21\n      }\n    }, \"Unattempted\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 21\n      }\n    }, result.summary.correctQuestions), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 21\n      }\n    }, result.summary.wrongQuestions), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 21\n      }\n    }, result.summary.unattemptedQuestions)))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 11\n      }\n    }), result.sections && result.sections.map((section, index) => {\n      var _this$state$list4, _this$state$list4$sum, _this$state$list5, _this$state$list5$sum, _this$state$list6, _this$state$list6$sum, _this$state$list7, _this$state$list7$sum;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, ((_this$state$list4 = this.state.list) === null || _this$state$list4 === void 0 ? void 0 : (_this$state$list4$sum = _this$state$list4.summary) === null || _this$state$list4$sum === void 0 ? void 0 : _this$state$list4$sum.solutions) && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"view-solution\",\n        onClick: () => this.downloadSolution(\"solutions\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 21\n        }\n      }, \"Download - Solutions\", \" \"), ((_this$state$list5 = this.state.list) === null || _this$state$list5 === void 0 ? void 0 : (_this$state$list5$sum = _this$state$list5.summary) === null || _this$state$list5$sum === void 0 ? void 0 : _this$state$list5$sum.testPaper) && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"view-solution\",\n        onClick: () => this.downloadSolution(\"testPaper\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 21\n        }\n      }, \" \", \"|| Download - Test Paper\", \" \"), ((_this$state$list6 = this.state.list) === null || _this$state$list6 === void 0 ? void 0 : (_this$state$list6$sum = _this$state$list6.summary) === null || _this$state$list6$sum === void 0 ? void 0 : _this$state$list6$sum.testPaperWithSolutions) && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"view-solution\",\n        onClick: () => this.downloadSolution(\"testPaperWithSolutions\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 21\n        }\n      }, \" \", \"|| Download - Test Paper With Solution\", \" \"), this.state.list.needsManualEvaluation && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"view-solution\",\n        onClick: this.openResultPdf,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 21\n        }\n      }, \" \", \"|| Your Answer Script\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          overflowY: \"scroll\"\n        },\n        className: \"test_summary_card blue-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 25\n        }\n      }, section.sectionName, \" /\", \" \", (_this$state$list7 = this.state.list) === null || _this$state$list7 === void 0 ? void 0 : (_this$state$list7$sum = _this$state$list7.summary) === null || _this$state$list7$sum === void 0 ? void 0 : _this$state$list7$sum.setName), /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 29\n        }\n      }, \"#\"), result.tagTypes && result.tagTypes.map((tagType, tagTypeIndex) => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"th\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 37\n          }\n        }, tagType.name));\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 29\n        }\n      }, \"Your Response\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 29\n        }\n      }, \"Correct Answer\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 29\n        }\n      }, \"Score\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 29\n        }\n      }, \"View\", \" \", this.state.list.needsManualEvaluation && /*#__PURE__*/React.createElement(PdfIcon, {\n        onClick: this.openResultPdf,\n        className: \"pdf-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 33\n        }\n      }))), section.questions && section.questions.map((question, questionIndex) => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 37\n          }\n        }, question.questionOrder || question.index), question.tags && question.tags.map((questioTagType, questioTagTypesIndex) => {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"td\", {\n            className: \"text-center\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 47\n            }\n          }, questioTagType.tags && questioTagType.tags.map((questionTag, questionTagsIndex) => {\n            return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n              className: \"text-center\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 875,\n                columnNumber: 59\n              }\n            }, questionTag.name));\n          })));\n        }), /*#__PURE__*/React.createElement(\"td\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 37\n          }\n        }, question.attemptedString || \"--\"), /*#__PURE__*/React.createElement(\"td\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 893,\n            columnNumber: 37\n          }\n        }, question.correctString), /*#__PURE__*/React.createElement(\"td\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 37\n          }\n        }, question.marks, \"/\", parseFloat(question.actualMarks)), /*#__PURE__*/React.createElement(\"td\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.openSolution(question),\n          className: \"download \" + (question.attemptStatus == 1 ? \" green-card\" : question.attemptStatus == -1 ? \" blue-card\" : \" orange-card\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 39\n          }\n        }, \"Solution\"))));\n      }))))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 19\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: `resultbtn ${portlet.class ? portlet.class : \"orange-card\"}`,\n      onClick: () => this.routeChange(\"/detailed-profiling/\" + this.props.match.params.id, this.state.resultUrl.detailedProfiling ? {\n        resultUrl: this.state.resultUrl\n      } : null),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 929,\n        columnNumber: 11\n      }\n    }, \"Detailed Profiling\")), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: this.closeSolution,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      className: \"text-uppercase\",\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 11\n      }\n    }, this.state.solutionData ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 952,\n        columnNumber: 17\n      }\n    }, \"Question: \"), /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: (_this$state$solutionD = this.state.solutionData) === null || _this$state$solutionD === void 0 ? void 0 : _this$state$solutionD.questionStatement\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 17\n      }\n    }), (_this$state$solutionD2 = this.state.solutionData) === null || _this$state$solutionD2 === void 0 ? void 0 : _this$state$solutionD2.choiceGroup1.map((choice, i) => {\n      var _this$state$solutionD3, _this$state$solutionD4, _this$state$solutionD5;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"solution-choice-string\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 960,\n          columnNumber: 21\n        }\n      }, choice.choiceString), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"solution-choice\",\n        key: i,\n        dangerouslySetInnerHTML: {\n          __html: choice.choiceValue\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 21\n        }\n      }), this.state.solutionCorrectString === ((_this$state$solutionD3 = this.state.solutionData) === null || _this$state$solutionD3 === void 0 ? void 0 : _this$state$solutionD3.studentResponse) ? choice.choiceString === ((_this$state$solutionD4 = this.state.solutionData) === null || _this$state$solutionD4 === void 0 ? void 0 : _this$state$solutionD4.studentResponse) && /*#__PURE__*/React.createElement(TickMark, {\n        className: \"success-option\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 25\n        }\n      }) : /*#__PURE__*/React.createElement(React.Fragment, null, choice.choiceString === this.state.solutionCorrectString && /*#__PURE__*/React.createElement(TickMark, {\n        className: \"correct-option\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 27\n        }\n      }), choice.choiceString === ((_this$state$solutionD5 = this.state.solutionData) === null || _this$state$solutionD5 === void 0 ? void 0 : _this$state$solutionD5.studentResponse) && /*#__PURE__*/React.createElement(Xmark, {\n        className: \"wrong-option\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 27\n        }\n      })));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer-box\",\n      style: {\n        color: `var(${this.state.solutionCorrectString === ((_this$state$solutionD6 = this.state.solutionData) === null || _this$state$solutionD6 === void 0 ? void 0 : _this$state$solutionD6.studentResponse) ? \"--success\" : \"--danger\"})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 988,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 999,\n        columnNumber: 19\n      }\n    }, \"Correct Answer : \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 19\n      }\n    }, this.state.solutionCorrectString), \" |\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1001,\n        columnNumber: 19\n      }\n    }, \"My Answer : \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1002,\n        columnNumber: 19\n      }\n    }, (_this$state$solutionD7 = this.state.solutionData) === null || _this$state$solutionD7 === void 0 ? void 0 : _this$state$solutionD7.studentResponse)), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1004,\n        columnNumber: 17\n      }\n    }, \"Solution: \"), /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: (_this$state$solutionD8 = this.state.solutionData) === null || _this$state$solutionD8 === void 0 ? void 0 : _this$state$solutionD8.solution\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1005,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1012,\n        columnNumber: 15\n      }\n    }, \"Data is not uploaded\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1015,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      className: \"text-uppercase\",\n      onClick: this.closeSolution,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1016,\n        columnNumber: 13\n      }\n    }, \"Close\"))), /*#__PURE__*/React.createElement(Modal, {\n      size: \"xl\",\n      show: this.state.showTopRankers,\n      onHide: this.closeRanks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1025,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      className: \"text-uppercase\",\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1030,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1031,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1032,\n        columnNumber: 15\n      }\n    }, \"Top Ranks\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1035,\n        columnNumber: 11\n      }\n    }, (_this$state$topRanker3 = this.state.topRankers.rankers) !== null && _this$state$topRanker3 !== void 0 && _this$state$topRanker3.length ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rank-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rank-div rank-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1038,\n        columnNumber: 17\n      }\n    }, (_this$state$list8 = this.state.list) === null || _this$state$list8 === void 0 ? void 0 : (_this$state$list8$sum = _this$state$list8.summary) === null || _this$state$list8$sum === void 0 ? void 0 : (_this$state$list8$sum2 = _this$state$list8$sum.toprankers) === null || _this$state$list8$sum2 === void 0 ? void 0 : (_this$state$list8$sum3 = _this$state$list8$sum2.columns) === null || _this$state$list8$sum3 === void 0 ? void 0 : _this$state$list8$sum3.map(column => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rank-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1041,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 25\n      }\n    }, column === null || column === void 0 ? void 0 : column.DisplayLabel)))), (_this$state$topRanker4 = this.state.topRankers) === null || _this$state$topRanker4 === void 0 ? void 0 : _this$state$topRanker4.rankers.map(data => {\n      var _this$state$list9, _this$state$list9$sum, _this$state$list9$sum2, _this$state$list9$sum3;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rank-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 19\n        }\n      }, (_this$state$list9 = this.state.list) === null || _this$state$list9 === void 0 ? void 0 : (_this$state$list9$sum = _this$state$list9.summary) === null || _this$state$list9$sum === void 0 ? void 0 : (_this$state$list9$sum2 = _this$state$list9$sum.toprankers) === null || _this$state$list9$sum2 === void 0 ? void 0 : (_this$state$list9$sum3 = _this$state$list9$sum2.columns) === null || _this$state$list9$sum3 === void 0 ? void 0 : _this$state$list9$sum3.map(column => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rank-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1051,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 27\n        }\n      }, data[column.property]))));\n    })) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1060,\n        columnNumber: 15\n      }\n    }, \"No data Found\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1063,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      className: \"text-uppercase\",\n      onClick: this.closeRanks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1064,\n        columnNumber: 13\n      }\n    }, \"Close\"))));\n  }\n\n  renderCard() {\n    let data = this.state.list;\n\n    if (typeof data !== \"undefined\" || data != null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"testResult\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1081,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"result_card_list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1082,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1084,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"blue-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1085,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1086,\n          columnNumber: 17\n        }\n      }, \"Section\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1087,\n          columnNumber: 17\n        }\n      }, \"Marks\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 17\n        }\n      }, \"Max\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1089,\n          columnNumber: 17\n        }\n      }, \"%\"), Config.siteTitle === \"unsat\" || this.siteTitle === \"unsat2\" ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1093,\n          columnNumber: 21\n        }\n      }, \"CH\", \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"test-result-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1095,\n          columnNumber: 23\n        }\n      }, \"i\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-result-legend test-result-right-legend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1097,\n          columnNumber: 25\n        }\n      }, \"Course Highest\"))), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 21\n        }\n      }, \"CA\", \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"test-result-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1104,\n          columnNumber: 23\n        }\n      }, \"i\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"test-result-legend test-result-left-legend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106,\n          columnNumber: 25\n        }\n      }, \"Course Average\"))))), data.testTableData && data.testTableData.sort((a, b) => a.sortOrder - b.sortOrder).map((item, index) => {\n        if (item.sortOrder == 100) {\n          item.sectionName = \"Test Total\";\n        }\n\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1122,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1123,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1124,\n            columnNumber: 27\n          }\n        }, item.sectionName)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1126,\n            columnNumber: 25\n          }\n        }, item.marks), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1127,\n            columnNumber: 25\n          }\n        }, item.totalMarks), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1128,\n            columnNumber: 25\n          }\n        }, item.percentage.toFixed(2)), Config.siteTitle === \"unsat\" || this.siteTitle === \"unsat2\" ? null : /*#__PURE__*/React.createElement(React.Fragment, null, \" \", /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1133,\n            columnNumber: 29\n          }\n        }, item.testHighestPercentage), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1134,\n            columnNumber: 29\n          }\n        }, item.testAveragePercentage), \" \"));\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1142,\n          columnNumber: 11\n        }\n      }));\n    }\n  }\n\n  renderLegends() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"result_card_list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1151,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1153,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1172,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1173,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1174,\n        columnNumber: 15\n      }\n    }, \"CH\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1176,\n        columnNumber: 13\n      }\n    }, \"Course Highest\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1180,\n        columnNumber: 15\n      }\n    }, \"CA\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1182,\n        columnNumber: 13\n      }\n    }, \"Course Average\"))));\n  }\n\n}\n\nexport default TestResult;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/test/TestResult.js"],"names":["React","Component","Container","FontAwesomeIcon","faTimesCircle","faArrowLeft","ApiService","Loader","Chart","UserService","Config","Modal","Button","config","TestResult","constructor","props","chartRef","createRef","getResultFromSigned","resultUrl","viewResult","console","log","res","fetchGetUrl","data","message","setState","loading","list","result","usingS3","err","getTopRankers","state","summary","toprankers","enableStatus","match","params","id","then","topRankers","catch","logout","history","push","pathname","redirectRoute","sortQuestionWiseAnalysis","sections","newSections","map","section","questions","sort","questOne","questTwo","parseInt","questionOrder","requestDataNew","detailedProfiling","setId","displaying","questionWiseAnalysis","openResultPdf","enquiryId","getEnquiryId","token","getToken","window","open","siteUrl","siteTitle","downloadSolution","type","openSolution","question","viewSolution","testId","index","solutionData","solutionCorrectString","correctString","showModal","closeSolution","renderRanks","testRank","schoolRank","batchRank","studentGrade","externalResult","barGraphData","externResultArr","split","onlineCode","onlineDisc","offlineCode","offlineDisc","location","displayRank","showTopRankers","closeRanks","buildChart","t1","label","backgroundColor","borderColor","borderWidth","t2","t3","labels","barChartData","item","name","marks","toppermarks","totalmarks","datasets","myChartRef","current","getContext","height","options","legend","display","position","fontColor","scales","yAxes","ticks","beginAtZero","min","responsive","maintainAspectRatio","studentPdfResponse","pdfUploadStatus","reloadTestResult","bind","componentDidMount","showQuestionWiseAnalysis","localStorage","removeItem","componentDidUpdate","testResult","resultViewerMode","fetchTestResult","checkPaperUpload","fetchTestPaperUploadStatus","status","url","routeChange","changeDateFormat","value","inputFormat","outputFormat","outputSplitter","strOutputFormat","i","toUpperCase","length","Error","date","Date","getUTCFullYear","getMonth","getDate","inputSplitter","strInputFormat","dateElements","isFromBiggerThanTo","dtmfrom","dtmto","getTime","closeWindow","opener","reload","close","render","portlet","JSON","parse","getItem","pid","class","replace","goBack","renderTestResult","msg","__html","renderTestResultView2","renderTestResultView1","RenderRanks","renderCard","showAnalysisButtons","user","testName","rankers","studentCode","numberOfQuestions","totalMarks","fontWeight","marksObtained","correctQuestions","wrongQuestions","unattemptedQuestions","solutions","testPaper","testPaperWithSolutions","needsManualEvaluation","overflowY","sectionName","setName","tagTypes","tagType","tagTypeIndex","questionIndex","tags","questioTagType","questioTagTypesIndex","questionTag","questionTagsIndex","attemptedString","parseFloat","actualMarks","attemptStatus","questionStatement","choiceGroup1","choice","choiceString","choiceValue","studentResponse","color","solution","columns","column","DisplayLabel","property","testTableData","a","b","sortOrder","percentage","toFixed","testHighestPercentage","testAveragePercentage","renderLegends"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle, faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Loader from \"./../../_components/loader/loader\";\r\nimport Chart from \"chart.js\";\r\nimport { ReactComponent as PdfIcon } from \"./images/file-lines-solid.svg\";\r\nimport { ReactComponent as TickMark } from \"./images/circle-check-solid.svg\";\r\nimport { ReactComponent as Xmark } from \"./images/circle-xmark-solid.svg\";\r\nimport UserService from \"../../_services/UserService\";\r\nimport Config from \"../../_config/config\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"./testResult.styles.css\";\r\nimport { config } from \"mediaelement\";\r\n\r\nclass TestResult extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      message: null,\r\n      loading: false,\r\n      studentPdfResponse: false,\r\n      pdfUploadStatus: false,\r\n      result: 0,\r\n      displaying: \"barGraphData\",\r\n      showModal: false,\r\n      solutionData: null,\r\n      topRankers: {},\r\n      showTopRankers: false,\r\n      solutionCorrectString: \"\",\r\n      resultUrl: {},\r\n      usingS3: false,\r\n    };\r\n    this.reloadTestResult = this.reloadTestResult.bind(this);\r\n    //this.checkPaperUpload = this.checkPaperUpload.bind(this);\r\n  }\r\n  chartRef = React.createRef();\r\n\r\n  async componentDidMount() {\r\n    console.log(\"top rankers\");\r\n    console.log(this.props.match.params.id, \"top rankers\");\r\n\r\n    const { resultUrl } = this.props.location.state || {};\r\n\r\n    if (this.props.location.state?.showQuestionWiseAnalysis) {\r\n      console.log(\"Hello\");\r\n      this.requestDataNew();\r\n      // this.getTopRankers();\r\n    } else {\r\n      if (resultUrl) {\r\n        this.setState({ resultUrl });\r\n        const { res } = await this.getResultFromSigned(resultUrl);\r\n        if (res) return;\r\n      }\r\n      this.reloadTestResult();\r\n    }\r\n    localStorage.removeItem(\"test_id\");\r\n\r\n    /** compare date validation */\r\n    /*if(this.props.location.state != undefined){\r\n      var testEndDate = this.props.location.state.testEndDate;\r\n      if(testEndDate != \"--\" && testEndDate !=\"\"){\r\n        testEndDate = testEndDate.substring(0, testEndDate.length - 9);\r\n        console.log(testEndDate);\r\n        var to = this.changeDateFormat(testEndDate,'dd/MM/yy','MM/dd/yy');\r\n        var currentDate = new Date()\r\n        var day = currentDate.getDate()\r\n        var month = currentDate.getMonth() + 1\r\n        var year = currentDate.getFullYear()\r\n        var today = month + \"/\" + day + \"/\" + year;\r\n        var from = to + ' 00:00';\r\n        to = today + ' 00:00';\r\n        if(this.isFromBiggerThanTo(from, to)){\r\n          this.setState({\r\n            studentPdfResponse:true\r\n          });\r\n          this.checkPaperUpload();\r\n        }\r\n      }\r\n    }*/\r\n    /** compare date validation */\r\n  }\r\n\r\n  getResultFromSigned = async (resultUrl) => {\r\n    const { viewResult } = resultUrl;\r\n    console.log(resultUrl, \"result\");\r\n    try {\r\n      const res = await ApiService.fetchGetUrl(viewResult);\r\n      console.log(res);\r\n      if (res.data?.message === \"Success\") {\r\n        this.setState({\r\n          loading: false,\r\n          list: res.data.data,\r\n          result: res.data.result,\r\n          message: res.data.message,\r\n          usingS3: true,\r\n        });\r\n\r\n        return { res: true, err: false };\r\n      }\r\n\r\n      return { res: false, err: true };\r\n    } catch (err) {\r\n      console.log(err);\r\n      return { res: false, err: true };\r\n    }\r\n  };\r\n\r\n  getTopRankers = () => {\r\n    const { list } = this.state;\r\n\r\n    if (!list?.summary?.toprankers?.enableStatus) return;\r\n\r\n    ApiService.getTopRankers(this.props.match.params.id)\r\n      .then((res) => {\r\n        console.log(res.data, \"top rankers\");\r\n        this.setState({ topRankers: res.data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    let testResult = this.state.list;\r\n    if (\r\n      (!testResult?.resultViewerMode || testResult?.resultViewerMode == 1) &&\r\n      this.state.displaying === \"barGraphData\"\r\n    ) {\r\n      if (Config.siteTitle === \"unsat\" || Config.siteTitle === \"unsat2\") return;\r\n      this.buildChart();\r\n    }\r\n  }\r\n\r\n  reloadTestResult() {\r\n    var id = this.props.match.params.id;\r\n    this.setState({ loading: true }, () => {\r\n      ApiService.fetchTestResult(id).then((res) => {\r\n        console.log(res);\r\n        if (res.data.data.resultViewerMode === 2) {\r\n          console.log(\"top rankers here\");\r\n          this.getTopRankers();\r\n        }\r\n        this.setState({\r\n          loading: false,\r\n          list: res.data.data,\r\n          result: res.data.result,\r\n          message: res.data.message,\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  checkPaperUpload() {\r\n    var id = this.props.match.params.id;\r\n    this.setState({ loading: true }, () => {\r\n      ApiService.fetchTestPaperUploadStatus(id).then((res) => {\r\n        if (res.data.status == 1) {\r\n          this.setState({\r\n            loading: false,\r\n            url: res.data.url,\r\n            pdfUploadStatus: false,\r\n          });\r\n        } else {\r\n          if (this.state.studentPdfResponse == true) {\r\n            this.setState({\r\n              pdfUploadStatus: true,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              pdfUploadStatus: false,\r\n            });\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  routeChange(pathname, state) {\r\n    console.log(pathname, state);\r\n    if (state) {\r\n      console.log(\"here\");\r\n      return this.props.history.push({\r\n        pathname,\r\n        state,\r\n      });\r\n    }\r\n    this.props.history.push(pathname);\r\n  }\r\n\r\n  changeDateFormat(value, inputFormat, outputFormat) {\r\n    let outputSplitter = \"/\";\r\n    let strOutputFormat = outputFormat\r\n      .split(outputSplitter)\r\n      .map((i) => i.toUpperCase());\r\n    if (strOutputFormat.length != 3) {\r\n      strOutputFormat = outputFormat.split(\"-\");\r\n      outputSplitter = \"-\";\r\n    }\r\n\r\n    if (strOutputFormat.length != 3)\r\n      throw new Error(\"wrong output format splitter :(\");\r\n\r\n    let date = null;\r\n\r\n    if (value instanceof Date) {\r\n      date = {\r\n        [\"YYYY\"]: value.getUTCFullYear(),\r\n        [\"MM\"]: value.getMonth() + 1,\r\n        [\"DD\"]: value.getDate(),\r\n      };\r\n    }\r\n\r\n    if (typeof value == \"string\") {\r\n      let inputSplitter = \"/\";\r\n\r\n      var strInputFormat = inputFormat\r\n        .split(inputSplitter)\r\n        .map((i) => i.toUpperCase());\r\n      if (strInputFormat.length != 3) {\r\n        strInputFormat = inputFormat.split(\"-\");\r\n        inputSplitter = \"-\";\r\n      }\r\n\r\n      if (strInputFormat.length != 3)\r\n        throw new Error(\"wrong input format splitter :(\");\r\n\r\n      let dateElements = value.split(inputSplitter);\r\n      if (dateElements.length != 3) throw new Error(\"wrong value :(\");\r\n\r\n      date = {\r\n        [strInputFormat[0]]: dateElements[0],\r\n        [strInputFormat[1]]: dateElements[1],\r\n        [strInputFormat[2]]: dateElements[2],\r\n      };\r\n    }\r\n\r\n    if (!date) throw new Error(\"unsupported value type:(\");\r\n\r\n    let result =\r\n      date[strOutputFormat[0]] +\r\n      outputSplitter +\r\n      date[strOutputFormat[1]] +\r\n      outputSplitter +\r\n      date[strOutputFormat[2]];\r\n\r\n    return result;\r\n  }\r\n\r\n  isFromBiggerThanTo(dtmfrom, dtmto) {\r\n    return new Date(dtmfrom).getTime() >= new Date(dtmto).getTime();\r\n  }\r\n\r\n  closeWindow() {\r\n    window.opener?.location?.reload();\r\n    window.close();\r\n  }\r\n\r\n  logout = () => {\r\n    this.props.history.push({\r\n      pathname: \"/logout\",\r\n      state: { redirectRoute: \"/loginwithmobile\" },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let portlet = JSON.parse(localStorage.getItem(\"portlet\")) || [];\r\n    var pid = this.props.match.params.pid;\r\n    const { loading } = this.state;\r\n    if (this.state.result == 1) {\r\n      return (\r\n        <div className=\"testlist\">\r\n          {\r\n            <Container fluid>\r\n              <div\r\n                className={`module-header-step2 ${\r\n                  portlet.class ? portlet.class : \"orange-card\"\r\n                }`}\r\n              >\r\n                <div className=\"\">\r\n                  <div className=\"back\">\r\n                    {Config.siteTitle === \"unsat\" ||\r\n                    Config.siteTitle === \"unsat2\" ? (\r\n                      this.state.displaying === \"questionWiseAnalysis\" ? (\r\n                        <FontAwesomeIcon\r\n                          icon={faArrowLeft}\r\n                          onClick={() =>\r\n                            this.props.history.replace(\"/testdetails\")\r\n                          }\r\n                        />\r\n                      ) : (\r\n                        <div className=\"logout-wrapper\">\r\n                          <span\r\n                            className=\"test-result-logout\"\r\n                            onClick={this.logout}\r\n                          >\r\n                            Logout\r\n                          </span>\r\n                        </div>\r\n                      )\r\n                    ) : pid == 1 || pid === \"null\" ? (\r\n                      <FontAwesomeIcon\r\n                        icon={faTimesCircle}\r\n                        onClick={() => this.closeWindow()}\r\n                      />\r\n                    ) : (\r\n                      <FontAwesomeIcon\r\n                        icon={faArrowLeft}\r\n                        onClick={this.props.history.goBack}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <h4>Test Result {this.state.usingS3 && \"*\"}</h4>\r\n                </div>\r\n              </div>\r\n              {loading ? <Loader /> : this.renderTestResult()}\r\n            </Container>\r\n          }\r\n        </div>\r\n      );\r\n    } else {\r\n      let msg = (\r\n        <div dangerouslySetInnerHTML={{ __html: this.state.message }} />\r\n      );\r\n      return (\r\n        <div className=\"testlist\">\r\n          {\r\n            <Container fluid>\r\n              <div\r\n                className={`module-header-step2 ${\r\n                  portlet.class ? portlet.class : \"orange-card\"\r\n                }`}\r\n              >\r\n                <div className=\"AnalysisReport\">\r\n                  <div className=\"back\">\r\n                    {/* <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} /> */}\r\n                    {(Config.siteTitle === \"unsat\" ||\r\n                      Config.siteTitle === \"unsat2\") &&\r\n                    this.state.resultUrl.detailedProfiling ? (\r\n                      <div className=\"logout-wrapper\">\r\n                        <span\r\n                          className=\"test-result-logout\"\r\n                          onClick={this.logout}\r\n                        >\r\n                          Logout\r\n                        </span>\r\n                      </div>\r\n                    ) : pid == 1 || pid === \"null\" ? (\r\n                      <FontAwesomeIcon\r\n                        icon={faTimesCircle}\r\n                        onClick={() => this.closeWindow()}\r\n                      />\r\n                    ) : (\r\n                      <FontAwesomeIcon\r\n                        icon={faArrowLeft}\r\n                        onClick={this.props.history.goBack}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <h4>Online Tests Result</h4>\r\n                </div>\r\n              </div>\r\n              <div className=\"testResult\">\r\n                {this.state.loading ? <Loader /> : msg}\r\n                {this.state.pdfUploadStatus == true && (\r\n                  <button\r\n                    className={`resultbtn ${\r\n                      portlet.class ? portlet.class : \"orange-card\"\r\n                    }`}\r\n                    onClick={() =>\r\n                      this.routeChange(\r\n                        \"/test/upload/\" + this.props.match.params.id\r\n                      )\r\n                    }\r\n                  >\r\n                    Upload PDF\r\n                  </button>\r\n                )}\r\n              </div>\r\n              <div className=\"testgraph\" style={{ display: \"none\" }}>\r\n                <canvas id=\"myChart\" ref={this.chartRef} />\r\n              </div>\r\n            </Container>\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderTestResult() {\r\n    let testResult = this.state.list;\r\n    if (\r\n      (testResult?.resultViewerMode && testResult?.resultViewerMode == 2) ||\r\n      this.state.displaying === \"questionWiseAnalysis\"\r\n    ) {\r\n      return this.renderTestResultView2();\r\n    } else {\r\n      return this.renderTestResultView1();\r\n    }\r\n  }\r\n\r\n  sortQuestionWiseAnalysis = (sections) => {\r\n    if (!sections) return [];\r\n    const newSections = sections.map((section) => {\r\n      section.questions = section?.questions?.sort((questOne, questTwo) => {\r\n        if (\r\n          (parseInt(questOne.questionOrder) || 0) >=\r\n          (parseInt(questTwo.questionOrder) || 0)\r\n        )\r\n          return 1;\r\n        else return -1;\r\n      });\r\n      console.log(section.questions);\r\n      return section;\r\n    });\r\n    console.log(newSections);\r\n    return newSections;\r\n  };\r\n\r\n  requestDataNew = async () => {\r\n    this.setState({ usingS3: false });\r\n    const { resultUrl } = this.state;\r\n    const { detailedProfiling } = resultUrl || {};\r\n    const id = this.props.match.params.id;\r\n\r\n    this.setState({ loading: true, list: [], message: null, result: 0 });\r\n    if (detailedProfiling) {\r\n      try {\r\n        console.log(\"here success\");\r\n\r\n        const res = await ApiService.fetchGetUrl(detailedProfiling);\r\n        if (res.data?.message === \"Success\") {\r\n          let { data } = res.data;\r\n          console.log(data);\r\n          if (data?.summary?.setId > 0) {\r\n            data.sections = this.sortQuestionWiseAnalysis(data?.sections);\r\n          }\r\n          return this.setState(\r\n            {\r\n              loading: false,\r\n              list: data,\r\n              result: res.data.result,\r\n              message: res.data.message,\r\n              displaying: \"questionWiseAnalysis\",\r\n              usingS3: true,\r\n            },\r\n            () => {\r\n              this.getTopRankers();\r\n            }\r\n          );\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    try {\r\n      console.log(\"here success\");\r\n      const res = await ApiService.questionWiseAnalysis(id);\r\n      console.log(res);\r\n      let { data } = res.data;\r\n      console.log(data);\r\n      if (data?.summary?.setId > 0) {\r\n        data.sections = this.sortQuestionWiseAnalysis(data?.sections);\r\n      }\r\n      this.setState(\r\n        {\r\n          loading: false,\r\n          list: data,\r\n          result: res.data.result,\r\n          message: res.data.message,\r\n          displaying: \"questionWiseAnalysis\",\r\n        },\r\n        () => {\r\n          this.getTopRankers();\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  openResultPdf = () => {\r\n    let enquiryId = UserService.getEnquiryId();\r\n    let token = UserService.getToken();\r\n    let id = this.props.match.params.id;\r\n    // window.open();\r\n    // https://triangles.edusquares.com/triangles/offlineTestPaper.do?reqCode=viewPaper&testId=178&enquiryId=35076\r\n    window.open(\r\n      `${Config.siteUrl}${Config.siteTitle}/offlineTestPaper.do?reqCode=viewPaper&testId=${id}&enquiryId=${enquiryId}&token=${token}`\r\n    );\r\n  };\r\n\r\n  downloadSolution = (type) => {\r\n    console.log(type);\r\n    window.open(this.state.list?.summary[type]);\r\n  };\r\n\r\n  openSolution = (question) => {\r\n    console.log(question);\r\n    ApiService.viewSolution(question?.testId, question?.index, question?.id)\r\n      .then((res) => {\r\n        this.setState(\r\n          {\r\n            solutionData: res.data,\r\n            solutionCorrectString: question?.correctString || \"\",\r\n          },\r\n          () => {\r\n            this.setState({\r\n              showModal: true,\r\n            });\r\n          }\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          showModal: true,\r\n        });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  closeSolution = () => {\r\n    this.setState({\r\n      showModal: false,\r\n      solutionCorrectString: \"\",\r\n    });\r\n  };\r\n\r\n  renderRanks = () => {\r\n    const { testRank, schoolRank, batchRank, studentGrade, externalResult } =\r\n      this.state.list?.barGraphData[0] || {};\r\n\r\n    let externResultArr = [];\r\n\r\n    if (externalResult) externResultArr = externalResult.split(\",\");\r\n\r\n    const [onlineCode, onlineDisc, offlineCode, offlineDisc] = externResultArr;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"test-result-ranks\">\r\n          {testRank && (\r\n            <div className=\"test-result-rank-wrapper\">\r\n              <span className=\"test-result-rank-heading\">All India Rank</span>\r\n              <span className=\"test-details-fancy test-details-rank-value\">\r\n                {testRank}\r\n              </span>\r\n            </div>\r\n          )}\r\n          {schoolRank && (\r\n            <div className=\"test-result-rank-wrapper\">\r\n              <span className=\"test-result-rank-heading\">State Rank</span>\r\n              <span className=\"test-details-fancy test-details-rank-value\">\r\n                {schoolRank}\r\n              </span>\r\n            </div>\r\n          )}\r\n          {batchRank && (\r\n            <div className=\"test-result-rank-wrapper\">\r\n              <span className=\"test-result-rank-heading\">City Rank</span>\r\n              <span className=\"test-details-fancy test-details-rank-value\">\r\n                {batchRank}\r\n              </span>\r\n            </div>\r\n          )}\r\n          {studentGrade && (\r\n            <div className=\"test-result-rank-wrapper\">\r\n              <span className=\"test-result-rank-heading\">Scholarship Code</span>\r\n              <span className=\"test-details-fancy test-details-rank-value\">\r\n                {studentGrade}\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {externalResult && (\r\n          <div className=\"test-result-rank-wrapper\">\r\n            <span className=\"test-rank-scholarship\">\r\n              <span className=\"test-rank-bold\">Congratulations! 🎉</span>\r\n              <br />\r\n              <span\r\n                className=\"test-reult-clickable\"\r\n                onClick={() => (window.location = \"https://www.unacademy.com\")}\r\n              >\r\n                You have won{\" \"}\r\n                <span className=\"test-rank-bold\">\r\n                  {onlineDisc}% scholarship\r\n                </span>{\" \"}\r\n                on Unacademy Plus subscription. Use code:{\" \"}\r\n                <span className=\"test-result-fancy test-rank-bold\">\r\n                  {onlineCode}\r\n                </span>{\" \"}\r\n                to claim it.\r\n              </span>\r\n              {offlineCode && (\r\n                <span\r\n                  className=\"test-reult-clickable\"\r\n                  onClick={() =>\r\n                    (window.location = \"https://unacademy.com/offline/centres\")\r\n                  }\r\n                >\r\n                  <br /> You have won{\" \"}\r\n                  <span className=\"test-rank-bold\">\r\n                    {offlineDisc}% scholarship\r\n                  </span>{\" \"}\r\n                  on Unacademy Centre subscription. Use code:{\" \"}\r\n                  <span className=\"test-result-fancy test-rank-bold\">\r\n                    {offlineCode}\r\n                  </span>{\" \"}\r\n                  to claim it.\r\n                </span>\r\n              )}\r\n            </span>\r\n            {/* <span className=\"test-result-rank-heading\">Scholarship Code</span> */}\r\n            {/* <span className=\"test-details-fancy test-details-rank-value\"> */}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  renderTestResultView1() {\r\n    let data = this.state.list;\r\n    let portlet = JSON.parse(localStorage.getItem(\"portlet\")) || [];\r\n    const RenderRanks = this.renderRanks;\r\n    return (\r\n      <>\r\n        <div className=\"test-result-logo-container\">\r\n          <img\r\n            className=\"test-result-logo\"\r\n            src={`https://webfront.edusquares.com/${Config.siteTitle}/files/logos/logo.png`}\r\n            alt=\"logo\"\r\n          />\r\n        </div>\r\n        {<RenderRanks />}\r\n        {this.renderCard()}\r\n        <div className=\"testResult\">\r\n          {/* {data.showAnalysisButtons==1 && <button className={`resultbtn ${portlet.class ? portlet.class : 'orange-card'}`}  onClick={() => this.routeChange('/test-result-detail/'+this.props.match.params.id)} >Detailed Profiling</button>} */}\r\n          {data.showAnalysisButtons == 1 && (\r\n            <button\r\n              className={`resultbtn ${\r\n                portlet.class ? portlet.class : \"orange-card\"\r\n              }`}\r\n              onClick={() =>\r\n                this.routeChange(\r\n                  \"/detailed-profiling/\" + this.props.match.params.id,\r\n                  this.state.resultUrl.detailedProfiling\r\n                    ? { resultUrl: this.state.resultUrl }\r\n                    : null\r\n                )\r\n              }\r\n            >\r\n              Detailed Profiling\r\n            </button>\r\n          )}\r\n          {/* {data.showAnalysisButtons==1 && <button className={`resultbtn ${portlet.class ? portlet.class : 'orange-card'}`}  onClick={() => this.routeChange('/test-result-question-wise/'+this.props.match.params.id)} >Question Wise Analysis</button>} */}\r\n          {data.showAnalysisButtons == 1 && (\r\n            <button\r\n              className={`resultbtn ${\r\n                portlet.class ? portlet.class : \"orange-card\"\r\n              }`}\r\n              onClick={this.requestDataNew}\r\n            >\r\n              Question Wise Analysis\r\n            </button>\r\n          )}\r\n        </div>\r\n        {/* <h4>Your Performance in Test</h4> */}\r\n        {Config.siteTitle === \"unsat\" ||\r\n        Config.siteTitle === \"unsat2\" ? null : (\r\n          <div className=\"testResult\">\r\n            <div className=\"result_card_list\">\r\n              <div className=\"testgraph\">\r\n                <canvas id=\"myChart\" ref={this.chartRef} height=\"230vh\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  displayRank = () => {\r\n    this.setState({ showTopRankers: true });\r\n  };\r\n\r\n  closeRanks = () => {\r\n    this.setState({ showTopRankers: false });\r\n  };\r\n\r\n  renderTestResultView2() {\r\n    let result = this.state.list;\r\n    let user = JSON.parse(localStorage.getItem(\"user\"));\r\n    let portlet = JSON.parse(localStorage.getItem(\"portlet\")) || [];\r\n    return (\r\n      <>\r\n        <div className=\"testResult\">\r\n          <div className=\"result_card_list\">\r\n            <div className=\"test-name-div\">\r\n              <h4>{result.testName}</h4>\r\n              {this.state.topRankers.rankers?.map((data) => {\r\n                if (user.studentCode === data.studentCode) {\r\n                  return (\r\n                    <h6 className=\"rank-info\">\r\n                      {\" \"}\r\n                      Your Rank is{\" \"}\r\n                      {`${data.schoolRank}/${this.state.topRankers.rankers?.length}`}\r\n                    </h6>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </div>\r\n            {this.state.list?.summary?.toprankers?.enableStatus && (\r\n              <Button onClick={this.displayRank}>Top Rankers</Button>\r\n            )}\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5\">\r\n              <div className=\"test_summary_card blue-card test-result-mg\">\r\n                <h4>Summary</h4>\r\n                <table>\r\n                  <tr>\r\n                    <th className=\"text-center summary-box\">Total Questions</th>\r\n                    <th className=\"text-center summary-box\">Total Marks</th>\r\n                    <th className=\"text-center summary-box\">Your Score</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"text-center\">\r\n                      {result.summary.numberOfQuestions}\r\n                    </td>\r\n                    <td className=\"text-center\">{result.summary.totalMarks}</td>\r\n                    <td className=\"text-center\">\r\n                      <span style={{ fontWeight: \"bolder\" }}>\r\n                        {result.summary.marksObtained}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n              <div className=\"test_summary_card blue-card test-result-mg\">\r\n                <h4>Attempt Summary</h4>\r\n                <table>\r\n                  <tr>\r\n                    <th className=\"text-center summary-box\">Correct</th>\r\n                    <th className=\"text-center summary-box\">Wrong</th>\r\n                    <th className=\"text-center summary-box\">Unattempted</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"text-center\">\r\n                      {result.summary.correctQuestions}\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      {result.summary.wrongQuestions}\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      {result.summary.unattemptedQuestions}\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <br />\r\n          <br />\r\n          {result.sections &&\r\n            result.sections.map((section, index) => {\r\n              return (\r\n                <>\r\n                  {this.state.list?.summary?.solutions && (\r\n                    <span\r\n                      className=\"view-solution\"\r\n                      onClick={() => this.downloadSolution(\"solutions\")}\r\n                    >\r\n                      Download - Solutions{\" \"}\r\n                    </span>\r\n                  )}\r\n                  {this.state.list?.summary?.testPaper && (\r\n                    <span\r\n                      className=\"view-solution\"\r\n                      onClick={() => this.downloadSolution(\"testPaper\")}\r\n                    >\r\n                      {\" \"}\r\n                      || Download - Test Paper{\" \"}\r\n                    </span>\r\n                  )}\r\n                  {this.state.list?.summary?.testPaperWithSolutions && (\r\n                    <span\r\n                      className=\"view-solution\"\r\n                      onClick={() =>\r\n                        this.downloadSolution(\"testPaperWithSolutions\")\r\n                      }\r\n                    >\r\n                      {\" \"}\r\n                      || Download - Test Paper With Solution{\" \"}\r\n                    </span>\r\n                  )}\r\n                  {this.state.list.needsManualEvaluation && (\r\n                    <span\r\n                      className=\"view-solution\"\r\n                      onClick={this.openResultPdf}\r\n                    >\r\n                      {\" \"}\r\n                      || Your Answer Script\r\n                    </span>\r\n                  )}\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <div\r\n                        style={{ overflowY: \"scroll\" }}\r\n                        className=\"test_summary_card blue-card\"\r\n                      >\r\n                        <h4>\r\n                          {section.sectionName} /{\" \"}\r\n                          {this.state.list?.summary?.setName}\r\n                        </h4>\r\n                        <table>\r\n                          <tr>\r\n                            <th className=\"text-center\">#</th>\r\n                            {result.tagTypes &&\r\n                              result.tagTypes.map((tagType, tagTypeIndex) => {\r\n                                return (\r\n                                  <>\r\n                                    <th className=\"text-center\">\r\n                                      {tagType.name}\r\n                                    </th>\r\n                                  </>\r\n                                );\r\n                              })}\r\n                            {/* <th className=\"text-center\">Set</th> */}\r\n                            <th className=\"text-center\">Your Response</th>\r\n                            <th className=\"text-center\">Correct Answer</th>\r\n                            <th className=\"text-center\">Score</th>\r\n                            <th className=\"text-center\">\r\n                              View{\" \"}\r\n                              {this.state.list.needsManualEvaluation && (\r\n                                <PdfIcon\r\n                                  onClick={this.openResultPdf}\r\n                                  className=\"pdf-icon\"\r\n                                />\r\n                              )}\r\n                            </th>\r\n                          </tr>\r\n                          {section.questions &&\r\n                            section.questions.map((question, questionIndex) => {\r\n                              return (\r\n                                <>\r\n                                  <tr>\r\n                                    <td className=\"text-center\">\r\n                                      {question.questionOrder || question.index}\r\n                                    </td>\r\n                                    {question.tags &&\r\n                                      question.tags.map(\r\n                                        (\r\n                                          questioTagType,\r\n                                          questioTagTypesIndex\r\n                                        ) => {\r\n                                          return (\r\n                                            <>\r\n                                              <td className=\"text-center\">\r\n                                                {questioTagType.tags &&\r\n                                                  questioTagType.tags.map(\r\n                                                    (\r\n                                                      questionTag,\r\n                                                      questionTagsIndex\r\n                                                    ) => {\r\n                                                      return (\r\n                                                        <>\r\n                                                          <span className=\"text-center\">\r\n                                                            {questionTag.name}\r\n                                                          </span>\r\n                                                        </>\r\n                                                      );\r\n                                                    }\r\n                                                  )}\r\n                                              </td>\r\n                                            </>\r\n                                          );\r\n                                        }\r\n                                      )}\r\n                                    {/* <td className=\"text-center\">\r\n                                      {this.state.list?.summary?.setName}\r\n                                    </td> */}\r\n                                    <td className=\"text-center\">\r\n                                      {question.attemptedString || \"--\"}\r\n                                    </td>\r\n                                    <td className=\"text-center\">\r\n                                      {question.correctString}\r\n                                    </td>\r\n                                    <td className=\"text-center\">\r\n                                      {question.marks}/\r\n                                      {parseFloat(question.actualMarks)}\r\n                                    </td>\r\n                                    <td className=\"text-center\">\r\n                                      <button\r\n                                        onClick={() =>\r\n                                          this.openSolution(question)\r\n                                        }\r\n                                        className={\r\n                                          \"download \" +\r\n                                          (question.attemptStatus == 1\r\n                                            ? \" green-card\"\r\n                                            : question.attemptStatus == -1\r\n                                            ? \" blue-card\"\r\n                                            : \" orange-card\")\r\n                                        }\r\n                                      >\r\n                                        Solution\r\n                                      </button>\r\n                                    </td>\r\n                                  </tr>\r\n                                </>\r\n                              );\r\n                            })}\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <br />\r\n                </>\r\n              );\r\n            })}\r\n          <button\r\n            className={`resultbtn ${\r\n              portlet.class ? portlet.class : \"orange-card\"\r\n            }`}\r\n            onClick={() =>\r\n              this.routeChange(\r\n                \"/detailed-profiling/\" + this.props.match.params.id,\r\n                this.state.resultUrl.detailedProfiling\r\n                  ? { resultUrl: this.state.resultUrl }\r\n                  : null\r\n              )\r\n            }\r\n          >\r\n            Detailed Profiling\r\n          </button>\r\n        </div>\r\n        <Modal show={this.state.showModal} onHide={this.closeSolution}>\r\n          <Modal.Header className=\"text-uppercase\" closeButton>\r\n            <Modal.Title></Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {this.state.solutionData ? (\r\n              <>\r\n                <h4>Question: </h4>\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: this.state.solutionData?.questionStatement,\r\n                  }}\r\n                ></div>\r\n                {this.state.solutionData?.choiceGroup1.map((choice, i) => (\r\n                  <div>\r\n                    <span className=\"solution-choice-string\">\r\n                      {choice.choiceString}\r\n                    </span>\r\n                    <div\r\n                      className=\"solution-choice\"\r\n                      key={i}\r\n                      dangerouslySetInnerHTML={{ __html: choice.choiceValue }}\r\n                    ></div>\r\n                    {this.state.solutionCorrectString ===\r\n                    this.state.solutionData?.studentResponse ? (\r\n                      choice.choiceString ===\r\n                        this.state.solutionData?.studentResponse && (\r\n                        <TickMark className=\"success-option\" />\r\n                      )\r\n                    ) : (\r\n                      <>\r\n                        {choice.choiceString ===\r\n                          this.state.solutionCorrectString && (\r\n                          <TickMark className=\"correct-option\" />\r\n                        )}\r\n                        {choice.choiceString ===\r\n                          this.state.solutionData?.studentResponse && (\r\n                          <Xmark className=\"wrong-option\" />\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n                <div\r\n                  className=\"answer-box\"\r\n                  style={{\r\n                    color: `var(${\r\n                      this.state.solutionCorrectString ===\r\n                      this.state.solutionData?.studentResponse\r\n                        ? \"--success\"\r\n                        : \"--danger\"\r\n                    })`,\r\n                  }}\r\n                >\r\n                  <span>Correct Answer : </span>{\" \"}\r\n                  <span>{this.state.solutionCorrectString}</span> |{\" \"}\r\n                  <span>My Answer : </span>{\" \"}\r\n                  <span>{this.state.solutionData?.studentResponse}</span>\r\n                </div>\r\n                <h4>Solution: </h4>\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: this.state.solutionData?.solution,\r\n                  }}\r\n                ></div>\r\n              </>\r\n            ) : (\r\n              <h5>Data is not uploaded</h5>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"danger\"\r\n              className=\"text-uppercase\"\r\n              onClick={this.closeSolution}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal\r\n          size=\"xl\"\r\n          show={this.state.showTopRankers}\r\n          onHide={this.closeRanks}\r\n        >\r\n          <Modal.Header className=\"text-uppercase\" closeButton>\r\n            <Modal.Title>\r\n              <h3>Top Ranks</h3>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {this.state.topRankers.rankers?.length ? (\r\n              <div className=\"rank-wrapper\">\r\n                <div className=\"rank-div rank-heading\">\r\n                  {this.state.list?.summary?.toprankers?.columns?.map(\r\n                    (column) => (\r\n                      <div className=\"rank-details\">\r\n                        <h5>{column?.DisplayLabel}</h5>\r\n                      </div>\r\n                    )\r\n                  )}\r\n                </div>\r\n                {this.state.topRankers?.rankers.map((data) => (\r\n                  <div className=\"rank-div\">\r\n                    {this.state.list?.summary?.toprankers?.columns?.map(\r\n                      (column) => (\r\n                        <div className=\"rank-details\">\r\n                          <h6>{data[column.property]}</h6>\r\n                        </div>\r\n                      )\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <h1>No data Found</h1>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"danger\"\r\n              className=\"text-uppercase\"\r\n              onClick={this.closeRanks}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderCard() {\r\n    let data = this.state.list;\r\n    if (typeof data !== \"undefined\" || data != null) {\r\n      return (\r\n        <div className=\"testResult\">\r\n          <div className=\"result_card_list\">\r\n            {/* <h4>Your Performance in Test</h4> */}\r\n            <table>\r\n              <tr className=\"blue-card\">\r\n                <th>Section</th>\r\n                <th>Marks</th>\r\n                <th>Max</th>\r\n                <th>%</th>\r\n                {Config.siteTitle === \"unsat\" ||\r\n                this.siteTitle === \"unsat2\" ? null : (\r\n                  <>\r\n                    <th>\r\n                      CH{\" \"}\r\n                      <i className=\"test-result-info\">\r\n                        i{\" \"}\r\n                        <span className=\"test-result-legend test-result-right-legend\">\r\n                          Course Highest\r\n                        </span>\r\n                      </i>\r\n                    </th>\r\n                    <th>\r\n                      CA{\" \"}\r\n                      <i className=\"test-result-info\">\r\n                        i{\" \"}\r\n                        <span className=\"test-result-legend test-result-left-legend\">\r\n                          Course Average\r\n                        </span>\r\n                      </i>\r\n                    </th>\r\n                  </>\r\n                )}\r\n              </tr>\r\n              {data.testTableData &&\r\n                data.testTableData\r\n                  .sort((a, b) => a.sortOrder - b.sortOrder)\r\n                  .map((item, index) => {\r\n                    if (item.sortOrder == 100) {\r\n                      item.sectionName = \"Test Total\";\r\n                    }\r\n                    return (\r\n                      <tr>\r\n                        <td>\r\n                          <b>{item.sectionName}</b>\r\n                        </td>\r\n                        <td>{item.marks}</td>\r\n                        <td>{item.totalMarks}</td>\r\n                        <td>{item.percentage.toFixed(2)}</td>\r\n                        {Config.siteTitle === \"unsat\" ||\r\n                        this.siteTitle === \"unsat2\" ? null : (\r\n                          <>\r\n                            {\" \"}\r\n                            <td>{item.testHighestPercentage}</td>\r\n                            <td>{item.testAveragePercentage}</td>{\" \"}\r\n                          </>\r\n                        )}\r\n                      </tr>\r\n                    );\r\n                  })}\r\n            </table>\r\n          </div>\r\n          <br />\r\n          {/* {this.renderLegends()} */}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderLegends() {\r\n    return (\r\n      <div className=\"result_card_list\">\r\n        {/* <h4>Legends</h4> */}\r\n        <table>\r\n          {/* <tr>\r\n            <td>\r\n              <b>Sec</b>\r\n            </td>\r\n            <td>Section</td>\r\n          </tr> */}\r\n          {/* <tr>\r\n            <td>\r\n              <b>Max</b>\r\n            </td>\r\n            <td>Maximum Marks</td>\r\n          </tr> */}\r\n          {/* <tr>\r\n            <td>\r\n              <b>%</b>\r\n            </td>\r\n            <td>Percentage</td>\r\n          </tr> */}\r\n          <tr>\r\n            <td>\r\n              <b>CH</b>\r\n            </td>\r\n            <td>Course Highest</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <b>CA</b>\r\n            </td>\r\n            <td>Course Average</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  buildChart = () => {\r\n    let t1 = {};\r\n    t1.label = \"Marks\";\r\n    t1.data = [];\r\n    t1.backgroundColor = [];\r\n    t1.borderColor = [];\r\n    t1.borderWidth = 1;\r\n\r\n    let t2 = {};\r\n    t2.label = \"Topper\";\r\n    t2.data = [];\r\n    t2.backgroundColor = [];\r\n    t2.borderColor = [];\r\n    t2.borderWidth = 1;\r\n\r\n    let t3 = {};\r\n    t3.label = \"Total\";\r\n    t3.data = [];\r\n    t3.backgroundColor = [];\r\n    t3.borderColor = [];\r\n    t3.borderWidth = 1;\r\n    let labels = [];\r\n    let barChartData = {};\r\n    let data = this.state.list;\r\n    if (typeof data !== \"undefined\" || data != null) {\r\n      data.barGraphData &&\r\n        data.barGraphData.map((item, index) => {\r\n          if (index == 0) {\r\n            item.name = \"Test\";\r\n          }\r\n          labels.push(item.name);\r\n\r\n          t1.data.push(item.marks);\r\n          t1.backgroundColor.push(\"rgba(0, 128 ,0, 0.8)\");\r\n          t1.borderColor.push(\"rgba(0, 128 ,0, 1)\");\r\n\r\n          t2.data.push(item.toppermarks);\r\n          t2.backgroundColor.push(\"rgba(255, 0, 0, 0.8)\");\r\n          t2.borderColor.push(\"rgba(255, 0, 0, 1)\");\r\n\r\n          t3.data.push(item.totalmarks);\r\n          t3.backgroundColor.push(\"rgba(31, 119, 180, 0.8)\");\r\n          t3.borderColor.push(\"rgba(31, 119, 180, 1)\");\r\n        });\r\n\r\n      barChartData = {\r\n        labels: labels,\r\n        datasets: [t1, t2, t3],\r\n      };\r\n\r\n      const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n      myChartRef.height = 700;\r\n      new Chart(myChartRef, {\r\n        type: \"bar\",\r\n        data: barChartData,\r\n        options: {\r\n          legend: {\r\n            display: true,\r\n            position: \"bottom\",\r\n            labels: {\r\n              fontColor: \"#000080\",\r\n            },\r\n          },\r\n          scales: {\r\n            yAxes: [\r\n              {\r\n                display: true,\r\n                ticks: {\r\n                  beginAtZero: true,\r\n                  min: 0,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          responsive: true,\r\n          maintainAspectRatio: true,\r\n        },\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport default TestResult;\r\n"]},"metadata":{},"sourceType":"module"}