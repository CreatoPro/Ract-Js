{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\dashboard\\\\Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport ApiService from \"../../_services/ApiService\";\nimport ThemeService from \"../../_services/ThemeService\";\nimport Config from './../../_config/config';\nimport { getUnReadNotificationCount, checkNewNotificationsOnServer } from \"./../../push-notification\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faBell } from '@fortawesome/free-solid-svg-icons';\nimport getPortlets from './../../_actions/dashboardActions';\nimport Button from \"react-bootstrap/Button\";\nimport \"./Dashboard.css\";\nimport SideBar from \"../../_components/sidebar/sidebar\";\nimport cloud from \"./images/cloud.png\";\nimport Loader from './../../_components/loader/loader';\nimport avatar from './images/blank-avatar.png';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addToHome = () => {\n      //console.log(\"Dashboard --> addToHome()...\");\n      //console.log(\"Dashboard --> isPWAInstalled = \"+this.isPWAInstalled);\n      if (this.installEvent) {\n        this.installEvent.prompt();\n      }\n    };\n\n    this.onHover = () => {\n      document.getElementById(\"myMarquee\").stop();\n    };\n\n    this.onOut = () => {\n      document.getElementById(\"myMarquee\").start();\n    };\n\n    this.sliderButtonAction = slide => {\n      //if(slide.button.buttonAction.actionType==='product')\n      let productId = slide.button.buttonAction.actionId;\n\n      if (!Config.CURRENT_PORTLET && !JSON.parse(localStorage.getItem('portlet'))) {\n        let portletConfig = {\n          \"id\": productId,\n          \"class\": \"blue-card\",\n          \"name\": slide.title,\n          \"icon\": \"./assets/imgs/payment.png\"\n        };\n        Config.CURRENT_PORTLET = portletConfig;\n      }\n\n      this.setState({\n        loading: true\n      }, () => {\n        ApiService.getProduct(productId).then(res => {\n          //SuccessCB\n          let product = res.data.data;\n          this.setState({\n            loading: false\n          });\n          this.props.history.push({\n            pathname: '/ProductDetails',\n            state: {\n              product: product\n            }\n          });\n        }, error => {\n          //ErrorCB\n          console.log(\"Dashboard --> getProduct() -> Connection Error : \" + Config.CONNECTION_ERROR);\n        });\n      });\n    };\n\n    this.state = {\n      message: null,\n      loading: false,\n      dashboard: null,\n      notificationCount: 0,\n      showA2H: false,\n      ticker: null\n    };\n    this.installEvent = null;\n    this.isPWAInstalled = false;\n  }\n\n  componentDidMount() {\n    let user = JSON.parse(localStorage.getItem('user'));\n    ThemeService.getActiveTheme();\n\n    if (typeof user !== 'undefined' || user != null) {\n      localStorage.setItem('enquiryId', user.enquiryId);\n      this.props.getPortlets();\n      this.setState({\n        name: user.enquiryName\n      });\n    }\n\n    this.setState({\n      dashboard: this.props.dashboard,\n      notificationCount: getUnReadNotificationCount()\n    });\n    window.addEventListener('beforeinstallprompt', event => {\n      //console.log(\"Dashboard --> beforeinstallprompt Event...\");\n      event.preventDefault(); // store the event for later use\n\n      this.installEvent = event;\n      this.state.showA2H = true;\n    });\n    window.addEventListener('appinstalled', event => {\n      //console.log(\"Dashboard --> appinstalled Event...\");\n      this.state.showA2H = false;\n    });\n    this.isPWAInstalled = this.isInstalled();\n    this.generateEndPoint(user);\n    checkNewNotificationsOnServer();\n    this.studentTickerMessages();\n  }\n\n  getDeviceId() {\n    let deviceId = localStorage.getItem('ilearn-pwa-deviceId');\n\n    if (!deviceId) {\n      //console.log(\"DeviceId Not found generating new\");\n      let sixdigitsrandom = Math.floor(100000 + Math.random() * 900000);\n      deviceId = \"PWA-\" + sixdigitsrandom;\n      localStorage.setItem('ilearn-pwa-deviceId', deviceId);\n    }\n\n    return deviceId;\n  }\n\n  generateEndPoint(user) {\n    let key = user.userId;\n\n    if (!localStorage.getItem(\"push-notification-endpoint_\" + key)) {\n      //console.log(\"Generating Endpoint...\");\n      var postJsonData = {\n        \"appId\": 3,\n        \"appIdentifier\": Config.site,\n        \"userId\": user.userId,\n        \"enquiryId\": user.enquiryId,\n        \"deviceId\": this.getDeviceId(),\n        \"platform\": \"PWA\",\n        \"deviceToken\": localStorage.getItem(\"notification-token\")\n      };\n      ApiService.generateEndPoint(postJsonData).then(res => {\n        //SuccessCB\n        let respData = res.data;\n\n        if (respData.status == 0) {//\n        } else {\n          //console.log(\"Endpoint : \"+respData.data.endPoint);\n          localStorage.setItem(\"push-notification-endpoint_\" + key, respData.data.endPoint);\n        }\n      }, error => {\n        //ErrorCB\n        console.log(\"Dashboard --> generateEndPoint() -> Connection Error : \" + Config.CONNECTION_ERROR);\n      });\n    }\n  }\n\n  routeChange(path, portletData) {\n    //this.props.history.push(path);\n    localStorage.setItem('portlet', JSON.stringify(portletData));\n    this.props.history.push({\n      pathname: path,\n      state: {\n        portlet: portletData\n      }\n    });\n  }\n\n  showNotification() {\n    //console.log(\"Dashboard -> showNotification()... \");\n    let path = \"/notification\";\n    this.props.history.push({\n      pathname: path\n    });\n  }\n\n  studentTickerMessages() {\n    ApiService.studentTickerMessages().then(res => {\n      this.setState({\n        ticker: res.data.importantMessages\n      });\n    }, error => {\n      //ErrorCB\n      console.log(Config.CONNECTION_ERROR);\n    });\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    let user = JSON.parse(localStorage.getItem('user'));\n    var pic = \"\";\n\n    if (user.photoPath) {\n      pic = user.photoPath;\n    } else {\n      pic = avatar;\n    }\n\n    let data = this.props.dashboard.data;\n    let slider = (data === null || data === void 0 ? void 0 : data.slider) || null;\n    let isSliderEnable = slider ? slider.enableStatus : false;\n    let siteTitle = localStorage.getItem('siteTitle') || Config.siteTitle;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SideBar, {\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"navbar\", {\n      className: \"second-header toolbar toolbar-md toolbar-md-primary\",\n      id: \"second-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolbar-content toolbar-content-md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-set profile-set\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, isSliderEnable ? /*#__PURE__*/React.createElement(\"img\", {\n      src: cloud,\n      alt: \"Cloud\",\n      className: \"cloud_img_slider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 38\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: cloud,\n      alt: \"Cloud\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 102\n      }\n    }), this.state.ticker && this.renderTicker(), isSliderEnable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"logo_text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 38\n      }\n    }, \" \", siteTitle) : '', /*#__PURE__*/React.createElement(\"span\", {\n      className: \"notification_icon\",\n      onClick: () => this.showNotification(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faBell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }), this.state.notificationCount > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      class: \"count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 53\n      }\n    }, this.state.notificationCount) : ''), !isSliderEnable && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"txt-set\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: pic,\n      alt: \"profile\",\n      onClick: () => this.routeChange('profile', ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"good-txt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, \" \", this.greetUser(), \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"name-txt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }, \" \", this.state.name, \" \"))))), isSliderEnable && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 33\n      }\n    }, \"  \", this.renderSlider(slider), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, loading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }) : this.renderPortlets(), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }\n    })))), this.renderAddToHome());\n  }\n\n  greetUser() {\n    let myDate = new Date();\n    let hrs = myDate.getHours();\n    let greetMsg;\n    if (hrs < 12) greetMsg = 'Good Morning';else if (hrs >= 12 && hrs <= 16) greetMsg = 'Good Afternoon';else if (hrs >= 16 && hrs <= 21) greetMsg = 'Good Evening';else if (hrs >= 16 && hrs <= 21) greetMsg = 'Good Night';\n    return greetMsg;\n  }\n\n  renderTicker() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"marq\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"marquee\", {\n      className: \"marquee\",\n      direction: \"left\",\n      id: \"myMarquee\",\n      onMouseEnter: this.onHover,\n      onMouseLeave: this.onOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, this.state.ticker.map((item, index) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: item\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 35\n        }\n      }), index < this.state.ticker.length - 1 && /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 77\n        }\n      }, \" \\xA0 || \\xA0 \"));\n    }))));\n  }\n\n  renderSlider(slider) {\n    let settings = {\n      autoplay: true,\n      autoplaySpeed: 6000,\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      initialSlide: 0,\n      arrows: false,\n      responsive: [{\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          infinite: true,\n          dots: true\n        }\n      }, {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          initialSlide: 1\n        }\n      }, {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1\n        }\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 15\n      }\n    }), slider.slides.map((slide, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-outer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-text-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 33\n        }\n      }, slide.title), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 33\n        }\n      }, slide.subTitle), slide.button.enableStatus && /*#__PURE__*/React.createElement(\"a\", {\n        className: \"banner-button\",\n        href: \"#\",\n        onClick: () => this.sliderButtonAction(slide),\n        style: {\n          background: slide.button.buttonColor,\n          color: slide.button.buttonTextColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 35\n        }\n      }, slide.button.buttonTitle)), /*#__PURE__*/React.createElement(\"img\", {\n        src: slide.imageURL,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 29\n        }\n      })));\n    })));\n  }\n\n  renderPortlets() {\n    let data = this.props.dashboard.data;\n\n    if (typeof data !== 'undefined' || data != null) {\n      let user = JSON.parse(localStorage.getItem('user'));\n      user.mobileNumber = data.studentDetails.mobile;\n      user.photoPath = data.studentDetails.photoPath;\n      user.studentCode = data.studentDetails.studentCode;\n      user.course = data.studentDetails.course;\n      user.center = data.studentDetails.center;\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      return /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 15\n        }\n      }, data.portlets.sort((a, b) => a.id - b.id).map((portlet, index) => {\n        //console.log(portlet.name)\n        if (portlet.isTile == true) {\n          let params = \"\";\n\n          if (portlet.target == \"studyResource\" || portlet.target == \"lessonPlan\") {\n            params = portlet.params.resourceTypeId + '/' + portlet.params.resourceSubTypeId + '/' + portlet.name;\n          }\n\n          let portlet_div = /*#__PURE__*/React.createElement(\"div\", {\n            key: index,\n            className: \"col col-md-3 col-sm-3 col-xs-6 order-2\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            className: portlet.class + ' button button-md button-clear button-clear-md',\n            onClick: () => this.routeChange(portlet.target + '/' + params, portlet),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"item\", {\n            className: \"item-set-new item item-block item-md\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"thumbnail\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: portlet.icon,\n            alt: \"Messages\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 21\n            }\n          })), /*#__PURE__*/React.createElement(\"label\", {\n            className: \"label label-md\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"h5\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 21\n            }\n          }, portlet.name)))));\n\n          if (user.userTypeId !== 9) {\n            return portlet_div;\n          } else if (user.userTypeId == 9 && portlet.enableForParent == true) {\n            return portlet_div;\n          }\n        }\n      }));\n    }\n  }\n\n  renderAddToHome() {\n    //A2H\n    //console.log(\"Dashboard --> renderAddToHome() >> showA2H : \"+this.state.showA2H);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.showA2H && !this.isPWAInstalled && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ilearn-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"ilearn-footer-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn ilearn-blue-btn ilearn-footer-btn btn-lg btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/logo192.png\",\n      alt: \"notification\",\n      className: \"float-left\",\n      style: {\n        width: '24px',\n        height: '24px',\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.addToHome(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 21\n      }\n    }, \"Add \", new URL(window.location).hostname, \" to Home screen\"), /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.closeAddToHome(),\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      size: \"lg\",\n      color: \"#fff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 23\n      }\n    }), \"\\xA0\"))))));\n  }\n\n  isInstalled() {\n    //console.log(\"Dashboard --> isInstalled()...\"+(new URL(window.location)).hostname);\n    if (navigator.standalone) {\n      //console.log(\"Dashboard --> isInstalled() >> navigator.standalone\");\n      return true; // iOS\n    }\n\n    if (window.matchMedia('(display-mode: standalone)').matches) {\n      //console.log(\"Dashboard --> isInstalled() >> display-mode: standalone\");\n      return true; // Android with \"display\": \"standalone\" in Manifest\n    }\n\n    if (new URL(window.location).searchParams.has('ilearnPWA')) {\n      //console.log(\"Dashboard --> isInstalled() >> ilearnPWA\");\n      return true; // fallback to check for \"?homescreen=1\"\n    } //console.log(\"Dashboard --> isInstalled() >> FALSE\");\n\n\n    return false;\n  }\n\n  closeAddToHome() {\n    //console.log(\"Dashboard --> closeAddToHome()\");\n    this.setState({\n      showA2H: false\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  dashboard: state.dashboard.dashboard\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPortlets: () => dispatch(getPortlets())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/dashboard/Dashboard.js"],"names":["React","Component","Row","Col","Container","connect","ApiService","ThemeService","Config","getUnReadNotificationCount","checkNewNotificationsOnServer","FontAwesomeIcon","faTimes","faBell","getPortlets","Button","SideBar","cloud","Loader","avatar","Slider","Dashboard","constructor","props","addToHome","installEvent","prompt","onHover","document","getElementById","stop","onOut","start","sliderButtonAction","slide","productId","button","buttonAction","actionId","CURRENT_PORTLET","JSON","parse","localStorage","getItem","portletConfig","title","setState","loading","getProduct","then","res","product","data","history","push","pathname","state","error","console","log","CONNECTION_ERROR","message","dashboard","notificationCount","showA2H","ticker","isPWAInstalled","componentDidMount","user","getActiveTheme","setItem","enquiryId","name","enquiryName","window","addEventListener","event","preventDefault","isInstalled","generateEndPoint","studentTickerMessages","getDeviceId","deviceId","sixdigitsrandom","Math","floor","random","key","userId","postJsonData","site","respData","status","endPoint","routeChange","path","portletData","stringify","portlet","showNotification","importantMessages","render","pic","photoPath","slider","isSliderEnable","enableStatus","siteTitle","renderTicker","greetUser","renderSlider","renderPortlets","renderAddToHome","myDate","Date","hrs","getHours","greetMsg","map","item","index","__html","length","settings","autoplay","autoplaySpeed","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","arrows","responsive","breakpoint","slides","subTitle","background","buttonColor","color","buttonTextColor","buttonTitle","imageURL","mobileNumber","studentDetails","mobile","studentCode","course","center","portlets","sort","a","b","id","isTile","params","target","resourceTypeId","resourceSubTypeId","portlet_div","class","icon","userTypeId","enableForParent","width","height","float","URL","location","hostname","closeAddToHome","navigator","standalone","matchMedia","matches","searchParams","has","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport ThemeService from \"../../_services/ThemeService\";\r\nimport Config from './../../_config/config'\r\nimport { getUnReadNotificationCount, checkNewNotificationsOnServer } from \"./../../push-notification\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faBell } from '@fortawesome/free-solid-svg-icons';\r\nimport getPortlets from './../../_actions/dashboardActions';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Dashboard.css\";\r\nimport SideBar from \"../../_components/sidebar/sidebar\";\r\nimport cloud from \"./images/cloud.png\";\r\nimport Loader from './../../_components/loader/loader';\r\nimport avatar from './images/blank-avatar.png';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: null,\r\n      loading: false,\r\n      dashboard: null,\r\n      notificationCount: 0,\r\n      showA2H: false,\r\n      ticker : null,\r\n    };\r\n    this.installEvent = null;\r\n    this.isPWAInstalled = false;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    ThemeService.getActiveTheme();\r\n    if(typeof(user) !== 'undefined' || user != null){\r\n      localStorage.setItem('enquiryId', user.enquiryId);\t\r\n      this.props.getPortlets();\r\n      this.setState({ name: user.enquiryName });\r\n    }\r\n\r\n    this.setState({ dashboard: this.props.dashboard,\r\n      notificationCount: getUnReadNotificationCount() \r\n    });    \r\n    \r\n    window.addEventListener('beforeinstallprompt', (event) => {\r\n      //console.log(\"Dashboard --> beforeinstallprompt Event...\");\r\n      event.preventDefault();\r\n      // store the event for later use\r\n      this.installEvent = event;\r\n      this.state.showA2H = true;\r\n    });\r\n\r\n    window.addEventListener('appinstalled', (event) => {\r\n      //console.log(\"Dashboard --> appinstalled Event...\");\r\n      this.state.showA2H = false;\r\n    });\r\n    this.isPWAInstalled = this.isInstalled();\r\n    this.generateEndPoint(user);\r\n    checkNewNotificationsOnServer();\r\n    this.studentTickerMessages();\r\n  }\r\n\r\n\r\n  getDeviceId() {\r\n    let deviceId = localStorage.getItem('ilearn-pwa-deviceId');\r\n    if(!deviceId) {\r\n        //console.log(\"DeviceId Not found generating new\");\r\n        let sixdigitsrandom = Math.floor(100000 + Math.random() * 900000);\r\n        deviceId = \"PWA-\"+sixdigitsrandom;\r\n        localStorage.setItem('ilearn-pwa-deviceId', deviceId);\r\n    }\r\n    return deviceId;\r\n  }\r\n\r\n  generateEndPoint(user) {\r\n      let key = user.userId;\r\n      if(!localStorage.getItem(\"push-notification-endpoint_\"+key)) {\r\n      //console.log(\"Generating Endpoint...\");\r\n      var postJsonData = {\r\n        \"appId\"         : 3,\r\n        \"appIdentifier\" : Config.site,\r\n        \"userId\"        : user.userId,\r\n        \"enquiryId\"     : user.enquiryId  ,\r\n        \"deviceId\"      : this.getDeviceId(),\r\n        \"platform\"      : \"PWA\",\r\n        \"deviceToken\"   : localStorage.getItem(\"notification-token\")\r\n      };\r\n      ApiService.generateEndPoint(postJsonData)\r\n      .then((res) => { //SuccessCB\r\n        let respData = res.data;\r\n        if(respData.status == 0) {\r\n          //\r\n        }\r\n        else {\r\n          //console.log(\"Endpoint : \"+respData.data.endPoint);\r\n          localStorage.setItem(\"push-notification-endpoint_\"+key, respData.data.endPoint);\r\n        }\r\n      },\r\n      error => { //ErrorCB\r\n        console.log(\"Dashboard --> generateEndPoint() -> Connection Error : \"+Config.CONNECTION_ERROR);\r\n      });\r\n    }\r\n  }\r\n\r\n  addToHome = () => {\r\n    //console.log(\"Dashboard --> addToHome()...\");\r\n    //console.log(\"Dashboard --> isPWAInstalled = \"+this.isPWAInstalled);\r\n    if(this.installEvent) {\r\n      this.installEvent.prompt();  \r\n    }\r\n  };\r\n  \r\n  routeChange(path, portletData) {\r\n    //this.props.history.push(path);\r\n\t  localStorage.setItem('portlet', JSON.stringify(portletData));\r\n    this.props.history.push({\r\n      pathname: path,\r\n      state: { portlet: portletData }});\r\n  }\r\n\r\n  showNotification() {\r\n    //console.log(\"Dashboard -> showNotification()... \");\r\n    let path = \"/notification\";\r\n    this.props.history.push({\r\n        pathname: path\r\n    });  \r\n  }\r\n\r\n  studentTickerMessages() {\r\n      \r\n      ApiService.studentTickerMessages()\r\n      .then((res) => { \r\n        this.setState({\r\n          ticker: res.data.importantMessages\r\n        });\r\n      },\r\n      error => { //ErrorCB\r\n        console.log(Config.CONNECTION_ERROR);\r\n      });\r\n  }\r\n\r\n  onHover = () => {\r\n    document.getElementById(\"myMarquee\").stop();\r\n  };\r\n\r\n  onOut = () => {\r\n    document.getElementById(\"myMarquee\").start();\r\n  };\r\n\r\n  sliderButtonAction = (slide) =>{\r\n    //if(slide.button.buttonAction.actionType==='product')\r\n    let productId = slide.button.buttonAction.actionId;    \r\n    if(!Config.CURRENT_PORTLET && !JSON.parse(localStorage.getItem('portlet'))) {\r\n      let portletConfig = { \"id\":productId,\r\n        \"class\":\"blue-card\",\r\n        \"name\":slide.title,\r\n        \"icon\":\"./assets/imgs/payment.png\"\r\n      }\r\n\t\t\tConfig.CURRENT_PORTLET = portletConfig;\r\n\t\t}\r\n    this.setState({ loading: true }, () => {\r\n      ApiService.getProduct(productId)\r\n      .then((res) => { //SuccessCB\r\n        let product = res.data.data;\r\n        this.setState({loading: false});\r\n        this.props.history.push({\r\n          pathname: '/ProductDetails',\r\n          state: { product: product }});\r\n      },\r\n      error => { //ErrorCB\r\n        console.log(\"Dashboard --> getProduct() -> Connection Error : \"+Config.CONNECTION_ERROR);\r\n      });\r\n    });    \r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    var pic = \"\";\r\n    if(user.photoPath) {\r\n      pic = user.photoPath;\r\n    } else {\r\n      pic = avatar;\r\n    }\r\n    let data = this.props.dashboard.data;\r\n    let slider = data?.slider || null;\r\n    let isSliderEnable = slider? slider.enableStatus : false;\r\n    let siteTitle = localStorage.getItem('siteTitle') || Config.siteTitle;\r\n    return (\r\n      <>\r\n      <div className=\"dashboard\">\r\n        {\r\n          <Container fluid>\r\n            <SideBar history={this.props.history} />\r\n            <navbar className=\"second-header toolbar toolbar-md toolbar-md-primary\" id=\"second-header\">\r\n              <div className=\"toolbar-content toolbar-content-md\">\r\n              \r\n                <div className=\"img-set profile-set\">\r\n                  { isSliderEnable ? <img src={cloud} alt=\"Cloud\"  className=\"cloud_img_slider\" /> : <img src={cloud} alt=\"Cloud\" />}\r\n                  { \r\n                    this.state.ticker &&  this.renderTicker()\r\n                  }\r\n                  { isSliderEnable ? <span className=\"logo_text\"> {siteTitle}</span> : '' }\r\n                  <span className=\"notification_icon\" onClick={() => this.showNotification()}>   \r\n                    <FontAwesomeIcon icon={faBell} /> \r\n                    {this.state.notificationCount>0?<span class=\"count\">{this.state.notificationCount}</span>:''} \r\n                  </span>\r\n                  { !isSliderEnable && \r\n                      <div className=\"txt-set\">\r\n                        <img src={pic} alt=\"profile\" onClick={() => this.routeChange('profile','')}/>\r\n                        <p className=\"good-txt\"> {this.greetUser()} </p>\r\n                        <p className=\"name-txt\"> {this.state.name} </p>\r\n                      </div>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </navbar>\r\n            { isSliderEnable && <div className=\"slider-list\">  { this.renderSlider(slider) } </div> }\r\n            <div className=\"category-list\">              \r\n                {loading ?  <Loader />: this.renderPortlets()} \r\n              <br />\r\n            </div>\r\n          </Container>\r\n        }\r\n      </div>\r\n      { this.renderAddToHome() }\r\n      </>\r\n    );\r\n  }\r\n\r\n  greetUser() {\r\n    let myDate = new Date();\r\n    let hrs = myDate.getHours();\r\n    let greetMsg;\r\n\r\n    if (hrs < 12)\r\n      greetMsg = 'Good Morning';\r\n    else if (hrs >= 12 && hrs <= 16)\r\n      greetMsg = 'Good Afternoon';\r\n    else if (hrs >= 16 && hrs <= 21)\r\n      greetMsg = 'Good Evening';\r\n    else if (hrs >= 16 && hrs <= 21)\r\n      greetMsg = 'Good Night';\r\n\r\n    return greetMsg;\r\n  }\r\n\r\n  renderTicker() { \r\n      return ( \r\n            <div className=\"marq\">  \r\n              <marquee  className=\"marquee\" direction=\"left\" id=\"myMarquee\" onMouseEnter={this.onHover} onMouseLeave={this.onOut}>\r\n                        <>\r\n                        {\r\n                          this.state.ticker.map((item, index) => {\r\n                              return (\r\n                                <>\r\n                                  <span dangerouslySetInnerHTML={{ __html:item}} /> \r\n                                  {index < this.state.ticker.length - 1 &&  <span> &nbsp; || &nbsp; </span> } \r\n                                </>\r\n                              )\r\n                          })\r\n                        }\r\n                        </>\r\n              </marquee>     \r\n            </div>\r\n      );\r\n  }\r\n\r\n  renderSlider(slider) {     \r\n      let settings = {\r\n        autoplay: true,\r\n        autoplaySpeed: 6000,\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        initialSlide: 0,\r\n        arrows: false,\r\n        responsive: [\r\n          {\r\n            breakpoint: 1024,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1,\r\n              infinite: true,\r\n              dots: true\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 600,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1,\r\n              initialSlide: 1\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 480,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1\r\n            }\r\n          }\r\n        ]\r\n      };\r\n\r\n      return ( \r\n        <div>\r\n              <Slider {...settings}>\r\n              {\t\t  \r\n                slider.slides.map((slide, index) => {\r\n                  return (\r\n                    <div>\r\n                        <div className=\"mb-outer\">\r\n                            <div className=\"mb-text-1\">\r\n                                <h1>{slide.title}</h1>\r\n                                <h3>{slide.subTitle}</h3>\r\n                                {\r\n                                  slide.button.enableStatus && \r\n                                  <a className=\"banner-button\" href=\"#\" \r\n                                    onClick={() => this.sliderButtonAction(slide)}\r\n                                    style={{background: slide.button.buttonColor, color: slide.button.buttonTextColor}}>\r\n                                    {slide.button.buttonTitle}\r\n                                  </a>\r\n                                }\r\n                            </div>\r\n                            <img src={slide.imageURL} />\r\n                        </div>\r\n                    </div>\r\n                  )\r\n                })\r\n              }                \r\n              </Slider>\r\n          </div>\r\n      );\r\n}\r\n\r\n  renderPortlets() {    \r\n    let data = this.props.dashboard.data;\r\n    if(typeof(data) !== 'undefined' || data != null){\t\r\n      \r\n      let user = JSON.parse(localStorage.getItem('user'));\r\n      user.mobileNumber = data.studentDetails.mobile;\r\n      user.photoPath= data.studentDetails.photoPath;\r\n      user.studentCode= data.studentDetails.studentCode;\r\n      user.course = data.studentDetails.course;\r\n      user.center = data.studentDetails.center\r\n      localStorage.setItem(\"user\", JSON.stringify(user));      \r\n      return  <Row>\r\n      {\t\t  \r\n      data.portlets.sort((a, b) => a.id - b.id)\r\n      .map((portlet, index) => {\r\n\t\t\t//console.log(portlet.name)\r\n        if(portlet.isTile==true){\r\n          let params = \"\";\r\n          if(portlet.target==\"studyResource\" || portlet.target==\"lessonPlan\"){\r\n            params = portlet.params.resourceTypeId +'/'+portlet.params.resourceSubTypeId +'/'+ portlet.name;\r\n          }\r\n          \r\n          let portlet_div =\r\n            <div key={index} className=\"col col-md-3 col-sm-3 col-xs-6 order-2\"> \r\n              <Button className={portlet.class+' button button-md button-clear button-clear-md'} onClick={() => this.routeChange(portlet.target+'/'+params,portlet)}>\r\n                <item className=\"item-set-new item item-block item-md\">\r\n                  <thumbnail>\r\n                    <img src={portlet.icon} alt=\"Messages\" />\r\n                  </thumbnail>\r\n                  <label className=\"label label-md\">\r\n                    <h5>{portlet.name}</h5>\r\n                  </label>\r\n                </item>\r\n              </Button>\r\n            </div>\r\n          \r\n            if(user.userTypeId!==9){\r\n              return ( portlet_div);\r\n            }else if(user.userTypeId ==9 && portlet.enableForParent==true){\r\n              return ( portlet_div);\r\n            }\r\n          }\r\n        })\r\n      }\r\n      </Row>\r\n    }\r\n  }\r\n\r\n  renderAddToHome() {  //A2H\r\n    //console.log(\"Dashboard --> renderAddToHome() >> showA2H : \"+this.state.showA2H);\r\n    return (\r\n      <>\r\n      {\r\n        this.state.showA2H && !this.isPWAInstalled && \r\n        <div className=\"ilearn-footer\">                    \r\n            <Row>\r\n                <Col className=\"ilearn-footer-col\" >\r\n                  <button className=\"btn ilearn-blue-btn ilearn-footer-btn btn-lg btn-block\" >\r\n                    <img src=\"/logo192.png\" alt=\"notification\" className=\"float-left\" style={{width:'24px',height:'24px',float:'left'}}/> \r\n                    <span onClick={() => this.addToHome()}>\r\n                      Add {(new URL(window.location)).hostname} to Home screen \r\n                    </span>\r\n                    <span onClick={() => this.closeAddToHome()} className=\"float-right\">\r\n                      <FontAwesomeIcon icon={ faTimes }  size = 'lg' color='#fff'/>\r\n                      &nbsp;\r\n                    </span>\r\n                    </button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n      }\r\n      </>\r\n    );\r\n  }\r\n\r\n  isInstalled() {\r\n    //console.log(\"Dashboard --> isInstalled()...\"+(new URL(window.location)).hostname);\r\n    if (navigator.standalone) {\r\n      //console.log(\"Dashboard --> isInstalled() >> navigator.standalone\");\r\n      return true;  // iOS\r\n    }\r\n    if (window.matchMedia('(display-mode: standalone)').matches) {\r\n      //console.log(\"Dashboard --> isInstalled() >> display-mode: standalone\");\r\n      return true;  // Android with \"display\": \"standalone\" in Manifest\r\n    }\r\n    if (new URL(window.location).searchParams.has('ilearnPWA')) {\r\n      //console.log(\"Dashboard --> isInstalled() >> ilearnPWA\");\r\n      return true;  // fallback to check for \"?homescreen=1\"\r\n    }\r\n    //console.log(\"Dashboard --> isInstalled() >> FALSE\");\r\n    return false;\r\n  }\r\n\r\n  closeAddToHome() {\r\n    //console.log(\"Dashboard --> closeAddToHome()\");\r\n    this.setState({ showA2H: false });\r\n  }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  dashboard: state.dashboard.dashboard\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getPortlets: () => dispatch(getPortlets())\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (Dashboard);"]},"metadata":{},"sourceType":"module"}