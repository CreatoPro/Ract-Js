{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _epubcfi = _interopRequireDefault(require(\"./epubcfi\"));\n\nvar _core = require(\"./utils/core\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Page List Parser\n * @param {document} [xml]\n */\n\n\nclass PageList {\n  constructor(xml) {\n    this.pages = [];\n    this.locations = [];\n    this.epubcfi = new _epubcfi.default();\n    this.firstPage = 0;\n    this.lastPage = 0;\n    this.totalPages = 0;\n    this.toc = undefined;\n    this.ncx = undefined;\n\n    if (xml) {\n      this.pageList = this.parse(xml);\n    }\n\n    if (this.pageList && this.pageList.length) {\n      this.process(this.pageList);\n    }\n  }\n  /**\n   * Parse PageList Xml\n   * @param  {document} xml\n   */\n\n\n  parse(xml) {\n    var html = (0, _core.qs)(xml, \"html\");\n    var ncx = (0, _core.qs)(xml, \"ncx\");\n\n    if (html) {\n      return this.parseNav(xml);\n    } else if (ncx) {\n      return this.parseNcx(xml);\n    }\n  }\n  /**\n   * Parse a Nav PageList\n   * @private\n   * @param  {node} navHtml\n   * @return {PageList.item[]} list\n   */\n\n\n  parseNav(navHtml) {\n    var navElement = (0, _core.querySelectorByType)(navHtml, \"nav\", \"page-list\");\n    var navItems = navElement ? (0, _core.qsa)(navElement, \"li\") : [];\n    var length = navItems.length;\n    var i;\n    var list = [];\n    var item;\n    if (!navItems || length === 0) return list;\n\n    for (i = 0; i < length; ++i) {\n      item = this.item(navItems[i]);\n      list.push(item);\n    }\n\n    return list;\n  }\n\n  parseNcx(navXml) {\n    var list = [];\n    var i = 0;\n    var item;\n    var pageList;\n    var pageTargets;\n    var length = 0;\n    pageList = (0, _core.qs)(navXml, \"pageList\");\n    if (!pageList) return list;\n    pageTargets = (0, _core.qsa)(pageList, \"pageTarget\");\n    length = pageTargets.length;\n\n    if (!pageTargets || pageTargets.length === 0) {\n      return list;\n    }\n\n    for (i = 0; i < length; ++i) {\n      item = this.ncxItem(pageTargets[i]);\n      list.push(item);\n    }\n\n    return list;\n  }\n\n  ncxItem(item) {\n    var navLabel = (0, _core.qs)(item, \"navLabel\");\n    var navLabelText = (0, _core.qs)(navLabel, \"text\");\n    var pageText = navLabelText.textContent;\n    var content = (0, _core.qs)(item, \"content\");\n    var href = content.getAttribute(\"src\");\n    var page = parseInt(pageText, 10);\n    return {\n      \"href\": href,\n      \"page\": page\n    };\n  }\n  /**\n   * Page List Item\n   * @private\n   * @param  {node} item\n   * @return {object} pageListItem\n   */\n\n\n  item(item) {\n    var content = (0, _core.qs)(item, \"a\"),\n        href = content.getAttribute(\"href\") || \"\",\n        text = content.textContent || \"\",\n        page = parseInt(text),\n        isCfi = href.indexOf(\"epubcfi\"),\n        split,\n        packageUrl,\n        cfi;\n\n    if (isCfi != -1) {\n      split = href.split(\"#\");\n      packageUrl = split[0];\n      cfi = split.length > 1 ? split[1] : false;\n      return {\n        \"cfi\": cfi,\n        \"href\": href,\n        \"packageUrl\": packageUrl,\n        \"page\": page\n      };\n    } else {\n      return {\n        \"href\": href,\n        \"page\": page\n      };\n    }\n  }\n  /**\n   * Process pageList items\n   * @private\n   * @param  {array} pageList\n   */\n\n\n  process(pageList) {\n    pageList.forEach(function (item) {\n      this.pages.push(item.page);\n\n      if (item.cfi) {\n        this.locations.push(item.cfi);\n      }\n    }, this);\n    this.firstPage = parseInt(this.pages[0]);\n    this.lastPage = parseInt(this.pages[this.pages.length - 1]);\n    this.totalPages = this.lastPage - this.firstPage;\n  }\n  /**\n   * Get a PageList result from a EpubCFI\n   * @param  {string} cfi EpubCFI String\n   * @return {number} page\n   */\n\n\n  pageFromCfi(cfi) {\n    var pg = -1; // Check if the pageList has not been set yet\n\n    if (this.locations.length === 0) {\n      return -1;\n    } // TODO: check if CFI is valid?\n    // check if the cfi is in the location list\n    // var index = this.locations.indexOf(cfi);\n\n\n    var index = (0, _core.indexOfSorted)(cfi, this.locations, this.epubcfi.compare);\n\n    if (index != -1) {\n      pg = this.pages[index];\n    } else {\n      // Otherwise add it to the list of locations\n      // Insert it in the correct position in the locations page\n      //index = EPUBJS.core.insert(cfi, this.locations, this.epubcfi.compare);\n      index = (0, _core.locationOf)(cfi, this.locations, this.epubcfi.compare); // Get the page at the location just before the new one, or return the first\n\n      pg = index - 1 >= 0 ? this.pages[index - 1] : this.pages[0];\n\n      if (pg !== undefined) {// Add the new page in so that the locations and page array match up\n        //this.pages.splice(index, 0, pg);\n      } else {\n        pg = -1;\n      }\n    }\n\n    return pg;\n  }\n  /**\n   * Get an EpubCFI from a Page List Item\n   * @param  {string | number} pg\n   * @return {string} cfi\n   */\n\n\n  cfiFromPage(pg) {\n    var cfi = -1; // check that pg is an int\n\n    if (typeof pg != \"number\") {\n      pg = parseInt(pg);\n    } // check if the cfi is in the page list\n    // Pages could be unsorted.\n\n\n    var index = this.pages.indexOf(pg);\n\n    if (index != -1) {\n      cfi = this.locations[index];\n    } // TODO: handle pages not in the list\n\n\n    return cfi;\n  }\n  /**\n   * Get a Page from Book percentage\n   * @param  {number} percent\n   * @return {number} page\n   */\n\n\n  pageFromPercentage(percent) {\n    var pg = Math.round(this.totalPages * percent);\n    return pg;\n  }\n  /**\n   * Returns a value between 0 - 1 corresponding to the location of a page\n   * @param  {number} pg the page\n   * @return {number} percentage\n   */\n\n\n  percentageFromPage(pg) {\n    var percentage = (pg - this.firstPage) / this.totalPages;\n    return Math.round(percentage * 1000) / 1000;\n  }\n  /**\n   * Returns a value between 0 - 1 corresponding to the location of a cfi\n   * @param  {string} cfi EpubCFI String\n   * @return {number} percentage\n   */\n\n\n  percentageFromCfi(cfi) {\n    var pg = this.pageFromCfi(cfi);\n    var percentage = this.percentageFromPage(pg);\n    return percentage;\n  }\n  /**\n   * Destroy\n   */\n\n\n  destroy() {\n    this.pages = undefined;\n    this.locations = undefined;\n    this.epubcfi = undefined;\n    this.pageList = undefined;\n    this.toc = undefined;\n    this.ncx = undefined;\n  }\n\n}\n\nvar _default = PageList;\nexports.default = _default;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/node_modules/epubjs/lib/pagelist.js"],"names":["Object","defineProperty","exports","value","default","_epubcfi","_interopRequireDefault","require","_core","obj","__esModule","PageList","constructor","xml","pages","locations","epubcfi","firstPage","lastPage","totalPages","toc","undefined","ncx","pageList","parse","length","process","html","qs","parseNav","parseNcx","navHtml","navElement","querySelectorByType","navItems","qsa","i","list","item","push","navXml","pageTargets","ncxItem","navLabel","navLabelText","pageText","textContent","content","href","getAttribute","page","parseInt","text","isCfi","indexOf","split","packageUrl","cfi","forEach","pageFromCfi","pg","index","indexOfSorted","compare","locationOf","cfiFromPage","pageFromPercentage","percent","Math","round","percentageFromPage","percentage","percentageFromCfi","destroy","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _epubcfi = _interopRequireDefault(require(\"./epubcfi\"));\n\nvar _core = require(\"./utils/core\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Page List Parser\n * @param {document} [xml]\n */\nclass PageList {\n  constructor(xml) {\n    this.pages = [];\n    this.locations = [];\n    this.epubcfi = new _epubcfi.default();\n    this.firstPage = 0;\n    this.lastPage = 0;\n    this.totalPages = 0;\n    this.toc = undefined;\n    this.ncx = undefined;\n\n    if (xml) {\n      this.pageList = this.parse(xml);\n    }\n\n    if (this.pageList && this.pageList.length) {\n      this.process(this.pageList);\n    }\n  }\n  /**\n   * Parse PageList Xml\n   * @param  {document} xml\n   */\n\n\n  parse(xml) {\n    var html = (0, _core.qs)(xml, \"html\");\n    var ncx = (0, _core.qs)(xml, \"ncx\");\n\n    if (html) {\n      return this.parseNav(xml);\n    } else if (ncx) {\n      return this.parseNcx(xml);\n    }\n  }\n  /**\n   * Parse a Nav PageList\n   * @private\n   * @param  {node} navHtml\n   * @return {PageList.item[]} list\n   */\n\n\n  parseNav(navHtml) {\n    var navElement = (0, _core.querySelectorByType)(navHtml, \"nav\", \"page-list\");\n    var navItems = navElement ? (0, _core.qsa)(navElement, \"li\") : [];\n    var length = navItems.length;\n    var i;\n    var list = [];\n    var item;\n    if (!navItems || length === 0) return list;\n\n    for (i = 0; i < length; ++i) {\n      item = this.item(navItems[i]);\n      list.push(item);\n    }\n\n    return list;\n  }\n\n  parseNcx(navXml) {\n    var list = [];\n    var i = 0;\n    var item;\n    var pageList;\n    var pageTargets;\n    var length = 0;\n    pageList = (0, _core.qs)(navXml, \"pageList\");\n    if (!pageList) return list;\n    pageTargets = (0, _core.qsa)(pageList, \"pageTarget\");\n    length = pageTargets.length;\n\n    if (!pageTargets || pageTargets.length === 0) {\n      return list;\n    }\n\n    for (i = 0; i < length; ++i) {\n      item = this.ncxItem(pageTargets[i]);\n      list.push(item);\n    }\n\n    return list;\n  }\n\n  ncxItem(item) {\n    var navLabel = (0, _core.qs)(item, \"navLabel\");\n    var navLabelText = (0, _core.qs)(navLabel, \"text\");\n    var pageText = navLabelText.textContent;\n    var content = (0, _core.qs)(item, \"content\");\n    var href = content.getAttribute(\"src\");\n    var page = parseInt(pageText, 10);\n    return {\n      \"href\": href,\n      \"page\": page\n    };\n  }\n  /**\n   * Page List Item\n   * @private\n   * @param  {node} item\n   * @return {object} pageListItem\n   */\n\n\n  item(item) {\n    var content = (0, _core.qs)(item, \"a\"),\n        href = content.getAttribute(\"href\") || \"\",\n        text = content.textContent || \"\",\n        page = parseInt(text),\n        isCfi = href.indexOf(\"epubcfi\"),\n        split,\n        packageUrl,\n        cfi;\n\n    if (isCfi != -1) {\n      split = href.split(\"#\");\n      packageUrl = split[0];\n      cfi = split.length > 1 ? split[1] : false;\n      return {\n        \"cfi\": cfi,\n        \"href\": href,\n        \"packageUrl\": packageUrl,\n        \"page\": page\n      };\n    } else {\n      return {\n        \"href\": href,\n        \"page\": page\n      };\n    }\n  }\n  /**\n   * Process pageList items\n   * @private\n   * @param  {array} pageList\n   */\n\n\n  process(pageList) {\n    pageList.forEach(function (item) {\n      this.pages.push(item.page);\n\n      if (item.cfi) {\n        this.locations.push(item.cfi);\n      }\n    }, this);\n    this.firstPage = parseInt(this.pages[0]);\n    this.lastPage = parseInt(this.pages[this.pages.length - 1]);\n    this.totalPages = this.lastPage - this.firstPage;\n  }\n  /**\n   * Get a PageList result from a EpubCFI\n   * @param  {string} cfi EpubCFI String\n   * @return {number} page\n   */\n\n\n  pageFromCfi(cfi) {\n    var pg = -1; // Check if the pageList has not been set yet\n\n    if (this.locations.length === 0) {\n      return -1;\n    } // TODO: check if CFI is valid?\n    // check if the cfi is in the location list\n    // var index = this.locations.indexOf(cfi);\n\n\n    var index = (0, _core.indexOfSorted)(cfi, this.locations, this.epubcfi.compare);\n\n    if (index != -1) {\n      pg = this.pages[index];\n    } else {\n      // Otherwise add it to the list of locations\n      // Insert it in the correct position in the locations page\n      //index = EPUBJS.core.insert(cfi, this.locations, this.epubcfi.compare);\n      index = (0, _core.locationOf)(cfi, this.locations, this.epubcfi.compare); // Get the page at the location just before the new one, or return the first\n\n      pg = index - 1 >= 0 ? this.pages[index - 1] : this.pages[0];\n\n      if (pg !== undefined) {// Add the new page in so that the locations and page array match up\n        //this.pages.splice(index, 0, pg);\n      } else {\n        pg = -1;\n      }\n    }\n\n    return pg;\n  }\n  /**\n   * Get an EpubCFI from a Page List Item\n   * @param  {string | number} pg\n   * @return {string} cfi\n   */\n\n\n  cfiFromPage(pg) {\n    var cfi = -1; // check that pg is an int\n\n    if (typeof pg != \"number\") {\n      pg = parseInt(pg);\n    } // check if the cfi is in the page list\n    // Pages could be unsorted.\n\n\n    var index = this.pages.indexOf(pg);\n\n    if (index != -1) {\n      cfi = this.locations[index];\n    } // TODO: handle pages not in the list\n\n\n    return cfi;\n  }\n  /**\n   * Get a Page from Book percentage\n   * @param  {number} percent\n   * @return {number} page\n   */\n\n\n  pageFromPercentage(percent) {\n    var pg = Math.round(this.totalPages * percent);\n    return pg;\n  }\n  /**\n   * Returns a value between 0 - 1 corresponding to the location of a page\n   * @param  {number} pg the page\n   * @return {number} percentage\n   */\n\n\n  percentageFromPage(pg) {\n    var percentage = (pg - this.firstPage) / this.totalPages;\n    return Math.round(percentage * 1000) / 1000;\n  }\n  /**\n   * Returns a value between 0 - 1 corresponding to the location of a cfi\n   * @param  {string} cfi EpubCFI String\n   * @return {number} percentage\n   */\n\n\n  percentageFromCfi(cfi) {\n    var pg = this.pageFromCfi(cfi);\n    var percentage = this.percentageFromPage(pg);\n    return percentage;\n  }\n  /**\n   * Destroy\n   */\n\n\n  destroy() {\n    this.pages = undefined;\n    this.locations = undefined;\n    this.epubcfi = undefined;\n    this.pageList = undefined;\n    this.toc = undefined;\n    this.ncx = undefined;\n  }\n\n}\n\nvar _default = PageList;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}