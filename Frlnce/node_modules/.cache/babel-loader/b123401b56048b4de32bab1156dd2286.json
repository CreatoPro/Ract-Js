{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\test-player\\\\TestInstructions.js\";\nimport React, { Component } from \"react\";\nimport \"./question-style.css\";\nimport Config from \"../../_config/config\";\nimport ApiService from \"../../_services/ApiService\";\nimport { ILoader } from \"./../../_components/iloader/iloader\";\nimport Header from \"./components/Header\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faClosedCaptioning, faPlay, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport swal from \"sweetalert\";\nimport Utils from \"../../_helpers/utils\";\nimport lock_icon from \"./img/lock.png\";\nimport test_icon from \"./img/test.png\";\nimport { Container, Row, Modal, Form } from \"react-bootstrap\";\n\nconst AWS = require(\"aws-sdk\");\n\nAWS.config.clear(); // AWS.config.update({\n//   region: Config.AWSRegion,\n//   accessKeyId: Config.AWSAccessKeyId,\n//   secretAccessKey: Config.AWSSecretAccessKey,\n// });\n\nvar docClient = new AWS.DynamoDB.DocumentClient();\n\nclass TestInstructions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.dynamodbUpdateProfile = async (tenant_userId, key, bucket) => {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      const {\n        userId\n      } = user;\n      const payload = {\n        photo: key,\n        userId,\n        clientName: Config.siteTitle,\n        photoBucketName: bucket,\n        profileUpdate: true\n      };\n      console.log(payload, \"payload\");\n\n      try {\n        var _data$message;\n\n        const res = await ApiService.updateProctoredProfile(JSON.stringify(payload));\n        const data = await res.json();\n\n        if (((_data$message = data.message) === null || _data$message === void 0 ? void 0 : _data$message.status) === \"success\") {\n          return console.log(data, \"proctordata\");\n        }\n\n        this.showAlert();\n      } catch (err) {\n        console.log(err);\n        this.showAlert();\n      }\n    };\n\n    this.updateInput = e => {\n      let v = e.target.value;\n      let k = e.target.name;\n      let testPassword = { ...this.state.testPassword\n      };\n      testPassword[k] = v;\n      this.setState({\n        testPassword\n      });\n    };\n\n    this.renderLoader = () => {\n      const _loadingText = \"Please wait...\";\n      return /*#__PURE__*/React.createElement(ILoader, {\n        loadingText: _loadingText,\n        isShow: this.state.showLoading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 7\n        }\n      });\n    };\n\n    this.state = {\n      showLoading: false,\n      show: false,\n      close: false,\n      testObject: \"\",\n      userObject: \"\",\n      testCategory: null,\n      msg: \"\",\n      blockMsg: \"Suspicious activity detected. Your Exam is now blocked. Please contact the Exam Department for further assistance.\",\n      showLockdownSection: false,\n      lockdownUrl: \"\",\n      sebUrl: \"\",\n      testPaperStatus: undefined,\n      testTimeStatus: \"timein\",\n      effectiveTestTime: \"\",\n      showModal: false,\n      modalTitle: \"Enter Password\",\n      testPassword: {\n        studentPassword: \"\",\n        testMasterPassword: \"\"\n      },\n      submitted: false,\n      validatePwdStatus: false\n    };\n    this.downloadTest = this.downloadTest.bind(this);\n    this.dynamodbInit = this.dynamodbInit.bind(this);\n    this.timeout = 0;\n  }\n\n  componentDidMount() {\n    this.setState({\n      userObject: JSON.parse(localStorage.getItem(\"user\")) || [],\n      tenant: localStorage.getItem(\"tenant\") || Config.siteTitle,\n      //tenant: \"isbat_testing\",\n      testCategory: this.props.location.state ? this.props.location.state.testCategory : \"\",\n      testId: this.props.match.params.id\n    });\n    document.body.classList.add(\"test-player-body\");\n    this.dynamodbInit();\n  }\n\n  showAlert() {\n    const wrapper = document.createElement(\"div\");\n    wrapper.innerHTML = Config.CONNECTION_ERROR_MSG;\n    swal({\n      content: wrapper,\n      icon: \"warning\",\n      button: \"Ok\",\n      allowOutsideClick: false,\n      closeOnClickOutside: false,\n      className: \"orange-card\"\n    }).then(willDelete => {\n      if (willDelete) {\n        window.location.reload();\n      }\n    });\n  }\n\n  dynamodbInit() {\n    let tenant = localStorage.getItem(\"tenant\") || Config.siteTitle; //let tenant = \"isbat_testing\";\n\n    let userObject = JSON.parse(localStorage.getItem(\"user\")) || [];\n    var student_response = {\n      tenant: tenant,\n      testId: this.props.match.params.id,\n      userId: userObject.userId,\n      isTimer: false,\n      isUpdate: false\n    };\n    console.log(student_response, \"response\");\n    var that = this;\n    that.setState({\n      showLoading: true\n    }, () => {\n      ApiService.testResponses(JSON.stringify(student_response)).then(res => res.json()).then(res => {\n        //   console.log(res,'response');\n        if (res.status == \"success\") {\n          if ((res === null || res === void 0 ? void 0 : res.testSubmit) == 1 || (res === null || res === void 0 ? void 0 : res.testSubmit) == 2 || (res === null || res === void 0 ? void 0 : res.testSubmit) == 3) {\n            let paramsString = that.props.location.search;\n            const params = new URLSearchParams(paramsString);\n            let testCategory = params.get(\"cat\");\n            window.location = \"/test-result/\" + testCategory + \"/\" + that.props.match.params.id;\n          }\n\n          that.setState({\n            msg: res.message,\n            testResume: res.testResume,\n            testPaperStatus: res.testPaperUrl,\n            showLoading: false\n          });\n          that.downloadTest(res.testPaperUrl, 0);\n        } else {\n          that.setState({\n            showLoading: false,\n            testPaperStatus: undefined\n          });\n          console.log(res, \"res\");\n          that.showAlert();\n        }\n      }).catch(err => {\n        that.setState({\n          showLoading: false\n        });\n        that.showAlert();\n        console.log(err, err.stack); // an error occurred\n      }); // }\n    }); // })\n  }\n  /* code for read item from dynamodb start*/\n\n\n  /* code for read item from dynamodb end*/\n  dynamodbUpdateUrl(testPaperUrl, paperId) {\n    let tenant = localStorage.getItem(\"tenant\") || Config.siteTitle; //let tenant = \"isbat_testing\";\n\n    let userObject = JSON.parse(localStorage.getItem(\"user\")) || [];\n    var student_response = {\n      tenant: tenant,\n      testId: this.props.match.params.id,\n      userId: userObject.userId,\n      testUrl: true,\n      testPaper: testPaperUrl,\n      testPaperId: paperId\n    };\n    console.log(student_response, \"response\");\n    var that = this;\n    that.setState({\n      showLoading: true\n    }, () => {\n      ApiService.testResponses(JSON.stringify(student_response)).then(res => res.json()).then(res => {\n        if (res.status == \"success\") {\n          that.setState({\n            msg: res.message,\n            showLoading: false,\n            testPaperStatus: res.status\n          });\n        } else {\n          that.setState({\n            showLoading: false,\n            testPaperStatus: undefined\n          });\n          that.showAlert();\n        }\n      }).catch(err => {\n        that.setState({\n          showLoading: false\n        });\n        that.showAlert();\n        console.log(err, err.stack); // an error occurred\n      });\n    });\n  }\n\n  checkLockdownBrowser() {\n    var response = {\n      userAgent: navigator.userAgent,\n      checkUserAgent: true\n    };\n    let tenant = localStorage.getItem(\"tenant\") || Config.siteTitle;\n    var that = this;\n    console.log(response, \"response\");\n    ApiService.testResponses(JSON.stringify(response)).then(res => res.json()).then(res => {\n      console.log(res);\n\n      if (res.status == \"failed\") {\n        that.setState({\n          showLockdownSection: true,\n          lockdownUrl: res.LockdownUrl,\n          sebUrl: \"https://tuningfork-live.s3-ap-southeast-1.amazonaws.com/\" + tenant + \"/files/seb/edusquares.seb\"\n        });\n      }\n    }).catch(err => {\n      console.log(err, err.stack);\n    });\n  }\n\n  checkProctorStatus(testId, lockdownBrowser) {\n    var blockMsg = this.state.blockMsg;\n    const {\n      tenant,\n      userObject\n    } = this.state;\n    var student_response = {\n      tenant: tenant,\n      testId: testId,\n      userId: userObject.userId,\n      isTimer: true,\n      proctor: true,\n      proctorStatus: true\n    };\n    console.log(student_response, \"response\");\n    var that = this;\n    ApiService.testResponses(JSON.stringify(student_response)).then(res => res.json()).then(res => {\n      console.log(res);\n\n      if (res.blanket_flag == \"BLOCK\") {\n        that.BlockAlert(blockMsg, lockdownBrowser);\n      } else if (res.blanket_flag == \"\" && res.block_test == true) {\n        that.BlockAlert(blockMsg, lockdownBrowser);\n      }\n    }).catch(err => {\n      console.log(err, err.stack); // an error occurred\n    });\n  }\n\n  testTimerCheck(testId, testTime, endDateTime, dayEndTime, dayStartTime) {\n    const {\n      tenant,\n      userObject\n    } = this.state;\n    var student_response = {\n      tenant: tenant,\n      testId: testId,\n      userId: userObject.userId,\n      dayTimes: true,\n      endDateTime: endDateTime,\n      testTime: testTime,\n      dayStartTime: dayStartTime,\n      dayEndTime: dayEndTime\n    };\n    var that = this;\n    console.log(student_response, \"response\");\n    ApiService.testResponses(JSON.stringify(student_response)).then(res => res.json()).then(res => {\n      console.log(res);\n\n      if (res.timeStatus) {\n        that.setState({\n          testTimeStatus: res.timeStatus,\n          effectiveTestTime: res.testTime\n        });\n      }\n    }).catch(err => {\n      console.log(err, err.stack); // an error occurred\n    });\n  }\n\n  BlockAlert(msg, lockdownBrowser) {\n    swal({\n      text: msg,\n      icon: \"warning\",\n      button: \"Ok\",\n      allowOutsideClick: false,\n      closeOnClickOutside: false,\n      closeOnEsc: false\n    }).then(willDelete => {\n      if (willDelete) {\n        if (lockdownBrowser == true) {\n          window.location.href = \"/dashboard\"; //this.props.history.replace('/dashboard');\n        } else {\n          window.close();\n        }\n      }\n    });\n  }\n\n  validatePassword() {\n    var _this$state$testObjec, _this$state$testObjec2, _this$state$testObjec3, _this$state$testObjec4;\n\n    if (((_this$state$testObjec = this.state.testObject) !== null && _this$state$testObjec !== void 0 && (_this$state$testObjec2 = _this$state$testObjec.testConfig) !== null && _this$state$testObjec2 !== void 0 && _this$state$testObjec2.studentLevelPasswordCheck || (_this$state$testObjec3 = this.state.testObject) !== null && _this$state$testObjec3 !== void 0 && (_this$state$testObjec4 = _this$state$testObjec3.testConfig) !== null && _this$state$testObjec4 !== void 0 && _this$state$testObjec4.testLevelPasswordCheck) && this.state.validatePwdStatus == false) {\n      this.setState({\n        showModal: true\n      });\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  handleClose() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  renderModal() {\n    var _this$state$testObjec5, _this$state$testObjec6, _this$state$testObjec7, _this$state$testObjec8, _this$state$testObjec9, _this$state$testObjec10, _this$state$testObjec11, _this$state$testObjec12;\n\n    let {\n      submitted,\n      testPassword\n    } = this.state; //let CURRENT_PORTLET = JSON.parse(localStorage['portlet']);\n\n    let CURRENT_PORTLET = \"blue-full-card\";\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      size: \"sm\",\n      onHide: () => this.handleClose(),\n      backdrop: \"static\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      className: `ilearn-plain-header text-white blue-full-card`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 13\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 15\n      }\n    }, this.state.modalTitle), \" \")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 15\n      }\n    }, ((_this$state$testObjec5 = this.state.testObject) === null || _this$state$testObjec5 === void 0 ? void 0 : (_this$state$testObjec6 = _this$state$testObjec5.testConfig) === null || _this$state$testObjec6 === void 0 ? void 0 : _this$state$testObjec6.studentLevelPasswordCheck) === true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 21\n      }\n    }, \"Student Test Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item-inner\" + (submitted && !testPassword.studentPassword ? \" has-error\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      class: \"form-control\",\n      type: \"text\",\n      placeholder: \"Password\",\n      name: \"studentPassword\",\n      onChange: this.updateInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 23\n      }\n    }))) : null, ((_this$state$testObjec7 = this.state.testObject) === null || _this$state$testObjec7 === void 0 ? void 0 : (_this$state$testObjec8 = _this$state$testObjec7.testConfig) === null || _this$state$testObjec8 === void 0 ? void 0 : _this$state$testObjec8.studentLevelPasswordCheck) === false && (_this$state$testObjec9 = this.state.testObject) !== null && _this$state$testObjec9 !== void 0 && (_this$state$testObjec10 = _this$state$testObjec9.testConfig) !== null && _this$state$testObjec10 !== void 0 && _this$state$testObjec10.testLevelPasswordCheck || this.state.msg == \"test record exist\" && ((_this$state$testObjec11 = this.state.testObject) === null || _this$state$testObjec11 === void 0 ? void 0 : (_this$state$testObjec12 = _this$state$testObjec11.testConfig) === null || _this$state$testObjec12 === void 0 ? void 0 : _this$state$testObjec12.testLevelPasswordCheck) === true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 21\n      }\n    }, \"Test Master Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item-inner\" + (submitted && !testPassword.testMasterPassword ? \" has-error\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      class: \"form-control\",\n      type: \"text\",\n      placeholder: \"Password\",\n      name: \"testMasterPassword\",\n      onChange: this.updateInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 23\n      }\n    }))) : null)), this.state.errorMessage && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 15\n      }\n    }, this.state.errorMessage)), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-primary\",\n      onClick: () => this.validateTestPwd(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 13\n      }\n    }, \"Start Test\"))));\n  }\n\n  validateTestPwd() {\n    var _this$state$testObjec13, _this$state$testObjec14, _this$state$testObjec15, _this$state$testObjec16, _this$state$testObjec17, _this$state$testObjec18, _this$state$testObjec19, _this$state$testObjec20, _this$state$testObjec21, _this$state$testObjec22, _this$state$testObjec23, _this$state$testObjec24, _this$state$testObjec25, _this$state$testObjec26, _this$state$testObjec27, _this$state$testObjec28, _this$state$testObjec29;\n\n    let {\n      testPassword\n    } = this.state;\n\n    if ((_this$state$testObjec13 = this.state.testObject) !== null && _this$state$testObjec13 !== void 0 && (_this$state$testObjec14 = _this$state$testObjec13.testConfig) !== null && _this$state$testObjec14 !== void 0 && _this$state$testObjec14.studentLevelPasswordCheck && (_this$state$testObjec15 = this.state.testObject) !== null && _this$state$testObjec15 !== void 0 && (_this$state$testObjec16 = _this$state$testObjec15.testConfig) !== null && _this$state$testObjec16 !== void 0 && _this$state$testObjec16.testLevelPasswordCheck && testPassword.studentPassword && (this.state.msg !== \"test record exist\" || this.state.msg == \"test record exist\" && testPassword.testMasterPassword === ((_this$state$testObjec17 = this.state.testObject) === null || _this$state$testObjec17 === void 0 ? void 0 : _this$state$testObjec17.password))) {\n      this.studentLevelPasswordCheckApi(testPassword.studentPassword);\n    } else if (((_this$state$testObjec18 = this.state.testObject) === null || _this$state$testObjec18 === void 0 ? void 0 : (_this$state$testObjec19 = _this$state$testObjec18.testConfig) === null || _this$state$testObjec19 === void 0 ? void 0 : _this$state$testObjec19.testLevelPasswordCheck) === false && (_this$state$testObjec20 = this.state.testObject) !== null && _this$state$testObjec20 !== void 0 && (_this$state$testObjec21 = _this$state$testObjec20.testConfig) !== null && _this$state$testObjec21 !== void 0 && _this$state$testObjec21.studentLevelPasswordCheck && testPassword.studentPassword) {\n      this.studentLevelPasswordCheckApi(testPassword.studentPassword);\n    } else if (((_this$state$testObjec22 = this.state.testObject) === null || _this$state$testObjec22 === void 0 ? void 0 : (_this$state$testObjec23 = _this$state$testObjec22.testConfig) === null || _this$state$testObjec23 === void 0 ? void 0 : _this$state$testObjec23.studentLevelPasswordCheck) === false && ((_this$state$testObjec24 = this.state.testObject) === null || _this$state$testObjec24 === void 0 ? void 0 : (_this$state$testObjec25 = _this$state$testObjec24.testConfig) === null || _this$state$testObjec25 === void 0 ? void 0 : _this$state$testObjec25.testLevelPasswordCheck) === true && testPassword.testMasterPassword === ((_this$state$testObjec26 = this.state.testObject) === null || _this$state$testObjec26 === void 0 ? void 0 : _this$state$testObjec26.password)) {\n      this.setState({\n        showLoading: false,\n        validatePwdStatus: true\n      });\n      setTimeout(() => {\n        this.routeChange(\"/TestPlayer/\" + this.state.testId, 0, this.state.testCategory);\n      }, 100);\n    } else if (((_this$state$testObjec27 = this.state.testObject) === null || _this$state$testObjec27 === void 0 ? void 0 : (_this$state$testObjec28 = _this$state$testObjec27.testConfig) === null || _this$state$testObjec28 === void 0 ? void 0 : _this$state$testObjec28.testLevelPasswordCheck) === true && testPassword.testMasterPassword !== ((_this$state$testObjec29 = this.state.testObject) === null || _this$state$testObjec29 === void 0 ? void 0 : _this$state$testObjec29.password)) {\n      this.setState({\n        submitted: true,\n        errorMessage: \"Please enter valid test password\"\n      });\n    } else {\n      this.setState({\n        submitted: true,\n        errorMessage: \"Please enter password\"\n      });\n    }\n  }\n\n  studentLevelPasswordCheckApi(studentPassword) {\n    this.setState({\n      submitted: true,\n      showLoading: true\n    }, () => {\n      ApiService.studentLevelPasswordCheck(this.state.testId, studentPassword).then(res => {\n        if (res.data.type === 1) {\n          this.setState({\n            showLoading: false,\n            validatePwdStatus: true\n          });\n          this.routeChange(\"/TestPlayer/\" + this.state.testId, 0, this.state.testCategory);\n        } else {\n          this.setState({\n            showLoading: false,\n            errorMessage: res.data.message\n          });\n        }\n      });\n    });\n  }\n\n  routeChange(path, endDate, testCategory) {\n    if (this.validatePassword()) {\n      let paramsString = this.props.location.search;\n      const params = new URLSearchParams(paramsString);\n      let lms = params.get(\"lms\") || 0;\n      let steps = params.get(\"steps\") || 0;\n      let testCategory2 = params.get(\"cat\") || testCategory;\n\n      if (this.state.testPaperStatus == undefined) {\n        this.showAlert();\n      } else {\n        this.props.history.replace({\n          pathname: path,\n          state: {\n            testEndDate: endDate,\n            testCategory: testCategory2,\n            lms: lms,\n            steps: steps,\n            resume: this.state.msg == \"test record exist\" ? true : false,\n            testUrl: this.state.testUrl\n          }\n        });\n      }\n    }\n  }\n\n  closeTest() {\n    window.close();\n  }\n\n  payCheck(testId, testObject) {\n    this.setState({\n      loading: true\n    }, () => {\n      let payLoad = {\n        type: \"test\",\n        testId: testId\n      };\n      ApiService.studentPayCheck(payLoad).then(res => {\n        this.setState({\n          loading: false\n        });\n\n        if (res.data.type == 2) {\n          const wrapper = document.createElement(\"div\");\n          wrapper.innerHTML = res.data.message;\n          swal({\n            content: wrapper,\n            icon: \"warning\",\n            button: \"Ok\",\n            allowOutsideClick: false,\n            closeOnClickOutside: false,\n            className: \"orange-card\"\n          }).then(willDelete => {\n            if (willDelete) {\n              window.close();\n            }\n          });\n        } else {\n          this.setState({\n            testObject: testObject\n          });\n        }\n      });\n    });\n  }\n\n  downloadTest(testPaperUrl, randomTest) {\n    let testId = this.props.match.params.id;\n    var d = new Date();\n    var rand = d.getTime();\n    let tenant = localStorage.getItem(\"tenant\") || Config.siteTitle; //let tenant = 'isbat_testing';\n\n    var testobj = \"\";\n\n    if (testPaperUrl) {\n      testobj = testPaperUrl;\n    } else if (randomTest) {\n      testobj = \"https://tuningfork-\" + Config.siteMode + \".s3.amazonaws.com/\" + tenant + \"/uploads/testPapers/\" + testId + \"/papers/\" + randomTest + \".json\";\n    } else {\n      testobj = \"https://tuningfork-\" + Config.siteMode + \".s3.amazonaws.com/\" + tenant + \"/uploads/testPapers/\" + testId + \"/\" + testId + \".json\";\n    }\n\n    this.setState({\n      showLoading: true\n    }, () => {\n      ApiService.fetchTestJson(testobj + \"?id=\" + rand).then(res => {\n        var _testObject$testPaper;\n\n        //console.log(JSON.stringify(res));\n        let testObject = res.data;\n        this.setState({\n          showLoading: false\n        });\n\n        if ((testObject === null || testObject === void 0 ? void 0 : (_testObject$testPaper = testObject.testPapers) === null || _testObject$testPaper === void 0 ? void 0 : _testObject$testPaper.length) > 0) {\n          let testPapers = testObject.testPapers;\n          let randomTestId = Math.floor(Math.random() * testPapers.length);\n          this.downloadTest(null, testPapers[randomTestId]);\n        } else {\n          var _testObject$testConfi, _testObject$testConfi2, _testObject$testConfi5, _testObject$testConfi6;\n\n          if ((testObject === null || testObject === void 0 ? void 0 : (_testObject$testConfi = testObject.testConfig) === null || _testObject$testConfi === void 0 ? void 0 : (_testObject$testConfi2 = _testObject$testConfi.webCamProctoring) === null || _testObject$testConfi2 === void 0 ? void 0 : _testObject$testConfi2.enabled) == true) {\n            var _testObject$testConfi3;\n\n            this.checkProctorStatus(testId, testObject === null || testObject === void 0 ? void 0 : (_testObject$testConfi3 = testObject.testConfig) === null || _testObject$testConfi3 === void 0 ? void 0 : _testObject$testConfi3.lockdownBrowser);\n            /** profile update */\n\n            const userObject = JSON.parse(localStorage.getItem(\"user\"));\n            const url = userObject.photoPath;\n            let userId = userObject.userId; //const url = '';\n\n            var referencePhoto = \"\";\n            var referencePhotoBucketName = \"\";\n            var tenant_userId = tenant + \"_\" + userId;\n\n            if (url) {\n              var match = url.match(/^https?:\\/\\/([^.]+).s3.amazonaws.com\\/?(.*?)$/);\n\n              if (match) {\n                referencePhoto = match[2];\n                referencePhotoBucketName = match[1];\n                this.dynamodbUpdateProfile(tenant_userId, referencePhoto, referencePhotoBucketName);\n              }\n            } else {\n              var _testObject$testConfi4;\n\n              this.BlockAlert(\"Dear Student you don't have profile image. Please contact the Exam Department for further assistance.\", testObject === null || testObject === void 0 ? void 0 : (_testObject$testConfi4 = testObject.testConfig) === null || _testObject$testConfi4 === void 0 ? void 0 : _testObject$testConfi4.lockdownBrowser);\n            }\n            /** profile update */\n\n          }\n\n          if ((testObject === null || testObject === void 0 ? void 0 : testObject.testConfig) != undefined && testObject.testConfig.dayStartTime != undefined && testObject.testConfig.dayEndTime != undefined) {\n            this.testTimerCheck(testId, testObject === null || testObject === void 0 ? void 0 : testObject.testTime, testObject === null || testObject === void 0 ? void 0 : testObject.endDateTime, testObject.testConfig.dayEndTime, testObject.testConfig.dayStartTime);\n          }\n\n          if ((testObject === null || testObject === void 0 ? void 0 : (_testObject$testConfi5 = testObject.testConfig) === null || _testObject$testConfi5 === void 0 ? void 0 : _testObject$testConfi5.checkForPaymentStatusBeforeStart) == true) {\n            this.payCheck(testId, testObject);\n          }\n\n          this.setState({\n            testObject: testObject,\n            testUrl: testobj\n          });\n\n          if (this.state.testResume == 0) {\n            this.dynamodbUpdateUrl(testobj, randomTest);\n          } else if (this.state.testResume == 1 && this.state.testPaperStatus == undefined) {\n            this.dynamodbUpdateUrl(testobj, randomTest);\n          }\n\n          if ((testObject === null || testObject === void 0 ? void 0 : (_testObject$testConfi6 = testObject.testConfig) === null || _testObject$testConfi6 === void 0 ? void 0 : _testObject$testConfi6.lockdownBrowser) == true) {\n            this.checkLockdownBrowser();\n          }\n        }\n      } // ,error => {\n      // }\n      ).catch(err => {\n        const testDate = JSON.parse(sessionStorage.getItem(\"testDate\"));\n        const testTime = JSON.parse(sessionStorage.getItem(\"testTime\"));\n        console.log(err.response.status, err);\n        this.setState({\n          showLoading: false\n        });\n\n        if (err.response.status === 404) {\n          this.BlockAlert(\"Online test not available. Please contact administrator\", false);\n        }\n\n        if (err.response.status === 403) {\n          this.BlockAlert(`Hey! Looks like you are a  ahead of the scheduled time. \\n Please come back on ${testDate} ${testTime} and take the test!`, false);\n        }\n      });\n    });\n  }\n\n  render() {\n    var _this$state$testObjec30, _this$state$testObjec31, _this$state$testObjec32, _this$state$testObjec33;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"test-player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      id: \"container\",\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainView\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: this.state.testObject.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 13\n      }\n    }, this.state.testObject ? this.renderInstructions() : \"\"), this.renderLoader())), (_this$state$testObjec30 = this.state.testObject) !== null && _this$state$testObjec30 !== void 0 && (_this$state$testObjec31 = _this$state$testObjec30.testConfig) !== null && _this$state$testObjec31 !== void 0 && _this$state$testObjec31.studentLevelPasswordCheck || (_this$state$testObjec32 = this.state.testObject) !== null && _this$state$testObjec32 !== void 0 && (_this$state$testObjec33 = _this$state$testObjec32.testConfig) !== null && _this$state$testObjec33 !== void 0 && _this$state$testObjec33.testLevelPasswordCheck ? this.renderModal() : null);\n  }\n\n  renderInstructions() {\n    const {\n      testObject\n    } = this.state;\n    let isMobile = Utils.isMobileDevice();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"test_instructions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 9\n      }\n    }, this.state.showLockdownSection === false ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"qustion_div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 13\n      }\n    }, this.state.testTimeStatus == \"timeout\" ? /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"error-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 17\n      }\n    }, \"Note : Your test is timed out. \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 50\n      }\n    }), \" Please come tomorrow to take the test.\", \" \") : this.state.testTimeStatus == \"partialtimeout\" ? /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"error-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 17\n      }\n    }, \"Note : Your test time is less than\", \" \", this.state.effectiveTestTime, \" minuts. \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 58\n      }\n    }), \"Please come tomorrow to take the test.\", \" \") : \"\", isMobile === true ? /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: testObject.instructions || testObject.webInstructions\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: testObject.webInstructions || testObject.instructions\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 15\n      }\n    }, this.state.testTimeStatus == \"timein\" ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary text-center\",\n      onClick: () => this.routeChange(\"/TestPlayer/\" + this.state.testId, 0, this.state.testCategory),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 19\n      }\n    }, this.state.msg == \"test record exist\" ? \"Resume Test\" : \"Start Test\", \" \", \"\\xA0\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 21\n      }\n    })) : \"\", \"\\xA0\", \" \", /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary text-center\",\n      onClick: () => this.closeTest(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 17\n      }\n    }, \"Cancel \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 26\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 17\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 24\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 31\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 38\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 45\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 52\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"locakdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel panel-default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 17\n      }\n    }, \"Lockdown Exam Browser Required\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 19\n      }\n    }, \"You need to take this Test from Lockdown Exam Browser.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      href: this.state.lockdownUrl,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: lock_icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 23\n      }\n    }), \" Download Lockdown Exam Browser\")), /*#__PURE__*/React.createElement(\"a\", {\n      href: this.state.sebUrl,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: test_icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 23\n      }\n    }), \" Download Exam Launcher\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nexport default TestInstructions;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/test-player/TestInstructions.js"],"names":["React","Component","Config","ApiService","ILoader","Header","FontAwesomeIcon","faClosedCaptioning","faPlay","faTimes","swal","Utils","lock_icon","test_icon","Container","Row","Modal","Form","AWS","require","config","clear","docClient","DynamoDB","DocumentClient","TestInstructions","constructor","props","dynamodbUpdateProfile","tenant_userId","key","bucket","user","JSON","parse","localStorage","getItem","userId","payload","photo","clientName","siteTitle","photoBucketName","profileUpdate","console","log","res","updateProctoredProfile","stringify","data","json","message","status","showAlert","err","updateInput","e","v","target","value","k","name","testPassword","state","setState","renderLoader","_loadingText","showLoading","show","close","testObject","userObject","testCategory","msg","blockMsg","showLockdownSection","lockdownUrl","sebUrl","testPaperStatus","undefined","testTimeStatus","effectiveTestTime","showModal","modalTitle","studentPassword","testMasterPassword","submitted","validatePwdStatus","downloadTest","bind","dynamodbInit","timeout","componentDidMount","tenant","location","testId","match","params","id","document","body","classList","add","wrapper","createElement","innerHTML","CONNECTION_ERROR_MSG","content","icon","button","allowOutsideClick","closeOnClickOutside","className","then","willDelete","window","reload","student_response","isTimer","isUpdate","that","testResponses","testSubmit","paramsString","search","URLSearchParams","get","testResume","testPaperUrl","catch","stack","dynamodbUpdateUrl","paperId","testUrl","testPaper","testPaperId","checkLockdownBrowser","response","userAgent","navigator","checkUserAgent","LockdownUrl","checkProctorStatus","lockdownBrowser","proctor","proctorStatus","blanket_flag","BlockAlert","block_test","testTimerCheck","testTime","endDateTime","dayEndTime","dayStartTime","dayTimes","timeStatus","text","closeOnEsc","href","validatePassword","testConfig","studentLevelPasswordCheck","testLevelPasswordCheck","handleClose","renderModal","CURRENT_PORTLET","errorMessage","validateTestPwd","password","studentLevelPasswordCheckApi","setTimeout","routeChange","type","path","endDate","lms","steps","testCategory2","history","replace","pathname","testEndDate","resume","closeTest","payCheck","loading","payLoad","studentPayCheck","randomTest","d","Date","rand","getTime","testobj","siteMode","fetchTestJson","testPapers","length","randomTestId","Math","floor","random","webCamProctoring","enabled","url","photoPath","referencePhoto","referencePhotoBucketName","checkForPaymentStatusBeforeStart","testDate","sessionStorage","render","renderInstructions","isMobile","isMobileDevice","__html","instructions","webInstructions"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./question-style.css\";\r\nimport Config from \"../../_config/config\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport { ILoader } from \"./../../_components/iloader/iloader\";\r\nimport Header from \"./components/Header\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faClosedCaptioning,\r\n  faPlay,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport swal from \"sweetalert\";\r\nimport Utils from \"../../_helpers/utils\";\r\nimport lock_icon from \"./img/lock.png\";\r\nimport test_icon from \"./img/test.png\";\r\nimport { Container, Row, Modal, Form } from \"react-bootstrap\";\r\n\r\nconst AWS = require(\"aws-sdk\");\r\nAWS.config.clear();\r\n// AWS.config.update({\r\n//   region: Config.AWSRegion,\r\n//   accessKeyId: Config.AWSAccessKeyId,\r\n//   secretAccessKey: Config.AWSSecretAccessKey,\r\n// });\r\nvar docClient = new AWS.DynamoDB.DocumentClient();\r\n\r\nclass TestInstructions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showLoading: false,\r\n      show: false,\r\n      close: false,\r\n      testObject: \"\",\r\n      userObject: \"\",\r\n      testCategory: null,\r\n      msg: \"\",\r\n      blockMsg:\r\n        \"Suspicious activity detected. Your Exam is now blocked. Please contact the Exam Department for further assistance.\",\r\n      showLockdownSection: false,\r\n      lockdownUrl: \"\",\r\n      sebUrl: \"\",\r\n      testPaperStatus: undefined,\r\n      testTimeStatus: \"timein\",\r\n      effectiveTestTime: \"\",\r\n      showModal: false,\r\n      modalTitle: \"Enter Password\",\r\n      testPassword: {\r\n        studentPassword: \"\",\r\n        testMasterPassword: \"\",\r\n      },\r\n      submitted: false,\r\n      validatePwdStatus: false,\r\n    };\r\n    this.downloadTest = this.downloadTest.bind(this);\r\n    this.dynamodbInit = this.dynamodbInit.bind(this);\r\n    this.timeout = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      userObject: JSON.parse(localStorage.getItem(\"user\")) || [],\r\n      tenant: localStorage.getItem(\"tenant\") || Config.siteTitle,\r\n      //tenant: \"isbat_testing\",\r\n      testCategory: this.props.location.state\r\n        ? this.props.location.state.testCategory\r\n        : \"\",\r\n      testId: this.props.match.params.id,\r\n    });\r\n    document.body.classList.add(\"test-player-body\");\r\n    this.dynamodbInit();\r\n  }\r\n\r\n  showAlert() {\r\n    const wrapper = document.createElement(\"div\");\r\n    wrapper.innerHTML = Config.CONNECTION_ERROR_MSG;\r\n    swal({\r\n      content: wrapper,\r\n      icon: \"warning\",\r\n      button: \"Ok\",\r\n      allowOutsideClick: false,\r\n      closeOnClickOutside: false,\r\n      className: \"orange-card\",\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        window.location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n  dynamodbInit() {\r\n    let tenant = localStorage.getItem(\"tenant\") || Config.siteTitle;\r\n    //let tenant = \"isbat_testing\";\r\n    let userObject = JSON.parse(localStorage.getItem(\"user\")) || [];\r\n    var student_response = {\r\n      tenant: tenant,\r\n      testId: this.props.match.params.id,\r\n      userId: userObject.userId,\r\n      isTimer: false,\r\n      isUpdate: false,\r\n    };\r\n    console.log(student_response, \"response\");\r\n    var that = this;\r\n\r\n    that.setState({ showLoading: true }, () => {\r\n      ApiService.testResponses(JSON.stringify(student_response))\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          //   console.log(res,'response');\r\n          if (res.status == \"success\") {\r\n            if (\r\n              res?.testSubmit == 1 ||\r\n              res?.testSubmit == 2 ||\r\n              res?.testSubmit == 3\r\n            ) {\r\n              let paramsString = that.props.location.search;\r\n              const params = new URLSearchParams(paramsString);\r\n              let testCategory = params.get(\"cat\");\r\n              window.location =\r\n                \"/test-result/\" +\r\n                testCategory +\r\n                \"/\" +\r\n                that.props.match.params.id;\r\n            }\r\n            that.setState({\r\n              msg: res.message,\r\n              testResume: res.testResume,\r\n              testPaperStatus: res.testPaperUrl,\r\n              showLoading: false,\r\n            });\r\n            that.downloadTest(res.testPaperUrl, 0);\r\n          } else {\r\n            that.setState({\r\n              showLoading: false,\r\n              testPaperStatus: undefined,\r\n            });\r\n            console.log(res, \"res\");\r\n            that.showAlert();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          that.setState({\r\n            showLoading: false,\r\n          });\r\n          that.showAlert();\r\n          console.log(err, err.stack); // an error occurred\r\n        });\r\n      // }\r\n    });\r\n    // })\r\n  }\r\n\r\n  /* code for read item from dynamodb start*/\r\n  dynamodbUpdateProfile = async (tenant_userId, key, bucket) => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const { userId } = user;\r\n\r\n    const payload = {\r\n      photo: key,\r\n      userId,\r\n      clientName: Config.siteTitle,\r\n      photoBucketName: bucket,\r\n      profileUpdate: true,\r\n    };\r\n\r\n    console.log(payload, \"payload\");\r\n\r\n    try {\r\n      const res = await ApiService.updateProctoredProfile(\r\n        JSON.stringify(payload)\r\n      );\r\n      const data = await res.json();\r\n      if (data.message?.status === \"success\") {\r\n        return console.log(data, \"proctordata\");\r\n      }\r\n      this.showAlert();\r\n    } catch (err) {\r\n      console.log(err);\r\n      this.showAlert();\r\n    }\r\n  };\r\n  /* code for read item from dynamodb end*/\r\n\r\n  dynamodbUpdateUrl(testPaperUrl, paperId) {\r\n    let tenant = localStorage.getItem(\"tenant\") || Config.siteTitle;\r\n    //let tenant = \"isbat_testing\";\r\n    let userObject = JSON.parse(localStorage.getItem(\"user\")) || [];\r\n    var student_response = {\r\n      tenant: tenant,\r\n      testId: this.props.match.params.id,\r\n      userId: userObject.userId,\r\n      testUrl: true,\r\n      testPaper: testPaperUrl,\r\n      testPaperId: paperId,\r\n    };\r\n\r\n    console.log(student_response, \"response\");\r\n\r\n    var that = this;\r\n\r\n    that.setState({ showLoading: true }, () => {\r\n      ApiService.testResponses(JSON.stringify(student_response))\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.status == \"success\") {\r\n            that.setState({\r\n              msg: res.message,\r\n              showLoading: false,\r\n              testPaperStatus: res.status,\r\n            });\r\n          } else {\r\n            that.setState({\r\n              showLoading: false,\r\n              testPaperStatus: undefined,\r\n            });\r\n            that.showAlert();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          that.setState({\r\n            showLoading: false,\r\n          });\r\n          that.showAlert();\r\n          console.log(err, err.stack); // an error occurred\r\n        });\r\n    });\r\n  }\r\n\r\n  checkLockdownBrowser() {\r\n    var response = {\r\n      userAgent: navigator.userAgent,\r\n      checkUserAgent: true,\r\n    };\r\n\r\n    let tenant = localStorage.getItem(\"tenant\") || Config.siteTitle;\r\n\r\n    var that = this;\r\n\r\n    console.log(response, \"response\");\r\n\r\n    ApiService.testResponses(JSON.stringify(response))\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status == \"failed\") {\r\n          that.setState({\r\n            showLockdownSection: true,\r\n            lockdownUrl: res.LockdownUrl,\r\n            sebUrl:\r\n              \"https://tuningfork-live.s3-ap-southeast-1.amazonaws.com/\" +\r\n              tenant +\r\n              \"/files/seb/edusquares.seb\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, err.stack);\r\n      });\r\n  }\r\n\r\n  checkProctorStatus(testId, lockdownBrowser) {\r\n    var blockMsg = this.state.blockMsg;\r\n    const { tenant, userObject } = this.state;\r\n    var student_response = {\r\n      tenant: tenant,\r\n      testId: testId,\r\n      userId: userObject.userId,\r\n      isTimer: true,\r\n      proctor: true,\r\n      proctorStatus: true,\r\n    };\r\n    console.log(student_response, \"response\");\r\n    var that = this;\r\n\r\n    ApiService.testResponses(JSON.stringify(student_response))\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        if (res.blanket_flag == \"BLOCK\") {\r\n          that.BlockAlert(blockMsg, lockdownBrowser);\r\n        } else if (res.blanket_flag == \"\" && res.block_test == true) {\r\n          that.BlockAlert(blockMsg, lockdownBrowser);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, err.stack); // an error occurred\r\n      });\r\n  }\r\n\r\n  testTimerCheck(testId, testTime, endDateTime, dayEndTime, dayStartTime) {\r\n    const { tenant, userObject } = this.state;\r\n    var student_response = {\r\n      tenant: tenant,\r\n      testId: testId,\r\n      userId: userObject.userId,\r\n      dayTimes: true,\r\n      endDateTime: endDateTime,\r\n      testTime: testTime,\r\n      dayStartTime: dayStartTime,\r\n      dayEndTime: dayEndTime,\r\n    };\r\n\r\n    var that = this;\r\n\r\n    console.log(student_response, \"response\");\r\n\r\n    ApiService.testResponses(JSON.stringify(student_response))\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.timeStatus) {\r\n          that.setState({\r\n            testTimeStatus: res.timeStatus,\r\n            effectiveTestTime: res.testTime,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, err.stack); // an error occurred\r\n      });\r\n  }\r\n\r\n  BlockAlert(msg, lockdownBrowser) {\r\n    swal({\r\n      text: msg,\r\n      icon: \"warning\",\r\n      button: \"Ok\",\r\n      allowOutsideClick: false,\r\n      closeOnClickOutside: false,\r\n      closeOnEsc: false,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        if (lockdownBrowser == true) {\r\n          window.location.href = \"/dashboard\";\r\n          //this.props.history.replace('/dashboard');\r\n        } else {\r\n          window.close();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  validatePassword() {\r\n    if (\r\n      (this.state.testObject?.testConfig?.studentLevelPasswordCheck ||\r\n        this.state.testObject?.testConfig?.testLevelPasswordCheck) &&\r\n      this.state.validatePwdStatus == false\r\n    ) {\r\n      this.setState({\r\n        showModal: true,\r\n      });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      showModal: false,\r\n    });\r\n  }\r\n\r\n  updateInput = (e) => {\r\n    let v = e.target.value;\r\n    let k = e.target.name;\r\n    let testPassword = { ...this.state.testPassword };\r\n    testPassword[k] = v;\r\n    this.setState({ testPassword });\r\n  };\r\n\r\n  renderModal() {\r\n    let { submitted, testPassword } = this.state;\r\n    //let CURRENT_PORTLET = JSON.parse(localStorage['portlet']);\r\n    let CURRENT_PORTLET = \"blue-full-card\";\r\n    return (\r\n      <>\r\n        <Modal\r\n          show={this.state.showModal}\r\n          size=\"sm\"\r\n          onHide={() => this.handleClose()}\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header\r\n            closeButton\r\n            className={`ilearn-plain-header text-white blue-full-card`}\r\n          >\r\n            <Modal.Title>\r\n              {\" \"}\r\n              <div>{this.state.modalTitle}</div>{\" \"}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form>\r\n              <Form.Group controlId=\"message\">\r\n                {this.state.testObject?.testConfig\r\n                  ?.studentLevelPasswordCheck === true ? (\r\n                  <>\r\n                    <Form.Label>Student Test Password</Form.Label>\r\n                    <div\r\n                      className={\r\n                        \"item-inner\" +\r\n                        (submitted && !testPassword.studentPassword\r\n                          ? \" has-error\"\r\n                          : \"\")\r\n                      }\r\n                    >\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"Password\"\r\n                        name=\"studentPassword\"\r\n                        onChange={this.updateInput}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ) : null}\r\n\r\n                {(this.state.testObject?.testConfig\r\n                  ?.studentLevelPasswordCheck === false &&\r\n                  this.state.testObject?.testConfig?.testLevelPasswordCheck) ||\r\n                (this.state.msg == \"test record exist\" &&\r\n                  this.state.testObject?.testConfig?.testLevelPasswordCheck ===\r\n                    true) ? (\r\n                  <>\r\n                    <br />\r\n                    <Form.Label>Test Master Password</Form.Label>\r\n                    <div\r\n                      className={\r\n                        \"item-inner\" +\r\n                        (submitted && !testPassword.testMasterPassword\r\n                          ? \" has-error\"\r\n                          : \"\")\r\n                      }\r\n                    >\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"Password\"\r\n                        name=\"testMasterPassword\"\r\n                        onChange={this.updateInput}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ) : null}\r\n              </Form.Group>\r\n            </Form>\r\n            {this.state.errorMessage && (\r\n              <div className=\"text-danger\">{this.state.errorMessage}</div>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-primary\"\r\n              onClick={() => this.validateTestPwd()}\r\n            >\r\n              Start Test\r\n            </button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n  validateTestPwd() {\r\n    let { testPassword } = this.state;\r\n    if (\r\n      this.state.testObject?.testConfig?.studentLevelPasswordCheck &&\r\n      this.state.testObject?.testConfig?.testLevelPasswordCheck &&\r\n      testPassword.studentPassword &&\r\n      (this.state.msg !== \"test record exist\" ||\r\n        (this.state.msg == \"test record exist\" &&\r\n          testPassword.testMasterPassword === this.state.testObject?.password))\r\n    ) {\r\n      this.studentLevelPasswordCheckApi(testPassword.studentPassword);\r\n    } else if (\r\n      this.state.testObject?.testConfig?.testLevelPasswordCheck === false &&\r\n      this.state.testObject?.testConfig?.studentLevelPasswordCheck &&\r\n      testPassword.studentPassword\r\n    ) {\r\n      this.studentLevelPasswordCheckApi(testPassword.studentPassword);\r\n    } else if (\r\n      this.state.testObject?.testConfig?.studentLevelPasswordCheck === false &&\r\n      this.state.testObject?.testConfig?.testLevelPasswordCheck === true &&\r\n      testPassword.testMasterPassword === this.state.testObject?.password\r\n    ) {\r\n      this.setState({\r\n        showLoading: false,\r\n        validatePwdStatus: true,\r\n      });\r\n      setTimeout(() => {\r\n        this.routeChange(\r\n          \"/TestPlayer/\" + this.state.testId,\r\n          0,\r\n          this.state.testCategory\r\n        );\r\n      }, 100);\r\n    } else if (\r\n      this.state.testObject?.testConfig?.testLevelPasswordCheck === true &&\r\n      testPassword.testMasterPassword !== this.state.testObject?.password\r\n    ) {\r\n      this.setState({\r\n        submitted: true,\r\n        errorMessage: \"Please enter valid test password\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submitted: true,\r\n        errorMessage: \"Please enter password\",\r\n      });\r\n    }\r\n  }\r\n\r\n  studentLevelPasswordCheckApi(studentPassword) {\r\n    this.setState({ submitted: true, showLoading: true }, () => {\r\n      ApiService.studentLevelPasswordCheck(\r\n        this.state.testId,\r\n        studentPassword\r\n      ).then((res) => {\r\n        if (res.data.type === 1) {\r\n          this.setState({\r\n            showLoading: false,\r\n            validatePwdStatus: true,\r\n          });\r\n          this.routeChange(\r\n            \"/TestPlayer/\" + this.state.testId,\r\n            0,\r\n            this.state.testCategory\r\n          );\r\n        } else {\r\n          this.setState({\r\n            showLoading: false,\r\n            errorMessage: res.data.message,\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  routeChange(path, endDate, testCategory) {\r\n    if (this.validatePassword()) {\r\n      let paramsString = this.props.location.search;\r\n      const params = new URLSearchParams(paramsString);\r\n      let lms = params.get(\"lms\") || 0;\r\n      let steps = params.get(\"steps\") || 0;\r\n      let testCategory2 = params.get(\"cat\") || testCategory;\r\n\r\n      if (this.state.testPaperStatus == undefined) {\r\n        this.showAlert();\r\n      } else {\r\n        this.props.history.replace({\r\n          pathname: path,\r\n          state: {\r\n            testEndDate: endDate,\r\n            testCategory: testCategory2,\r\n            lms: lms,\r\n            steps: steps,\r\n            resume: this.state.msg == \"test record exist\" ? true : false,\r\n            testUrl: this.state.testUrl,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  closeTest() {\r\n    window.close();\r\n  }\r\n\r\n  payCheck(testId, testObject) {\r\n    this.setState({ loading: true }, () => {\r\n      let payLoad = {\r\n        type: \"test\",\r\n        testId: testId,\r\n      };\r\n      ApiService.studentPayCheck(payLoad).then((res) => {\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        if (res.data.type == 2) {\r\n          const wrapper = document.createElement(\"div\");\r\n          wrapper.innerHTML = res.data.message;\r\n          swal({\r\n            content: wrapper,\r\n            icon: \"warning\",\r\n            button: \"Ok\",\r\n            allowOutsideClick: false,\r\n            closeOnClickOutside: false,\r\n            className: \"orange-card\",\r\n          }).then((willDelete) => {\r\n            if (willDelete) {\r\n              window.close();\r\n            }\r\n          });\r\n        } else {\r\n          this.setState({\r\n            testObject: testObject,\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  downloadTest(testPaperUrl, randomTest) {\r\n    let testId = this.props.match.params.id;\r\n    var d = new Date();\r\n    var rand = d.getTime();\r\n    let tenant = localStorage.getItem(\"tenant\") || Config.siteTitle;\r\n    //let tenant = 'isbat_testing';\r\n    var testobj = \"\";\r\n    if (testPaperUrl) {\r\n      testobj = testPaperUrl;\r\n    } else if (randomTest) {\r\n      testobj =\r\n        \"https://tuningfork-\" +\r\n        Config.siteMode +\r\n        \".s3.amazonaws.com/\" +\r\n        tenant +\r\n        \"/uploads/testPapers/\" +\r\n        testId +\r\n        \"/papers/\" +\r\n        randomTest +\r\n        \".json\";\r\n    } else {\r\n      testobj =\r\n        \"https://tuningfork-\" +\r\n        Config.siteMode +\r\n        \".s3.amazonaws.com/\" +\r\n        tenant +\r\n        \"/uploads/testPapers/\" +\r\n        testId +\r\n        \"/\" +\r\n        testId +\r\n        \".json\";\r\n    }\r\n\r\n    this.setState({ showLoading: true }, () => {\r\n      ApiService.fetchTestJson(testobj + \"?id=\" + rand)\r\n        .then(\r\n          (res) => {\r\n            //console.log(JSON.stringify(res));\r\n            let testObject = res.data;\r\n            this.setState({\r\n              showLoading: false,\r\n            });\r\n\r\n            if (testObject?.testPapers?.length > 0) {\r\n              let testPapers = testObject.testPapers;\r\n              let randomTestId = Math.floor(Math.random() * testPapers.length);\r\n              this.downloadTest(null, testPapers[randomTestId]);\r\n            } else {\r\n              if (testObject?.testConfig?.webCamProctoring?.enabled == true) {\r\n                this.checkProctorStatus(\r\n                  testId,\r\n                  testObject?.testConfig?.lockdownBrowser\r\n                );\r\n\r\n                /** profile update */\r\n                const userObject = JSON.parse(localStorage.getItem(\"user\"));\r\n                const url = userObject.photoPath;\r\n                let userId = userObject.userId;\r\n                //const url = '';\r\n                var referencePhoto = \"\";\r\n                var referencePhotoBucketName = \"\";\r\n                var tenant_userId = tenant + \"_\" + userId;\r\n                if (url) {\r\n                  var match = url.match(\r\n                    /^https?:\\/\\/([^.]+).s3.amazonaws.com\\/?(.*?)$/\r\n                  );\r\n                  if (match) {\r\n                    referencePhoto = match[2];\r\n                    referencePhotoBucketName = match[1];\r\n                    this.dynamodbUpdateProfile(\r\n                      tenant_userId,\r\n                      referencePhoto,\r\n                      referencePhotoBucketName\r\n                    );\r\n                  }\r\n                } else {\r\n                  this.BlockAlert(\r\n                    \"Dear Student you don't have profile image. Please contact the Exam Department for further assistance.\",\r\n                    testObject?.testConfig?.lockdownBrowser\r\n                  );\r\n                }\r\n                /** profile update */\r\n              }\r\n\r\n              if (\r\n                testObject?.testConfig != undefined &&\r\n                testObject.testConfig.dayStartTime != undefined &&\r\n                testObject.testConfig.dayEndTime != undefined\r\n              ) {\r\n                this.testTimerCheck(\r\n                  testId,\r\n                  testObject?.testTime,\r\n                  testObject?.endDateTime,\r\n                  testObject.testConfig.dayEndTime,\r\n                  testObject.testConfig.dayStartTime\r\n                );\r\n              }\r\n\r\n              if (\r\n                testObject?.testConfig?.checkForPaymentStatusBeforeStart == true\r\n              ) {\r\n                this.payCheck(testId, testObject);\r\n              }\r\n\r\n              this.setState({\r\n                testObject: testObject,\r\n                testUrl: testobj,\r\n              });\r\n\r\n              if (this.state.testResume == 0) {\r\n                this.dynamodbUpdateUrl(testobj, randomTest);\r\n              } else if (\r\n                this.state.testResume == 1 &&\r\n                this.state.testPaperStatus == undefined\r\n              ) {\r\n                this.dynamodbUpdateUrl(testobj, randomTest);\r\n              }\r\n\r\n              if (testObject?.testConfig?.lockdownBrowser == true) {\r\n                this.checkLockdownBrowser();\r\n              }\r\n            }\r\n          }\r\n          // ,error => {\r\n          // }\r\n        )\r\n        .catch((err) => {\r\n          const testDate = JSON.parse(sessionStorage.getItem(\"testDate\"));\r\n          const testTime = JSON.parse(sessionStorage.getItem(\"testTime\"));\r\n          console.log(err.response.status, err);\r\n          this.setState({\r\n            showLoading: false,\r\n          });\r\n          if (err.response.status === 404) {\r\n            this.BlockAlert(\r\n              \"Online test not available. Please contact administrator\",\r\n              false\r\n            );\r\n          }\r\n          if (err.response.status === 403) {\r\n            this.BlockAlert(\r\n              `Hey! Looks like you are a  ahead of the scheduled time. \\n Please come back on ${testDate} ${testTime} and take the test!`,\r\n              false\r\n            );\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"test-player\">\r\n        <Container id=\"container\" fluid>\r\n          <div className=\"mainView\">\r\n            <Header title={this.state.testObject.name} />\r\n            <Row>{this.state.testObject ? this.renderInstructions() : \"\"}</Row>\r\n            {this.renderLoader()}\r\n          </div>\r\n        </Container>\r\n        {this.state.testObject?.testConfig?.studentLevelPasswordCheck ||\r\n        this.state.testObject?.testConfig?.testLevelPasswordCheck\r\n          ? this.renderModal()\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderInstructions() {\r\n    const { testObject } = this.state;\r\n    let isMobile = Utils.isMobileDevice();\r\n    return (\r\n      <div className=\"col-md-12 col-sm-12 col-xs-12\">\r\n        <div className=\"test_instructions\">\r\n          {this.state.showLockdownSection === false ? (\r\n            <div className=\"qustion_div\">\r\n              {this.state.testTimeStatus == \"timeout\" ? (\r\n                <h6 className=\"error-message\">\r\n                  Note : Your test is timed out. <br /> Please come tomorrow to\r\n                  take the test.{\" \"}\r\n                </h6>\r\n              ) : this.state.testTimeStatus == \"partialtimeout\" ? (\r\n                <h6 className=\"error-message\">\r\n                  Note : Your test time is less than{\" \"}\r\n                  {this.state.effectiveTestTime} minuts. <br />\r\n                  Please come tomorrow to take the test.{\" \"}\r\n                </h6>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {isMobile === true ? (\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html:\r\n                      testObject.instructions || testObject.webInstructions,\r\n                  }}\r\n                ></div>\r\n              ) : (\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html:\r\n                      testObject.webInstructions || testObject.instructions,\r\n                  }}\r\n                ></div>\r\n              )}\r\n\r\n              <br />\r\n              <div className=\"center\">\r\n                {this.state.testTimeStatus == \"timein\" ? (\r\n                  <button\r\n                    className=\"btn btn-primary text-center\"\r\n                    onClick={() =>\r\n                      this.routeChange(\r\n                        \"/TestPlayer/\" + this.state.testId,\r\n                        0,\r\n                        this.state.testCategory\r\n                      )\r\n                    }\r\n                  >\r\n                    {this.state.msg == \"test record exist\"\r\n                      ? \"Resume Test\"\r\n                      : \"Start Test\"}{\" \"}\r\n                    &nbsp;\r\n                    <FontAwesomeIcon icon={faPlay} />\r\n                  </button>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                &nbsp;{\" \"}\r\n                <button\r\n                  className=\"btn btn-primary text-center\"\r\n                  onClick={() => this.closeTest()}\r\n                >\r\n                  Cancel <FontAwesomeIcon icon={faTimes} />\r\n                </button>\r\n              </div>\r\n              <div className=\"center\">\r\n                <br /> <br /> <br /> <br /> <br /> <br />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"locakdown\">\r\n              <div className=\"panel panel-default\">\r\n                <div className=\"panel-heading\">\r\n                  Lockdown Exam Browser Required\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                  <br />\r\n                  <h5 className=\"text-center\">\r\n                    You need to take this Test from Lockdown Exam Browser.\r\n                  </h5>\r\n                  <br />\r\n                  <a href={this.state.lockdownUrl} target=\"_blank\">\r\n                    <button type=\"button\" className=\"btn btn-success\">\r\n                      <img src={lock_icon} /> Download Lockdown Exam Browser\r\n                    </button>\r\n                  </a>\r\n                  <a href={this.state.sebUrl} target=\"_blank\">\r\n                    <button type=\"button\" className=\"btn btn-warning\">\r\n                      <img src={test_icon} /> Download Exam Launcher\r\n                    </button>\r\n                  </a>\r\n                </div>\r\n                <br />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderLoader = () => {\r\n    const _loadingText = \"Please wait...\";\r\n    return (\r\n      <ILoader\r\n        loadingText={_loadingText}\r\n        isShow={this.state.showLoading}\r\n      ></ILoader>\r\n    );\r\n  };\r\n}\r\n\r\nexport default TestInstructions;\r\n"]},"metadata":{},"sourceType":"module"}