{"ast":null,"code":"import axios from 'axios';\nimport UserService from './UserService';\nconst instance = axios.create();\ninstance.interceptors.request.use(config => {\n  const token = UserService.getToken();\n\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  return config;\n}, error => Promise.reject(error));\nexport default instance;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/_services/axiosilearnWrapper.js"],"names":["axios","UserService","instance","create","interceptors","request","use","config","token","getToken","headers","Authorization","error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEE,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,EAAjB;AAEAD,QAAQ,CAACE,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACEC,MAAM,IAAI;AACR,QAAMC,KAAK,GAAGP,WAAW,CAACQ,QAAZ,EAAd;;AACA,MAAID,KAAJ,EAAW;AACTD,IAAAA,MAAM,CAACG,OAAP,CAAeC,aAAf,GAAgC,UAASH,KAAM,EAA/C;AACD;;AACD,SAAOD,MAAP;AACD,CAPH,EAQEK,KAAK,IAAIC,OAAO,CAACC,MAAR,CAAeF,KAAf,CARX;AAWA,eAAeV,QAAf","sourcesContent":["import axios from 'axios';\r\nimport UserService from './UserService'\r\n\r\n  const instance = axios.create();\r\n  \r\n  instance.interceptors.request.use(\r\n    config => {\r\n      const token = UserService.getToken();\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n      return config;\r\n    },\r\n    error => Promise.reject(error)\r\n  );\r\n  \r\n  export default instance;"]},"metadata":{},"sourceType":"module"}