{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\exam-time-table\\\\ExamTimeTable.jsx\";\nimport React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport ApiService from \"../../_services/ApiService\";\nimport { ILoader } from './../../_components/iloader/iloader';\nimport list from \"../../_assets/imgs/calendar.svg\";\nimport styles from \"./components/style.css\";\nimport { ExamList } from \"./ExamList\";\nimport queryString from 'query-string';\nimport Utils from '../../_helpers/utils'; // import tile from '../discussion/images/tile.svg'\n\nimport examtimetable_icon from './components/examtimetable.png';\n\nclass ExamTimeTable extends Component {\n  constructor(props) {\n    var _this$props, _this$props$location, _this$props$location$;\n\n    super(props);\n    this.state = {\n      message: null,\n      showLoading: true,\n      portlet: (_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$location = _this$props.location) === null || _this$props$location === void 0 ? void 0 : (_this$props$location$ = _this$props$location.state) === null || _this$props$location$ === void 0 ? void 0 : _this$props$location$.portlet,\n      examList: '',\n      id: ''\n    };\n  }\n\n  componentDidMount() {\n    this.examTable();\n  }\n\n  examTable() {\n    let params = queryString.parse(this.props.location.search);\n    this.setState({\n      showLoading: true\n    }, () => {\n      console.log(params.id);\n      ApiService.examTimetable(params.id).then(res => {\n        this.setState({\n          showLoading: false,\n          examList: res.data\n        });\n        console.log(this.state.examList);\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, this.renderHeader(), this.renderBody(this.state.examList))));\n  }\n\n  renderHeader() {\n    //console.log(\"DiscussionBoard -> renderHeader()... \");\n    let isMobile = Utils.isMobileDevice();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `module-header-inner green-card`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: this.props.history.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"img\", {\n      src: examtimetable_icon,\n      alt: \"exam timetable icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"arrow-set\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Exam Timetable\")));\n  }\n\n  renderBody(examList) {\n    console.log(this.state.examList);\n    return this.state.showLoading ? this.renderLoader() : /*#__PURE__*/React.createElement(React.Fragment, null, this.state.examList.id ? /*#__PURE__*/React.createElement(\"table\", {\n      className: styles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"green-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, \"Name\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, examList.timeTableTemplates.map(row => {\n      console.log(row);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"whole\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 49\n        }\n      }, row.dayOfMonth)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"day\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 49\n        }\n      }, row.dayOfweek), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"smy\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 49\n        }\n      }, row.shortenedMonthYear))), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"test\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"time \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 45\n        }\n      }, row.startTime, \" - \", row.endTime), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tstn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 45\n        }\n      }, row.eventName)));\n    }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"noexam\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, \"Oops! Could not fetch this exam timetable\")));\n  }\n\n  renderLoader() {\n    const _loadingText = 'Please wait...';\n    return /*#__PURE__*/React.createElement(ILoader, {\n      loadingText: _loadingText,\n      isShow: this.state.showLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport { ExamTimeTable };","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/exam-time-table/ExamTimeTable.jsx"],"names":["React","Component","Container","FontAwesomeIcon","faArrowLeft","ApiService","ILoader","styles","ExamList","queryString","Utils","examtimetable_icon","ExamTimeTable","constructor","props","state","message","showLoading","portlet","location","examList","id","componentDidMount","examTable","params","parse","search","setState","console","log","examTimetable","then","res","data","render","renderHeader","renderBody","isMobile","isMobileDevice","history","goBack","renderLoader","timeTableTemplates","map","row","dayOfMonth","dayOfweek","shortenedMonthYear","startTime","endTime","eventName","_loadingText"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\nimport list from \"../../_assets/imgs/calendar.svg\";\r\nimport styles from \"./components/style.css\"\r\nimport { ExamList } from \"./ExamList\";\r\nimport queryString from 'query-string';\r\nimport Utils from '../../_helpers/utils'\r\n// import tile from '../discussion/images/tile.svg'\r\nimport examtimetable_icon from './components/examtimetable.png'\r\n\r\nclass ExamTimeTable extends Component{ \r\n\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: null,\r\n            showLoading: true,\r\n            portlet: this.props?.location?.state?.portlet,\r\n            examList : '',\r\n            id: ''\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.examTable();\r\n    }\r\n\r\n\r\n    examTable() {\r\n        let params = queryString.parse(this.props.location.search)\r\n        this.setState({ showLoading: true }, () => {\r\n            console.log(params.id)\r\n          ApiService.examTimetable(params.id)\r\n          .then((res) => {\r\n              this.setState({\r\n                showLoading: false,\r\n                examList : res.data,\r\n              });\r\n            console.log(this.state.examList)\r\n          });\r\n        });\t\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (  \r\n            <>\r\n                <div>\r\n                    <Container fluid >\r\n                        {this.renderHeader()}\r\n                        {this.renderBody(this.state.examList)}\r\n                        {/* {this.renderLoader()}                     */}\r\n                    </Container>\r\n                </div>\r\n            </>           \r\n              \r\n        );       \r\n    }\r\n\r\n    renderHeader() {\r\n        //console.log(\"DiscussionBoard -> renderHeader()... \");\r\n        let isMobile = Utils.isMobileDevice()\r\n        return (\r\n          <div className='module-header'>\r\n            <div className={`module-header-inner green-card`}>\r\n              <div className='back'>\r\n                <FontAwesomeIcon\r\n                  icon={faArrowLeft}\r\n                  onClick={this.props.history.goBack}\r\n                />\r\n              </div>\r\n              <img src={examtimetable_icon} alt='exam timetable icon' />\r\n            </div>\r\n            <div className='arrow-set'> \r\n                <h4>Exam Timetable</h4>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    \r\n    renderBody(examList) {\r\n        console.log(this.state.examList)\r\n        return (\r\n            this.state.showLoading ? this.renderLoader() : \r\n            <>\r\n            {this.state.examList.id?\r\n                <table className={styles}>\r\n                    <thead>\r\n                        <tr className=\"green-card\">\r\n                        <th >Date</th>\r\n                        <th className='left'>Name</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {examList.timeTableTemplates.map(\r\n                            (row)=>{\r\n                                console.log(row)\r\n                                return(\r\n                                    <tr >\r\n                                        <td className='whole' >\r\n                                            <div className='inl'>\r\n                                                <div className='date'>{row.dayOfMonth}</div>\r\n                                            </div>\r\n                                            <div className='inl'>\r\n                                                <div className='day'>{row.dayOfweek}</div>\r\n                                                <div className='smy' >{row.shortenedMonthYear}</div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td className='test'>\r\n                                            <span className='time '>{row.startTime} - {row.endTime}</span>\r\n                                            <div className='tstn'>{row.eventName}</div>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        )}\r\n                    </tbody>\r\n                </table>:<>\r\n                <div className=\"noexam\">Oops! Could not fetch this exam timetable</div>\r\n                </>}\r\n            </>\r\n        )\r\n    }\r\n    \r\n    renderLoader() {\r\n        const _loadingText = 'Please wait...';\r\n        return (\r\n            <ILoader\r\n                loadingText={_loadingText}\r\n                isShow={this.state.showLoading}\r\n            >\r\n            </ILoader>\r\n        )\r\n    }\r\n\r\n}\r\n  \r\nexport {ExamTimeTable};"]},"metadata":{},"sourceType":"module"}