{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\exam-time-table\\\\ExamList.jsx\";\nimport React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport ApiService from \"../../_services/ApiService\";\nimport { ILoader } from './../../_components/iloader/iloader';\nimport list from \"../../_assets/imgs/calendar.svg\";\nimport styles from \"./components/style.css\"; // import JsonData from './components/data.json'\n\nimport { ExamTimeTable } from './ExamTimeTable';\nimport Utils from '../../_helpers/utils';\nimport tile from \"../discussion/images/tile.svg\";\nimport examtimetable_icon from './components/examtimetable.png';\nimport view_icon from './components/view_icon.png';\nimport upcoming_icon from \"../../_assets/imgs/edit.png\";\nimport completed_icon from \"../../_assets/imgs/verify.png\";\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\n\nclass ExamList extends Component {\n  constructor(props) {\n    var _this$props, _this$props$location, _this$props$location$;\n\n    super(props);\n    this.state = {\n      message: null,\n      showLoading: true,\n      portlet: (_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$location = _this$props.location) === null || _this$props$location === void 0 ? void 0 : (_this$props$location$ = _this$props$location.state) === null || _this$props$location$ === void 0 ? void 0 : _this$props$location$.portlet,\n      examList: '',\n      id: '',\n      upcomingexam: [],\n      prevExam: []\n    };\n  }\n\n  componentDidMount() {\n    this.examTable();\n  }\n\n  examTable() {\n    this.setState({\n      showLoading: true\n    }, () => {\n      ApiService.examList().then(res => {\n        this.setState({\n          showLoading: false,\n          examList: res.data,\n          id: res.data.id\n        }, () => {\n          this.countexam(this.examList);\n        });\n      });\n    });\n  }\n\n  countexam(examList) {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n    var yyyy = today.getFullYear();\n    examList === null || examList === void 0 ? void 0 : examList.timeTables.map(row => {\n      if (row.endDate.slice(8, 12) > yyyy || row.endDate.slice(8, 12) == yyyy && this.monthConvert(row.endDate.slice(0, 3)) > mm || row.endDate.slice(8, 12) == yyyy && this.monthConvert(row.endDate.slice(0, 3)) == mm && row.endDate.slice(4, 6) >= dd) {\n        this.state.upcomingexam.push(row);\n      } else {\n        this.state.prevExam.push(row);\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, this.renderHeader(), this.state.examList && this.renderBody(this.state.examList))));\n  }\n\n  monthConvert(month) {\n    if (month == 'Jan') return '01';else if (month == 'Feb') return '02';else if (month == 'Mar') return '03';else if (month == 'Apr') return '04';else if (month == 'May') return '05';else if (month == 'Jun') return '06';else if (month == 'Jul') return '07';else if (month == 'Aug') return '08';else if (month == 'Sep') return '09';else if (month == 'Oct') return '10';else if (month == 'Nov') return '11';else if (month == 'Dec') return '12';\n  }\n\n  renderHeader() {\n    let isMobile = Utils.isMobileDevice();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `module-header-inner ${this.props.location.state.portlet.class}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: this.props.history.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"img\", {\n      src: examtimetable_icon,\n      alt: \"exam timetable icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"arrow-set\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, this.state.portlet.name)));\n  }\n\n  renderBody(examList) {\n    var _examList$timeTables;\n\n    console.log(examList);\n    const portlet = this.state.portlet;\n    const upcoming = /*#__PURE__*/React.createElement(\"img\", {\n      src: upcoming_icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 26\n      }\n    });\n    const completed = /*#__PURE__*/React.createElement(\"img\", {\n      src: completed_icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 27\n      }\n    });\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0\n\n    var yyyy = today.getFullYear();\n\n    if (examList == null) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, \"No Record Found\");\n    }\n\n    if ((examList === null || examList === void 0 ? void 0 : (_examList$timeTables = examList.timeTables) === null || _examList$timeTables === void 0 ? void 0 : _examList$timeTables.length) !== 0) {\n      return this.state.showLoading ? this.renderLoader() : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Tabs, {\n        defaultActiveKey: \"Upcoming\",\n        id: \"uncontrolled-tab-example\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Tab, {\n        eventKey: \"Upcoming\",\n        className: \"upcoming\",\n        title: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 78\n          }\n        }, upcoming, \" Upcoming\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }\n      }, this.state.upcomingexam.length > 1 ? /*#__PURE__*/React.createElement(\"table\", {\n        className: styles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"green-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        className: \"col1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 37\n        }\n      }, \"Dates\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"left col2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 37\n        }\n      }, \"Name\"))), examList === null || examList === void 0 ? void 0 : examList.timeTables.map(row => {\n        if (row.endDate.slice(8, 12) > yyyy || row.endDate.slice(8, 12) == yyyy && this.monthConvert(row.endDate.slice(0, 3)) > mm || row.endDate.slice(8, 12) == yyyy && this.monthConvert(row.endDate.slice(0, 3)) == mm && row.endDate.slice(4, 6) >= dd) {\n          return /*#__PURE__*/React.createElement(\"tbody\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"tr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            className: \"whole\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"bold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 57\n            }\n          }, row.startDate), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"small\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 57\n            }\n          }, \"to\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"bold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 57\n            }\n          }, row.endDate)), /*#__PURE__*/React.createElement(\"td\", {\n            className: \"test\",\n            onClick: () => this.handleClick(row.id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 57\n            }\n          }, row.name, \"\\xA0\\xA0\\xA0\\xA0\\xA0\"), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"view\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 57\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: view_icon,\n            alt: \"view icon\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 61\n            }\n          }), \"\\xA0View\\xA0\"))));\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"noexam\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 29\n        }\n      }, \"Hooray! No upcoming exams scheduled\"))), /*#__PURE__*/React.createElement(Tab, {\n        eventKey: \"Completed\",\n        className: \"completed\",\n        title: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 80\n          }\n        }, completed, \" Completed\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }\n      }, this.state.prevExam ? /*#__PURE__*/React.createElement(\"table\", {\n        className: styles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"green-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 33\n        }\n      }, \"Dates\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 33\n        }\n      }, \"Name\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 29\n        }\n      }, examList === null || examList === void 0 ? void 0 : examList.timeTables.map(row => {\n        if (row.endDate.slice(8, 12) < yyyy || row.endDate.slice(8, 12) == yyyy && this.monthConvert(row.endDate.slice(0, 3)) < mm || row.endDate.slice(8, 12) == yyyy && this.monthConvert(row.endDate.slice(0, 3)) == mm && row.endDate.slice(4, 6) < dd) {\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            className: \"whole\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"bold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 53\n            }\n          }, row.startDate), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"small\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 53\n            }\n          }, \"to\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"bold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 53\n            }\n          }, row.endDate)), /*#__PURE__*/React.createElement(\"td\", {\n            className: \"test\",\n            onClick: () => this.handleClick(row.id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 53\n            }\n          }, row.name, \"\\xA0\\xA0\\xA0\\xA0\\xA0\"), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"view\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: view_icon,\n            alt: \"view icon\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 57\n            }\n          }), \"\\xA0View\\xA0\")));\n        }\n      }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"noexam\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }\n      }, \"No exams completed yet\"))))));\n    } else {//this.handleClick(examList.timeTables[0].id)\n    }\n  }\n\n  renderLoader() {\n    const _loadingText = 'Please wait...';\n    return /*#__PURE__*/React.createElement(ILoader, {\n      loadingText: _loadingText,\n      isShow: this.state.showLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    });\n  }\n\n  handleClick(value) {\n    console.log(value);\n\n    /*#__PURE__*/\n    React.createElement(ExamTimeTable, {\n      id: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }\n    });\n    window.open(\"/examtimetable?id=\" + value, \"_self\");\n  }\n\n}\n\nexport { ExamList };","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/exam-time-table/ExamList.jsx"],"names":["React","Component","Container","FontAwesomeIcon","faArrowLeft","ApiService","ILoader","styles","ExamTimeTable","Utils","examtimetable_icon","view_icon","upcoming_icon","completed_icon","Tabs","Tab","ExamList","constructor","props","state","message","showLoading","portlet","location","examList","id","upcomingexam","prevExam","componentDidMount","examTable","setState","then","res","data","countexam","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","timeTables","map","row","endDate","slice","monthConvert","push","render","renderHeader","renderBody","month","isMobile","isMobileDevice","class","history","goBack","name","console","log","upcoming","completed","length","renderLoader","startDate","handleClick","_loadingText","value","window","open"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\nimport list from \"../../_assets/imgs/calendar.svg\";\r\nimport styles from \"./components/style.css\"\r\n// import JsonData from './components/data.json'\r\nimport { ExamTimeTable } from './ExamTimeTable';\r\nimport Utils from '../../_helpers/utils'\r\nimport tile from '../discussion/images/tile.svg'\r\nimport examtimetable_icon from './components/examtimetable.png'\r\nimport view_icon from './components/view_icon.png'\r\nimport upcoming_icon from \"../../_assets/imgs/edit.png\";\r\nimport completed_icon from \"../../_assets/imgs/verify.png\";\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\n\r\nclass ExamList extends Component { \r\n\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: null,\r\n            showLoading: true,\r\n            portlet: this.props?.location?.state?.portlet,\r\n            examList : '',\r\n            id:'',\r\n            upcomingexam:[],\r\n            prevExam: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.examTable();\r\n    }\r\n\r\n    examTable() {\r\n        this.setState({ showLoading: true }, () => {\r\n          ApiService.examList()\r\n          .then((res) => {\r\n              this.setState({\r\n                showLoading: false,\r\n                examList : res.data,\r\n                id: res.data.id\r\n\r\n            },()=>{\r\n                this.countexam(this.examList)\r\n            });\r\n\r\n          });\r\n        });\t\r\n    }\r\n\r\n    countexam(examList){\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        examList?.timeTables.map(\r\n            (row)=>{\r\n                if(row.endDate.slice(8,12)>yyyy || row.endDate.slice(8,12)==yyyy && this.monthConvert(row.endDate.slice(0,3))>mm || row.endDate.slice(8,12)==yyyy && this.monthConvert(row.endDate.slice(0,3))==mm && row.endDate.slice(4,6)>=dd){\r\n                    this.state.upcomingexam.push(row);\r\n                }\r\n                else\r\n                {\r\n                    this.state.prevExam.push(row);\r\n                }\r\n            })         \r\n    }\r\n\r\n    render() {\r\n        return (  \r\n            <>\r\n                <div>\r\n                    <Container fluid >\r\n                        {this.renderHeader()}\r\n                        { this.state.examList && this.renderBody(this.state.examList) }\r\n                        {/* {this.renderLoader()}                     */}\r\n                    </Container>\r\n                </div>\r\n            </>           \r\n              \r\n        );       \r\n    }\r\n\r\n    monthConvert(month){\r\n        if(month=='Jan')\r\n            return '01';\r\n        else if(month=='Feb')\r\n            return '02';\r\n        else if(month=='Mar')\r\n            return '03';\r\n        else if(month=='Apr')\r\n            return '04';\r\n        else if(month=='May')\r\n            return '05';\r\n        else if(month=='Jun')\r\n            return '06';\r\n        else if(month=='Jul')\r\n            return '07';\r\n        else if(month=='Aug')\r\n            return '08';\r\n        else if(month=='Sep')\r\n            return '09';\r\n        else if(month=='Oct')\r\n            return '10';\r\n        else if(month=='Nov')\r\n            return '11';\r\n        else if(month=='Dec')\r\n            return '12';\r\n    }\r\n\r\n    renderHeader() {\r\n        let isMobile = Utils.isMobileDevice()\r\n        return (\r\n          <div className='module-header'>\r\n            <div className={`module-header-inner ${this.props.location.state.portlet.class}`}>\r\n              <div className='back'>\r\n                <FontAwesomeIcon\r\n                  icon={faArrowLeft}\r\n                  onClick={this.props.history.goBack}\r\n                />\r\n              </div>\r\n              <img src={examtimetable_icon} alt='exam timetable icon' />\r\n            </div>\r\n            <div className='arrow-set'>\r\n                <h4>{this.state.portlet.name}</h4>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    \r\n    renderBody(examList) {\r\n        console.log(examList)\r\n        const portlet = this.state.portlet;  \r\n        const upcoming = <img src={upcoming_icon} />  \r\n        const completed = <img src={completed_icon} />\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0\r\n        var yyyy = today.getFullYear();\r\n        if(examList==null)\r\n        {\r\n            return(\r\n                <h1>No Record Found</h1>\r\n            )\r\n        }\r\n\r\n        if(examList?.timeTables?.length !== 0 )\r\n        {\r\n            return (\r\n                \r\n                this.state.showLoading ? this.renderLoader() : \r\n                <>\r\n                <div>\r\n                    <Tabs defaultActiveKey=\"Upcoming\" id=\"uncontrolled-tab-example\">\r\n                        <Tab eventKey=\"Upcoming\" className=\"upcoming\" title={<span>{upcoming} Upcoming</span>}>\r\n                            {this.state.upcomingexam.length>1?   \r\n                            <table className={styles}> \r\n                                <thead>\r\n                                    <tr className=\"green-card\">\r\n                                    <th className=\"col1\">Dates</th>\r\n                                    <th className='left col2'>Name</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                \r\n                                    {examList?.timeTables.map(\r\n                                        (row)=>{\r\n                                            if(row.endDate.slice(8,12)>yyyy || row.endDate.slice(8,12)==yyyy && this.monthConvert(row.endDate.slice(0,3))>mm || row.endDate.slice(8,12)==yyyy && this.monthConvert(row.endDate.slice(0,3))==mm && row.endDate.slice(4,6)>=dd){\r\n                                            return(\r\n                                                <tbody>\r\n                                                <tr>\r\n                                                    <td className='whole'>\r\n                                                        <div className='bold'>{row.startDate}</div>\r\n                                                        <div className='small'>to</div>\r\n                                                        <div className='bold'>{row.endDate}</div>\r\n                                                    </td>\r\n                                                    <td className='test' onClick={() => this.handleClick(row.id)} >\r\n                                                        <span>{row.name}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                                                        <span className=\"view\">\r\n                                                            <img src={view_icon} alt='view icon' />&nbsp;View&nbsp;\r\n                                                        </span>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                </tbody>\r\n                                            )}\r\n                                        }\r\n                                    )}\r\n                                \r\n                            </table>:<>\r\n                            <div className=\"noexam\">\r\n                                Hooray! No upcoming exams scheduled\r\n                            </div>\r\n                            </>}\r\n                        </Tab>\r\n                        <Tab eventKey=\"Completed\" className=\"completed\" title={<span>{completed} Completed</span>}>\r\n                        {this.state.prevExam? \r\n                        <table className={styles}>\r\n                            <thead>\r\n                                <tr className=\"green-card\">\r\n                                <th>Dates</th>\r\n                                <th className='left'>Name</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {examList?.timeTables.map(\r\n                                    (row)=>{\r\n                                        if(row.endDate.slice(8,12)<yyyy || row.endDate.slice(8,12)==yyyy && this.monthConvert(row.endDate.slice(0,3))<mm || row.endDate.slice(8,12)==yyyy && this.monthConvert(row.endDate.slice(0,3))==mm && row.endDate.slice(4,6)<dd){\r\n                                        return(\r\n                                            <tr>\r\n                                                <td className='whole'>\r\n                                                    <div className='bold'>{row.startDate}</div>\r\n                                                    <div className='small'>to</div>\r\n                                                    <div className='bold'>{row.endDate}</div>\r\n                                                </td>\r\n                                                <td className='test' onClick={() => this.handleClick(row.id)} >\r\n                                                    <span>{row.name}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                                                    <span className=\"view\">\r\n                                                        <img src={view_icon} alt='view icon' />&nbsp;View&nbsp;\r\n                                                    </span>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                    }\r\n                                )}\r\n                            </tbody>\r\n                        </table>:<>\r\n                        <div className=\"noexam\">\r\n                                No exams completed yet\r\n                        </div>\r\n                        </>}\r\n                    </Tab>\r\n                </Tabs> \r\n            </div>\r\n        </>)\r\n        } else {\r\n            //this.handleClick(examList.timeTables[0].id)\r\n        }\r\n    }\r\n    \r\n    renderLoader() {\r\n        const _loadingText = 'Please wait...';\r\n        return (\r\n            <ILoader\r\n                loadingText={_loadingText}\r\n                isShow={this.state.showLoading}\r\n                >\r\n            </ILoader>\r\n        )\r\n    }\r\n    \r\n    handleClick(value){\r\n        console.log(value);\r\n        <ExamTimeTable id={value}/>\r\n        window.open(\"/examtimetable?id=\"+value,\"_self\");\r\n    }\r\n\r\n}\r\n  \r\nexport {ExamList};"]},"metadata":{},"sourceType":"module"}