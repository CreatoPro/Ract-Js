{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _pathWebpack = _interopRequireDefault(require(\"path-webpack\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Creates a Path object for parsing and manipulation of a path strings\n *\n * Uses a polyfill for Nodejs path: https://nodejs.org/api/path.html\n * @param\t{string} pathString\ta url string (relative or absolute)\n * @class\n */\n\n\nclass Path {\n  constructor(pathString) {\n    var protocol;\n    var parsed;\n    protocol = pathString.indexOf(\"://\");\n\n    if (protocol > -1) {\n      pathString = new URL(pathString).pathname;\n    }\n\n    parsed = this.parse(pathString);\n    this.path = pathString;\n\n    if (this.isDirectory(pathString)) {\n      this.directory = pathString;\n    } else {\n      this.directory = parsed.dir + \"/\";\n    }\n\n    this.filename = parsed.base;\n    this.extension = parsed.ext.slice(1);\n  }\n  /**\n   * Parse the path: https://nodejs.org/api/path.html#path_path_parse_path\n   * @param\t{string} what\n   * @returns {object}\n   */\n\n\n  parse(what) {\n    return _pathWebpack.default.parse(what);\n  }\n  /**\n   * @param\t{string} what\n   * @returns {boolean}\n   */\n\n\n  isAbsolute(what) {\n    return _pathWebpack.default.isAbsolute(what || this.path);\n  }\n  /**\n   * Check if path ends with a directory\n   * @param\t{string} what\n   * @returns {boolean}\n   */\n\n\n  isDirectory(what) {\n    return what.charAt(what.length - 1) === \"/\";\n  }\n  /**\n   * Resolve a path against the directory of the Path\n   *\n   * https://nodejs.org/api/path.html#path_path_resolve_paths\n   * @param\t{string} what\n   * @returns {string} resolved\n   */\n\n\n  resolve(what) {\n    return _pathWebpack.default.resolve(this.directory, what);\n  }\n  /**\n   * Resolve a path relative to the directory of the Path\n   *\n   * https://nodejs.org/api/path.html#path_path_relative_from_to\n   * @param\t{string} what\n   * @returns {string} relative\n   */\n\n\n  relative(what) {\n    var isAbsolute = what && what.indexOf(\"://\") > -1;\n\n    if (isAbsolute) {\n      return what;\n    }\n\n    return _pathWebpack.default.relative(this.directory, what);\n  }\n\n  splitPath(filename) {\n    return this.splitPathRe.exec(filename).slice(1);\n  }\n  /**\n   * Return the path string\n   * @returns {string} path\n   */\n\n\n  toString() {\n    return this.path;\n  }\n\n}\n\nvar _default = Path;\nexports.default = _default;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/node_modules/epubjs/lib/utils/path.js"],"names":["Object","defineProperty","exports","value","default","_pathWebpack","_interopRequireDefault","require","obj","__esModule","Path","constructor","pathString","protocol","parsed","indexOf","URL","pathname","parse","path","isDirectory","directory","dir","filename","base","extension","ext","slice","what","isAbsolute","charAt","length","resolve","relative","splitPath","splitPathRe","exec","toString","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _pathWebpack = _interopRequireDefault(require(\"path-webpack\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a Path object for parsing and manipulation of a path strings\n *\n * Uses a polyfill for Nodejs path: https://nodejs.org/api/path.html\n * @param\t{string} pathString\ta url string (relative or absolute)\n * @class\n */\nclass Path {\n  constructor(pathString) {\n    var protocol;\n    var parsed;\n    protocol = pathString.indexOf(\"://\");\n\n    if (protocol > -1) {\n      pathString = new URL(pathString).pathname;\n    }\n\n    parsed = this.parse(pathString);\n    this.path = pathString;\n\n    if (this.isDirectory(pathString)) {\n      this.directory = pathString;\n    } else {\n      this.directory = parsed.dir + \"/\";\n    }\n\n    this.filename = parsed.base;\n    this.extension = parsed.ext.slice(1);\n  }\n  /**\n   * Parse the path: https://nodejs.org/api/path.html#path_path_parse_path\n   * @param\t{string} what\n   * @returns {object}\n   */\n\n\n  parse(what) {\n    return _pathWebpack.default.parse(what);\n  }\n  /**\n   * @param\t{string} what\n   * @returns {boolean}\n   */\n\n\n  isAbsolute(what) {\n    return _pathWebpack.default.isAbsolute(what || this.path);\n  }\n  /**\n   * Check if path ends with a directory\n   * @param\t{string} what\n   * @returns {boolean}\n   */\n\n\n  isDirectory(what) {\n    return what.charAt(what.length - 1) === \"/\";\n  }\n  /**\n   * Resolve a path against the directory of the Path\n   *\n   * https://nodejs.org/api/path.html#path_path_resolve_paths\n   * @param\t{string} what\n   * @returns {string} resolved\n   */\n\n\n  resolve(what) {\n    return _pathWebpack.default.resolve(this.directory, what);\n  }\n  /**\n   * Resolve a path relative to the directory of the Path\n   *\n   * https://nodejs.org/api/path.html#path_path_relative_from_to\n   * @param\t{string} what\n   * @returns {string} relative\n   */\n\n\n  relative(what) {\n    var isAbsolute = what && what.indexOf(\"://\") > -1;\n\n    if (isAbsolute) {\n      return what;\n    }\n\n    return _pathWebpack.default.relative(this.directory, what);\n  }\n\n  splitPath(filename) {\n    return this.splitPathRe.exec(filename).slice(1);\n  }\n  /**\n   * Return the path string\n   * @returns {string} path\n   */\n\n\n  toString() {\n    return this.path;\n  }\n\n}\n\nvar _default = Path;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}