{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\quiz\\\\QuizList.jsx\";\nimport React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport ApiService from \"../../_services/ApiService\";\nimport { ILoader } from './../../_components/iloader/iloader';\nimport Config from './../../_config/config';\n\nclass QuizList extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"QuizList -> constructor()... \");\n    console.log(\"QuizList -> constructor(); Portlet : \" + JSON.stringify(Config.CURRENT_PORTLET));\n    console.log(\"QuizList -> constructor(); quizBlock : \" + JSON.stringify(this.props.location.state.quizBlock));\n\n    if (!Config.CURRENT_PORTLET) {\n      Config.CURRENT_PORTLET = JSON.parse(localStorage.getItem('portlet'));\n    }\n\n    this.state = {\n      quizBlock: this.props.location.state.quizBlock,\n      testCategoryId: this.props.location.state.quizBlock.testCategoryId,\n      testBeans: [],\n      message: null,\n      showLoading: false,\n      errorMessage: null\n    }; //this.init = this.init.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"QuizList -> componentDidMount()... \");\n    this.init();\n  }\n\n  init() {\n    console.log(\"QuizList -> init()... \" + JSON.stringify(this.state.testCategoryId));\n    this.setState({\n      showLoading: true\n    }, () => {\n      ApiService.getTestCategoryWiseTestList(this.state.testCategoryId).then(res => {\n        console.log(\"QuizList -> init(); res : \" + JSON.stringify(res));\n        let testBeans = res.data.length > 0 ? res.data[0].categoryBeans[0].testDataBeans : [];\n        this.setState({\n          showLoading: false,\n          testBeans: testBeans,\n          errorMessage: testBeans.length <= 0 ? \"No tests found!\" : null\n        });\n      });\n    });\n  }\n\n  render() {\n    const _loadingText = 'Please wait...';\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, this.renderHeader(), this.state.errorMessage && this.renderError(), !this.state.errorMessage && this.renderBody(), this.renderLoader()));\n  }\n\n  renderHeader() {\n    console.log(\"QuizList -> renderHeader()... \");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `ilearn-plain-header ${Config.CURRENT_PORTLET.class}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: this.props.history.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, this.state.quizBlock.displayName));\n  }\n\n  renderBody() {\n    console.log(\"QuizList -> renderBody()... \");\n    let testBeans = this.state.testBeans.sort((a, b) => a.id - b.id);\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, testBeans.map((testBean, index) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"list-group-item ilearn-item-border\",\n        key: index,\n        onClick: () => this.start(testBean),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ilearn-item-block \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, testBean.name), /*#__PURE__*/React.createElement(\"button\", {\n        className: `ilearn-btn-right  ${testBean.status == 'Launch' ? 'ilearn-blue-btn' : testBean.status == 'View Result' ? 'ilearn-green-btn' : 'ilearn-grey-btn'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, testBean.status)));\n    }));\n  }\n\n  renderLoader() {\n    console.log(\"QuizList -> renderLoader()... \");\n    const _loadingText = 'Please wait...';\n    return /*#__PURE__*/React.createElement(ILoader, {\n      loadingText: _loadingText,\n      isShow: this.state.showLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    });\n  }\n\n  start(testBean) {\n    console.log(\"QuizList -> start()... \" + JSON.stringify(testBean));\n\n    if (testBean.status === 'Launch') {\n      this.startQuiz(testBean);\n    } else if (testBean.status === 'View Result') {\n      //this.navCtrl.push(QuizResultPage, {testBean:JSON.stringify(testBean)});\n      this.showResult(testBean);\n    }\n  }\n\n  startQuiz(testBean) {\n    console.log(\"QuizList -> startQuiz()... \" + JSON.stringify(testBean));\n    let path = \"/quizPlayer\";\n    this.props.history.push({\n      pathname: path,\n      state: {\n        testBean: testBean\n      }\n    });\n  }\n\n  showResult(testBean) {\n    console.log(\"QuizList -> startQuiz()... \" + JSON.stringify(testBean));\n    let path = \"/quizResult\";\n    this.props.history.push({\n      pathname: path,\n      state: {\n        testBean: testBean\n      }\n    });\n  }\n\n  renderError() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"alert-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, \"Error!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, this.state.errorMessage)));\n  }\n\n}\n\nexport { QuizList };","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/quiz/QuizList.jsx"],"names":["React","Component","Container","FontAwesomeIcon","faArrowLeft","ApiService","ILoader","Config","QuizList","constructor","props","console","log","JSON","stringify","CURRENT_PORTLET","location","state","quizBlock","parse","localStorage","getItem","testCategoryId","testBeans","message","showLoading","errorMessage","componentDidMount","init","setState","getTestCategoryWiseTestList","then","res","data","length","categoryBeans","testDataBeans","render","_loadingText","renderHeader","renderError","renderBody","renderLoader","class","history","goBack","displayName","sort","a","b","id","map","testBean","index","start","name","status","startQuiz","showResult","path","push","pathname"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\nimport Config from './../../_config/config'\r\n\r\nclass QuizList extends Component {\r\n  constructor(props) {    \r\n    super(props);\r\n    console.log(\"QuizList -> constructor()... \");\r\n    console.log(\"QuizList -> constructor(); Portlet : \"+JSON.stringify(Config.CURRENT_PORTLET));\r\n    console.log(\"QuizList -> constructor(); quizBlock : \"+JSON.stringify(this.props.location.state.quizBlock));\r\n    if(!Config.CURRENT_PORTLET) {\r\n      Config.CURRENT_PORTLET = JSON.parse(localStorage.getItem('portlet'));\r\n    }\r\n    this.state = {\r\n      quizBlock : this.props.location.state.quizBlock,\r\n      testCategoryId : this.props.location.state.quizBlock.testCategoryId,\r\n      testBeans : [],\r\n      message: null,\r\n      showLoading: false,\r\n      errorMessage: null\r\n    };\r\n    //this.init = this.init.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"QuizList -> componentDidMount()... \");\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    console.log(\"QuizList -> init()... \"+JSON.stringify(this.state.testCategoryId));\r\n    this.setState({ showLoading: true }, () => {\r\n        ApiService.getTestCategoryWiseTestList(this.state.testCategoryId)\r\n        .then((res) => {\r\n          console.log(\"QuizList -> init(); res : \"+JSON.stringify(res));\r\n          let testBeans = res.data.length>0?res.data[0].categoryBeans[0].testDataBeans:[];\r\n          this.setState({\r\n            showLoading: false,            \r\n            testBeans : testBeans,\r\n            errorMessage : testBeans.length<=0?\"No tests found!\":null\r\n          });\r\n        });\r\n      });\r\n  }\r\n  \r\n  render() {\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          {this.renderHeader()}\r\n          {this.state.errorMessage && this.renderError()}\r\n          {!this.state.errorMessage && this.renderBody()}\r\n          {this.renderLoader()}          \r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderHeader() {\r\n    console.log(\"QuizList -> renderHeader()... \");\r\n    return (\r\n      <div className={`ilearn-plain-header ${Config.CURRENT_PORTLET.class}`}>\r\n        <div className=\"back\">\r\n          <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n        </div>\r\n        <h4>{this.state.quizBlock.displayName}</h4>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderBody() {\r\n    console.log(\"QuizList -> renderBody()... \");\r\n    let testBeans = this.state.testBeans.sort((a, b) => a.id - b.id);\r\n    return  <ul className=\"list-group\">\r\n      {\r\n        testBeans.map((testBean, index) => {\r\n            return (             \r\n                <li className=\"list-group-item ilearn-item-border\" key={index} onClick={() => this.start(testBean)}>\r\n                  <div className=\"ilearn-item-block \">\r\n                    <h4>{testBean.name}</h4>\r\n                    <button \r\n                      className={`ilearn-btn-right  ${testBean.status=='Launch'? 'ilearn-blue-btn' : testBean.status=='View Result' ? 'ilearn-green-btn':'ilearn-grey-btn'}`}>\r\n                      {testBean.status}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n            )\r\n        })\r\n      }\r\n      </ul>\r\n  }\r\n\r\n  renderLoader() {\r\n    console.log(\"QuizList -> renderLoader()... \");\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n        <ILoader\r\n          loadingText={_loadingText}\r\n          isShow={this.state.showLoading}\r\n        >\r\n        </ILoader>\r\n    )\r\n  }\r\n\r\n  start(testBean) {\r\n    console.log(\"QuizList -> start()... \"+JSON.stringify(testBean));\r\n    if(testBean.status==='Launch') {\r\n      this.startQuiz(testBean);      \r\n    }\r\n    else if(testBean.status==='View Result') {\r\n      //this.navCtrl.push(QuizResultPage, {testBean:JSON.stringify(testBean)});\r\n      this.showResult(testBean);\r\n    }\r\n  };\r\n\r\n  startQuiz(testBean) {\r\n    console.log(\"QuizList -> startQuiz()... \"+JSON.stringify(testBean));\r\n    let path = \"/quizPlayer\";\r\n    this.props.history.push({\r\n        pathname: path,\r\n        state: { testBean: testBean }\r\n    });\r\n  }\r\n\r\n  showResult(testBean) {\r\n    console.log(\"QuizList -> startQuiz()... \"+JSON.stringify(testBean));\r\n    let path = \"/quizResult\";\r\n    this.props.history.push({\r\n        pathname: path,\r\n        state: { testBean: testBean }\r\n    });  \r\n  }\r\n\r\n  renderError() {\r\n    return (\r\n        <> \r\n          <br/>        \r\n          <div className=\"alert alert-danger text-center\">\r\n              <h4 className=\"alert-heading\">Error!</h4>\r\n              <p>{this.state.errorMessage}</p>\r\n          </div>\r\n        </>\r\n    )    \r\n  }\r\n\r\n}\r\n\r\nexport {QuizList};\r\n"]},"metadata":{},"sourceType":"module"}