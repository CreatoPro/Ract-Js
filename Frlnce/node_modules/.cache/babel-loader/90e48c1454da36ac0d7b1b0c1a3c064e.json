{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\test\\\\TestListDetails.js\";\nimport React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faFileAlt } from '@fortawesome/free-solid-svg-icons';\nimport Config from \"../../_config/config\";\nimport Card from 'react-bootstrap/Card';\nimport ApiService from \"../../_services/ApiService\";\nimport Loader from './../../_components/loader/loader';\nimport swal from 'sweetalert';\nimport Utils from \"../../_helpers/utils\";\n\nconst AWS = require('aws-sdk');\n\nAWS.config.clear();\nAWS.config.update({\n  region: Config.AWSRegion,\n  accessKeyId: Config.AWSAccessKeyId,\n  secretAccessKey: Config.AWSSecretAccessKey\n});\n\nclass TestListDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openTest = testID => {\n      var url = '/TestInstructions/' + testID + '?cat=' + this.props.match.params.id;\n      window.open(url, 'Start Test', 'height=' + window.screen.height + ',width=' + window.screen.width);\n    };\n\n    this.submitTimeOut = testId => {\n      const tenant = localStorage.getItem('tenant') || Config.siteTitle;\n      const userObject = JSON.parse(localStorage.getItem('user'));\n      console.log(userObject);\n      console.log(userObject.userId); //'https://tuningfork-'+ Config.siteMode +'.s3.amazonaws.com/'+ tenant +'/uploads/testPapers/'+ testId +'/'+ testId +'.json'\n\n      let testUrl = 'https://tuningfork-' + Config.siteMode + '.s3.amazonaws.com/' + tenant + '/uploads/testPapers/' + testId + '/' + testId + '.json';\n      const studentTestData = {\n        \"tenant\": tenant,\n        \"testId\": testId,\n        \"userId\": userObject.userId,\n        \"s3Url\": testUrl\n      }; //console.log(student_response);\n      //alert(JSON.stringify(student_response));\n\n      var lambda = new AWS.Lambda();\n      var params = {\n        FunctionName: 'testResume',\n\n        /* required */\n        Payload: JSON.stringify(studentTestData)\n      };\n      lambda.invoke(params, function (err, response) {\n        if (err) {\n          //alert(Config.CONNECTION_ERROR_MSG);\n          console.log(err); // console.log(err, err.stack); // an error occurred\n        } else {\n          var _testObject$testConfi;\n\n          let res = JSON.parse(response.Payload);\n          let testObject = res.data;\n          console.log(testObject);\n          const student_response = {\n            \"tenant\": tenant,\n            \"testId\": testId,\n            \"userId\": [userObject.userId],\n            \"testSubmit\": true,\n            \"submitStatus\": 1,\n            \"autoSubmitToRDS\": testObject === null || testObject === void 0 ? void 0 : (_testObject$testConfi = testObject.testConfig) === null || _testObject$testConfi === void 0 ? void 0 : _testObject$testConfi.autoSubmitToRDS,\n            \"siteUrl\": Config.siteUrl\n          };\n          console.log(student_response);\n          var lambda = new AWS.Lambda();\n          var params = {\n            FunctionName: 'testResponses',\n\n            /* required */\n            Payload: JSON.stringify(student_response)\n          };\n          lambda.invoke(params, function (err, data) {\n            if (err) {\n              console.log(err, err.stack); // an error occurred\n\n              alert(Config.CONNECTION_ERROR_MSG);\n            } else {\n              let res = JSON.parse(data.Payload); //console.log(data);  // successful response\n              //if(res.status==\"success\" && testObject?.testConfig?.autoSubmitToRDS == true){\n              //that.SubmitToRDS();\n              //}else \n\n              console.log(res);\n\n              if (res.status == \"success\") {\n                console.log(\"sucesssssssss\");\n                swal({\n                  text: \"Test submitted successfully.\",\n                  icon: \"success\",\n                  button: \"Ok\",\n                  allowOutsideClick: false,\n                  closeOnClickOutside: false,\n                  closeOnEsc: false\n                }).then(() => {\n                  window.location.reload();\n                });\n              }\n            }\n          });\n        }\n      });\n    };\n\n    this.state = {\n      list: [],\n      message: null,\n      loading: false,\n      tests: [],\n      download: \"Download\",\n      testname: \"Online Test\"\n    };\n    this.reloadTestListDetails = this.reloadTestListDetails.bind(this);\n    this.downloadTest = this.downloadTest.bind(this);\n  }\n\n  componentDidMount() {\n    let paramsString = this.props.location.search;\n    const params = new URLSearchParams(paramsString);\n    let enquiryId = params.get('enquiryId');\n\n    if (enquiryId) {\n      localStorage.setItem('enquiryId', enquiryId);\n    }\n\n    this.reloadTestListDetails();\n  }\n\n  reloadTestListDetails() {\n    var testlist = JSON.parse(localStorage.getItem('testlist')) || [];\n    var online = navigator.onLine;\n\n    if (online == false) {\n      this.setState({\n        loading: false,\n        list: testlist\n      });\n      /*this.setState({ loading: true }, () => {\r\n        ApiService.fetchTestList()\r\n        .then((res) => {\r\n            this.setState({\r\n              loading: false,\r\n              list: res.data\r\n            });\r\n        });\r\n      }); */\n    } else {\n      this.setState({\n        loading: true\n      }, () => {\n        ApiService.fetchTestList().then(res => {\n          this.setState({\n            loading: false,\n            list: res.data\n          });\n        });\n      });\n    }\n  }\n\n  payCheck(path, testID) {\n    this.setState({\n      loading: true\n    }, () => {\n      let payLoad = {\n        \"type\": \"test\",\n        \"testId\": testID\n      };\n      ApiService.studentPayCheck(payLoad).then(res => {\n        this.setState({\n          loading: false\n        });\n\n        if (res.data.type == 2) {\n          const wrapper = document.createElement('div');\n          wrapper.innerHTML = res.data.message;\n          swal({\n            title: \"Alert\",\n            content: wrapper,\n            dangerMode: true,\n            buttons: true,\n            className: 'blue-card'\n          }).then(willResume => {\n            if (willResume) {}\n          });\n        } else {\n          this.props.history.push({\n            pathname: path,\n            state: {\n              testEndDate: '',\n              testCategory: ''\n            }\n          });\n        }\n      });\n    });\n  }\n\n  routeChange(path, testID) {\n    this.payCheck(path, testID);\n  }\n\n  routeChange2(path, endDate, testCategory) {\n    this.props.history.push({\n      pathname: path,\n      state: {\n        testEndDate: endDate,\n        testCategory: testCategory\n      }\n    });\n  }\n\n  addUrlToCache(url) {\n    window.fetch(url).then(function (response) {\n      caches.open('test-images').then(function (cache) {\n        cache.add(url);\n      });\n    }).catch(function (error) {\n      console.log(\"cache put image error \" + error);\n    });\n  }\n\n  showAlert(msg) {\n    swal({\n      title: \"Alert\",\n      text: msg,\n      dangerMode: true\n    });\n  }\n\n  downloadTest(testid) {\n    ApiService.fetchTest(testid).then(res => {\n      if (res.data.status == 1 && res.data.data.tests[0].testJSONFile != \"TestJSONNotFound\") {\n        var d = new Date();\n        var rand = d.getTime();\n        var studentPdfResponse = res.data.data.tests[0].studentPdfResponse;\n        ApiService.fetchTestJson(res.data.data.tests[0].testJSONFile + \"?id=\" + rand).then(res => {\n          this.setState({\n            tests: res.data\n          }); //alert(JSON.stringify(res.data.testImages));\n\n          var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\n\n          if (oldTests.filter(test => test.id == testid).length == 0) {\n            res.data.resume = 0;\n            res.data.studentPdfResponse = studentPdfResponse;\n            oldTests.push(res.data);\n            localStorage.setItem('tests', JSON.stringify(oldTests));\n            this.props.history.replace('/test-instructions/' + this.props.match.params.id + '/' + testid);\n            /*var images = \"\";\r\n            images = res.data.testImages;\r\n            if(!images){\r\n            }else{\r\n              //for(let i=0;i<images.length; i++){\r\n                //this.addUrlToCache(images[i].replace('http://','https://'));\r\n                //var per = (i/images.length)*100;\r\n                //progress(per);\r\n              //}\r\n            }*/\n            //this.addUrlToCache(\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=AM_HTMLorMML\");\n            //this.reloadTestListDetails();\n          }\n        });\n      } else {\n        swal({\n          title: \"Alert\",\n          text: \"Online test not available. Please contact administrator\",\n          dangerMode: true\n        });\n      }\n    });\n  }\n\n  render() {\n    let portlet = JSON.parse(localStorage.getItem('portlet')) || [];\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"testlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `module-header-step2 ${portlet.class ? portlet.class : 'orange-card'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowLeft,\n      onClick: () => this.routeChange2('/TestList'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      id: \"testname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 6\n      }\n    }))), loading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 27\n      }\n    }) : this.renderCard()));\n  }\n\n  renderCard() {\n    let data = this.state.list;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card_list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 10\n      }\n    }, data.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 5\n        }\n      }, this.renderTest(data[index].id, data[index].name, data[index].categoryBased, data[index].categoryBeans));\n    }));\n  }\n\n  renderTest(id, name, categoryBased, categoryBeans) {\n    let isMobile = Utils.isMobileDevice();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }, categoryBased === true ? categoryBeans.map((c, i) => {\n      let test_parentcat_id = localStorage.getItem('test_parentcat_id') || 0;\n\n      if (c.id == this.props.match.params.id && id == test_parentcat_id) {\n        document.getElementById('testname').innerHTML = c.name;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }\n        }, isMobile === true ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card_list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }\n        }, this.renderTestListMobile(c.testDataBeans), \" \") : /*#__PURE__*/React.createElement(\"div\", {\n          className: \"download_list zoom_video_list card_list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }\n        }, this.renderTestListDesktop(c.testDataBeans)));\n      }\n    }) : categoryBeans.map((c, i) => {\n      if (id == this.props.match.params.id) {\n        document.getElementById('testname').innerHTML = name;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }\n        }, isMobile === true ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card_list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }\n        }, this.renderTestListMobile(c.testDataBeans), \" \") : /*#__PURE__*/React.createElement(\"div\", {\n          className: \"download_list zoom_video_list card_list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }\n        }, this.renderTestListDesktop(c.testDataBeans)));\n      }\n    }));\n  }\n\n  renderTestList(beans) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    }, beans.sort((a, b) => b.id - a.id).map((d, j) => {\n      var button;\n      var sedate = '';\n\n      if (d.startDate != \"--\") {\n        sedate = d.startDate + '-' + d.endDate;\n      } else {\n        sedate = /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 20\n          }\n        });\n      }\n\n      if (d.status == \"Launch\") {\n        var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\n\n        if (oldTests.filter(test => test.id == d.id).length == 0) {\n          button = /*#__PURE__*/React.createElement(\"button\", {\n            onClick: () => this.downloadTest(d.id),\n            className: \"download blue-card\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 21\n            }\n          }, \"Start\");\n        } else {\n          button = /*#__PURE__*/React.createElement(\"button\", {\n            onClick: () => this.routeChange('/test-instructions/' + this.props.match.params.id + '/' + d.id, d.id),\n            className: \"download blue-card\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 20\n            }\n          }, \"Start\");\n\n          for (var i = 0; i < oldTests.length; i++) {\n            if (oldTests[i].submit == 1 && oldTests[i].id == d.id) {\n              button = /*#__PURE__*/React.createElement(\"button\", {\n                onClick: () => this.routeChange2('/test-submit/' + this.props.match.params.id + '/' + d.id),\n                className: \"download blue-card\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 24\n                }\n              }, \"Submit\");\n            } else if (oldTests[i].resume == 1 && oldTests[i].id == d.id) {\n              button = /*#__PURE__*/React.createElement(\"button\", {\n                onClick: () => this.routeChange('/test-instructions/' + this.props.match.params.id + '/' + d.id, d.id),\n                className: \"download blue-card\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 24\n                }\n              }, \"Resume\");\n            }\n          }\n        }\n      } else if (d.status == \"Time Out\") {\n        var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\n        button = /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.showAlert(\"The test is closed at  \" + d.endDate),\n          className: \"download blue-light-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 18\n          }\n        }, d.status);\n\n        for (var i = 0; i < oldTests.length; i++) {\n          if (oldTests[i].resume == 1 && oldTests[i].id == d.id) {\n            button = /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => this.routeChange2('/test-submit/' + this.props.match.params.id + '/' + d.id),\n              className: \"download blue-card\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 26\n              }\n            }, d.status);\n          }\n        }\n      } else if (d.status == \"View Result\") {\n        button = /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.routeChange2('/test-result/' + this.props.match.params.id + '/' + d.id, d.endDate),\n          className: \"download green-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 18\n          }\n        }, \"Result\");\n      } else if (d.status == \"Coming Soon\") {\n        button = /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.showAlert(\"The test is available between \" + sedate),\n          className: \"download orange-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }\n        }, d.status);\n      }\n\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cardbody\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"Book\",\n        icon: faFileAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 12\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"option\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 9\n        }\n      }, d.name, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"testdate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 10\n        }\n      }, sedate)), button)));\n    }));\n  }\n\n  renderTestListMobile(beans) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }\n    }, beans.sort((a, b) => b.id - a.id).map((d, j) => {\n      var button;\n      var sedate = '';\n\n      if (d.startDate != \"--\") {\n        sedate = d.startDate + '-' + d.endDate;\n      } else {\n        sedate = /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 20\n          }\n        });\n      }\n\n      if (d.status == \"Launch\") {\n        /*var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n        if (oldTests.filter(test=> test.id == d.id).length == 0){\r\n          button =  <button onClick={() => this.downloadTest(d.id)} className=\"download blue-card\">Start</button>\r\n        }else{\r\n          button=  <button onClick={() => this.routeChange('/test-instructions/'+this.props.match.params.id+'/'+d.id, d.id)} className=\"download blue-card\">Start</button>\r\n          for(var i=0; i<oldTests.length; i++){\r\n            if(oldTests[i].submit==1 && (oldTests[i].id==d.id)){\r\n              button=  <button onClick={() => this.routeChange2('/test-submit/'+this.props.match.params.id+'/'+d.id)} className=\"download blue-card\">Submit</button>\r\n            }else if(oldTests[i].resume==1 && (oldTests[i].id==d.id)){\r\n              button=  <button onClick={() => this.routeChange('/test-instructions/'+this.props.match.params.id+'/'+d.id, d.id)} className=\"download blue-card\">Resume</button>\r\n            }\r\n          }\r\n        }*/\n        var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\n        button = /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.openTest(d.id),\n          className: \"download blue-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 18\n          }\n        }, \"Start\");\n      } else if (d.status == \"Time Out\") {\n        var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\n        button = /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.submitTimeOut(d.id)\n          /*this.showAlert(\"The test is closed at  \"+d.endDate)*/\n          ,\n          className: \"download blue-light-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 18\n          }\n        }, d.status);\n\n        for (var i = 0; i < oldTests.length; i++) {\n          if (oldTests[i].resume == 1 && oldTests[i].id == d.id) {\n            button = /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => this.routeChange2('/test-submit/' + this.props.match.params.id + '/' + d.id),\n              className: \"download blue-card\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 26\n              }\n            }, d.status);\n          }\n        }\n      } else if (d.status == \"View Result\") {\n        button = /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.routeChange2('/test-result/' + this.props.match.params.id + '/' + d.id, d.endDate),\n          className: \"download green-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 18\n          }\n        }, \"Result\");\n      } else if (d.status == \"Coming Soon\") {\n        button = /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.showAlert(\"The test is available between \" + sedate),\n          className: \"download orange-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 17\n          }\n        }, d.status);\n      }\n\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cardbody\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"Book\",\n        icon: faFileAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 12\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"option\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 9\n        }\n      }, d.name, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"testdate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 10\n        }\n      }, sedate)), button)));\n    }));\n  }\n\n  renderTestListDesktop(beans) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cardbody head align-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sno\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 17\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 17\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }\n    }, \"End Date\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }\n    }, \"Action\")))), beans.sort((a, b) => b.id - a.id).map((d, j) => {\n      var button;\n      var sedate = '';\n\n      if (d.startDate != \"--\") {\n        sedate = d.startDate + '-' + d.endDate;\n      } else {\n        sedate = /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 20\n          }\n        });\n      }\n      /** for desktop test launch code start */\n\n\n      if (d.status == \"Launch\" || d.status == \"Practice\" || d.status == \"Quiz\") {\n        var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\n        button = /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.openTest(d.id),\n          className: \"download blue-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 20\n          }\n        }, \"Start\");\n      } else if (d.status == \"Time Out\") {\n        var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\n        button = /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.submitTimeOut(d.id)\n          /*this.showAlert(\"The test is closed at  \"+d.endDate)*/\n          ,\n          className: \"download blue-light-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 20\n          }\n        }, d.status);\n\n        for (var i = 0; i < oldTests.length; i++) {\n          if (oldTests[i].resume == 1 && oldTests[i].id == d.id) {\n            button = /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => this.routeChange2('/test-submit/' + this.props.match.params.id + '/' + d.id),\n              className: \"download blue-card\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 28\n              }\n            }, d.status);\n          }\n        }\n      } else if (d.status == \"View Result\") {\n        button = /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.routeChange2('/test-result/' + this.props.match.params.id + '/' + d.id, d.endDate),\n          className: \"download green-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 20\n          }\n        }, \"Result\");\n      } else if (d.status == \"Coming Soon\") {\n        button = /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.showAlert(\"The test is available between \" + sedate),\n          className: \"download orange-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 20\n          }\n        }, d.status);\n      }\n      /** for desktop test launch code end */\n\n\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cardbody align-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sno\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 15\n        }\n      }, j + 1), /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"head\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 15\n        }\n      }, d.name), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 15\n        }\n      }, d.startDate), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 8\n        }\n      }, d.endDate), button)));\n    }));\n  }\n\n}\n\nexport default TestListDetails;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/test/TestListDetails.js"],"names":["React","Component","Container","FontAwesomeIcon","faArrowLeft","faFileAlt","Config","Card","ApiService","Loader","swal","Utils","AWS","require","config","clear","update","region","AWSRegion","accessKeyId","AWSAccessKeyId","secretAccessKey","AWSSecretAccessKey","TestListDetails","constructor","props","openTest","testID","url","match","params","id","window","open","screen","height","width","submitTimeOut","testId","tenant","localStorage","getItem","siteTitle","userObject","JSON","parse","console","log","userId","testUrl","siteMode","studentTestData","lambda","Lambda","FunctionName","Payload","stringify","invoke","err","response","res","testObject","data","student_response","testConfig","autoSubmitToRDS","siteUrl","stack","alert","CONNECTION_ERROR_MSG","status","text","icon","button","allowOutsideClick","closeOnClickOutside","closeOnEsc","then","location","reload","state","list","message","loading","tests","download","testname","reloadTestListDetails","bind","downloadTest","componentDidMount","paramsString","search","URLSearchParams","enquiryId","get","setItem","testlist","online","navigator","onLine","setState","fetchTestList","payCheck","path","payLoad","studentPayCheck","type","wrapper","document","createElement","innerHTML","title","content","dangerMode","buttons","className","willResume","history","push","pathname","testEndDate","testCategory","routeChange","routeChange2","endDate","addUrlToCache","fetch","caches","cache","add","catch","error","showAlert","msg","testid","fetchTest","testJSONFile","d","Date","rand","getTime","studentPdfResponse","fetchTestJson","oldTests","filter","test","length","resume","replace","render","portlet","class","renderCard","map","item","index","renderTest","name","categoryBased","categoryBeans","isMobile","isMobileDevice","c","i","test_parentcat_id","getElementById","renderTestListMobile","testDataBeans","renderTestListDesktop","renderTestList","beans","sort","a","b","j","sedate","startDate","submit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft,faFileAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport Config from \"../../_config/config\";\r\nimport Card from 'react-bootstrap/Card'\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Loader from './../../_components/loader/loader';\r\nimport swal from 'sweetalert';\r\nimport Utils from \"../../_helpers/utils\";\r\n\r\nconst AWS = require('aws-sdk');\r\nAWS.config.clear();\r\nAWS.config.update({\r\n\tregion: Config.AWSRegion,\r\n\taccessKeyId: Config.AWSAccessKeyId,\r\n\tsecretAccessKey: Config.AWSSecretAccessKey\r\n  });\r\n\r\nclass TestListDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      message: null,\r\n      loading: false,\r\n      tests:[],\r\n      download : \"Download\",\r\n\t  testname: \"Online Test\"\r\n    };\r\n    this.reloadTestListDetails = this.reloadTestListDetails.bind(this);\r\n    this.downloadTest = this.downloadTest.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let paramsString = this.props.location.search;\r\n    const params = new URLSearchParams(paramsString);\r\n    let enquiryId =  params.get('enquiryId');\r\n    if(enquiryId){\r\n      localStorage.setItem('enquiryId', enquiryId);\r\n    }\r\n    this.reloadTestListDetails();\r\n  }\r\n\r\n  openTest = (testID) => {\r\n    var url = '/TestInstructions/'+testID+'?cat='+this.props.match.params.id;\r\n    window.open(url, 'Start Test', 'height=' + window.screen.height + ',width=' + window.screen.width);\r\n\t}\r\n\r\n  reloadTestListDetails() {\r\n    var testlist = JSON.parse(localStorage.getItem('testlist')) || [];\r\n\t  var online = navigator.onLine;\r\n    if(online == false){\r\n      this.setState({\r\n        loading: false,\r\n        list: testlist\r\n      });\r\n      /*this.setState({ loading: true }, () => {\r\n        ApiService.fetchTestList()\r\n        .then((res) => {\r\n            this.setState({\r\n              loading: false,\r\n              list: res.data\r\n            });\r\n        });\r\n      }); */\r\n    }else{\r\n      this.setState({ loading: true }, () => {\r\n        ApiService.fetchTestList()\r\n        .then((res) => {\r\n            this.setState({\r\n              loading: false,\r\n              list: res.data\r\n            });\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  payCheck(path,testID) {\r\n    this.setState({ loading: true }, () => {\r\n      let payLoad = {\r\n        \"type\": \"test\",\r\n        \"testId\": testID \r\n      };\r\n      ApiService.studentPayCheck(payLoad)\r\n      .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n          if(res.data.type==2){\r\n            const wrapper = document.createElement('div');\r\n            wrapper.innerHTML = res.data.message;\r\n            swal({\r\n              title: \"Alert\",\r\n              content: wrapper,\r\n              dangerMode: true,\r\n              buttons: true,\r\n              className: 'blue-card'\r\n            })\r\n            .then((willResume) => {\r\n              if (willResume) {\r\n                \r\n              }\r\n            });\r\n          }else {\r\n            this.props.history.push( { pathname: path, state: {testEndDate: '', testCategory: ''} } );\r\n          }\r\n      });\r\n    });\t\r\n  }\r\n\r\n  routeChange(path,testID) {\r\n    this.payCheck(path, testID);\r\n  }\r\n\r\n  routeChange2(path,endDate,testCategory) {\r\n    this.props.history.push( { pathname: path, state: {testEndDate: endDate, testCategory: testCategory} } );\r\n  }\r\n\r\n addUrlToCache(url) {\r\n    window.fetch(url).then(function(response) {\r\n      caches.open('test-images').then(function(cache) {\r\n        cache.add(url);\r\n      });\r\n    }).catch(function(error) {\r\n        console.log(\"cache put image error \"+error);\r\n    });\r\n  }\r\n  \r\n  \r\n  showAlert(msg) {\r\n\t  swal({\r\n\t\t\ttitle: \"Alert\",\r\n\t\t\ttext: msg,\r\n\t\t\tdangerMode: true,\r\n\t   });\r\n  }\r\n\r\n  downloadTest(testid) {\r\n      ApiService.fetchTest(testid)\r\n      .then((res) => {\r\n          if(res.data.status==1 && res.data.data.tests[0].testJSONFile!=\"TestJSONNotFound\"){\r\n            var d = new Date();\r\n            var rand = d.getTime();\r\n            var studentPdfResponse = res.data.data.tests[0].studentPdfResponse;\r\n            ApiService.fetchTestJson(res.data.data.tests[0].testJSONFile+\"?id=\"+rand)\r\n            .then((res) => {\r\n              this.setState({tests: res.data});\r\n              //alert(JSON.stringify(res.data.testImages));\r\n              var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n              if (oldTests.filter(test=> test.id == testid).length == 0){\r\n                res.data.resume=0;\r\n                res.data.studentPdfResponse=studentPdfResponse;\r\n                oldTests.push(res.data);  \r\n                localStorage.setItem('tests', JSON.stringify(oldTests));\r\n                this.props.history.replace('/test-instructions/'+this.props.match.params.id+'/'+testid);\r\n                /*var images = \"\";\r\n                images = res.data.testImages;\r\n                if(!images){\r\n                }else{\r\n                  //for(let i=0;i<images.length; i++){\r\n                    //this.addUrlToCache(images[i].replace('http://','https://'));\r\n                    //var per = (i/images.length)*100;\r\n                    //progress(per);\r\n                  //}\r\n                }*/\r\n                //this.addUrlToCache(\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=AM_HTMLorMML\");\r\n                //this.reloadTestListDetails();\r\n              }\r\n            });\r\n          }else{\r\n            swal({\r\n              title: \"Alert\",\r\n              text: \"Online test not available. Please contact administrator\",\r\n              dangerMode: true,\r\n            });\r\n          }\r\n      });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\t  let portlet = JSON.parse(localStorage.getItem('portlet')) || [];\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"testlist\">\r\n        {\r\n          <Container fluid>\r\n              <div className={`module-header-step2 ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n                <div className=\"\">\r\n\t\t\t\t\t<div className=\"back\">\r\n\t\t\t\t\t  <FontAwesomeIcon icon={ faArrowLeft } onClick={() => this.routeChange2('/TestList')} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h4 id=\"testname\"></h4>\r\n                </div>\r\n              </div>\r\n              {loading ?  <Loader />: this.renderCard()}           \r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderCard() {\r\n\t  let data = this.state.list;\r\n\t\treturn <div className=\"card_list\"> \r\n\t\t{\r\n\t\t  data.map((item, index) => {\r\n\t\t\treturn (\r\n\t\t\t <div>{this.renderTest(data[index].id,data[index].name, data[index].categoryBased , data[index].categoryBeans)}</div>\r\n\t\t\t)\r\n\t\t  })\r\n    }\r\n    </div>\r\n  }\r\n  \r\n  renderTest(id, name, categoryBased, categoryBeans){\r\n  let isMobile = Utils.isMobileDevice();\r\n\treturn <div>\r\n  {\t\r\n    categoryBased===true ?\t\r\n      categoryBeans.map((c, i) =>{\r\n        let test_parentcat_id = localStorage.getItem('test_parentcat_id') || 0;\r\n        if(c.id==this.props.match.params.id && id == test_parentcat_id){\r\n          document.getElementById('testname').innerHTML = c.name;\r\n            return (\r\n            <div className=\"\">\r\n              { isMobile===true ? \r\n                <div className=\"card_list\">{this.renderTestListMobile(c.testDataBeans)} </div> : \r\n                <div className=\"download_list zoom_video_list card_list\">{this.renderTestListDesktop(c.testDataBeans)}</div>\r\n              }\r\n            </div>\r\n          )\r\n        }\r\n      })\r\n    :\r\n      categoryBeans.map((c, i) =>{\r\n        if(id==this.props.match.params.id){\r\n            document.getElementById('testname').innerHTML = name;\r\n            return (\r\n            <div className=\"\">\r\n              { isMobile===true ? \r\n                <div className=\"card_list\">{this.renderTestListMobile(c.testDataBeans)} </div> : \r\n                <div className=\"download_list zoom_video_list card_list\">{this.renderTestListDesktop(c.testDataBeans)}</div>\r\n              }\r\n            </div>\r\n          )\r\n        }\r\n      })\r\n\t}\r\n\t</div>\r\n  }\r\n  \r\n  renderTestList(beans){\r\n\t  return <div>\r\n\t  {\r\n      beans.sort((a, b) => b.id - a.id) \r\n      .map((d, j) =>{\r\n        var button;\r\n        var sedate = '';\r\n        if(d.startDate != \"--\"){\r\n          sedate = d.startDate +'-'+ d.endDate;\r\n        }else{\r\n          sedate = <br />\r\n        }\r\n\t  \r\n      if(d.status==\"Launch\"){\r\n        var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n        if (oldTests.filter(test=> test.id == d.id).length == 0){\r\n          button =  <button onClick={() => this.downloadTest(d.id)} className=\"download blue-card\">Start</button>\r\n        }else{\r\n          button=  <button onClick={() => this.routeChange('/test-instructions/'+this.props.match.params.id+'/'+d.id, d.id)} className=\"download blue-card\">Start</button>\r\n          for(var i=0; i<oldTests.length; i++){\r\n            if(oldTests[i].submit==1 && (oldTests[i].id==d.id)){\r\n              button=  <button onClick={() => this.routeChange2('/test-submit/'+this.props.match.params.id+'/'+d.id)} className=\"download blue-card\">Submit</button>\r\n            }else if(oldTests[i].resume==1 && (oldTests[i].id==d.id)){\r\n              button=  <button onClick={() => this.routeChange('/test-instructions/'+this.props.match.params.id+'/'+d.id, d.id)} className=\"download blue-card\">Resume</button>\r\n            }\r\n          }\r\n        }\r\n      }else if(d.status == \"Time Out\"){\r\n        var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n        button=  <button onClick={() => this.showAlert(\"The test is closed at  \"+d.endDate)} className=\"download blue-light-card\">{d.status}</button>\r\n        for(var i=0; i<oldTests.length; i++){\r\n          if(oldTests[i].resume==1 && (oldTests[i].id==d.id)){\r\n                button=  <button onClick={() => this.routeChange2('/test-submit/'+this.props.match.params.id+'/'+d.id)} className=\"download blue-card\">{d.status}</button>\r\n          }\r\n        }     \r\n      }else if(d.status == \"View Result\"){\r\n        button=  <button onClick={() => this.routeChange2('/test-result/'+this.props.match.params.id+'/'+d.id, d.endDate)} className=\"download green-card\">Result</button>\r\n      }else if(d.status == \"Coming Soon\"){\r\n\t      button=  <button onClick={() => this.showAlert(\"The test is available between \"+sedate)} className=\"download orange-card\">{d.status}</button>\r\n\t    }\r\n      \r\n\t\t\t return (\r\n\t\t\t\t  <Card>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t  <div className=\"cardbody\">\r\n\t\t\t\t\t      <FontAwesomeIcon className=\"Book\" icon={ faFileAlt } /> \r\n\t\t\t\t\t\t  <p className=\"option\">\r\n\t\t\t\t\t\t    {d.name}\r\n\t\t\t\t\t\t   <div className=\"testdate\">{sedate}</div>\r\n\t\t\t\t\t\t  </p>\r\n                {button}\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t  </Card> \r\n\t\t\t  )\r\n\t\t })\r\n\t  }\r\n\t </div>\r\n  }\r\n\r\n  submitTimeOut=(testId)=>{\r\n    const tenant = localStorage.getItem('tenant') || Config.siteTitle\r\n    const userObject = JSON.parse(localStorage.getItem('user'));\r\n    console.log(userObject);\r\n    console.log(userObject.userId);\r\n\r\n    //'https://tuningfork-'+ Config.siteMode +'.s3.amazonaws.com/'+ tenant +'/uploads/testPapers/'+ testId +'/'+ testId +'.json'\r\n\t\tlet testUrl = 'https://tuningfork-'+ Config.siteMode +'.s3.amazonaws.com/'+ tenant +'/uploads/testPapers/'+ testId +'/'+ testId +'.json'\r\n\r\n\t\t\r\n\t\t\tconst studentTestData = {\r\n\t\t\t\t\"tenant\":tenant,\r\n\t\t\t\t\"testId\": testId,\r\n\t\t\t\t\"userId\":userObject.userId,\r\n\t\t\t\t\"s3Url\":testUrl\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(student_response);\r\n\r\n\t\t\t//alert(JSON.stringify(student_response));\r\n\t\t\tvar lambda = new AWS.Lambda();\r\n\t\t\tvar params = {\r\n\t\t\tFunctionName: 'testResume', /* required */\r\n\t\t\tPayload: JSON.stringify(studentTestData)\r\n\t\t\t};\r\n\r\n\t\t\t\tlambda.invoke(params, function(err, response) {\r\n\t\t\t\t\tif (err){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//alert(Config.CONNECTION_ERROR_MSG);\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t// console.log(err, err.stack); // an error occurred\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlet res = JSON.parse(response.Payload)\r\n\t\t\t\t\t\tlet testObject = res.data; \r\n            console.log(testObject);\r\n            const student_response = {\r\n\t\t        \t\"tenant\":tenant,\r\n\t\t        \t\"testId\": testId,\r\n\t\t        \t\"userId\": [userObject.userId],\r\n\t\t        \t\"testSubmit\": true,\r\n\t\t        \t\"submitStatus\":1,\r\n\t\t        \t\"autoSubmitToRDS\":testObject?.testConfig?.autoSubmitToRDS,\r\n\t\t        \t\"siteUrl\":Config.siteUrl\r\n\t\t        }\r\n          \r\n\t\t        console.log(student_response);\r\n          \r\n\t\t        var lambda = new AWS.Lambda();\r\n\t\t        var params = {\r\n\t\t        FunctionName: 'testResponses', /* required */\r\n\t\t        Payload: JSON.stringify(student_response)\r\n\t\t        };\r\n          \r\n\t\t        \tlambda.invoke(params, function(err, data) {\r\n\t\t        \t\tif (err){\r\n\t\t        \t\t  console.log(err, err.stack); // an error occurred\r\n\t\t        \t\t  alert(Config.CONNECTION_ERROR_MSG);\r\n\t\t        \t\t}else{\r\n\t\t        \t\t  let res = JSON.parse(data.Payload);\r\n\t\t        \t\t  //console.log(data);  // successful response\r\n                \r\n\t\t        \t\t  //if(res.status==\"success\" && testObject?.testConfig?.autoSubmitToRDS == true){\r\n\t\t        \t\t\t//that.SubmitToRDS();\r\n\t\t        \t\t  //}else \r\n                  console.log(res);\r\n\t\t\t\t  \r\n\t\t\t\t          if(res.status==\"success\"){\r\n\t\t\t\t\t          console.log(\"sucesssssssss\")\r\n                    swal({\r\n\t\t\t\t\t      \t    text: \"Test submitted successfully.\",\r\n\t\t\t\t\t      \t    icon: \"success\",\r\n\t\t\t\t\t      \t    button: \"Ok\",\r\n\t\t\t\t\t      \t    allowOutsideClick: false,\r\n\t\t\t\t\t      \t    closeOnClickOutside: false,\r\n\t\t\t\t\t      \t    closeOnEsc: false\r\n\t\t\t\t\t        }).then(()=>{\r\n                    window.location.reload();\r\n                  })\r\n                }\r\n              }\r\n      })\r\n\r\n    }\r\n  })\r\n  }\r\n\r\n  renderTestListMobile(beans){\r\n\t  return <div>\r\n\t  {\r\n      beans.sort((a, b) => b.id - a.id) \r\n      .map((d, j) =>{\r\n        var button;\r\n        var sedate = '';\r\n        if(d.startDate != \"--\"){\r\n          sedate = d.startDate +'-'+ d.endDate;\r\n        }else{\r\n          sedate = <br />\r\n        }\r\n\t  \r\n      if(d.status==\"Launch\"){\r\n\r\n        /*var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n        if (oldTests.filter(test=> test.id == d.id).length == 0){\r\n          button =  <button onClick={() => this.downloadTest(d.id)} className=\"download blue-card\">Start</button>\r\n        }else{\r\n          button=  <button onClick={() => this.routeChange('/test-instructions/'+this.props.match.params.id+'/'+d.id, d.id)} className=\"download blue-card\">Start</button>\r\n          for(var i=0; i<oldTests.length; i++){\r\n            if(oldTests[i].submit==1 && (oldTests[i].id==d.id)){\r\n              button=  <button onClick={() => this.routeChange2('/test-submit/'+this.props.match.params.id+'/'+d.id)} className=\"download blue-card\">Submit</button>\r\n            }else if(oldTests[i].resume==1 && (oldTests[i].id==d.id)){\r\n              button=  <button onClick={() => this.routeChange('/test-instructions/'+this.props.match.params.id+'/'+d.id, d.id)} className=\"download blue-card\">Resume</button>\r\n            }\r\n          }\r\n        }*/\r\n\r\n        var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n        button=  <button onClick={() => this.openTest(d.id)} className=\"download blue-card\">Start</button>\r\n\r\n      }else if(d.status == \"Time Out\"){\r\n        var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n        button=  <button onClick={() => this.submitTimeOut(d.id)/*this.showAlert(\"The test is closed at  \"+d.endDate)*/} className=\"download blue-light-card\">{d.status}</button>\r\n        for(var i=0; i<oldTests.length; i++){\r\n          if(oldTests[i].resume==1 && (oldTests[i].id==d.id)){\r\n                button=  <button onClick={() => this.routeChange2('/test-submit/'+this.props.match.params.id+'/'+d.id)} className=\"download blue-card\">{d.status}</button>\r\n          }\r\n        }     \r\n      }else if(d.status == \"View Result\"){\r\n        button=  <button onClick={() => this.routeChange2('/test-result/'+this.props.match.params.id+'/'+d.id, d.endDate)} className=\"download green-card\">Result</button>\r\n      }else if(d.status == \"Coming Soon\"){\r\n\t      button=  <button onClick={() => this.showAlert(\"The test is available between \"+sedate)} className=\"download orange-card\">{d.status}</button>\r\n\t    }\r\n      \r\n\t\t\t return (\r\n\t\t\t\t  <Card>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t  <div className=\"cardbody\">\r\n\t\t\t\t\t      <FontAwesomeIcon className=\"Book\" icon={ faFileAlt } /> \r\n\t\t\t\t\t\t  <p className=\"option\">\r\n\t\t\t\t\t\t    {d.name}\r\n\t\t\t\t\t\t   <div className=\"testdate\">{sedate}</div>\r\n\t\t\t\t\t\t  </p>\r\n                {button}\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t  </Card> \r\n\t\t\t  )\r\n\t\t })\r\n\t  }\r\n\t </div>\r\n  }\r\n\r\n  renderTestListDesktop(beans){\r\n\t  return <div>\r\n            <Card>\r\n              <Card.Body>\r\n                <div className=\"cardbody head align-center\">\r\n                <span className=\"sno\">#</span>\r\n                <h4 className=\"head\">Name</h4>\r\n                <span className=\"date\">Start Date</span>\r\n\t\t\t\t\t\t    <span className=\"date\">End Date</span>\r\n                <span>Action</span>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n\t  {\r\n      beans.sort((a, b) => b.id - a.id) \r\n      .map((d, j) =>{\r\n        var button;\r\n        var sedate = '';\r\n        if(d.startDate != \"--\"){\r\n          sedate = d.startDate +'-'+ d.endDate;\r\n        }else{\r\n          sedate = <br />\r\n        }\r\n        /** for desktop test launch code start */\r\n        \r\n        if(d.status==\"Launch\" || d.status==\"Practice\" || d.status==\"Quiz\"){\r\n          var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n          button=  <button onClick={() => this.openTest(d.id)} className=\"download blue-card\">Start</button>\r\n        }else if(d.status == \"Time Out\"){\r\n          var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n          button=  <button onClick={() => this.submitTimeOut(d.id) /*this.showAlert(\"The test is closed at  \"+d.endDate)*/ }className=\"download blue-light-card\">{d.status}</button>\r\n          for(var i=0; i<oldTests.length; i++){\r\n            if(oldTests[i].resume==1 && (oldTests[i].id==d.id)){\r\n                  button=  <button onClick={() => this.routeChange2('/test-submit/'+this.props.match.params.id+'/'+d.id)} className=\"download blue-card\">{d.status}</button>\r\n            }\r\n          }     \r\n        }else if(d.status == \"View Result\"){\r\n          button=  <button onClick={() => this.routeChange2('/test-result/'+this.props.match.params.id+'/'+d.id, d.endDate)} className=\"download green-card\">Result</button>\r\n        }else if(d.status == \"Coming Soon\"){\r\n          button=  <button onClick={() => this.showAlert(\"The test is available between \"+sedate)} className=\"download orange-card\">{d.status}</button>\r\n        }\r\n\r\n        /** for desktop test launch code end */\r\n      \r\n\t\t\t return (\r\n\t\t\t\t  <Card>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t  <div className=\"cardbody align-center\">\r\n              <span className=\"sno\">{j+1}</span>\r\n              <h4 className=\"head\">{d.name}</h4>\r\n              <span className=\"date\">{d.startDate}</span>\r\n\t\t\t\t\t\t\t<span className=\"date\">{d.endDate}</span>\r\n              {button}\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t  </Card> \r\n\t\t\t  )\r\n\t\t })\r\n\t  }\r\n\t </div>\r\n  }\r\n\r\n}\r\n\r\nexport default TestListDetails;\r\n"]},"metadata":{},"sourceType":"module"}