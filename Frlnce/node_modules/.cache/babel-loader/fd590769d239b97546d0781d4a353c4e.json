{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\discussion\\\\components\\\\Comment.jsx\";\nimport React, { Component } from \"react\";\nimport { Collapse } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCommentDots, faReply, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport CommentReply from './CommentReply';\nimport ConfirmDialog from './../../../_components/ConfirmDialog';\nexport default class Comment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onConfirmDialogClose = value => {\n      //console.log(\"Comment --> onConfirmDialogClose...\"+value);\n      let _confirmDialog = this.state.confirmDialog;\n      _confirmDialog.show = !_confirmDialog.show;\n      this.setState({\n        confirmDialog: _confirmDialog\n      }, () => {\n        if (value) {\n          const {\n            onCommentDelete = f => f\n          } = this.props;\n          onCommentDelete(this.state.commentDeletionData);\n        }\n      });\n    };\n\n    this.onCommentReplyDelete = data => {\n      //console.log(\"Comment --> onCommentReplyDelete...\"+JSON.stringify(data));\n      let _confirmDialog = this.state.confirmDialog;\n      _confirmDialog.show = !_confirmDialog.show;\n      this.setState(state => ({\n        commentDeletionData: data,\n        confirmDialog: _confirmDialog\n      }));\n    };\n\n    this.state = {\n      showReplies: false,\n      confirmDialog: {\n        show: false,\n        title: 'Confirm',\n        message: 'Are you sure you want to Delete?',\n        cancelButtonLabel: 'No',\n        okButtonLabel: 'Yes'\n      },\n      commentDeletionData: null\n    };\n  }\n  /*componentDidMount() {\r\n         console.log(\"Comment --> componentDidMount...\");\r\n     }\r\n     \r\n     shouldComponentUpdate(newProps, newState) {\r\n         console.log(\"Comment --> shouldComponentUpdate...\");\r\n         return newState.showReplies != this.state.showReplies\r\n     }\r\n  \n     componentWillReceiveProps(newProps) {\r\n         if (newProps.data.show !== this.props.data.show) {\r\n           this.setState({\r\n             data: newProps.data\r\n           });\r\n         }\r\n     }*/\n\n\n  render() {\n    //console.log(\"Comment --> render...\");\n    const comment = this.props.comment;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      key: comment.id,\n      className: \"list-group-item list-group-item-action flex-column align-items-start p-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex w-100 justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: comment.userImagePath,\n      className: \"ilearn-avatar\",\n      alt: \"Profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-1 mt-2 float-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, comment.createdBy)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, comment.createdOn), this.props.moderatorPermission && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-danger ilearn-icon-button\",\n      onClick: () => this.deleteComment(comment.id, 'comment'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-1\",\n      dangerouslySetInnerHTML: {\n        __html: comment.content\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex w-100 justify-content-between text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, this.props.commentPermission && /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-primary\",\n      onClick: () => this.commentReply(comment),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faReply,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }), \"\\xA0 Reply\"), comment.replies.length > 0 && /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-success\",\n      onClick: () => this.toggleShowReplies(),\n      \"aria-controls\": \"comment-reply-collapse\",\n      \"aria-expanded\": this.state.showReplies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCommentDots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }), \"\\xA0 Replies \\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-success badge-pill\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, comment.replies.length))), comment.replies.length > 0 && /*#__PURE__*/React.createElement(Collapse, {\n      in: this.state.showReplies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"comment-reply-collapse\",\n      className: \"alert alert-success p-1 mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, comment.replies.map((commentReply, rIndex) => {\n      return /*#__PURE__*/React.createElement(CommentReply, {\n        key: `reply_` + rIndex,\n        comment: commentReply,\n        moderatorPermission: this.props.moderatorPermission,\n        onCommentReplyDelete: this.onCommentReplyDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }\n      });\n    })))), /*#__PURE__*/React.createElement(ConfirmDialog, {\n      data: this.state.confirmDialog,\n      onConfirmDialogClose: this.onConfirmDialogClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  toggleShowReplies() {\n    //console.log(\"Comment --> toggleShowReplies...\");\n    this.setState(state => ({\n      showReplies: !this.state.showReplies\n    }));\n  }\n\n  commentReply(comment) {\n    //console.log(\"Comment --> commentReply...\"+comment.id);\n    const {\n      onCommentReply = f => f\n    } = this.props;\n    onCommentReply(comment);\n  }\n\n  deleteComment(commentId, type) {\n    //console.log(\"Comment --> deleteComment...\"+commentId);\n    let _confirmDialog = this.state.confirmDialog;\n    _confirmDialog.show = !_confirmDialog.show;\n    this.setState(state => ({\n      commentDeletionData: {\n        commentId: commentId,\n        type: type\n      },\n      confirmDialog: _confirmDialog\n    }));\n  }\n\n}\n/*\r\n    References:\r\n    list-group -> https://getbootstrap.com/docs/4.0/components/list-group/\r\n    Collapse -> https://react-bootstrap.github.io/utilities/transitions/\r\n    padding/margin utilities -> https://getbootstrap.com/docs/4.0/utilities/spacing/\r\n\r\n*/","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/discussion/components/Comment.jsx"],"names":["React","Component","Collapse","FontAwesomeIcon","faCommentDots","faReply","faTrashAlt","CommentReply","ConfirmDialog","Comment","constructor","props","onConfirmDialogClose","value","_confirmDialog","state","confirmDialog","show","setState","onCommentDelete","f","commentDeletionData","onCommentReplyDelete","data","showReplies","title","message","cancelButtonLabel","okButtonLabel","render","comment","id","userImagePath","createdBy","createdOn","moderatorPermission","deleteComment","__html","content","commentPermission","commentReply","replies","length","toggleShowReplies","map","rIndex","onCommentReply","commentId","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Collapse } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCommentDots, faReply, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport CommentReply from './CommentReply';\r\nimport ConfirmDialog from './../../../_components/ConfirmDialog';\r\n\r\nexport default class Comment extends Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n            showReplies: false,\r\n            confirmDialog: { show:false, \r\n                            title:'Confirm', \r\n                            message:'Are you sure you want to Delete?', \r\n                            cancelButtonLabel:'No', \r\n                            okButtonLabel: 'Yes'\r\n                            },\r\n            commentDeletionData: null\r\n\t\t}\r\n\t}\r\n\t\r\n\t/*componentDidMount() {\r\n        console.log(\"Comment --> componentDidMount...\");\r\n    }\r\n    \r\n    shouldComponentUpdate(newProps, newState) {\r\n        console.log(\"Comment --> shouldComponentUpdate...\");\r\n        return newState.showReplies != this.state.showReplies\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.data.show !== this.props.data.show) {\r\n          this.setState({\r\n            data: newProps.data\r\n          });\r\n        }\r\n    }*/\r\n\r\n    render() {\r\n        //console.log(\"Comment --> render...\");\r\n        const comment = this.props.comment;\r\n        return (\r\n\t\t\t<>\r\n            <div key={comment.id} className=\"list-group-item list-group-item-action flex-column align-items-start p-2\">\r\n                <div className=\"d-flex w-100 justify-content-between\">\r\n                    <div>\r\n                        <img src={comment.userImagePath} className=\"ilearn-avatar\" alt=\"Profile\" />\r\n                        <h5 className=\"mb-1 mt-2 float-left\">{comment.createdBy}</h5>\r\n                    </div>\r\n                    <div>\r\n                        <small>{comment.createdOn}</small>\r\n                        { this.props.moderatorPermission &&\r\n                            <button className=\"btn btn-outline-danger ilearn-icon-button\" \r\n                                onClick={() => this.deleteComment(comment.id,'comment')} >\r\n                                <FontAwesomeIcon icon={ faTrashAlt }/> \r\n                            </button>\r\n                         \r\n                        }\r\n                    </div>\r\n                    \r\n                </div>\r\n                <p className=\"mb-1\"  dangerouslySetInnerHTML={{__html: comment.content}}>                                \r\n                </p>\r\n                <div className=\"d-flex w-100 justify-content-between text-primary\">\r\n                    { this.props.commentPermission && \r\n                        <button type=\"button\" className=\"btn btn-outline-primary\" \r\n                            onClick={() => this.commentReply(comment)} >\r\n                            <FontAwesomeIcon icon={ faReply }/> \r\n                            &nbsp; Reply\r\n                        </button>\r\n                    }\r\n                    { comment.replies.length>0 && \r\n                        <button type=\"button\" className=\"btn btn-outline-success\" \r\n                            onClick={() => this.toggleShowReplies()} \r\n                            aria-controls=\"comment-reply-collapse\"\r\n                            aria-expanded={this.state.showReplies} \r\n                        >\r\n                            <FontAwesomeIcon icon={ faCommentDots }/>\r\n                            &nbsp; Replies &nbsp;\r\n                            <span className=\"badge badge-success badge-pill\">{comment.replies.length}</span>\r\n                        </button>\r\n                    }                                    \r\n                </div>\r\n                { \r\n                    comment.replies.length>0 &&                                 \r\n                    <Collapse in={this.state.showReplies}>\r\n                        <div id=\"comment-reply-collapse\" className=\"alert alert-success p-1 mt-1\">\r\n                        {\r\n                            comment.replies.map((commentReply, rIndex) => {\r\n                                return (\r\n                                    <CommentReply key={`reply_`+rIndex} \r\n                                    comment={commentReply} \r\n                                    moderatorPermission={this.props.moderatorPermission} \r\n                                    onCommentReplyDelete={this.onCommentReplyDelete}/>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    </Collapse>    \r\n                }                              \r\n            </div>\r\n            <ConfirmDialog data={this.state.confirmDialog} \r\n                onConfirmDialogClose={this.onConfirmDialogClose} />\r\n\t\t\t</>\r\n        );\r\n    }    \r\n\r\n    toggleShowReplies() {\r\n        //console.log(\"Comment --> toggleShowReplies...\");\r\n        this.setState(state => ({ showReplies: !this.state.showReplies }));\r\n    }\r\n\r\n    commentReply(comment) {\r\n        //console.log(\"Comment --> commentReply...\"+comment.id);\r\n        const { onCommentReply = f => f } = this.props;\r\n        onCommentReply(comment);\r\n    }\r\n\r\n    deleteComment(commentId, type) {\r\n        //console.log(\"Comment --> deleteComment...\"+commentId);\r\n        let _confirmDialog = this.state.confirmDialog;\r\n        _confirmDialog.show = !_confirmDialog.show;\r\n        this.setState(state => ({\r\n            commentDeletionData : {commentId: commentId, type: type},\r\n            confirmDialog : _confirmDialog\r\n        }));\r\n            \r\n    }\r\n\r\n    onConfirmDialogClose = value => {\r\n        //console.log(\"Comment --> onConfirmDialogClose...\"+value);\r\n        let _confirmDialog = this.state.confirmDialog;\r\n        _confirmDialog.show = !_confirmDialog.show;\r\n        this.setState({ confirmDialog: _confirmDialog },\r\n            () => {\r\n                if(value) {\r\n                    const { onCommentDelete = f => f } = this.props;\r\n                    onCommentDelete(this.state.commentDeletionData);\r\n                } \r\n            }\r\n        );   \r\n    }\r\n\r\n    onCommentReplyDelete = data =>  {\r\n        //console.log(\"Comment --> onCommentReplyDelete...\"+JSON.stringify(data));\r\n        let _confirmDialog = this.state.confirmDialog;\r\n        _confirmDialog.show = !_confirmDialog.show;\r\n        this.setState(state => ({\r\n            commentDeletionData : data,\r\n            confirmDialog : _confirmDialog\r\n        }));\r\n    }\r\n\r\n}\r\n\r\n/*\r\n    References:\r\n    list-group -> https://getbootstrap.com/docs/4.0/components/list-group/\r\n    Collapse -> https://react-bootstrap.github.io/utilities/transitions/\r\n    padding/margin utilities -> https://getbootstrap.com/docs/4.0/utilities/spacing/\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}