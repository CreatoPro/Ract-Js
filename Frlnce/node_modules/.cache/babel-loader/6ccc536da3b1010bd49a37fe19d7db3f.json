{"ast":null,"code":"var _jsxFileName = \"S:\\\\REACT\\\\Ract-Js\\\\Frlnce\\\\src\\\\pages\\\\test\\\\TestInstructions.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport Config from \"../../_config/config\";\nimport ApiService from \"../../_services/ApiService\";\nimport swal from 'sweetalert';\n\nclass TestInstructions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.routeChange = () => {\n      let paramsString = this.props.location.search;\n      const params = new URLSearchParams(paramsString);\n      let lms = params.get('lms');\n      let title = params.get('title');\n      let path = `/test-taking/` + this.props.match.params.pid + '/' + this.props.match.params.id + \"?lms=\" + lms + \"&title=\" + title;\n      this.props.history.push(path); //this.props.history.replace(path);\n    };\n\n    this.state = {\n      message: null\n    };\n    this.reloadQuestionList = this.reloadQuestionList.bind(this);\n    this.downloadTest = this.downloadTest.bind(this);\n  }\n\n  componentDidMount() {\n    this.reloadQuestionList();\n    this.downloadTest();\n  }\n\n  downloadTest() {\n    var d = new Date();\n    var rand = d.getTime();\n    var testId = this.props.match.params.id;\n    var tenant = localStorage.getItem('tenant') || Config.siteTitle;\n    var testobj = 'https://tuningfork-' + Config.siteMode + '.s3.amazonaws.com/' + tenant + '/uploads/testPapers/' + testId + '/' + testId + '.json'; //alert(testobj);\n\n    this.setState({\n      showLoading: true\n    }, () => {\n      ApiService.fetchTestJson(testobj + \"?id=\" + rand).then(res => {\n        console.log(JSON.stringify(res));\n        let testObject = res.data;\n        this.setState({\n          testObject: testObject,\n          showLoading: false\n        });\n      }, error => {\n        this.setState({\n          showLoading: false\n        });\n\n        if (error.response.status == 404) {\n          swal({\n            text: \"Online test not available. Please contact administrator\",\n            icon: \"warning\",\n            button: \"Ok\",\n            allowOutsideClick: false,\n            closeOnClickOutside: false\n          }).then(willDelete => {\n            if (willDelete) {\n              window.close();\n            }\n          });\n        } else {\n          alert(Config.CONNECTION_ERROR_MSG);\n          window.close();\n        }\n      });\n    });\n  }\n\n  reloadQuestionList() {\n    var testObject = JSON.parse(localStorage.getItem('tests')) || [];\n\n    for (var i = 0; i < testObject.length; i++) {\n      if (testObject[i].id == this.props.match.params.id) {\n        this.setState({\n          testName: testObject[i].name\n        });\n        this.setState({\n          testTime: testObject[i].testTime\n        });\n        this.setState({\n          totalMarks: testObject[i].totalMarks\n        });\n        this.setState({\n          noOfQuestions: testObject[i].noOfQuestions\n        });\n        this.setState({\n          instructions: testObject[i].instructions\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      testObject\n    } = this.state;\n    let portlet = JSON.parse(localStorage.getItem('portlet')) || [];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `test-header ${portlet.class ? portlet.class : 'orange-card'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"testclose\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimesCircle,\n      onClick: this.props.history.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, this.state.testName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 44\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }\n    }, \"Test instructions\"), testObject && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mobile test_instructions\",\n      dangerouslySetInnerHTML: {\n        __html: testObject.instructions || testObject.webInstructions\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn stratTest\",\n      onClick: this.routeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }\n    }, \" CONTINUE\")));\n  }\n\n}\n\nexport default TestInstructions;","map":{"version":3,"sources":["S:/REACT/Ract-Js/Frlnce/src/pages/test/TestInstructions.js"],"names":["React","Component","FontAwesomeIcon","faTimesCircle","Config","ApiService","swal","TestInstructions","constructor","props","routeChange","paramsString","location","search","params","URLSearchParams","lms","get","title","path","match","pid","id","history","push","state","message","reloadQuestionList","bind","downloadTest","componentDidMount","d","Date","rand","getTime","testId","tenant","localStorage","getItem","siteTitle","testobj","siteMode","setState","showLoading","fetchTestJson","then","res","console","log","JSON","stringify","testObject","data","error","response","status","text","icon","button","allowOutsideClick","closeOnClickOutside","willDelete","window","close","alert","CONNECTION_ERROR_MSG","parse","i","length","testName","name","testTime","totalMarks","noOfQuestions","instructions","render","portlet","class","goBack","__html","webInstructions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport Config from \"../../_config/config\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport swal from 'sweetalert';\r\n\r\nclass TestInstructions extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            message: null,\r\n        }\r\n        this.reloadQuestionList = this.reloadQuestionList.bind(this);\r\n\t\tthis.downloadTest = this.downloadTest.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.reloadQuestionList();\r\n\t\tthis.downloadTest();\r\n    }\r\n\r\n\tdownloadTest(){\r\n\t\tvar d = new Date();\r\n\t\tvar rand = d.getTime();\r\n\t\tvar testId = this.props.match.params.id\r\n\t\tvar tenant = localStorage.getItem('tenant') || Config.siteTitle\r\n\t\tvar testobj = 'https://tuningfork-'+ Config.siteMode +'.s3.amazonaws.com/'+ tenant +'/uploads/testPapers/'+ testId +'/'+ testId +'.json';\r\n\t\t//alert(testobj);\r\n\t\tthis.setState({ showLoading: true }, () => {\r\n\t\t\tApiService.fetchTestJson(testobj+\"?id=\"+rand)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(JSON.stringify(res));\r\n\t\t\t\tlet testObject = res.data; \r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\ttestObject: testObject,\r\n\t\t\t\t\tshowLoading: false,\r\n\t\t\t\t});\r\n\t\t\t},error => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tshowLoading: false,\r\n\t\t\t\t});\r\n\t\t\t\tif(error.response.status==404){\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttext: \"Online test not available. Please contact administrator\",\r\n\t\t\t\t\t\ticon: \"warning\",\r\n\t\t\t\t\t\tbutton: \"Ok\",\r\n\t\t\t\t\t\tallowOutsideClick: false,\r\n\t\t\t\t\t\tcloseOnClickOutside: false\r\n\t\t\t\t\t  })\r\n\t\t\t\t\t  .then((willDelete) => {\r\n\t\t\t\t\t\t  if(willDelete){\r\n\t\t\t\t\t\t\t window.close();\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t  });\r\n\t\t\t\t}else{\r\n\t\t\t\t\talert(Config.CONNECTION_ERROR_MSG);\r\n\t\t\t\t\twindow.close();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t    });\r\n\t}\r\n\r\n    reloadQuestionList() {\r\n\t\tvar testObject = JSON.parse(localStorage.getItem('tests')) || [];\r\n\t\tfor(var i=0; i<testObject.length; i++){\r\n            if(testObject[i].id==this.props.match.params.id){\r\n\t\t\t\tthis.setState({testName: testObject[i].name});\r\n\t\t\t\tthis.setState({testTime: testObject[i].testTime});\r\n\t\t\t\tthis.setState({totalMarks: testObject[i].totalMarks});\r\n\t\t\t\tthis.setState({noOfQuestions: testObject[i].noOfQuestions}); \r\n\t\t\t\tthis.setState({instructions: testObject[i].instructions}); \r\n\t\t\t}\r\n\t\t}\t\r\n    }\r\n    \r\n\trouteChange=()=> {\r\n\t\tlet paramsString = this.props.location.search;\r\n        const params = new URLSearchParams(paramsString);\r\n        let lms =  params.get('lms');\r\n\t\tlet title =  params.get('title');\r\n\t\tlet path = `/test-taking/`+this.props.match.params.pid+'/'+this.props.match.params.id+\"?lms=\"+lms+\"&title=\"+title;\r\n\t\tthis.props.history.push(path);\r\n\t\t//this.props.history.replace(path);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { testObject } = this.state;\r\n\t\tlet portlet = JSON.parse(localStorage.getItem('portlet')) || [];\r\n\t\treturn(\t \r\n\t\t   <div> \r\n\t\t      <div className={`test-header ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n\t\t\t      <div className=\"testclose\">\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={ faTimesCircle } onClick={this.props.history.goBack} />\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <h4>{this.state.testName}</h4>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"question\"><br /><br /><br />\r\n\t\t\t\t<h4>Test instructions</h4>\r\n\t\t\t\t{ \r\n\t\t\t\t  testObject && \r\n\t\t\t\t   <p className=\"mobile test_instructions\" dangerouslySetInnerHTML={{ __html: testObject.instructions || testObject.webInstructions}} /> \r\n\t\t\t\t}\r\n\t\t\t\t{/* <p>Total Question: {this.state.noOfQuestions}</p>\r\n\t\t\t\t<p>Total Marks: {this.state.totalMarks}</p>\r\n\t\t\t\t<p>Total Time: {this.state.testTime} Min</p>\r\n\t\t        */}\r\n\t\t\t\t<button className=\"btn stratTest\" onClick={this.routeChange}> CONTINUE</button>\r\n\t\t\t  </div>\r\n\t\t   </div>\r\n\t\t)\r\n     }\r\n}\r\n\r\nexport default TestInstructions;"]},"metadata":{},"sourceType":"module"}