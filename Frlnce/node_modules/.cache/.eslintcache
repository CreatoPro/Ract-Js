[{"S:\\REACT\\Ract-Js\\Frlnce\\src\\index.js":"1","S:\\REACT\\Ract-Js\\Frlnce\\src\\push-notification.js":"2","S:\\REACT\\Ract-Js\\Frlnce\\src\\serviceWorker.js":"3","S:\\REACT\\Ract-Js\\Frlnce\\src\\App.js":"4","S:\\REACT\\Ract-Js\\Frlnce\\src\\_helpers\\store.js":"5","S:\\REACT\\Ract-Js\\Frlnce\\src\\_services\\ApiService.js":"6","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\main.js":"7","S:\\REACT\\Ract-Js\\Frlnce\\src\\_helpers\\utils.js":"8","S:\\REACT\\Ract-Js\\Frlnce\\src\\_config\\config.js":"9","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\header\\header.js":"10","S:\\REACT\\Ract-Js\\Frlnce\\src\\_services\\google-analytics\\google-analytics.service.jsx":"11","S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\index.js":"12","S:\\REACT\\Ract-Js\\Frlnce\\src\\_services\\UserService.js":"13","S:\\REACT\\Ract-Js\\Frlnce\\src\\_services\\axiosilearnWrapper.js":"14","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\login\\Forgetpwd.js":"15","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\login\\Login.js":"16","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\institute-card-detail\\InstituteCardDetail.js":"17","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\login\\Resetpwd.js":"18","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\profile\\Logout.js":"19","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\attendance\\Attendance.js":"20","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\profile\\ChangePassword.js":"21","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\dashboard\\Dashboard.js":"22","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\login\\Register.js":"23","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\biometric-attendance\\BiometricAttendance.js":"24","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\refer\\Refer.js":"25","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\biometric-attendance\\BiometricAttendanceSemester.js":"26","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\refer\\ReferDetails.js":"27","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\Learning.js":"28","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\product\\ProductList.js":"29","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\LearningSteps.js":"30","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\profile\\Profile.js":"31","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\product\\Product.js":"32","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestList.js":"33","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\LearningStepAttachments.js":"34","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestListDetails.js":"35","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestInstructions.js":"36","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestSubmit.js":"37","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestResultQuestion.js":"38","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\LearningPDFDetails.js":"39","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestResultDetail.js":"40","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestPDFDetails.js":"41","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestTaking.js":"42","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestResult.js":"43","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\test-details.component.js":"44","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\analysis\\AnalysisList.js":"45","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestUploadDetails.js":"46","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\analysis\\Analysis.js":"47","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\resource\\Resource.js":"48","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\resource\\ResourcePDFDetails.js":"49","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\exam-upload\\ExamUpload.js":"50","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\analysis\\AnalysisReportDetails.js":"51","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\exam-upload\\ExamUploadDetails.js":"52","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\exam-upload\\ExamPDFDetails.js":"53","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test-player\\TestInstructions.js":"54","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\play-ground\\PlayGround.js":"55","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\my-programs\\MyPrograms.js":"56","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\resource\\ResourceDetails.js":"57","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test-player\\TestPlayer.js":"58","S:\\REACT\\Ract-Js\\Frlnce\\src\\_services\\google-analytics\\register-event.service.jsx":"59","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\learningStepAttacmentDetails.wrapper.jsx":"60","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\product\\ProductDetails.jsx":"61","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\notification\\Notification.jsx":"62","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\quiz\\QuizList.jsx":"63","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\quiz\\QuizResult.jsx":"64","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\quiz\\QuizZone.jsx":"65","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\quiz\\LeaderBoard.jsx":"66","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\quiz\\Wallet.jsx":"67","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\quiz\\QuizPlayer.jsx":"68","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\payments\\paymentDetail.jsx":"69","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\payments\\makePayment.jsx":"70","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\payments\\payments.jsx":"71","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\timetable\\TimeTable.jsx":"72","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\payments\\paymentHistory.jsx":"73","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\lecode-games\\Games.jsx":"74","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\discussion\\DiscussionBoard.jsx":"75","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\discussion\\AddTopic.jsx":"76","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\discussion\\DiscussionBoardTopicList.jsx":"77","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\discussion\\DiscussionBoardTopic.jsx":"78","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\document-upload\\document-upload.component.jsx":"79","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\admit-card\\admit-card.component.jsx":"80","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\lecode-games\\Components\\Plays.jsx":"81","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\verify-mobile\\verify-mobile.component.jsx":"82","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\payments\\receipt-series.component.jsx":"83","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\detailed-profiling\\detailed-profiling.component.jsx":"84","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\shaka\\shaka.component.jsx":"85","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\feedback-form\\studentfedback.component.jsx":"86","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\chatbot\\chatbot.jsx":"87","S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\ExamUploadReducer.js":"88","S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\AnalysisReducer.js":"89","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\home\\index.jsx":"90","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\video-player\\index.jsx":"91","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\scratch-pad\\index.jsx":"92","S:\\REACT\\Ract-Js\\Frlnce\\src\\_actions\\analysisActions.js":"93","S:\\REACT\\Ract-Js\\Frlnce\\src\\_actions\\attendanceActions.js":"94","S:\\REACT\\Ract-Js\\Frlnce\\src\\_actions\\examUploadActions.js":"95","S:\\REACT\\Ract-Js\\Frlnce\\src\\_actions\\productActions.js":"96","S:\\REACT\\Ract-Js\\Frlnce\\src\\_actions\\bioMetricAttendanceActions.js":"97","S:\\REACT\\Ract-Js\\Frlnce\\src\\_constants\\studyResourceTypes.js":"98","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\loader\\loader.js":"99","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\xapi\\xapiutils.js":"100","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\LearningStepAttachmentDetails.js":"101","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\iloader\\iloader.jsx":"102","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\OTPValidator.jsx":"103","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\epub\\index.js":"104","S:\\REACT\\Ract-Js\\Frlnce\\src\\_services\\ThemeService.js":"105","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\video-player\\index.jsx":"106","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\components\\Resource.jsx":"107","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\horizontal-date-picker\\HorizontalDatePicker.js":"108","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\proctored\\index.jsx":"109","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test-player\\components\\Question.jsx":"110","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\lecode-games\\Components\\UpcomingGameDetails.jsx":"111","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\discussion\\components\\Comment.jsx":"112","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\lecode-games\\Components\\RegisterGames.jsx":"113","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\lecode-games\\Components\\OpenGameDetails.jsx":"114","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\lecode-games\\Components\\CompletedGameDetails.jsx":"115","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\lecode-games\\Components\\GamePlaysInvitations.jsx":"116","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\epub\\ReactReader\\style.js":"117","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\epub\\ReactReader\\ReactReader.js":"118","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\components\\Model.jsx":"119","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\epub\\EpubView\\style.js":"120","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\epub\\EpubView\\EpubView.js":"121","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\video-player\\vdocipher\\index.jsx":"122","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\home\\mobile\\index.jsx":"123","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\home\\desktop\\index.jsx":"124","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test-player\\components\\Types.jsx":"125","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\video-player\\MediaElementVideoPlayer.jsx":"126","S:\\REACT\\Ract-Js\\Frlnce\\src\\_constants\\variables.js":"127","S:\\REACT\\Ract-Js\\Frlnce\\src\\_services\\useGetData.js":"128","S:\\REACT\\Ract-Js\\Frlnce\\src\\common\\NoData.js":"129","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\discussion\\components\\CommentReply.jsx":"130","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\ConfirmDialog.jsx":"131","S:\\REACT\\Ract-Js\\Frlnce\\src\\common\\FormFunctions.js":"132","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\login\\FacebookLoginComponent.jsx":"133","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\video-player\\MediaElement.jsx":"134","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\timer\\timer.js":"135","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test-player\\components\\Model.jsx":"136","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test-player\\components\\QuestionPalette.jsx":"137","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test-player\\components\\Section.jsx":"138","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test-player\\components\\Header.jsx":"139","S:\\REACT\\Ract-Js\\Frlnce\\src\\_actions\\resourceActions.js":"140","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\iframe\\iframe.js":"141","S:\\REACT\\Ract-Js\\Frlnce\\src\\_actions\\userActions.js":"142","S:\\REACT\\Ract-Js\\Frlnce\\src\\_actions\\dashboardActions.js":"143","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\sidebar\\sidebar.js":"144","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\components\\notes-forwarding.component.jsx":"145","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\components\\Notes.jsx":"146","S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\ProductReducer.js":"147","S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\BiometricAttendanceReducer.js":"148","S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\ResourceReducer.js":"149","S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\AttendanceReducer.js":"150","S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\DashboardReducer.js":"151","S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\UsersReducer.js":"152","S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\MessagesReducer.js":"153","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\recommendation-engine\\RecommendationEngine.js":"154","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\feedback-form\\InstructorFeedback.jsx":"155","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\feedback-form\\FeedbackForm.jsx":"156","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\discipline\\discipline.component.jsx":"157","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\convocation\\convocation.component.jsx":"158","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\camera\\camera.component.jsx":"159","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\mentor-transcripts\\mentor-transcripts.component.jsx":"160","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\exam-time-table\\ExamTimeTable.jsx":"161","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\exam-time-table\\ExamList.jsx":"162","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\dossier\\dossier.component.jsx":"163","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\today-tests\\TodayTests.jsx":"164","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\xapi\\index.js":"165","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\components\\notes-mobile.component.jsx":"166","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\convocation\\component\\modal-box.component.jsx":"167","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\image-preview\\image-preview.component.jsx":"168"},{"size":1768,"mtime":1670516740302,"results":"169","hashOfConfig":"170"},{"size":5001,"mtime":1670516740259,"results":"171","hashOfConfig":"170"},{"size":5271,"mtime":1670516740470,"results":"172","hashOfConfig":"170"},{"size":2118,"mtime":1670516740255,"results":"173","hashOfConfig":"170"},{"size":422,"mtime":1670516731562,"results":"174","hashOfConfig":"170"},{"size":23722,"mtime":1670516731991,"results":"175","hashOfConfig":"170"},{"size":15720,"mtime":1670516740436,"results":"176","hashOfConfig":"170"},{"size":3089,"mtime":1670516731650,"results":"177","hashOfConfig":"170"},{"size":1293,"mtime":1670516733343,"results":"178","hashOfConfig":"170"},{"size":498,"mtime":1670516730496,"results":"179","hashOfConfig":"170"},{"size":465,"mtime":1670516731926,"results":"180","hashOfConfig":"170"},{"size":896,"mtime":1670516731923,"results":"181","hashOfConfig":"170"},{"size":576,"mtime":1670516731930,"results":"182","hashOfConfig":"170"},{"size":401,"mtime":1670516733403,"results":"183","hashOfConfig":"170"},{"size":5046,"mtime":1670516736715,"results":"184","hashOfConfig":"170"},{"size":8001,"mtime":1670516736601,"results":"185","hashOfConfig":"170"},{"size":1844,"mtime":1670516733997,"results":"186","hashOfConfig":"170"},{"size":4104,"mtime":1670516736726,"results":"187","hashOfConfig":"170"},{"size":775,"mtime":1670516739880,"results":"188","hashOfConfig":"170"},{"size":2968,"mtime":1670516732108,"results":"189","hashOfConfig":"170"},{"size":4021,"mtime":1670516736975,"results":"190","hashOfConfig":"170"},{"size":15717,"mtime":1670516732883,"results":"191","hashOfConfig":"170"},{"size":11226,"mtime":1670516737205,"results":"192","hashOfConfig":"170"},{"size":3188,"mtime":1670516732117,"results":"193","hashOfConfig":"170"},{"size":1661,"mtime":1670516739667,"results":"194","hashOfConfig":"170"},{"size":2834,"mtime":1670516732109,"results":"195","hashOfConfig":"170"},{"size":6274,"mtime":1670516737150,"results":"196","hashOfConfig":"170"},{"size":8972,"mtime":1670957419652,"results":"197","hashOfConfig":"170"},{"size":2068,"mtime":1670516736664,"results":"198","hashOfConfig":"170"},{"size":18359,"mtime":1670516736489,"results":"199","hashOfConfig":"170"},{"size":2189,"mtime":1670516739662,"results":"200","hashOfConfig":"170"},{"size":3170,"mtime":1671530905906,"results":"201","hashOfConfig":"170"},{"size":4964,"mtime":1670516740019,"results":"202","hashOfConfig":"170"},{"size":8437,"mtime":1670516736179,"results":"203","hashOfConfig":"170"},{"size":19344,"mtime":1670516739650,"results":"204","hashOfConfig":"170"},{"size":3801,"mtime":1670516739648,"results":"205","hashOfConfig":"170"},{"size":6603,"mtime":1670516740189,"results":"206","hashOfConfig":"170"},{"size":1244,"mtime":1670516739652,"results":"207","hashOfConfig":"170"},{"size":3527,"mtime":1670516736182,"results":"208","hashOfConfig":"170"},{"size":1221,"mtime":1670516740021,"results":"209","hashOfConfig":"170"},{"size":2967,"mtime":1670516740186,"results":"210","hashOfConfig":"170"},{"size":33292,"mtime":1670516739651,"results":"211","hashOfConfig":"170"},{"size":44325,"mtime":1670516739649,"results":"212","hashOfConfig":"170"},{"size":8367,"mtime":1670516739653,"results":"213","hashOfConfig":"170"},{"size":1912,"mtime":1670516732014,"results":"214","hashOfConfig":"170"},{"size":5166,"mtime":1670516740304,"results":"215","hashOfConfig":"170"},{"size":2616,"mtime":1670516732105,"results":"216","hashOfConfig":"170"},{"size":13631,"mtime":1670516740100,"results":"217","hashOfConfig":"170"},{"size":3363,"mtime":1670516740015,"results":"218","hashOfConfig":"170"},{"size":3343,"mtime":1670516733868,"results":"219","hashOfConfig":"170"},{"size":7795,"mtime":1670516733488,"results":"220","hashOfConfig":"170"},{"size":5335,"mtime":1670516733869,"results":"221","hashOfConfig":"170"},{"size":3164,"mtime":1670516733726,"results":"222","hashOfConfig":"170"},{"size":28087,"mtime":1670516740201,"results":"223","hashOfConfig":"170"},{"size":1783,"mtime":1670516736766,"results":"224","hashOfConfig":"170"},{"size":1242,"mtime":1670516737225,"results":"225","hashOfConfig":"170"},{"size":6170,"mtime":1670516739643,"results":"226","hashOfConfig":"170"},{"size":77937,"mtime":1670516739675,"results":"227","hashOfConfig":"170"},{"size":232,"mtime":1670516733384,"results":"228","hashOfConfig":"170"},{"size":474,"mtime":1670516736183,"results":"229","hashOfConfig":"170"},{"size":6216,"mtime":1670516736587,"results":"230","hashOfConfig":"170"},{"size":3455,"mtime":1670516736494,"results":"231","hashOfConfig":"170"},{"size":4942,"mtime":1670516736996,"results":"232","hashOfConfig":"170"},{"size":4938,"mtime":1670516736985,"results":"233","hashOfConfig":"170"},{"size":6195,"mtime":1670516739664,"results":"234","hashOfConfig":"170"},{"size":5248,"mtime":1670516736983,"results":"235","hashOfConfig":"170"},{"size":4766,"mtime":1670516737146,"results":"236","hashOfConfig":"170"},{"size":37546,"mtime":1670516739904,"results":"237","hashOfConfig":"170"},{"size":11956,"mtime":1670516736658,"results":"238","hashOfConfig":"170"},{"size":6889,"mtime":1670516736495,"results":"239","hashOfConfig":"170"},{"size":4806,"mtime":1670516736495,"results":"240","hashOfConfig":"170"},{"size":15545,"mtime":1670516739678,"results":"241","hashOfConfig":"170"},{"size":5569,"mtime":1670516737242,"results":"242","hashOfConfig":"170"},{"size":3377,"mtime":1670516736185,"results":"243","hashOfConfig":"170"},{"size":7261,"mtime":1670516733683,"results":"244","hashOfConfig":"170"},{"size":6223,"mtime":1670516733925,"results":"245","hashOfConfig":"170"},{"size":8138,"mtime":1670516733702,"results":"246","hashOfConfig":"170"},{"size":17508,"mtime":1670516733685,"results":"247","hashOfConfig":"170"},{"size":5348,"mtime":1670516733686,"results":"248","hashOfConfig":"170"},{"size":5782,"mtime":1670516731995,"results":"249","hashOfConfig":"170"},{"size":5883,"mtime":1670516736184,"results":"250","hashOfConfig":"170"},{"size":11491,"mtime":1670516739857,"results":"251","hashOfConfig":"170"},{"size":4414,"mtime":1670516736658,"results":"252","hashOfConfig":"170"},{"size":20815,"mtime":1670516733443,"results":"253","hashOfConfig":"170"},{"size":6950,"mtime":1670516739644,"results":"254","hashOfConfig":"170"},{"size":3686,"mtime":1670516733870,"results":"255","hashOfConfig":"170"},{"size":497,"mtime":1670516732876,"results":"256","hashOfConfig":"170"},{"size":314,"mtime":1670516731920,"results":"257","hashOfConfig":"170"},{"size":304,"mtime":1670516733375,"results":"258","hashOfConfig":"170"},{"size":796,"mtime":1670516733875,"results":"259","hashOfConfig":"170"},{"size":1758,"mtime":1670516740412,"results":"260","hashOfConfig":"170"},{"size":2159,"mtime":1670516737414,"results":"261","hashOfConfig":"170"},{"size":370,"mtime":1670516731596,"results":"262","hashOfConfig":"170"},{"size":377,"mtime":1670516730439,"results":"263","hashOfConfig":"170"},{"size":456,"mtime":1670516731597,"results":"264","hashOfConfig":"170"},{"size":421,"mtime":1670516730441,"results":"265","hashOfConfig":"170"},{"size":413,"mtime":1670516730460,"results":"266","hashOfConfig":"170"},{"size":84,"mtime":1670516731648,"results":"267","hashOfConfig":"170"},{"size":394,"mtime":1670516730548,"results":"268","hashOfConfig":"170"},{"size":3951,"mtime":1670516740251,"results":"269","hashOfConfig":"170"},{"size":13923,"mtime":1670516737098,"results":"270","hashOfConfig":"170"},{"size":778,"mtime":1670516731633,"results":"271","hashOfConfig":"170"},{"size":5638,"mtime":1670516731647,"results":"272","hashOfConfig":"170"},{"size":258,"mtime":1670516730444,"results":"273","hashOfConfig":"170"},{"size":4203,"mtime":1670516731924,"results":"274","hashOfConfig":"170"},{"size":700,"mtime":1670516733328,"results":"275","hashOfConfig":"170"},{"size":7703,"mtime":1670516733998,"results":"276","hashOfConfig":"170"},{"size":5312,"mtime":1670516730444,"results":"277","hashOfConfig":"170"},{"size":866,"mtime":1670516733299,"results":"278","hashOfConfig":"170"},{"size":2016,"mtime":1670516739656,"results":"279","hashOfConfig":"170"},{"size":6427,"mtime":1670516736181,"results":"280","hashOfConfig":"170"},{"size":6852,"mtime":1670516733445,"results":"281","hashOfConfig":"170"},{"size":2722,"mtime":1670516737127,"results":"282","hashOfConfig":"170"},{"size":5336,"mtime":1670516736490,"results":"283","hashOfConfig":"170"},{"size":5336,"mtime":1670516737116,"results":"284","hashOfConfig":"170"},{"size":2696,"mtime":1670516736180,"results":"285","hashOfConfig":"170"},{"size":2571,"mtime":1670516731600,"results":"286","hashOfConfig":"170"},{"size":4702,"mtime":1670516733254,"results":"287","hashOfConfig":"170"},{"size":4210,"mtime":1670516737053,"results":"288","hashOfConfig":"170"},{"size":176,"mtime":1670516730462,"results":"289","hashOfConfig":"170"},{"size":4293,"mtime":1670516730443,"results":"290","hashOfConfig":"170"},{"size":1112,"mtime":1670516739681,"results":"291","hashOfConfig":"170"},{"size":8627,"mtime":1670516733876,"results":"292","hashOfConfig":"170"},{"size":14465,"mtime":1670516734163,"results":"293","hashOfConfig":"170"},{"size":524,"mtime":1670516740193,"results":"294","hashOfConfig":"170"},{"size":2851,"mtime":1670516731567,"results":"295","hashOfConfig":"170"},{"size":130,"mtime":1670516731918,"results":"296","hashOfConfig":"170"},{"size":990,"mtime":1670516731993,"results":"297","hashOfConfig":"170"},{"size":221,"mtime":1670516731931,"results":"298","hashOfConfig":"170"},{"size":2522,"mtime":1670516733432,"results":"299","hashOfConfig":"170"},{"size":2058,"mtime":1670516731559,"results":"300","hashOfConfig":"170"},{"size":473,"mtime":1670516731925,"results":"301","hashOfConfig":"170"},{"size":2654,"mtime":1670516737204,"results":"302","hashOfConfig":"170"},{"size":6811,"mtime":1670516731558,"results":"303","hashOfConfig":"170"},{"size":1782,"mtime":1670516733313,"results":"304","hashOfConfig":"170"},{"size":1476,"mtime":1670516740192,"results":"305","hashOfConfig":"170"},{"size":1474,"mtime":1670516740317,"results":"306","hashOfConfig":"170"},{"size":2446,"mtime":1670516739657,"results":"307","hashOfConfig":"170"},{"size":406,"mtime":1670516739655,"results":"308","hashOfConfig":"170"},{"size":384,"mtime":1670516730460,"results":"309","hashOfConfig":"170"},{"size":988,"mtime":1670516730520,"results":"310","hashOfConfig":"170"},{"size":3018,"mtime":1670516733226,"results":"311","hashOfConfig":"170"},{"size":366,"mtime":1670516733217,"results":"312","hashOfConfig":"170"},{"size":1594,"mtime":1670516731553,"results":"313","hashOfConfig":"170"},{"size":386,"mtime":1670516737057,"results":"314","hashOfConfig":"170"},{"size":2980,"mtime":1670516736484,"results":"315","hashOfConfig":"170"},{"size":299,"mtime":1670516731922,"results":"316","hashOfConfig":"170"},{"size":359,"mtime":1670516731922,"results":"317","hashOfConfig":"170"},{"size":304,"mtime":1670516733376,"results":"318","hashOfConfig":"170"},{"size":314,"mtime":1670516731919,"results":"319","hashOfConfig":"170"},{"size":309,"mtime":1670516733375,"results":"320","hashOfConfig":"170"},{"size":653,"mtime":1670516731921,"results":"321","hashOfConfig":"170"},{"size":304,"mtime":1670516731564,"results":"322","hashOfConfig":"170"},{"size":1864,"mtime":1670516737156,"results":"323","hashOfConfig":"170"},{"size":7210,"mtime":1670516733871,"results":"324","hashOfConfig":"170"},{"size":27601,"mtime":1670516734146,"results":"325","hashOfConfig":"170"},{"size":7110,"mtime":1670516733589,"results":"326","hashOfConfig":"170"},{"size":14528,"mtime":1670516733554,"results":"327","hashOfConfig":"170"},{"size":7727,"mtime":1670516732370,"results":"328","hashOfConfig":"170"},{"size":4229,"mtime":1670516736493,"results":"329","hashOfConfig":"170"},{"size":4984,"mtime":1670516734126,"results":"330","hashOfConfig":"170"},{"size":10908,"mtime":1670516733723,"results":"331","hashOfConfig":"170"},{"size":5486,"mtime":1670516733865,"results":"332","hashOfConfig":"170"},{"size":8899,"mtime":1670516740363,"results":"333","hashOfConfig":"170"},{"size":4453,"mtime":1670516740279,"results":"334","hashOfConfig":"170"},{"size":1357,"mtime":1670516734000,"results":"335","hashOfConfig":"170"},{"size":1144,"mtime":1670516732378,"results":"336","hashOfConfig":"170"},{"size":914,"mtime":1670516731634,"results":"337","hashOfConfig":"170"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},"wo36aq",{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"340"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"340"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"340"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"340"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"340"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"340"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"340"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"340"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"340"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"340"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"340"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"340"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"340"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"340"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"340"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"340"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"340"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"340"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"340"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"340"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"340"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"340"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"340"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":84,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"340"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":3,"source":"450","usedDeprecatedRules":"340"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"340"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"340"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":80,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"340"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"340"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"340"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"340"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"340"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":2,"source":"480","usedDeprecatedRules":"340"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"340"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"340"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":83,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"340"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"340"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"340"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"504","usedDeprecatedRules":"340"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"340"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"510","usedDeprecatedRules":"340"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"340"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"340"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":98,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"340"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"340"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"529","usedDeprecatedRules":"340"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"340"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"340"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"340"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"340"},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"340"},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"340"},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"340"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"340"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"340"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"340"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"340"},{"filePath":"603","messages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"605","messages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607","usedDeprecatedRules":"340"},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"340"},{"filePath":"611","messages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"613","usedDeprecatedRules":"340"},{"filePath":"614","messages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"340"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619","usedDeprecatedRules":"340"},{"filePath":"620","messages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622","usedDeprecatedRules":"340"},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"340"},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"628","messages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"630","messages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"340"},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635","usedDeprecatedRules":"340"},{"filePath":"636","messages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"640","messages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"642","messages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"644","usedDeprecatedRules":"340"},{"filePath":"645","messages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"340"},{"filePath":"652","messages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654","usedDeprecatedRules":"340"},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661","usedDeprecatedRules":"340"},{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"340"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"340"},{"filePath":"672","messages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"674","messages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"676","messages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678","usedDeprecatedRules":"340"},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"681","usedDeprecatedRules":"340"},{"filePath":"682","messages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"684","usedDeprecatedRules":"340"},{"filePath":"685","messages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687","usedDeprecatedRules":"340"},{"filePath":"688","messages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"690","usedDeprecatedRules":"340"},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"693","usedDeprecatedRules":"340"},{"filePath":"694","messages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"696","usedDeprecatedRules":"340"},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701","usedDeprecatedRules":"340"},{"filePath":"702","messages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"704","messages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"706","messages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708","usedDeprecatedRules":"340"},{"filePath":"709","messages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"711","messages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"713","usedDeprecatedRules":"340"},{"filePath":"714","messages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"718","messages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"720","messages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"722","messages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"728","messages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730","usedDeprecatedRules":"340"},{"filePath":"731","messages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"733","usedDeprecatedRules":"340"},{"filePath":"734","messages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"736","usedDeprecatedRules":"340"},{"filePath":"737","messages":"738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"739","messages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"743","messages":"744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"745","messages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"340"},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750","usedDeprecatedRules":"340"},{"filePath":"751","messages":"752","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"753","messages":"754","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755","usedDeprecatedRules":"340"},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"340"},{"filePath":"759","messages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"761","messages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"763","messages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},"S:\\REACT\\Ract-Js\\Frlnce\\src\\index.js",[],["765","766"],"S:\\REACT\\Ract-Js\\Frlnce\\src\\push-notification.js",["767"],"import firebase from \"firebase/app\";\r\nimport \"firebase/messaging\";\r\nimport Utils from \"./_helpers/utils\";\r\nimport ApiService from \"./_services/ApiService\";\r\n\r\nexport const initializeFirebase = () => {\r\n    //console.log(\"In push-notification.js; initializeFirebase()...\");\r\n    const config = {\r\n            apiKey: \"AIzaSyBPJztL4oJRKJhOa6ibGXWEvtzXD1rsC7M\",\r\n            projectId: \"fresh-yen-802\",\r\n            messagingSenderId: \"999041119542\",\r\n            appId: \"1:999041119542:web:ff82d43596b1393583af97\"\r\n    };\r\n\r\n    firebase.initializeApp(config);\r\n}\r\n\r\nexport const askForPermissionToReceiveNotifications = async () => {\r\n    //alert(\"IN askForPermissionToReceiveNotifications...\");\r\n    //console.log(\"In push-notification.js; askForPermissionToReceiveNotifications()...\");\r\n    try {\r\n        const messaging = firebase.messaging();\r\n        await messaging.requestPermission();\r\n        const token = await messaging.getToken();\r\n        //console.log(\"token : \", token);\r\n        localStorage.setItem(\"notification-token\", token);\r\n        //alert(\"IN askForPermissionToReceiveNotifications >> Token :\"+token);\r\n        //console.log(\"In push-notification.js; askForPermissionToReceiveNotifications() >> Token :\"+token);\r\n        return token\r\n        \r\n    } catch (error) {\r\n        //alert(\"IN askForPermissionToReceiveNotifications >> Error :\"+error);\r\n        console.log(\"In push-notification.js; askForPermissionToReceiveNotifications() >> Error :\"+error);\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport const saveNotification = (notificationData) =>{\r\n    //console.log(\"In push-notification.js; savePushNotification()...\"+JSON.stringify(notificationData));\r\n    let notificationDate = Utils.formatStringDateWithTime(new Date());\r\n    notificationData.receivedDate = notificationDate;\r\n    notificationData.status = 0; //0: UnRead ; 1: Read\r\n    let notificationMsgs = localStorage.getItem('ilearn-notifications');\r\n    let notificationJSONArray = [];\r\n    if(notificationMsgs) {\r\n        notificationJSONArray = JSON.parse(notificationMsgs);    \r\n    }\r\n    notificationJSONArray.push(notificationData)\r\n    localStorage.setItem('ilearn-notifications', JSON.stringify(notificationJSONArray));\r\n}\r\n\r\nexport const getUnReadNotificationCount = () =>{\r\n    //console.log(\"In push-notification.js; getUnReadNotificationCount()...\");\r\n    let notificationCount = 0;\r\n    let notificationMsgs = localStorage.getItem('ilearn-notifications');\r\n    let notificationJSONArray = [];\r\n    if(notificationMsgs) {\r\n        notificationJSONArray = JSON.parse(notificationMsgs);    \r\n    }\r\n    notificationJSONArray.forEach((notification) => {\r\n        if(notification.status == 0) {\r\n            notificationCount++;\r\n        }\r\n    });\r\n    return notificationCount;\r\n}\r\n\r\nexport const markNotificationsAsRead = () =>{\r\n    //console.log(\"In push-notification.js; markNotificationsAsRead()... \");\r\n    let notificationMsgs = localStorage.getItem('ilearn-notifications');\r\n    let notificationJSONArray = [];\r\n    let readNotificationJSONArray = [];\r\n    if(notificationMsgs) {\r\n        notificationJSONArray = JSON.parse(notificationMsgs);    \r\n    }\r\n    notificationJSONArray.forEach((notification) => {\r\n      notification.status = 1;\r\n      readNotificationJSONArray.push(notification);\r\n    });\r\n    localStorage.setItem('ilearn-notifications', JSON.stringify(readNotificationJSONArray));\r\n}\r\n\r\nexport const checkNewNotificationsOnServer = async () =>{\r\n    //console.log(\"In push-notification.js; checkNewNotificationsOnServer()... \");\r\n    ApiService.getNotificationMessages()\r\n    .then((res) => {\r\n      let newNotifications = res.data.data;\r\n      //console.log(\"In push-notification.js; checkNewNotificationsOnServer(); res : \"+JSON.stringify(newNotifications));\r\n      let notificationMsgs = localStorage.getItem('ilearn-notifications');\r\n      let notifications =  notificationMsgs?JSON.parse(notificationMsgs):[];\r\n      let _notifications = notifications;\r\n      newNotifications.forEach(newNotification => {\r\n        let isAlreadyExists = false;\r\n        notifications = _notifications;\r\n        //console.log(\"New NotificationId : \"+newNotification.messageId);\r\n        notifications.forEach(existingNotification => {\r\n            //console.log(\"Existing NotificationId : \"+existingNotification.messageId+\"===\"+newNotification.messageId+\"<<>>\"+existingNotification.messageId===newNotification.messageId);\r\n            if(existingNotification.message===newNotification.message) {\r\n                isAlreadyExists = true;\r\n            }  \r\n        }); \r\n        if(!isAlreadyExists) {\r\n            newNotification.status = 0;\r\n            newNotification.receivedDate = newNotification.sendDate;\r\n            _notifications.push(newNotification);\r\n        }\r\n      });\r\n      localStorage.setItem('ilearn-notifications', JSON.stringify(_notifications));\r\n    },\r\n    error => { //ErrorCB\r\n      //console.log(\"In push-notification.js; Connection Error...\");\r\n    });\r\n}\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\serviceWorker.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\App.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_helpers\\store.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_services\\ApiService.js",["768","769","770","771","772"],"import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport myAxios from './axiosilearnWrapper'\r\nimport Config from '../_config/config'\r\nimport UserService from './UserService'\r\n\r\nclass ApiService extends Component {\r\n\r\n    fetchHome() {\t\t\r\n        return axios.get(Config.apiUrl + 'init/institute/home');\r\n    }\r\n\r\n    getActiveTheme() {\r\n        return axios.get(Config.apiUrl + 'init/theme');\r\n    }\r\n\r\n    getData(url){\r\n        return axios.get(url,{\r\n            \"access-control-allow-origin\" : \"*\"\r\n        })\r\n    }\r\n    getDeviceId() {\r\n        let deviceId = localStorage.getItem('ilearn-pwa-deviceId');\r\n        if(!deviceId) {\r\n            console.log(\"DeviceId Not found generating new\");\r\n            let sixdigitsrandom = Math.floor(100000 + Math.random() * 900000);\r\n            deviceId = \"PWA-\"+sixdigitsrandom;\r\n            localStorage.setItem('ilearn-pwa-deviceId', deviceId);\r\n        }\r\n        return deviceId;\r\n    }\r\n\r\n    generateEndPoint(postJSON) {\r\n        let url = Config.apiUrl+'student/generate/push/endpoint';\r\n        console.log(url);     \r\n        return axios.post(url, postJSON);\r\n    }\r\n\r\n    fetchLogin(username, password) {\r\n        var dataString = {\r\n            \"userName\":username,\r\n            \"password\":password,\r\n            \"deviceId\": this.getDeviceId()\r\n          };\r\n        return axios.post(Config.baseUrl + 'authenticate/user',dataString,{\r\n             \"access-control-allow-origin\" : \"*\"\r\n        });\r\n    }\r\n\r\n    fetchLoginToken(token) {\r\n        var dataString = {\r\n            \"token\":token,\r\n            \"deviceId\": this.getDeviceId()\r\n          };\r\n        return axios.post(Config.baseUrl + 'authenticate/user',dataString,{\r\n            \"access-control-allow-origin\" : \"*\"\r\n        });\r\n    }\r\n\r\n    verifyOTP(userId, otp) {\r\n        var dataString = {\r\n            \"userId\": userId,\r\n            \"otp\": otp,\r\n            \"deviceId\": this.getDeviceId()\r\n          };\r\n        return axios.post(Config.baseUrl + 'verify/otp',dataString);    \r\n    }\r\n\r\n    openIdLogin(credentials) {\r\n        let url =  Config.siteUrl +\"rest/mobile/authenticate/user/openid\";\r\n        console.log(url); \r\n        return axios.post(url, credentials) ;\r\n    } \r\n\r\n    fetchRegisterList() {\r\n        return axios.get(Config.siteUrl + 'api/common/quickEnquiry/form/3');\r\n    }\r\n\r\n    fetchRegister(data) {\r\n        var dataString = data;\r\n\t\t//console.log(\"Register JSON : \"+JSON.stringify(dataString));\r\n        console.log(Config.siteUrl + 'api/common/quickEnquiry/save/3');\r\n        console.log(data);\r\n        return axios.post(Config.siteUrl + 'api/common/quickEnquiry/save/3',dataString);\r\n    }\r\n\r\n    fetchForgetpwd(username) {\r\n        var dataString = {\r\n            \"userName\":username,\r\n          };\r\n        return axios.post(Config.apiUrl + 'password/recover',dataString);\r\n    }\r\n\t\r\n\tfetchResetpwd(username, newPassword, confirmPassword) {\r\n        var dataString = {\r\n            \"userName\":username,\r\n            \"newPassword\":newPassword,\r\n            \"confirmPassword\":confirmPassword\r\n          };\r\n        return axios.post(Config.apiUrl + 'password/reset',dataString);\r\n    }\r\n\r\n    fetchChangePwd(username, currentPassword, newPassword, confirmPassword) {\r\n        var dataString = {\r\n            \"userName\":username,\r\n            \"currentPassword\":currentPassword,\r\n            \"newPassword\":newPassword,\r\n            \"confirmPassword\":confirmPassword\r\n          };\r\n        return axios.post(Config.apiUrl + 'password/edit',dataString);\r\n    }\r\n\r\n    fetchDashboard() {\r\n\t\tvar d = new Date();\r\n        var rand = d.getTime();\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        var url = Config.apiUrl + 'init/' + enquiryId + '/123456?var='+rand;\r\n        console.log(url);\r\n        return axios.get(url);\r\n    }\r\n\r\n    fetchTestList(url){\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        const fetchUrl = url || Config.apiUrl + 'student/' + enquiryId + '/tests/category/0'\r\n        return axios.get(fetchUrl);\r\n    }\r\n    \r\n    fetchTest(testid) {\r\n\t\tvar enquiryId = localStorage.getItem('enquiryId');\r\n\t\tvar dataString = {\r\n            \"deviceId\":this.getDeviceId(),\r\n            \"enquiryId\":enquiryId,\r\n            \"testId\":testid\r\n         };\r\n        return axios.post(Config.apiUrl + 'test/download/init',dataString);\r\n        //return axios.get(Config.testJSON + testid + '/' + testid +'.json');\r\n    }\r\n\t\r\n\ttestisActive(testid) {\r\n        return axios.get(Config.siteUrl + 'api/tm/' + testid + '/isActive');\r\n        //return axios.get(Config.testJSON + testid + '/' + testid +'.json');\r\n    }\r\n\t\r\n\tfetchTestJson(url) {\r\n\t\tvar enquiryId = localStorage.getItem('enquiryId');\r\n        return axios.get(url);\r\n    }\r\n\r\n    endExam(json_data) {\r\n        return axios.post(Config.apiUrl + 'test/submit',json_data);\r\n    }\r\n\r\n    fetchTestPaperUploadStatus(testid) {\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        return axios.get(Config.siteUrl + 'api/common/student/'+ enquiryId + '/test/' + testid + '/view/dvs/paper');\r\n    }\r\n\r\n    fetchTestResult(testid) {\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        return axios.get(Config.baseUrl + 'analysis/' + testid + '/' + enquiryId);\r\n    }\r\n\r\n    getTestCategoryWiseTestList(testCategoryId) {\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        return axios.get(Config.apiUrl + 'student/' + enquiryId + '/tests/category/'+ testCategoryId);\r\n    }\r\n\r\n    getOnlineTestData(testId) {\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        var enrollmentId = 0;//localStorage.getItem('enrollmentId');\r\n        var url = Config.apiUrl+'student/'+enquiryId+'/enrollment/'+enrollmentId+'/test/'+testId;\r\n        console.log(url);\r\n        return axios.get(url);\r\n    }\r\n\r\n    submitTestData(testData) {\r\n        var url = Config.apiUrl+'student/test/submit';\r\n        console.log(url);\r\n        return axios.post(url,testData);\r\n    }\r\n\r\n    syncTime(testData) {\r\n        var url = Config.apiUrl+'student/test/sync/time';\r\n        console.log(url);\r\n        return axios.post(url,testData);\r\n    }\r\n\r\n    checkServer(enquiryId) {\r\n        var url = Config.apiUrl+'student/'+enquiryId+'/test/server/status';\r\n        console.log(url);\r\n        return axios.get(url);\r\n    }\r\n\r\n    getTestAnalysis(testId) {\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        var url = Config.apiUrl+'student/'+enquiryId+'/test/'+testId+'/analysis';\r\n        console.log(url);\r\n        return axios.get(url);\r\n    }\r\n\r\n    getQuizLeaderBoard() {\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        var url = Config.siteUrl+'api/mobile/leaderboard/'+enquiryId;\r\n        console.log(url);\r\n        return axios.get(url);\r\n    }\r\n\r\n    getWalletTransactions(pageNumber) {\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        var url = Config.siteUrl+'api/mobile/student/'+enquiryId+'/wallet/transactions/page/'+pageNumber;\r\n        console.log(url);\r\n        return axios.get(url);\r\n    }\r\n\r\n    fetchLearning(rid, rsid) {\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        return axios.get(Config.apiUrl + 'study/resource/type/' + rid + '/subtype/' + rsid + '/page/0/enquiry/'+ enquiryId);\r\n    }\r\n\r\n    fetchLearningSteps(learnId) {\r\n        return axios.get(Config.apiUrl + 'lessonplan/' + learnId + '/steps');\r\n    }\r\n\r\n    fetchLearningStepsDesktop(learnId) {\r\n        return axios.get(Config.desktopApi + 'studyresources/lp/' + learnId);\r\n    }\r\n\r\n    fetchLearningStepAttachments(learnId) {\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        return axios.get(Config.apiUrl + 'lessonplan/step/'  + learnId + '/attachments/enquiry/'+ enquiryId);\r\n    }\r\n\t\r\n\tfetchResources(rid, rsid) {\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        let ran = Math.floor(100000 + Math.random() * 900000);\r\n        let url = Config.apiUrl + 'study/resource/type/' + rid + '/subtype/' + rsid + '/page/0/enquiry/'+ enquiryId + '?var='+ ran;\r\n        console.log(url);\r\n        return axios.get(url) ;\r\n    }\r\n\r\n    fetchAttendance() {\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        return axios.get(Config.apiUrl + 'attendance/summary/student/'+ enquiryId) ;\r\n    }\r\n\t\r\n\tfetchBiometricAttendance() {\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        return axios.get(Config.apiUrl + 'biometric/attendance/student/'+ enquiryId + '/source/2') ;\r\n    }\r\n\t\r\n\tfetchProduct() {\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        return axios.get(Config.siteUrl + 'api/common/student/'+ enquiryId +'/products') ;\r\n    }\r\n\r\n    getProduct(productId) {\r\n        return axios.get(Config.siteUrl + 'api/common/product/'+productId) ;\r\n    }\r\n\r\n    preOrderProduct(productId) {\r\n        let enquiryId = localStorage.getItem('enquiryId');\r\n        let url = Config.siteUrl +'rest/mobile/ilearn/student/'+ enquiryId +'/product/'+productId+'/pre/order';\r\n        console.log(url); \r\n        return axios.get(url) ;\r\n    }    \r\n\r\n    fetchReferrals() {\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        return axios.get(Config.apiUrl + 'student/'+ enquiryId + '/referrals') ;\r\n    }\r\n\r\n    fetchRefer(data) {\r\n        var dataString = data;\r\n        return axios.post(Config.apiUrl + 'student/refer',dataString);\r\n    }\r\n\t\r\n\tfetchCountries() {\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        return axios.get(Config.apiUrl + 'countries/') ;\r\n    }\r\n\t\r\n\tfetchAnalysis() {\r\n\t\tvar enquiryId = localStorage.getItem('enquiryId');\r\n        return axios.get(Config.baseUrl + 'analysis/tests/'+ enquiryId);\r\n    }\r\n\r\n    getNotificationMessages() {\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        let url = Config.siteUrl +'rest/mobile/ilearn/student/'+ enquiryId +'/notification/messages';\r\n        console.log(url); \r\n        return axios.get(url) ;\r\n    }\r\n\r\n    getPayments() {\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        let url =  Config.siteUrl +\"rest/mobile/payments/\"+enquiryId;\r\n        console.log(url); \r\n        return axios.get(url) ;\r\n    }  \r\n\r\n    // getPaymentDetails(enrollmentId) {\r\n    //     let url = Config.siteUrl +\"rest/mobile/payments/enrollment/\"+enrollmentId;\r\n    //     console.log(url);     \r\n    //     return axios.get(url);  \r\n    // }\r\n    getPaymentDetails(enrollmentId,receiptSeriesId){\r\n        const url = `${Config.siteUrl}api/common/paymentinfo/enrollment/${enrollmentId}/receiptseriesid/${receiptSeriesId}`;\r\n        return axios.get(url);\r\n    }\r\n\r\n    getReceiptSeries(enrollmentId){\r\n        const url = `${Config.siteUrl}api/common/receiptseries?enrollmentId=${enrollmentId}`;\r\n        return axios.get(url);\r\n    }\r\n\r\n    getPaymentHistory(enrollmentId){\r\n        let url = Config.siteUrl +\"rest/mobile/payments/history/\"+enrollmentId;\r\n        console.log(url);     \r\n        return axios.get(url);\r\n    }\r\n\r\n    getTimeTables(data) {\r\n        return axios.post(Config.siteUrl + 'api/common/timetable/student', data);\r\n    }\r\n\r\n    getRecordedVideos(data) {\r\n        return axios.post(Config.siteUrl + 'api/common/timetable/student/viewVideos', data);\r\n    }\r\n\r\n    uploadFile(formData,testId){\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        return axios.post(Config.siteUrl+'api/common/student/'+enquiryId+'/test/'+testId+'/upload/dvs/paper', formData);\r\n    }\r\n\r\n    fetchExams(testCategoryIds,secondsActiveAfterExamSubmit) {\r\n\t\tvar enquiryId = localStorage.getItem('enquiryId');\r\n        return axios.get(Config.siteUrl + 'api/tm/lists/category/'+ testCategoryIds +'/enquiry/'+ enquiryId +'/since/'+secondsActiveAfterExamSubmit);\r\n    }\r\n\r\n    getDiscussionBoards() {\r\n        let url = Config.siteUrl +'rest/topics/discussionboards/mobile/user/'+UserService.getUserId();\r\n        console.log(url);     \r\n        return axios.get(url);\r\n    }\r\n\r\n    getDiscussionBoardTopics(discussionBoardId) {\r\n        let url = Config.siteUrl +'rest/topics/discussionboards/'+UserService.getUserId()+'/'+discussionBoardId\r\n        console.log(url);     \r\n        return axios.get(url);\r\n    }\r\n\r\n    getDiscussionBoardTopic(topicId) {\r\n        let url = Config.siteUrl +'rest/topics/mobile/topic/'+UserService.getUserId()+'/'+topicId\r\n        console.log(url);     \r\n        return axios.get(url);\r\n    }\r\n\r\n    getDiscussionBoardQuestionTopic(questionId) {\r\n        let url = Config.siteUrl +'rest/topics/mobile/topic/question/'+questionId+'/user/'+UserService.getUserId()\r\n        console.log(url);     \r\n        return axios.get(url);\r\n    }\r\n\r\n    getDiscussionBoardResourceTopic(resourceId) {\r\n        let url = Config.siteUrl +'rest/topics/mobile/topic/resource/'+resourceId+'/user/'+UserService.getUserId()\r\n        console.log(url);     \r\n        return axios.get(url);\r\n    }\r\n\r\n    addTopic(topic) {\r\n        let url = Config.siteUrl +\"rest/topics/mobile/add\";\r\n        console.log(url);  \r\n        return axios.post(url,topic);\r\n    }\r\n\r\n    createComment(comment) {\r\n        let url = Config.siteUrl+'rest/topics/comment';\r\n        console.log(url);   \r\n        return axios.post(url, comment);\r\n    }\r\n      \r\n    replyComment(comment) {\r\n        let url = Config.siteUrl+'rest/topics/reply';\r\n        console.log(url);   \r\n        return axios.post(url, comment);\r\n    }\r\n\r\n    deleteCommentOrReply(data) {\r\n        let url = Config.siteUrl+'rest/topics/delete';\r\n        console.log(url);   \r\n        return axios.post(url, data);\r\n    }\r\n\r\n    submitTest(testId,userId){\r\n        return axios.post(Config.siteUrl + 'api/tm/'+testId+'/user/'+userId+'/submitAndPopulate');\r\n    }\r\n\r\n    checkTestStatus(testId) {\r\n        var enquiryId = localStorage.getItem('enquiryId');\r\n        let url = Config.desktopApi +'tm/'+testId+'/enquiry/'+enquiryId+'/status';\r\n        return axios.get(url);\r\n    }\r\n\r\n    resumeStudyResourcesLearningActivity(Id) {\r\n        let user = JSON.parse(localStorage.getItem('user')) || [];\r\n        let url = Config.desktopApi +'studyresources/learningactivity/'+Id+'/track/last?token='+ user.token;\r\n        return axios.get(url);\r\n    }\r\n\r\n    trackStudyResourcesLearningActivity(Id,data) {\r\n        let user = JSON.parse(localStorage.getItem('user')) || [];\r\n        let url = Config.desktopApi +'studyresources/learningactivity/'+Id+'/track?token='+ user.token;\r\n        return axios.post(url, data);\r\n    }\r\n\r\n    saveStudyResourcesNotes(data, type) {\r\n        let url = Config.desktopApi +'studyresources/'+data.resourceId+'/'+type+'/save';\r\n        return axios.post(url, data);\r\n    }\r\n\r\n    loadStudyResourcesNotes(resourceId, type) {\r\n        let user = JSON.parse(localStorage.getItem('user')) || [];\r\n        let url = Config.desktopApi +'studyresources/'+resourceId+'/user/'+UserService.getUserId()+'/'+type;\r\n        return axios.get(url);\r\n    }\r\n\r\n    fetchStudyResourcesNotes(id) {\r\n        let user = JSON.parse(localStorage.getItem('user')) || [];\r\n        let url = Config.desktopApi + 'studyresources/lp/'+id+'/user/'+UserService.getUserId()+'/notes';\r\n        return axios.get(url);\r\n    }\r\n\r\n    studentPayCheck(data) {\r\n        let user = JSON.parse(localStorage.getItem('user')) || [];\r\n        let url = Config.siteUrl +'api/common/student/access/paycheck?token='+ user.token;\r\n        return axios.post(url, data);\r\n    }\r\n\r\n    studentTickerMessages() {\r\n        let user = JSON.parse(localStorage.getItem('user')) || [];\r\n        let url = Config.desktopApi +'common/student/ticker/messages?token='+ user.token;\r\n        return axios.post(url);\r\n    }\r\n\r\n    initTestTaking(testId) {\r\n        let url = Config.desktopApi + 'tm/'+testId+'/user/'+UserService.getUserId()+'/initTestTaking';\r\n        var ip = require(\"ip\");\r\n        let data = {\r\n            \"userAgent\":navigator.userAgent,\r\n            \"webCam\": false,\r\n            \"ipAddress\": ip.address(),\r\n        }\r\n        return axios.post(url, data);\r\n    }\r\n\r\n    fetchTodayTests(todayTestsConfig) {\r\n        let enquiryId = localStorage.getItem('enquiryId');\r\n        let url = Config.siteUrl +'rest/mobile/ilearn/student/'+ enquiryId +'/today/tests';\r\n        console.log(url); \r\n        return axios.post(url, todayTestsConfig) ;    \r\n    }\r\n\r\n    getFeedbackForm(formId, testId, employeeId, courseId, applicationUserId) {\r\n        \r\n        let enquiryId = localStorage.getItem('enquiryId');\r\n        let userId = applicationUserId || 0\r\n        let url = Config.siteUrl + \"api/studyresources/feedback/form/\"+formId+\"/enquiry/\"+enquiryId+\"/test/\"+testId+\"/instructor/\"+employeeId+\"/course/\"+courseId+\"?applicableToUserId=\"+userId;        \r\n        console.log(url);\r\n        return axios.get(url);\r\n    }\r\n\r\n    saveFeedbackForm(feedbackFormBean, testId) {\r\n        let enquiryId = localStorage.getItem('enquiryId');\r\n        let url = Config.siteUrl + \"api/studyresources/feedback/form/save/\"+enquiryId+\"/test/\"+testId;\r\n        console.log(url);     \r\n        return axios.post(url, feedbackFormBean); \r\n    }\r\n\r\n    getInstructorFeedbackForms() {\r\n        let enquiryId = localStorage.getItem('enquiryId');\r\n        let url = Config.apiUrl + \"instructor/feedback/enquiry/\"+enquiryId;\r\n        console.log(url);\r\n        return axios.get(url);\r\n    }\r\n\r\n    studentLevelPasswordCheck(testId, password) {\r\n        let enquiryId = localStorage.getItem('enquiryId');\r\n        var dataString = {\r\n            \"testId\":testId,\r\n            \"enquiryId\":enquiryId,\r\n            \"password\":password,\r\n          };\r\n        return axios.post(Config.desktopApi + 'common/test/password/check/studentLevel',dataString);\r\n    }\r\n\r\n    examTimetable(id) {\r\n        return myAxios.get(Config.desktopApi +\"common/timetable/\"+id);\r\n    }\r\n\r\n    examList() {\r\n        return myAxios.post(Config.desktopApi +\"common/program/student/timetables\");\r\n    }\r\n    dossierSection(){\r\n        let enquiryId = UserService.getEnquiryId();\r\n        return myAxios.get(Config.siteUrl + \"api/common/gradecard/enquiry/\"+enquiryId);\r\n    }\r\n\r\n    mentorTranscripts(){\r\n        let enquiryId = UserService.getEnquiryId();\r\n        return myAxios.get(Config.siteUrl + \"api/common/mentees/studentdetails/\"+enquiryId);\r\n    }\r\n    discipline(){\r\n        let enquiryId = UserService.getEnquiryId();\r\n        return myAxios.get(Config.siteUrl + \"api/common/discipline/studentdetails/\"+enquiryId);\r\n    }\r\n\r\n    convocationDetails(){\r\n        let enquiryId = UserService.getEnquiryId();\r\n        let url = Config.siteUrl + \"api/common/convocation/student/details?enquiryId=\"+enquiryId;\r\n        return myAxios.get(url);\r\n    }\r\n\r\n    submitConvocationDetails(data){\r\n        let url = Config.siteUrl + \"api/common/convocation/studentAttestation\";\r\n        return myAxios.post(url, data);\r\n    }\r\n\r\n    convocationStudentRegistration(data){\r\n        let url = Config.siteUrl + \"api/common/convocation/studentRegistration\";\r\n        return myAxios.post(url,data);\r\n    }\r\n\r\n    questionWiseAnalysis(testid){\r\n        let enquiryId = UserService.getEnquiryId();\r\n        let url = Config.baseUrl + 'questionwiseanalysis/' + testid + '/' + enquiryId;\r\n        return myAxios.get(url);\r\n    }\r\n\r\n    viewSolution(testId,currentIndex,attemptId){\r\n        let enquiryId = UserService.getEnquiryId();\r\n        let url = Config.baseUrl + 'viewsolution/test/' +testId+ '/enquiry/'+ enquiryId +'/enrollment/0/currentIndex/' +currentIndex+ '/attempt/'+attemptId;\r\n        console.log(url);\r\n        return myAxios.get(url);\r\n    }\r\n\r\n    \r\n    getTopRankers(testId){\r\n        let url = `${Config.siteUrl}api/common/test/${testId}/toprankers`;\r\n        // https://triangles.studentdetails.com/api/common/test/250/toprankers\r\n        return myAxios.get(url);\r\n    }\r\n\r\n    getStudentEnrollements(){\r\n        const enquiryId = UserService.getEnquiryId();\r\n        const url = `${Config.siteUrl}api/common/student/information?enquiryId=${enquiryId}`;\r\n        return myAxios.get(url);\r\n    }\r\n\r\n    verifyMobile(mobile){\r\n        // const url = `${Config.siteUrl}api/mobile/user/otp/channel/mobile/identifier/${mobile}`;\r\n        const url = `https://4lkooqi5fbwptop7hgsas5hdnu0wyrig.lambda-url.ap-southeast-1.on.aws/?mobileNumber=91${mobile}&action=sendOTP&tenant=${Config.siteTitle}`;\r\n\r\n        console.log(url)\r\n        // http://triangles.edusquares.com/api/mobile/user/otp/channel/mobile/identifier/8168224633\r\n        return axios.get(url);\r\n    }\r\n    \r\n    loginWithOtp(mobile,otp){\r\n        // const url = `${Config.siteUrl}api/mobile/user/otp/verify`;\r\n        // http://triangles.edusquares.com/api/mobile/user/otp/verify\r\n        // return axios.post(url,payload);\r\n        const url = `https://4lkooqi5fbwptop7hgsas5hdnu0wyrig.lambda-url.ap-southeast-1.on.aws/?mobileNumber=91${mobile}&action=verifyOTP&otp=${otp}&tenant=${Config.siteTitle}`;\r\n        console.log(url);\r\n        return axios.get(url);\r\n    }\r\n\r\n    fetchTestDetails(){\r\n        const url = `${Config.siteUrl}${Config.siteTitle}/rest/mobile/user/admission/testdetails`;\r\n        // https://unsat.edusquares.com/unsat/rest/mobile/user/admission/testdetails\r\n        return myAxios.get(url)\r\n    }\r\n\r\n    fetchGoogleAnalytics(){\r\n        const url = `https://tuningfork-live.s3.ap-southeast-1.amazonaws.com/${Config.siteTitle}/files/app-properties.json`;\r\n        console.log(url);\r\n        return axios.get(url);\r\n    }\r\n    \r\n    resendTextOtp = (mobile)=>{\r\n        const url = `https://4lkooqi5fbwptop7hgsas5hdnu0wyrig.lambda-url.ap-southeast-1.on.aws/?mobileNumber=91${mobile}&action=retryText&tenant=${Config.siteTitle}`;\r\n        console.log(url);\r\n        return axios.get(url);\r\n    }\r\n    \r\n    resendCallOtp = (mobile)=>{\r\n        const url = `https://4lkooqi5fbwptop7hgsas5hdnu0wyrig.lambda-url.ap-southeast-1.on.aws/?mobileNumber=91${mobile}&action=retryVoice&tenant=${Config.siteTitle}`;\r\n        console.log(url);\r\n        return axios.get(url);\r\n\r\n    }\r\n\r\n    testResumes = (body)=>{\r\n        const url = `https://5or2in4w2avvenkbbm2fpetjle0fijue.lambda-url.ap-southeast-1.on.aws/`;\r\n        console.log(url);\r\n        return fetch(url,{\r\n\t\t\t\tmethod:'POST',\r\n\t\t\t\tbody\r\n\t\t\t})\r\n    }\r\n\r\n    testResponses = (body)=>{\r\n        const url = `https://soaz3ulallctn6szdu3wwmgmaa0lkepj.lambda-url.ap-southeast-1.on.aws/`;\r\n        console.log(url);\r\n        return fetch(url,{\r\n            method:'POST',\r\n            body\r\n        })\r\n    }\r\n\r\n    testResultsUrls = (mobileNumber)=>{\r\n        const url = `${Config.siteUrl}api/mobile/user/admission/testresults?mobileNumber=${mobileNumber}`;\r\n        console.log(url);\r\n        return axios.get(url);\r\n    }\r\n\r\n    fetchGetUrl = (url)=>{\r\n        console.log(url);\r\n        return axios.get(url);\r\n    }\r\n\r\n    updateProctoredProfile=(body)=>{\r\n        const url = `https://yazgub22cf6v3ry2cms3gvkhra0xmevx.lambda-url.ap-southeast-1.on.aws/`;\r\n        console.log(url);\r\n        return fetch(url,{\r\n            method:'POST',\r\n            body\r\n        });\r\n    }\r\n\r\n    uploadDocument = (body)=>{\r\n        const enquiryId = UserService.getEnquiryId();\r\n        const url = `${Config.siteUrl}api/mobile/ilearn/enquiry/${enquiryId}/document/upload`;\r\n        console.log(url);\r\n        return myAxios.post(url,body);\r\n    }\r\n\r\n    trackPage(data){\r\n        let url = `${Config.siteUrl}api/common/log/page`;\r\n        console.log(url);\r\n        return myAxios.post(url,data);\r\n    }\r\n\r\n    uploadDoucment = (body,testId,questionId)=>{\r\n        const userId = UserService.getUserId();\r\n        const url = `${Config.siteUrl}api/common/student/${userId}/test/${testId}/question/${questionId}/upload`;\r\n        console.log(url);\r\n        return myAxios.post(url,body);\r\n    }\r\n\r\n}\r\n\r\nexport default new ApiService();","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\main.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_helpers\\utils.js",["773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819"],"class Utils {\r\n    /* date format : dd-mm-yyyy hh:mm:ss */\r\n    formatStringDate(date){\r\n        return [this.padLeft(date.getDate(),2), this.padLeft((date.getMonth()+1),2), date.getFullYear()].join('-')+' '+[this.padLeft(date.getHours(),2), this.padLeft(date.getMinutes(),2), this.padLeft(date.getSeconds(), 2)].join(':');\r\n    }\r\n\r\n    formatStringDateWithTime(date){\r\n    let isPM = date.getHours() >= 12;\r\n    let isMidday = date.getHours() == 12;\r\n    let time = [this.padLeft((date.getHours() - (isPM && !isMidday ? 12 : 0)),2), \r\n        this.padLeft(date.getMinutes(),2)].join(':') +\r\n        (isPM ? ' PM' : ' AM');\r\n\r\n    return [this.padLeft(date.getDate(),2), this.padLeft((date.getMonth()+1),2), date.getFullYear()].join('/')+' '+time;\r\n    }\r\n\r\n    /* pad left 0 */\r\n    padLeft(num, size) {\r\n      let s = num+\"\";\r\n      if (s.length < size) s = \"0\" + s;\r\n      return s;\r\n    }\r\n\r\n    isMobileDevice() {\r\n        if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) \r\n            || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))) { \r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }    \r\n\r\n}\r\n\r\nexport default new Utils();","S:\\REACT\\Ract-Js\\Frlnce\\src\\_config\\config.js",["820"],"const mode = \"live\";\r\nconst site = \"triangles\";\r\nconst siteUrl = \"https://\" + site + \".edusquares.com/\";\r\n// const siteUrl = \"http://localhost:8080/tuningfork/\";\r\n// const siteUrl = \"https://erp.nttftrg.com/\";\r\nconst Config = {\r\n    siteTitle: site,\r\n    siteMode:  mode,\r\n    siteUrl :  siteUrl,\r\n    baseUrl :  siteUrl + 'rest/mobile/',\r\n    apiUrl  :  siteUrl + 'rest/mobile/ilearn/',\r\n    getGamePlay: siteUrl + 'api/common/game/gameplays',\r\n    getBatch: siteUrl + 'api/common/batches?',\r\n    getBatchforEnquiry: siteUrl + 'api/common/enquiry/',\r\n    getLearnersforBatchId :  siteUrl + 'api/common/batches/',\r\n    logo    :  \"https://webfront.edusquares.com/\" + site + \"/files/pwa/logo.jpg\",\r\n    cover   :  \"https://webfront.edusquares.com/\" + site + \"/files/pwa/cover.jpg\",\r\n    pdfUrl  :  siteUrl,\r\n    desktopApi  :  siteUrl + 'api/',\r\n    AWSRegion: \"ap-southeast-1\",\r\n    AWSEndpoint: '',\r\n    AWSAccessKeyId: \"\",\r\n    AWSSecretAccessKey: \"\",\r\n    CONNECTION_ERROR_MSG: \"The server is taking too long to respond OR something is wrong with your internet connection. Please try again later.\" \r\n}\r\n\r\nexport const OpenLoginTypes = {\r\n    //Open Login Types\r\n    OPEN_LOGIN_TYPE_FACEBOOK : 1,\r\n    OPEN_LOGIN_TYPE_GOOGLE : 2 \r\n}\r\n\r\nconst CURRENT_PORTLET = null;\r\n\r\nexport default Config;","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\header\\header.js",["821","822"],"import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Config from '../../_config/config'\r\n\r\nconst style = {\r\n    color: 'red',\r\n    margin: '10px'\r\n  }\r\n  \r\nclass Header extends Component {\r\n \r\n componentDidMount(){\r\n\tif(localStorage.getItem('siteTitle')){\r\n      document.title = localStorage.getItem('siteTitle')\r\n\t}else{\r\n\t  document.title = Config.siteTitle\r\n\t}\r\n\t\r\n }\r\n \r\n  render() {\r\n    return (\r\n\t  <header></header>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default Header","S:\\REACT\\Ract-Js\\Frlnce\\src\\_services\\google-analytics\\google-analytics.service.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\index.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_services\\UserService.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_services\\axiosilearnWrapper.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\login\\Forgetpwd.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\login\\Login.js",["823"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Login.css\";\r\nimport cw_logo from \"./images/cw_logo.png\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons';\r\nimport Config from \"../../_config/config\";\r\nimport OTPValidator from './../../_components/OTPValidator';\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\nimport FacebookLoginComponent from './FacebookLoginComponent';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      submitted: false,\r\n      user: null,\r\n      errorMessage: '',\r\n      loginDetails:{\r\n        username: '',\r\n        password: ''\r\n      },\r\n      otpValidator: { show:false, \r\n        otpLength: 0, \r\n        smsAddress: null, \r\n        message:'Successfully sent the One Time Password to your Registered Mobile Number',\r\n        userId: null\r\n      },\r\n      loginUserData: null,\r\n      showLoading: false,\r\n      loginPageConfig : this.props.location.state.loginPageConfig\r\n    }\r\n     //this.onSubmit = this.onSubmit.bind(this);\r\n     //this.init();\r\n  }\r\n\r\n  init() {\r\n    let loginUser = JSON.parse(localStorage.getItem('user'));\r\n    if(loginUser != null) {\r\n      localStorage.removeItem(\"user\");\r\n      this.props.history.push('/');\r\n    }  \r\n  }\r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  updateInput = (e) =>{\r\n    let v = e.target.value;\r\n    let k = e.target.name;\r\n    let loginDetails = {...this.state.loginDetails}\r\n    loginDetails[k] = v;\r\n    this.setState({loginDetails});\r\n  }\r\n\r\n  login() {\r\n    let { loginDetails} = this.state;\r\n    if (loginDetails.username && loginDetails.password) {\r\n      this.setState({ submitted: true, showLoading: true }, () => {\r\n        ApiService.fetchLogin(loginDetails.username, loginDetails.password)\r\n        .then((res) => {\r\n          console.log(\"Login -> onSubmit(); res : \"+JSON.stringify(res));\r\n          if(res.data.status===1) { \r\n            this.setState({ showLoading: false, loginUserData: res.data.data }, () => {\r\n              this.dologin();\r\n            }); \r\n          }\r\n          else {\r\n            this.setState({\r\n              showLoading: false,\r\n              errorMessage : res.data.message\r\n            });  \r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  dologin() {\r\n    //localStorage.getItem('user')\r\n    let loginUserData = this.state.loginUserData;\r\n    var decoded = jwt_decode(loginUserData.token);\r\n    if(loginUserData.otpEnableStatus && loginUserData.otpEnableStatus===1) {\r\n      let _otpValidator = { show:true, \r\n        otpLength: loginUserData.otpLength, \r\n        smsAddress: loginUserData.smsAddress,\r\n        message: loginUserData.otpMessage,\r\n        userId: loginUserData.userId\r\n      }\r\n      this.setState({ otpValidator: _otpValidator });   \r\n    }\r\n    else {\r\n      localStorage.setItem('user', JSON.stringify(loginUserData));\r\n      localStorage.setItem('tenant', decoded.tenant);\r\n      this.props.history.push('/');\r\n    }\r\n  }\r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"login\">\r\n        {\r\n          <Container fluid>\r\n            <div className=\"back\">\r\n                  <FontAwesomeIcon icon={ faArrowLeft } onClick={() => this.routeChange('/')} />\r\n            </div>\r\n            <div className=\"header-image\" style={{background: `url(${Config.cover}) no-repeat transparent`,  backgroundSize: 'cover', backgroundPosition: 'center'}}>\r\n\r\n            </div>\r\n            <div className=\"main-content\">\r\n              <span className=\"gradient-text\">\r\n                <strong> LOGIN </strong>\r\n              </span>\r\n              {this.renderFormLogin()}\r\n            </div>\r\n          </Container>\r\n        }\r\n        {this.renderFooter()}\r\n        <OTPValidator data={this.state.otpValidator} \r\n                onOTPValidatorClose={this.onOTPValidatorClose} />\r\n        {this.renderLoader()}\r\n      </div>\r\n\t  \r\n    );\r\n  }\r\n\r\n  renderFormLogin() {\r\n    //console.log(this.props);\r\n    let { submitted, loginDetails} = this.state;    \r\n    return (\r\n      <Form>\r\n        <br/>\r\n      <Form.Group>\r\n        <div className={'item-inner' + (submitted && !loginDetails.username ? ' has-error' : '')}>\r\n          <input class=\"form-control\" type=\"text\" placeholder=\"Username\" name=\"username\" onChange={this.updateInput} />\r\n        </div>\r\n        <br />\r\n        <div className={'item-inner' + (submitted && !loginDetails.password ? ' has-error' : '')}>\r\n          <input class=\"form-control\" type=\"password\" placeholder=\"Password\" name=\"password\" onChange={this.updateInput} />\r\n        </div>\r\n        <div className=\"institute-sign-in-btn\">\r\n          <input className=\"primary button-full ilearn-blue-btn button-md\" type=\"button\" value=\"Login\"  onClick={() => this.login()}/>\r\n        </div>\r\n        { this.state.errorMessage && <div className=\"red\">{this.state.errorMessage}</div> }\r\n        {this.renderRegister()}\r\n      </Form.Group>\r\n     </Form>\r\n    );\r\n  }\r\n\r\n  renderRegister() {\r\n    const show_registration_btn = this.state.loginPageConfig?.SHOW_REGISTER_BUTTON==='true'?true:false;\r\n    const show_facebook_btn = this.state.loginPageConfig?.FACEBOOK_LOGIN==='true'?true:false;    \r\n    return (\r\n      <div>        \r\n        <Row>\r\n            <div className=\"forgetpwd_link\" onClick={() => this.routeChange(\"forgetpwd\")}>\r\n              <b> Forgot Password ? </b>\r\n            </div>            \r\n        </Row>\r\n        {\r\n          (show_registration_btn ||  show_facebook_btn) && \r\n          <>\r\n            <div className=\"or\">\r\n              <div className=\"strike\">\r\n                <span> OR </span>\r\n              </div>\r\n            </div>\r\n            {\r\n              show_registration_btn && \r\n              <div className=\"institute-sign-in-btn\">\r\n                <Button variant=\"primary button-full ilearn-blue-btn button-md\" onClick={() => this.routeChange(\"register\")}>\r\n                  <span className=\"button-inner\"> Register </span>\r\n                </Button>\r\n              </div>\r\n            }\r\n            { \r\n              show_facebook_btn && \r\n              <FacebookLoginComponent {...this.props} />\r\n            }\r\n          </>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onOTPValidatorClose = value => {\r\n    //console.log(\"Register --> onOTPValidatorClose...\"+value);\r\n    // store user details in local storage to keep user logged in between page refreshes    \r\n    if(value===true) {\r\n      var loginUserData = this.state.loginUserData;\r\n      var decoded = jwt_decode(loginUserData.token);\r\n      localStorage.setItem('user', JSON.stringify(this.state.loginUserData));\r\n      localStorage.setItem('tenant', decoded.tenant);\r\n      this.props.history.push('/');\r\n    }\r\n    else {\r\n      let _otpValidator= { show:false, \r\n        otp: null, \r\n        smsAddress: null, \r\n        message:'Successfully sent the One Time Password to your Registered Mobile Number',\r\n        userId: null\r\n      }\r\n      this.setState({ otpValidator: _otpValidator }); \r\n    }      \r\n  }  \r\n\r\n  renderFooter() {\r\n    return (\r\n      <div className=\"institute-cards\">\r\n        <div className=\"\">\r\n          <div className=\"institute-top-intro\">\r\n            <h6> Powered by </h6> <img src={cw_logo} alt=\"logo\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderLoader() {\r\n    console.log(\"Login -> renderLoader()... \");\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n        <ILoader\r\n            loadingText={_loadingText}\r\n            isShow={this.state.showLoading}\r\n            >\r\n        </ILoader>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\institute-card-detail\\InstituteCardDetail.js",["824"],"import React, { Component } from 'react';\r\nimport Config from \"../../_config/config\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport '../../App.css';\r\nimport './InstituteCardDetail.css';\r\n\r\n\r\nclass InstituteCardDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        console.log(this.props.location.state);\r\n    }\r\n\r\n    routeChange(path) {\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row-header header header-md\">\r\n                    <Button variant=\"button-md back-button\" onClick={() => this.routeChange('/')} >\r\n                        <FontAwesomeIcon icon={ faArrowLeft } />\r\n                    </Button>                \r\n                </div>\r\n                <div className=\"instituteCardDetail app flex-row align-items-center\">\r\n                    <div className=\"institute-top\" style={{background: `url(${Config.cover}) no-repeat transparent`,  backgroundSize: 'cover', backgroundPosition: 'center'}}></div>\r\n                    <div className=\"institute-top-logo\" style={{background: `url(${Config.logo}) no-repeat transparent`, backgroundSize: '100%'}}></div>\r\n                    <div className=\"institute-top-intro\">\r\n                    <h4>{this.props.location.state.card.name}</h4>\r\n                    \r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"tutorial-bottom\" dangerouslySetInnerHTML={{__html: this.props.location.state.card.description}}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default InstituteCardDetail;","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\login\\Resetpwd.js",["825","826"],"import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { resetpwd } from './../../_actions/userActions';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"./Login.css\";\r\nimport cw_logo from \"./images/cw_logo.png\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons';\r\nimport Config from \"../../_config/config\";\r\nimport Parser from 'html-react-parser';\r\n\r\nclass Resetpwd extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n\t    newPassword: '',\r\n      confirmPassword: '',\r\n      submitted: false,\r\n      user: null\r\n    };\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.setState({ submitted: true });\r\n    let { newPassword, confirmPassword } = this.state;\r\n    if (newPassword && confirmPassword) {\r\n\t  if(newPassword != confirmPassword){\r\n        this.setState({ message: \"Password and confirm Password must be same.\"});\r\n      }else{\r\n\t\tlet userName = this.props.location.state.otp.userName;\r\n\t    this.props.resetpwd(userName, newPassword, confirmPassword);\r\n        this.setState({ message: \"\"});\r\n\t  }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"login\">\r\n        {\r\n          <Container fluid>\r\n            <div className=\"back\">\r\n                  <FontAwesomeIcon icon={ faArrowLeft } onClick={() => this.routeChange('/login')} />\r\n            </div>\r\n            <div className=\"header-image\" style={{background: `url(${Config.cover}) no-repeat transparent`,  backgroundSize: 'cover', backgroundPosition: 'center'}}>\r\n            </div>\r\n            <div className=\"main-content\">\r\n              <span className=\"gradient-text\">\r\n                <strong> Reset Password </strong>\r\n              </span>\r\n              {this.renderFormLogin()}\r\n            </div>\r\n          </Container>\r\n        }\r\n        {this.renderFooter()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFormLogin() {\r\n    console.log(this.props);\r\n    let {newPassword, confirmPassword, submitted} = this.state;\r\n    let {user} = this.props;\r\n\tif(user.user.status == 1){\r\n\t\tthis.props.history.push('/login');\r\n\t}\r\n\t\r\n    return (\r\n      <Form onSubmit={this.onSubmit}>\r\n      <Form.Group>\r\n        <div className={'item-inner'}>\r\n          <Form.Control type=\"text\" name=\"userName\" editable={false} defaultValue={this.props.location.state.otp.userName} />\r\n        </div>\r\n        <br />\r\n        <div className={'item-inner' + (submitted && !newPassword ? ' has-error' : '')}>\r\n          <Form.Control type=\"password\" placeholder=\"New Password\" name=\"newPassword\" onChange={e => this.setState({newPassword: e.target.value})} value={newPassword} />\r\n        </div>\r\n        <br />\r\n        <div className={'item-inner' + (submitted && !confirmPassword ? ' has-error' : '')}>\r\n          <Form.Control type=\"password\" placeholder=\"Confirm Password\" name=\"confirmPassword\" onChange={e => this.setState({confirmPassword: e.target.value})} value={confirmPassword} />\r\n        </div>\r\n        <div className=\"institute-sign-in-btn\">\r\n          <input className=\"primary button-full ilearn-blue-btn button-md\" type=\"submit\" value=\"CHANGE PASSWORD\" />\r\n        </div>\r\n\t\t{ user.user.messag && <div className=\"red\">{Parser(user.user.messag)}</div>}\r\n        { this.state.message && <div className=\"red\">{Parser(this.state.message)}</div>}\r\n      </Form.Group>\r\n     </Form>\r\n    );\r\n  }\r\n\r\n\r\n  renderFooter() {\r\n    return (\r\n      <div className=\"institute-cards\">\r\n        <div className=\"\">\r\n          <div className=\"institute-top-intro\">\r\n            <h6> Powered by </h6> <img src={cw_logo} alt=\"logo\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  return {\r\n    user : state.user\r\n  };\r\n}\r\n\r\nconst actionCreators = {\r\n  resetpwd: resetpwd,\r\n};\r\n\r\nexport default connect(mapState, actionCreators)(Resetpwd);\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\profile\\Logout.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\attendance\\Attendance.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\profile\\ChangePassword.js",["827","828"],"import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { changepwd } from './../../_actions/userActions';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"./Profile.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Config from \"../../_config/config\";\r\n\r\nclass ChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPassword: '',\r\n      newPassword: '',\r\n      confirmPassword: '',\r\n      message:'',\r\n      submitted: false,\r\n      user: null\r\n    };\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.setState({ submitted: true });\r\n    let { currentPassword, newPassword, confirmPassword } = this.state;\r\n    if (currentPassword && newPassword && confirmPassword) {\r\n      if(newPassword != confirmPassword){\r\n        this.setState({ message: \"Password and confirm Password must be same.\"});\r\n      }else{\r\n        let auth = JSON.parse(localStorage.getItem('user'));\r\n        var userName = auth.userName;\r\n        this.props.changepwd(userName, currentPassword, newPassword, confirmPassword);\r\n        this.setState({ message: \"\"});\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"login\">\r\n        {\r\n          <Container fluid>\r\n            <div className=\"back\">\r\n                  <FontAwesomeIcon icon={ faArrowLeft } onClick={() => this.routeChange('/dashboard')} />\r\n            </div>\r\n            <div className=\"header-image\"> <img src={Config.cover} /></div>\r\n            <div className=\"main-content\">\r\n              <span className=\"gradient-text\">\r\n                <strong> CHANGE PASSWORD </strong>\r\n              </span>\r\n              {this.renderFormChangePwd()}\r\n            </div>\r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFormChangePwd() {\r\n    //console.log(this.props);\r\n    let auth = JSON.parse(localStorage.getItem('user'));\r\n    let {currentPassword, newPassword, confirmPassword, submitted} = this.state;\r\n    let {user} = this.props;\r\n\r\n    return (\r\n      <Form onSubmit={this.onSubmit}>\r\n      <Form.Group>\r\n        <div className={'item-inner'}>\r\n          <Form.Control type=\"text\" name=\"userName\" editable={false} defaultValue={auth.userName} />\r\n        </div>\r\n        <br />\r\n        <div className={'item-inner' + (submitted && !currentPassword ? ' has-error' : '')}>\r\n          <Form.Control type=\"password\" placeholder=\"Current Password\" name=\"currentPassword\" onChange={e => this.setState({currentPassword: e.target.value})} value={currentPassword} />\r\n        </div>\r\n        <br />\r\n        <div className={'item-inner' + (submitted && !newPassword ? ' has-error' : '')}>\r\n          <Form.Control type=\"password\" placeholder=\"New Password\" name=\"newPassword\" onChange={e => this.setState({newPassword: e.target.value})} value={newPassword} />\r\n        </div>\r\n        <br />\r\n        <div className={'item-inner' + (submitted && !confirmPassword ? ' has-error' : '')}>\r\n          <Form.Control type=\"password\" placeholder=\"Confirm Password\" name=\"confirmPassword\" onChange={e => this.setState({confirmPassword: e.target.value})} value={confirmPassword} />\r\n        </div>\r\n        <div className=\"institute-sign-in-btn\">\r\n          <input className=\"primary button-full ilearn-blue-btn button-md\" type=\"submit\" value=\"CHANGE PASSWORD\" />\r\n        </div>\r\n        { user.user.message && <div>{user.user.message}</div> }\r\n        { this.state.message && <div>{this.state.message}</div>}\r\n      </Form.Group>\r\n     </Form>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nfunction mapState(state) {\r\n  return {\r\n    user : state.user\r\n  };\r\n}\r\n\r\nconst actionCreators = {\r\n  changepwd: changepwd,\r\n};\r\n\r\nexport default connect(mapState, actionCreators)(ChangePassword);\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\dashboard\\Dashboard.js",["829","830","831","832","833","834","835","836","837","838","839","840"],"import React, { Component } from \"react\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport ThemeService from \"../../_services/ThemeService\";\r\nimport Config from './../../_config/config'\r\nimport { getUnReadNotificationCount, checkNewNotificationsOnServer } from \"./../../push-notification\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faBell } from '@fortawesome/free-solid-svg-icons';\r\nimport getPortlets from './../../_actions/dashboardActions';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Dashboard.css\";\r\nimport SideBar from \"../../_components/sidebar/sidebar\";\r\nimport cloud from \"./images/cloud.png\";\r\nimport Loader from './../../_components/loader/loader';\r\nimport avatar from './images/blank-avatar.png';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: null,\r\n      loading: false,\r\n      dashboard: null,\r\n      notificationCount: 0,\r\n      showA2H: false,\r\n      ticker : null,\r\n    };\r\n    this.installEvent = null;\r\n    this.isPWAInstalled = false;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    ThemeService.getActiveTheme();\r\n    if(typeof(user) !== 'undefined' || user != null){\r\n      localStorage.setItem('enquiryId', user.enquiryId);\t\r\n      this.props.getPortlets();\r\n      this.setState({ name: user.enquiryName });\r\n    }\r\n\r\n    this.setState({ dashboard: this.props.dashboard,\r\n      notificationCount: getUnReadNotificationCount() \r\n    });    \r\n    \r\n    window.addEventListener('beforeinstallprompt', (event) => {\r\n      //console.log(\"Dashboard --> beforeinstallprompt Event...\");\r\n      event.preventDefault();\r\n      // store the event for later use\r\n      this.installEvent = event;\r\n      this.state.showA2H = true;\r\n    });\r\n\r\n    window.addEventListener('appinstalled', (event) => {\r\n      //console.log(\"Dashboard --> appinstalled Event...\");\r\n      this.state.showA2H = false;\r\n    });\r\n    this.isPWAInstalled = this.isInstalled();\r\n    this.generateEndPoint(user);\r\n    checkNewNotificationsOnServer();\r\n    this.studentTickerMessages();\r\n  }\r\n\r\n\r\n  getDeviceId() {\r\n    let deviceId = localStorage.getItem('ilearn-pwa-deviceId');\r\n    if(!deviceId) {\r\n        //console.log(\"DeviceId Not found generating new\");\r\n        let sixdigitsrandom = Math.floor(100000 + Math.random() * 900000);\r\n        deviceId = \"PWA-\"+sixdigitsrandom;\r\n        localStorage.setItem('ilearn-pwa-deviceId', deviceId);\r\n    }\r\n    return deviceId;\r\n  }\r\n\r\n  generateEndPoint(user) {\r\n      let key = user.userId;\r\n      if(!localStorage.getItem(\"push-notification-endpoint_\"+key)) {\r\n      //console.log(\"Generating Endpoint...\");\r\n      var postJsonData = {\r\n        \"appId\"         : 3,\r\n        \"appIdentifier\" : Config.site,\r\n        \"userId\"        : user.userId,\r\n        \"enquiryId\"     : user.enquiryId  ,\r\n        \"deviceId\"      : this.getDeviceId(),\r\n        \"platform\"      : \"PWA\",\r\n        \"deviceToken\"   : localStorage.getItem(\"notification-token\")\r\n      };\r\n      ApiService.generateEndPoint(postJsonData)\r\n      .then((res) => { //SuccessCB\r\n        let respData = res.data;\r\n        if(respData.status == 0) {\r\n          //\r\n        }\r\n        else {\r\n          //console.log(\"Endpoint : \"+respData.data.endPoint);\r\n          localStorage.setItem(\"push-notification-endpoint_\"+key, respData.data.endPoint);\r\n        }\r\n      },\r\n      error => { //ErrorCB\r\n        console.log(\"Dashboard --> generateEndPoint() -> Connection Error : \"+Config.CONNECTION_ERROR);\r\n      });\r\n    }\r\n  }\r\n\r\n  addToHome = () => {\r\n    //console.log(\"Dashboard --> addToHome()...\");\r\n    //console.log(\"Dashboard --> isPWAInstalled = \"+this.isPWAInstalled);\r\n    if(this.installEvent) {\r\n      this.installEvent.prompt();  \r\n    }\r\n  };\r\n  \r\n  routeChange(path, portletData) {\r\n    //this.props.history.push(path);\r\n\t  localStorage.setItem('portlet', JSON.stringify(portletData));\r\n    this.props.history.push({\r\n      pathname: path,\r\n      state: { portlet: portletData }});\r\n  }\r\n\r\n  showNotification() {\r\n    //console.log(\"Dashboard -> showNotification()... \");\r\n    let path = \"/notification\";\r\n    this.props.history.push({\r\n        pathname: path\r\n    });  \r\n  }\r\n\r\n  studentTickerMessages() {\r\n      \r\n      ApiService.studentTickerMessages()\r\n      .then((res) => { \r\n        this.setState({\r\n          ticker: res.data.importantMessages\r\n        });\r\n      },\r\n      error => { //ErrorCB\r\n        console.log(Config.CONNECTION_ERROR);\r\n      });\r\n  }\r\n\r\n  onHover = () => {\r\n    document.getElementById(\"myMarquee\").stop();\r\n  };\r\n\r\n  onOut = () => {\r\n    document.getElementById(\"myMarquee\").start();\r\n  };\r\n\r\n  sliderButtonAction = (slide) =>{\r\n    //if(slide.button.buttonAction.actionType==='product')\r\n    let productId = slide.button.buttonAction.actionId;    \r\n    if(!Config.CURRENT_PORTLET && !JSON.parse(localStorage.getItem('portlet'))) {\r\n      let portletConfig = { \"id\":productId,\r\n        \"class\":\"blue-card\",\r\n        \"name\":slide.title,\r\n        \"icon\":\"./assets/imgs/payment.png\"\r\n      }\r\n\t\t\tConfig.CURRENT_PORTLET = portletConfig;\r\n\t\t}\r\n    this.setState({ loading: true }, () => {\r\n      ApiService.getProduct(productId)\r\n      .then((res) => { //SuccessCB\r\n        let product = res.data.data;\r\n        this.setState({loading: false});\r\n        this.props.history.push({\r\n          pathname: '/ProductDetails',\r\n          state: { product: product }});\r\n      },\r\n      error => { //ErrorCB\r\n        console.log(\"Dashboard --> getProduct() -> Connection Error : \"+Config.CONNECTION_ERROR);\r\n      });\r\n    });    \r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    var pic = \"\";\r\n    if(user.photoPath) {\r\n      pic = user.photoPath;\r\n    } else {\r\n      pic = avatar;\r\n    }\r\n    let data = this.props.dashboard.data;\r\n    let slider = data?.slider || null;\r\n    let isSliderEnable = slider? slider.enableStatus : false;\r\n    let siteTitle = localStorage.getItem('siteTitle') || Config.siteTitle;\r\n    return (\r\n      <>\r\n      <div className=\"dashboard\">\r\n        {\r\n          <Container fluid>\r\n            <SideBar history={this.props.history} />\r\n            <navbar className=\"second-header toolbar toolbar-md toolbar-md-primary\" id=\"second-header\">\r\n              <div className=\"toolbar-content toolbar-content-md\">\r\n              \r\n                <div className=\"img-set profile-set\">\r\n                  { isSliderEnable ? <img src={cloud} alt=\"Cloud\"  className=\"cloud_img_slider\" /> : <img src={cloud} alt=\"Cloud\" />}\r\n                  { \r\n                    this.state.ticker &&  this.renderTicker()\r\n                  }\r\n                  { isSliderEnable ? <span className=\"logo_text\"> {siteTitle}</span> : '' }\r\n                  <span className=\"notification_icon\" onClick={() => this.showNotification()}>   \r\n                    <FontAwesomeIcon icon={faBell} /> \r\n                    {this.state.notificationCount>0?<span class=\"count\">{this.state.notificationCount}</span>:''} \r\n                  </span>\r\n                  { !isSliderEnable && \r\n                      <div className=\"txt-set\">\r\n                        <img src={pic} alt=\"profile\" onClick={() => this.routeChange('profile','')}/>\r\n                        <p className=\"good-txt\"> {this.greetUser()} </p>\r\n                        <p className=\"name-txt\"> {this.state.name} </p>\r\n                      </div>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </navbar>\r\n            { isSliderEnable && <div className=\"slider-list\">  { this.renderSlider(slider) } </div> }\r\n            <div className=\"category-list\">              \r\n                {loading ?  <Loader />: this.renderPortlets()} \r\n              <br />\r\n            </div>\r\n          </Container>\r\n        }\r\n      </div>\r\n      { this.renderAddToHome() }\r\n      </>\r\n    );\r\n  }\r\n\r\n  greetUser() {\r\n    let myDate = new Date();\r\n    let hrs = myDate.getHours();\r\n    let greetMsg;\r\n\r\n    if (hrs < 12)\r\n      greetMsg = 'Good Morning';\r\n    else if (hrs >= 12 && hrs <= 16)\r\n      greetMsg = 'Good Afternoon';\r\n    else if (hrs >= 16 && hrs <= 21)\r\n      greetMsg = 'Good Evening';\r\n    else if (hrs >= 16 && hrs <= 21)\r\n      greetMsg = 'Good Night';\r\n\r\n    return greetMsg;\r\n  }\r\n\r\n  renderTicker() { \r\n      return ( \r\n            <div className=\"marq\">  \r\n              <marquee  className=\"marquee\" direction=\"left\" id=\"myMarquee\" onMouseEnter={this.onHover} onMouseLeave={this.onOut}>\r\n                        <>\r\n                        {\r\n                          this.state.ticker.map((item, index) => {\r\n                              return (\r\n                                <>\r\n                                  <span dangerouslySetInnerHTML={{ __html:item}} /> \r\n                                  {index < this.state.ticker.length - 1 &&  <span> &nbsp; || &nbsp; </span> } \r\n                                </>\r\n                              )\r\n                          })\r\n                        }\r\n                        </>\r\n              </marquee>     \r\n            </div>\r\n      );\r\n  }\r\n\r\n  renderSlider(slider) {     \r\n      let settings = {\r\n        autoplay: true,\r\n        autoplaySpeed: 6000,\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        initialSlide: 0,\r\n        arrows: false,\r\n        responsive: [\r\n          {\r\n            breakpoint: 1024,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1,\r\n              infinite: true,\r\n              dots: true\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 600,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1,\r\n              initialSlide: 1\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 480,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1\r\n            }\r\n          }\r\n        ]\r\n      };\r\n\r\n      return ( \r\n        <div>\r\n              <Slider {...settings}>\r\n              {\t\t  \r\n                slider.slides.map((slide, index) => {\r\n                  return (\r\n                    <div>\r\n                        <div className=\"mb-outer\">\r\n                            <div className=\"mb-text-1\">\r\n                                <h1>{slide.title}</h1>\r\n                                <h3>{slide.subTitle}</h3>\r\n                                {\r\n                                  slide.button.enableStatus && \r\n                                  <a className=\"banner-button\" href=\"#\" \r\n                                    onClick={() => this.sliderButtonAction(slide)}\r\n                                    style={{background: slide.button.buttonColor, color: slide.button.buttonTextColor}}>\r\n                                    {slide.button.buttonTitle}\r\n                                  </a>\r\n                                }\r\n                            </div>\r\n                            <img src={slide.imageURL} />\r\n                        </div>\r\n                    </div>\r\n                  )\r\n                })\r\n              }                \r\n              </Slider>\r\n          </div>\r\n      );\r\n}\r\n\r\n  renderPortlets() {    \r\n    let data = this.props.dashboard.data;\r\n    if(typeof(data) !== 'undefined' || data != null){\t\r\n      \r\n      let user = JSON.parse(localStorage.getItem('user'));\r\n      user.mobileNumber = data.studentDetails.mobile;\r\n      user.photoPath= data.studentDetails.photoPath;\r\n      user.studentCode= data.studentDetails.studentCode;\r\n      user.course = data.studentDetails.course;\r\n      user.center = data.studentDetails.center\r\n      localStorage.setItem(\"user\", JSON.stringify(user));      \r\n      return  <Row>\r\n      {\t\t  \r\n      data.portlets.sort((a, b) => a.id - b.id)\r\n      .map((portlet, index) => {\r\n\t\t\t//console.log(portlet.name)\r\n        if(portlet.isTile==true){\r\n          let params = \"\";\r\n          if(portlet.target==\"studyResource\" || portlet.target==\"lessonPlan\"){\r\n            params = portlet.params.resourceTypeId +'/'+portlet.params.resourceSubTypeId +'/'+ portlet.name;\r\n          }\r\n          \r\n          let portlet_div =\r\n            <div key={index} className=\"col col-md-3 col-sm-3 col-xs-6 order-2\"> \r\n              <Button className={portlet.class+' button button-md button-clear button-clear-md'} onClick={() => this.routeChange(portlet.target+'/'+params,portlet)}>\r\n                <item className=\"item-set-new item item-block item-md\">\r\n                  <thumbnail>\r\n                    <img src={portlet.icon} alt=\"Messages\" />\r\n                  </thumbnail>\r\n                  <label className=\"label label-md\">\r\n                    <h5>{portlet.name}</h5>\r\n                  </label>\r\n                </item>\r\n              </Button>\r\n            </div>\r\n          \r\n            if(user.userTypeId!==9){\r\n              return ( portlet_div);\r\n            }else if(user.userTypeId ==9 && portlet.enableForParent==true){\r\n              return ( portlet_div);\r\n            }\r\n          }\r\n        })\r\n      }\r\n      </Row>\r\n    }\r\n  }\r\n\r\n  renderAddToHome() {  //A2H\r\n    //console.log(\"Dashboard --> renderAddToHome() >> showA2H : \"+this.state.showA2H);\r\n    return (\r\n      <>\r\n      {\r\n        this.state.showA2H && !this.isPWAInstalled && \r\n        <div className=\"ilearn-footer\">                    \r\n            <Row>\r\n                <Col className=\"ilearn-footer-col\" >\r\n                  <button className=\"btn ilearn-blue-btn ilearn-footer-btn btn-lg btn-block\" >\r\n                    <img src=\"/logo192.png\" alt=\"notification\" className=\"float-left\" style={{width:'24px',height:'24px',float:'left'}}/> \r\n                    <span onClick={() => this.addToHome()}>\r\n                      Add {(new URL(window.location)).hostname} to Home screen \r\n                    </span>\r\n                    <span onClick={() => this.closeAddToHome()} className=\"float-right\">\r\n                      <FontAwesomeIcon icon={ faTimes }  size = 'lg' color='#fff'/>\r\n                      &nbsp;\r\n                    </span>\r\n                    </button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n      }\r\n      </>\r\n    );\r\n  }\r\n\r\n  isInstalled() {\r\n    //console.log(\"Dashboard --> isInstalled()...\"+(new URL(window.location)).hostname);\r\n    if (navigator.standalone) {\r\n      //console.log(\"Dashboard --> isInstalled() >> navigator.standalone\");\r\n      return true;  // iOS\r\n    }\r\n    if (window.matchMedia('(display-mode: standalone)').matches) {\r\n      //console.log(\"Dashboard --> isInstalled() >> display-mode: standalone\");\r\n      return true;  // Android with \"display\": \"standalone\" in Manifest\r\n    }\r\n    if (new URL(window.location).searchParams.has('ilearnPWA')) {\r\n      //console.log(\"Dashboard --> isInstalled() >> ilearnPWA\");\r\n      return true;  // fallback to check for \"?homescreen=1\"\r\n    }\r\n    //console.log(\"Dashboard --> isInstalled() >> FALSE\");\r\n    return false;\r\n  }\r\n\r\n  closeAddToHome() {\r\n    //console.log(\"Dashboard --> closeAddToHome()\");\r\n    this.setState({ showA2H: false });\r\n  }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  dashboard: state.dashboard.dashboard\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getPortlets: () => dispatch(getPortlets())\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (Dashboard);","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\login\\Register.js",["841","842","843","844","845","846","847","848","849","850","851","852","853","854"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"./Login.css\";\r\nimport cw_logo from \"./images/cw_logo.png\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport Config from \"../../_config/config\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Loader from './../../_components/loader/loader';\r\nimport OTPValidator from './../../_components/OTPValidator';\r\nimport swal from 'sweetalert';\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\t    loading: false,\r\n      user: null,\r\n      list2:[],\r\n      otpValidator: { show:false, \r\n        otpLength: 0, \r\n        smsAddress: null, \r\n        message:'Successfully sent the One Time Password to your Registered Mobile Number',\r\n        userId: null\r\n      },\r\n      loginUserData: null\r\n    };\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\t  this.reloadRegisterList = this.reloadRegisterList.bind(this);\r\n  }\r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const mobile = this.props.location?.state?.mobile;\r\n    if(mobile){\r\n      this.setState({contactNumber:mobile});\r\n    }\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.reloadRegisterList();\r\n\t  this.reloadCountryCodeList();  \r\n  }\r\n  \r\n  reloadRegisterList() {\r\n      this.setState({ loading: true }, () => {\r\n        ApiService.fetchRegisterList()\r\n        .then((res) => {\r\n            let quickEnquiryForm = res.data.data;\r\n            let openIdLoginData1 = sessionStorage.getItem('openIdLoginData');\r\n            if(openIdLoginData1) {\r\n              console.log(\"OpenId Login Data: \"+openIdLoginData1);\r\n              let openIdLoginData = JSON.parse(openIdLoginData1);\r\n              quickEnquiryForm.openLoginId = openIdLoginData.userID;\r\n              quickEnquiryForm.openLoginType = openIdLoginData.openLoginTypeId;\r\n              for(let index=0; index<quickEnquiryForm.fields.length; index++) {\r\n                if(quickEnquiryForm.fields[index].enableStatus==1) {\r\n                  if(quickEnquiryForm.fields[index].name==\"firstName\" && openIdLoginData.first_name) {\r\n                    quickEnquiryForm.fields[index].response=openIdLoginData.first_name;  \r\n                  }\r\n                  else if(quickEnquiryForm.fields[index].name==\"lastName\" && openIdLoginData.last_name) {\r\n                    quickEnquiryForm.fields[index].response=openIdLoginData.last_name;\r\n                  }\r\n                  else if(quickEnquiryForm.fields[index].name==\"email\" && openIdLoginData.email) {\r\n                    quickEnquiryForm.fields[index].response=openIdLoginData.email;\r\n                  }\r\n                  else if(quickEnquiryForm.fields[index].name==\"userName\" && openIdLoginData.email) {\r\n                    quickEnquiryForm.fields[index].response=openIdLoginData.email;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            this.setState({\r\n              loading: false,\r\n              list: quickEnquiryForm\r\n            });\r\n        });\r\n      });\t\r\n  }\r\n  \r\n  updateInput = (e) => {\r\n        const v = e.target.value;\r\n        const k = e.target.name;\r\n        this.setState({[k]:v});\r\n        //console.log(this.state)\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.setState({ submitted: true, loading: true });\r\n      let registerForm = this.state.list;\r\n      let myForm = document.getElementById('myForm');\r\n      let formData = new FormData(myForm);\r\n      //registerForm.platform = \"Android\";\r\n      formData.forEach((value, key) => {\r\n        for (let i = 0; i < registerForm.fields.length; i++) {\r\n          if(registerForm.fields[i].name==key && registerForm.fields[i].enableStatus==1){\r\n             registerForm.fields[i].response= value;\r\n          }\r\n        }\t      \r\n      });\r\n      let openIdLoginData1 = sessionStorage.getItem('openIdLoginData');\r\n      if(openIdLoginData1) {\r\n        //console.log(\"OpenId Login Data: \"+openIdLoginData1);\r\n        let openIdLoginData = JSON.parse(openIdLoginData1);\r\n        registerForm.openLoginId = openIdLoginData.userID;\r\n        registerForm.openLoginType = openIdLoginData.openLoginTypeId;\r\n      }\r\n\t  //console.log(JSON.stringify(registerForm));\r\n\t  ApiService.fetchRegister(registerForm)\r\n        .then((res) => {\r\n          console.log(res);\r\n          /*  {\"status\":1,\r\n        \"message\":\"Thank you for the details you entered.<br/>Registration done successfully.\",\r\n        \"data\":{\"userId\":64715,\"status\":1,\"userName\":\"testotp\",\"enquiryId\":76310,\"enquiryName\":\"testotp\",\r\n        \"userTypeId\":2,\"instructorId\":0,\"instructorName\":null,\"allowMultipleUser\":0,\"emailId\":\"testotp@cw.com\",\r\n        \"mobileNumber\":\"9848040040\",\"address\":\"\",\"otpEnableStatus\":1,\"otp\":\"883796\",\"smsAddress\":\"CWAVES\",\r\n        \"otpMessage\":\"Successfully sent the One Time Password to your Registered Mobile Number \r\n        <br/>98**0***40 <br/> and Email <br/>t****p@cw.com.\"}}\r\n      */\r\n\t\t\tif(res.data.status==1) {\r\n        console.log(\"Register Data : \"+JSON.stringify(res.data.data));\r\n        if(res.data.data.otpEnableStatus && res.data.data.otpEnableStatus === 1) { //validate OTP\r\n          let _otpValidator = { show:true, \r\n            otpLength: res.data.data.otpLength, \r\n            smsAddress: res.data.data.smsAddress,\r\n            message: res.data.data.otpMessage,\r\n            userId: res.data.data.userId\r\n          }\r\n          this.setState({ loading: false,\r\n            otpValidator: _otpValidator,\r\n            loginUserData: res.data.data \r\n          });                         \r\n        }\r\n        else {        \r\n          // store user details in local storage to keep user logged in between page refreshes\r\n          localStorage.setItem('user', JSON.stringify(res.data.data));\r\n          this.props.history.push('/');\r\n        }\r\n      }\r\n      else if(res.data.status==0) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t  loading: false,\r\n\t\t\t\t  list: res.data.data\r\n\t\t\t\t});        \r\n\t\t\t}\r\n      else {\r\n        this.showErrorAlert(\"Somethig went wrong, Please try again later.\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n\tconst { loading } = this.state;\r\n    return (\r\n      <>\r\n      <div className=\"login\">\r\n        {\r\n          <Container fluid>\r\n            <div className=\"back\">\r\n                  <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n            </div>\r\n            <div className=\"header-image\"  style={{background: `url(${Config.cover}) no-repeat transparent`,  backgroundSize: 'cover', backgroundPosition: 'center'}}> </div>\r\n            <div className=\"main-content\">\r\n              <span className=\"gradient-text\">\r\n                <strong> Register </strong>\r\n              </span>\r\n              {loading ?  <Loader />: this.renderFormLogin()}\r\n            </div>\r\n          </Container>\r\n        }\r\n        {this.renderFooter()}\r\n      </div>\r\n      <OTPValidator data={this.state.otpValidator} \r\n                onOTPValidatorClose={this.onOTPValidatorClose} />\r\n\t\t\t</>\r\n    );\r\n  }\r\n\r\n  onOTPValidatorClose = value => {\r\n    //console.log(\"Register --> onOTPValidatorClose...\"+value);\r\n    // store user details in local storage to keep user logged in between page refreshes    \r\n    if(value===true) {\r\n      localStorage.setItem('user', JSON.stringify(this.state.loginUserData));\r\n      this.props.history.push('/');\r\n    }\r\n    else {\r\n      let _otpValidator= { show:false, \r\n        otpLength: 0, \r\n        smsAddress: null, \r\n        message:'Successfully sent the One Time Password to your Registered Mobile Number',\r\n        userId: null\r\n      }\r\n      this.setState({ otpValidator: _otpValidator }); \r\n    }      \r\n}\r\n\r\n  renderFormLogin() {\r\n    return (\r\n      <Form onSubmit={this.onSubmit} id=\"myForm\" className=\"registrationForm\">\r\n      <Form.Group>\r\n       {this.renderCard()}\r\n        <div className=\"institute-sign-in-btn\">\r\n          <input className=\"primary button-full ilearn-blue-btn button-md\" type=\"submit\" value=\"Register\" />\r\n        </div>\r\n      </Form.Group>\r\n     </Form>\r\n    );\r\n  }\r\n  \r\n  reloadCountryCodeList() {\r\n      this.setState({ loading: true }, () => {\r\n        ApiService.fetchCountries()\r\n        .then((res) => {\r\n            this.setState({\r\n              loading: false,\r\n              list2: res.data.data\r\n            });\r\n        });\r\n      });\t\r\n  }\r\n\r\n  renderCard() {\r\n    let data = this.state.list;\r\n\t  let options = this.state.list2;\r\n    let field = \"\";\r\n\t\treturn (\r\n    <div className=\"card_list\"> \r\n\t\t{\r\n        \r\n\t\t  data && data.fields.map((item, index) => {\r\n          if(item.enableStatus==1 && item.type != \"tagType\") {\r\n            if(item.type == \"select\"){\r\n              field =  <Form.Group controlId=\"exampleForm.SelectCustomSizeSm\" className=\"select\">\r\n                          <Form.Label>{item.displayName}</Form.Label>\r\n                          <Form.Control as=\"select\"  name={item.name} defaultValue={item.response} onChange={this.updateInput}>\r\n                            { item.options.map((c, i) =>\r\n                              <option value={c.id}>{c.name}</option>\r\n                            )}\r\n                          </Form.Control>\r\n                        </Form.Group>;\r\n            }\r\n            else if(item.name==\"contactNumberCountryCode\") {\r\n              field =  <div className={'item-inner'}>\r\n                          <Form.Control as=\"select\"  name={item.name} defaultValue={item.response} onChange={this.updateInput}>\r\n                            { options.map((c, i) =>\r\n                              <option value={c.countryCode} selected={c.defaultCountry}>+{c.countryCode}</option>\r\n                            )}\r\n                          </Form.Control>\r\n                        </div>;\r\n\t\t\t      }\r\n            else {\r\n               field =  <div>\r\n                          <div className={'item-inner'}>\r\n                            <Form.Control type={item.type} placeholder={item.displayName} name={item.name} value={this.state[item.name]} defaultValue={item.response} onChange={this.updateInput}/>\r\n                          </div>\r\n                          <br /> \r\n                        </div>;\r\n            }\r\n            return (\r\n              <div className={item.name}> \r\n                {field}\r\n\t\t\t\t        <div  className=\"error\"  style={item.errorMessage ? {}:{display:'none'}}>{item.errorMessage}</div>\r\n              </div> \r\n            )\r\n          }\r\n\t\t\t  })\r\n    }\r\n    </div>\r\n    );\r\n  }\r\n\r\n  renderFooter() {\r\n    return (\r\n      <div className=\"institute-cards\">\r\n        <div className=\"\">\r\n          <div className=\"institute-top-intro\">\r\n            <h6> Powered by </h6> <img src={cw_logo} alt=\"logo\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  showErrorAlert(message) {\r\n    swal({\r\n        text: message,\r\n        icon: \"warning\",\r\n        button: \"Ok\",\r\n        allowOutsideClick: false,\r\n        closeOnClickOutside: false,\r\n        closeOnEsc: false\r\n    }).then(exit => {\r\n      this.init();\r\n    });\r\n}\r\n}\r\n\r\n\r\n\r\nexport default Register;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\biometric-attendance\\BiometricAttendance.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\refer\\Refer.js",["855"],"import React, { Component } from \"react\";\r\nimport \"./Refer.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport Card from 'react-bootstrap/Card'\r\nimport referbanner from \"./images/refer-banner.png\";\r\nimport gift from \"./images/gift.png\";\r\nimport giftflip from \"./images/gift-flip.png\";\r\n\r\nclass Refer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  render() {\r\n\t  let portlet = JSON.parse(localStorage.getItem('portlet'));\r\n\t  return ( \r\n\t\t<div className=\"Refer mt60 card_list\"> \r\n\t\t  <div className={`module-header-step2 ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n\t\t  <div className=\"back\">\r\n\t\t\t<FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n\t\t  </div>\r\n\t\t  <h4>Refer a friend</h4>\r\n\t\t  </div>\r\n\t\t  <Card className=\"mh220\">\r\n\t\t\t<Card.Body>\r\n\t\t\t  <div className=\"cardbody\">\r\n\t\t\t    <img src={referbanner} alt=\"refer banner\" className=\"referbanner\"/> \r\n\t\t\t  </div>\r\n\t\t\t</Card.Body>\r\n\t\t  </Card>\r\n\t\t  <Card className=\"cardgift\">\r\n\t\t\t<Card.Body>\r\n\t\t\t  <div className=\"cardbody\">\r\n\t\t\t\t<p>Earn <span className=\"pink\">Reward Points</span> for every <span className=\"green\">Enrolled Student</span></p>\r\n\t\t\t    <img src={gift} alt=\"refer banner\" className=\"gift\"/> \r\n\t\t\t\t<img src={giftflip} alt=\"refer banner\" className=\"giftflip\"/> \r\n\t\t\t  </div>\r\n\t\t\t</Card.Body>\r\n\t\t  </Card>\r\n\t\t  <button className=\"btn refernow\" onClick={() => this.routeChange('/refer/details')}> REFER NOW</button>\r\n\t  </div>\r\n\t  )\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Refer;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\biometric-attendance\\BiometricAttendanceSemester.js",["856"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./BiometricAttendance.css\";\r\nimport \"./circle.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Loader from './../../_components/loader/loader';\r\n\r\nclass BiometricAttendanceSemester extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false\r\n    };\r\n  }\r\n \r\n  componentDidMount() {\r\n        console.log(this.props.location.state);\r\n  }\r\n\r\n  render() {\r\n\tlet portlet = JSON.parse(localStorage.getItem('portlet'));\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"BiometricAttendance\">\r\n        {\r\n          <Container fluid>\r\n\t\t      <div className={`module-header-step2 ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n\t\t\t\t  <div className=\"back\">\r\n\t\t\t\t\t<FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <h4>{this.props.location.state.card.semesterName}</h4>\r\n              </div><br /><br />\r\n\t\t\t  {loading ?  <Loader />: this.renderCard()}   \r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  renderCard() {\r\n\t    var data =\"\";\r\n\t\tdata = this.props.location.state.card.monthWiseData;\r\n\t\tvar months = [ \"Months\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\r\n\t\treturn  <div className=\"attendance card_list\"> \r\n\t\t{\r\n\t\r\n\t\t\tthis.props.location.state.card.monthWiseData && data.map((item, index) => {\r\n\t\t     return ( \r\n\t\t\t     <Card className={`card`} key={index} onClick={() =>this.routeChange(item)}>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t  <div className=\"cardbody\">\r\n\t\t\t\t\t    <div className=\"half\">\r\n\t\t\t\t\t\t\t<h4>{months[item.startMonth]} {item.startYear}</h4>\r\n\t\t\t\t\t\t\t<p><span className=\"topic\">Active Days </span> <span className=\"activecount\">{item.activeDays}</span></p>\r\n\t\t\t\t\t\t\t<p><span className=\"topic\">Present</span> <span className=\"presentcount\"> {item.presents}</span></p>\r\n\t\t\t\t\t\t\t<p><span className=\"topic\">Absent</span> <span className=\"absentcount\"> {item.absent}</span></p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t <div className=\"half\">\r\n\t\t\t\t\t\t   <div className={`c100 small green p${Math.round(item.presentPercentage)}`}>\r\n\t\t\t\t\t\t\t\t<span>{item.presentPercentage}%</span>\r\n\t\t\t\t\t\t\t\t<div class=\"slice\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"bar\"></div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"fill\"></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t <div className={`absent`}><p><b>Absent on:</b> <br /> {item.absentOn}</p></div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t </Card>\r\n\t\t\t  )\r\n\t\t\t})\r\n        }\r\n       </div>\r\n  }\r\n}\r\n\r\n\r\nexport default BiometricAttendanceSemester;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\refer\\ReferDetails.js",["857","858","859","860"],"import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./Refer.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from 'react-bootstrap/Card'\r\nimport Loader from './../../_components/loader/loader';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ApiService from \"../../_services/ApiService\";\r\n\r\nclass ReferDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\tthis.state = {\r\n      currentPassword: '',\r\n      newPassword: '',\r\n      confirmPassword: '',\r\n      message:'',\r\n      submitted: false,\r\n\t  loading: false,\r\n      user: null,\r\n\t  list: [],\r\n\t  list2: [],\r\n\t  response : [],\r\n    };\r\n\tthis.onSubmit = this.onSubmit.bind(this);\r\n\tthis.reloadReferralsList = this.reloadReferralsList.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n\tthis.reloadReferralsList();\r\n\tthis.reloadCountryCodeList();\r\n  }\r\n  \r\n  reloadReferralsList() {\r\n      this.setState({ loading: true }, () => {\r\n        ApiService.fetchReferrals()\r\n        .then((res) => {\r\n            this.setState({\r\n              loading: false,\r\n              list: res.data.data\r\n            });\r\n        });\r\n      });\t\r\n  }\r\n  \r\n  reloadCountryCodeList() {\r\n      this.setState({ loading: true }, () => {\r\n        ApiService.fetchCountries()\r\n        .then((res) => {\r\n            this.setState({\r\n              loading: false,\r\n              list2: res.data.data\r\n            });\r\n        });\r\n      });\t\r\n  }\r\n  \r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.setState({ submitted: true });\r\n    let { name, mobileNumber, email, remarks } = this.state;\r\n\tvar countryCode = document.getElementById(\"countryCode\").value;\r\n    if (name && mobileNumber && email && remarks && countryCode) {\t\r\n\t\tvar dataString = {\r\n            \"name\":name,\r\n            \"mobileNumber\":mobileNumber,\r\n            \"email\":email,\r\n\t\t\t\"remarks\":remarks,\r\n\t\t\t\"countryCode\":countryCode,\r\n\t\t\t\"enquiryId\": localStorage.getItem('enquiryId')\r\n        };\r\n\t\tApiService.fetchRefer(dataString)\r\n        .then((res) => {\r\n\t\t   if(res.data.status==0){\t\r\n              this.setState({\r\n                loading: false,\r\n                response: res.data.data\r\n              });\r\n\t\t   }else{\r\n\t\t\t  let emailValidationMsg = '';\r\n\t\t\t  let mobileNumberValidationMsg = '';\r\n\t\t\t  this.setState({ message: res.data.message });\r\n\t\t\t  this.setState({ response: mobileNumberValidationMsg });\r\n\t\t\t  this.setState({ response: emailValidationMsg });\r\n\t\t\t  this.reloadReferralsList(); \r\n\t\t   }\r\n        });\r\n    }\r\n  }\r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  render() {\r\n\tlet portlet = JSON.parse(localStorage.getItem('portlet'));\r\n    console.log(this.props);\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"ReferDetails login\">\r\n        {\r\n\t\t <div>\r\n\t\t  <div className={`module-header-step2 ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n\t\t\t  <div className=\"back\">\r\n\t\t\t\t<FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n\t\t\t  </div>\r\n\t\t\t   <h4>Refer a friend</h4>\r\n\t\t  </div>\r\n\t\t  <div className=\"mt60\">\r\n\t\t    <Tabs defaultActiveKey=\"Refer\" id=\"uncontrolled-tab-example\">\r\n\t\t\t  <Tab eventKey=\"Refer\" title=\"Refer\">\r\n\t\t\t\t{loading ?  <Loader />: this.renderForm()} \r\n\t\t\t  </Tab>\r\n\t\t\t  <Tab eventKey=\"Referred\" title=\"Referred\">\r\n\t\t\t\t{loading ?  <Loader />: this.renderCard()} \r\n\t\t\t  </Tab>\r\n\t\t\t</Tabs>\r\n\t\t  </div>\r\n\t\t </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderCard() {\r\n\t    let data = this.state.list\r\n\t\tconsole.log(\"records\");\r\n\t\treturn  <div className=\"refer_list card_list\"> \r\n\t\t{\r\n\t\t data && data.map((item, index) => {\r\n\t\t\t\treturn ( \r\n\t\t\t\t <Card key={index}>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t  <div className=\"cardbody\">\r\n\t\t\t\t\t\t<h4 className=\"head\">{item.name} <br /> \r\n\t\t\t\t\t\t <span>{item.mobile}</span>\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t<p>{item.referredDate}</p>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t  </Card>\r\n\t\t     )\r\n        })\r\n    }\r\n    </div>\r\n  }\r\n  \r\n  renderForm() {\r\n\tlet options = this.state.list2;\r\n\tlet {name, mobileNumber, email, remarks, submitted, response, message, countryCode} = this.state;\r\n    return (\r\n      <Form onSubmit={this.onSubmit}>\r\n      <Form.Group>\r\n        <div className={'item-inner' + (submitted && !name ? ' has-error' : '')}>\r\n          <Form.Control type=\"text\" name=\"name\" placeholder=\"Name\"  onChange={e => this.setState({name: e.target.value})} value={name}  />\r\n        </div>\r\n        <br />\r\n        <div className={'item-inner country_code' + (submitted && !mobileNumber ? ' has-error' : '')}>\r\n          <Form.Control as=\"select\" name=\"countryCode\" id=\"countryCode\" onChange={e => this.setState({countryCode: e.target.value})} >\r\n\t\t    {options.map((c, i) =>\r\n\t\t\t   <option value={c.countryCode} selected={c.defaultCountry}>+{c.countryCode}</option>\r\n\t\t\t)}\t\r\n\t\t   </Form.Control>\r\n\t\t   <Form.Control type=\"text\" placeholder=\"Mobile Number\" name=\"mobileNumber\" onChange={e => this.setState({mobileNumber: e.target.value})} value={mobileNumber} />\r\n        </div>\r\n\t\t {response.mobileNumberValidationMsg && <div className=\"res-error\">{response.mobileNumberValidationMsg}</div> }\r\n        <br />\r\n        <div className={'item-inner' + (submitted && !email ? ' has-error' : '')}>\r\n          <Form.Control type=\"text\" placeholder=\"Email\" name=\"email\" onChange={e => this.setState({email: e.target.value})} value={email} />\r\n        </div>\r\n\t\t{ response.emailValidationMsg && <div className=\"res-error\">{response.emailValidationMsg}</div> }\r\n        <br />\r\n        <div className={'item-inner' + (submitted && !remarks ? ' has-error' : '')}>\r\n          <Form.Control type=\"text\" placeholder=\"Remarks\" name=\"remarks\" onChange={e => this.setState({remarks: e.target.value})} value={remarks} />\r\n        </div>\r\n        <div className=\"institute-sign-in-btn\">\r\n          <input className=\"primary button-full ilearn-blue-btn button-md\" type=\"submit\" value=\"REFER\" />\r\n        </div>\r\n\t\t{message && <div className=\"res-green\">{message}</div> }\r\n      </Form.Group>\r\n     </Form>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default ReferDetails;","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\Learning.js",["861"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"./Learning.css\";\r\nimport learningmodules from \"./images/learningmodules.png\";\r\nimport default_icon from \"./images/learning_module_default.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Loader from \"./../../_components/loader/loader\";\r\nimport tile from \"./images/tile.svg\";\r\nimport list from \"./images/list.svg\";\r\nimport Utils from \"../../_helpers/utils\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass Learning extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      message: null,\r\n      loading: false,\r\n      view: \"grid\",\r\n      isMobile: true,\r\n    };\r\n    this.reloadLearningList = this.reloadLearningList.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.reloadLearningList();\r\n    if (Utils.isMobileDevice()) {\r\n      console.log(\"Ismobile.....\");\r\n      this.setState({\r\n        view: \"grid\",\r\n        isMobile: true,\r\n      });\r\n    } else {\r\n      console.log(\"Ismobile Not.....\");\r\n      this.setState({\r\n        view: \"list\",\r\n        isMobile: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  reloadLearningList() {\r\n    this.setState({ loading: true }, () => {\r\n      let portlet = JSON.parse(localStorage.getItem(\"portlet\"));\r\n      let typeId =\r\n        portlet.params.resourceTypeId || this.props.match.params.typeId;\r\n      let subTypeId =\r\n        portlet.params.resourceSubTypeId || this.props.match.params.subTypeId;\r\n      ApiService.fetchLearning(typeId, subTypeId).then((res) => {\r\n        this.setState({\r\n          loading: false,\r\n          list: res.data,\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  payCheck(path, card) {\r\n    this.setState({ loading: true }, () => {\r\n      let payLoad = {\r\n        type: \"lms\",\r\n      };\r\n      ApiService.studentPayCheck(payLoad).then((res) => {\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        if (res.data.type == 2) {\r\n          const wrapper = document.createElement(\"div\");\r\n          wrapper.innerHTML = res.data.message;\r\n          swal({\r\n            title: \"Alert\",\r\n            content: wrapper,\r\n            dangerMode: true,\r\n            buttons: true,\r\n            className: \"blue-card\",\r\n          }).then((willResume) => {\r\n            if (willResume) {\r\n            }\r\n          });\r\n        } else {\r\n          this.props.history.push({\r\n            pathname: path,\r\n            state: { card: card },\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  routeChange(path, card) {\r\n    this.payCheck(path, card);\r\n  }\r\n\r\n  routeChange2(path, card) {\r\n    this.props.history.push({\r\n      pathname: path,\r\n      state: { card: card },\r\n    });\r\n  }\r\n\r\n  changeView(view) {\r\n    this.setState({ view: view });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    const { loading } = this.state;\r\n    let portlet = JSON.parse(localStorage.getItem(\"portlet\"));\r\n    localStorage.setItem(\"firstVisit\", true);\r\n    console.log(JSON.stringify(portlet));\r\n\r\n    return (\r\n      <div className=\"Learning\">\r\n        {\r\n          <Container fluid>\r\n            <div className=\"module-header\">\r\n              <div\r\n                className={`module-header-inner ${\r\n                  portlet.class ? portlet.class : \"orange-card\"\r\n                }`}\r\n              >\r\n                <div className=\"back\">\r\n                  <FontAwesomeIcon\r\n                    icon={faArrowLeft}\r\n                    onClick={() => this.routeChange2(\"/dashboard\")}\r\n                  />\r\n                </div>\r\n                <img src={learningmodules} alt=\"learning logo\" />\r\n              </div>\r\n\r\n              <div className=\"arrow-set\">\r\n                {this.state.isMobile ? (\r\n                  <div className=\"row\">\r\n                    <div className=\"col-10\">\r\n                      <h3>\r\n                        {portlet.name\r\n                          ? portlet.name\r\n                          : this.props.match.params.title}\r\n                      </h3>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                      {this.state.view === \"list\" ? (\r\n                        <img\r\n                          alt=\"list\"\r\n                          src={tile}\r\n                          className=\"border\"\r\n                          onClick={() => this.changeView(\"grid\")}\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          alt=\"grid\"\r\n                          src={list}\r\n                          className=\"border\"\r\n                          onClick={() => this.changeView(\"list\")}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <h4>\r\n                    {portlet.name\r\n                      ? portlet.name\r\n                      : this.props.match.params.title}\r\n                  </h4>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {loading ? (\r\n              <Loader />\r\n            ) : this.state.view === \"list\" ? (\r\n              this.renderList()\r\n            ) : (\r\n              this.renderGrid()\r\n            )}\r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderList() {\r\n    let portlet = JSON.parse(localStorage.getItem(\"portlet\"));\r\n    return (\r\n      <div className=\"card_list\">\r\n        {this.state.list\r\n          .sort((a, b) => a.sortOrder - b.sortOrder)\r\n          .map((item, index) => {\r\n            if (!item.icon) {\r\n              item.icon = default_icon;\r\n            }\r\n            return (\r\n              <Card\r\n                key={index}\r\n                onClick={() =>\r\n                  this.routeChange(\"/lesson/steps/\" + item.id + \"/1\", item)\r\n                }\r\n              >\r\n                <Card.Body>\r\n                  <div className=\"cardbody align-center\">\r\n                    <img src={item.icon} alt={item.name} />\r\n                    <h4 className=\"head\">{item.name}</h4>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        <>\r\n          {portlet.buyNow && portlet.buyNow.enableStatus === true && (\r\n            <Card onClick={() => this.buyNow()}>\r\n              <Card.Body>\r\n                <div className=\"cardbody\">\r\n                  <img src=\"/assets/imgs/products.png\" alt=\"Buy Now\" />\r\n                  <h4 className=\"head\">{portlet.buyNow.displayLabel}</h4>\r\n                  <FontAwesomeIcon icon={faArrowRight} />\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          )}\r\n        </>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderGrid() {\r\n    let portlet = JSON.parse(localStorage.getItem(\"portlet\"));\r\n    return (\r\n      <div className=\"mobile_course_list\">\r\n        {this.state.list\r\n          .sort((a, b) => a.sortOrder - b.sortOrder)\r\n          .map((item, index) => {\r\n            if (!item.icon) {\r\n              item.icon = default_icon;\r\n            }\r\n            return (\r\n              <div\r\n                key={index}\r\n                onClick={() =>\r\n                  this.routeChange(\"/lesson/steps/\" + item.id + \"/1\", item)\r\n                }\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"course_box\">\r\n                      <div className=\"card\">\r\n                        <img\r\n                          alt={item.name}\r\n                          src={item.icon}\r\n                          className=\"resposive-image\"\r\n                        />\r\n                        <div className=\"head\">\r\n                          <p className=\"title\">\r\n                            <strong>{item.name}</strong>\r\n                          </p>\r\n                          <p className=\"light_blue\">\r\n                            Date : {item.creationDate}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        <>\r\n          {portlet.buyNow && portlet.buyNow.enableStatus === true && (\r\n            <Card onClick={() => this.buyNow()}>\r\n              <Card.Body>\r\n                <div className=\"cardbody\">\r\n                  <img src=\"/assets/imgs/products.png\" alt=\"Buy Now\" />\r\n                  <h4 className=\"head\">{portlet.buyNow.displayLabel}</h4>\r\n                  <FontAwesomeIcon icon={faArrowRight} />\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          )}\r\n        </>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  buyNow() {\r\n    this.props.history.push(\"/Products\");\r\n  }\r\n}\r\n\r\nexport default Learning;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\product\\ProductList.js",["862","863"],"import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./Product.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport Card from 'react-bootstrap/Card'\r\nimport getProducts from './../../_actions/productActions';\r\n\r\nclass ProductList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getProducts();\r\n  }\r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  render() {\r\n\t\treturn  <div className=\"Product card_list\"> \r\n\t\t{\r\n\t\t  this.props.product.map((item, index) => {\r\n\t\t\tif(item.id==this.props.match.params.id){\r\n\t\t\t  return ( \r\n\t\t\t\t<div key={index}>\r\n\t\t\t\t  <div className=\"module-header-step2 blue-light-card\">\r\n\t\t\t\t  <div className=\"back\">\r\n\t\t\t\t\t<FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <h4>{item.name}</h4>\r\n\t\t\t\t  </div><br /><br /><br />\r\n\t\t\t\t  <div className=\"card_list\">{this.renderProduct(item.productList)}</div>\r\n\t\t\t  </div>\r\n\t\t\t  )\r\n\t\t\t}\r\n\t\t  })\r\n\t\t}\r\n    </div>\r\n  }\r\n  \r\n  \r\n  renderProduct(productList){\r\n\treturn <div>\r\n\t{\r\n\t\tproductList.map((c, i) =>{\r\n\t\t\treturn (\r\n\t\t\t  <Card key={i} onClick={() => this.routeProductDetail(c)}>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t  <div className=\"cardbody product\">\r\n\t\t\t\t\t<img src={c.imageUrl} alt={c.name} />\r\n\t\t\t\t\t<h4 className=\"head\">{c.name}</h4>\r\n\t\t\t\t\t<button className=\"download green-card\">₹ {c.cost}</button>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t  </Card>\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\t</div>\r\n  }\r\n  \r\n\r\nrouteProductDetail = (product) => {\r\n    //console.log(JSON.stringify(card));\r\n    this.props.history.push({\r\n      pathname: '/ProductDetails',\r\n      state: { product: product }});\r\n  };\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  product: state.product.product\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getProducts: getProducts,\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (ProductList);\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\LearningSteps.js",["864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Config from '../../_config/config'\r\nimport \"./Learning.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft,faArrowRight,faThLarge,faThList, faDesktop, faBook, faTimesCircle  } from '@fortawesome/free-solid-svg-icons';\r\nimport Card from 'react-bootstrap/Card'\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Loader from './../../_components/loader/loader';\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport ico_text_format from \"./images/ico_text-format.svg\";\r\nimport ico_test from \"./images/ico_test.svg\";\r\nimport swal from 'sweetalert';\r\nimport Notes from \"./components/Notes\";\r\nimport NotesForwarding from \"./components/notes-forwarding.component\";\r\nimport { StudyResourceType } from \"../../_constants/studyResourceTypes\";\r\n\r\nclass LearningSteps extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      message: null,\r\n      loading: false,\r\n      view: \"grid\",\r\n      title:\"\",\r\n      notes:false,\r\n      lock:false\r\n    };\r\n    this.reloadLearningStepsList = this.reloadLearningStepsList.bind(this);\r\n    this.resumeLearningActivity = this.resumeLearningActivity.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n    this.setState({\r\n      learnId: this.props?.match?.params?.id || this.props.learnId ,\r\n      lock: this.props?.lock\r\n    });\r\n    this.reloadLearningStepsList();\r\n  }\r\n\r\n  changeView(view) {\r\n    this.setState({view: view});    \r\n  }\r\n\r\n  reloadLearningStepsList() {\r\n    let that = this;\r\n    this.setState({ loading: true }, () => {\r\n      ApiService.fetchLearningStepsDesktop(this.state.learnId)\r\n      .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n            list: res.data.groups,\r\n            title: res.data.name\r\n          });\r\n          let visit = localStorage.getItem('firstVisit') || false;\r\n          if(visit==\"true\" && that.state.lock != true){\r\n            setTimeout(function() {\r\n              that.resumeLearningActivity();\r\n            }, 500);\r\n          }\r\n      });\r\n    });\t\r\n  }\r\n\r\n  resumeLearningActivity(){\r\n      ApiService.resumeStudyResourcesLearningActivity(this.state.learnId)\r\n      .then((res) => {\r\n        if(res.data.id){\r\n          swal({\r\n            title: \"Resume Confirmation\",\r\n            text: \"Would you like to resume from where you last left ?\",\r\n            dangerMode: true,\r\n            buttons: true,\r\n            className: 'blue-card'\r\n          })\r\n          .then((willResume) => {\r\n            if (willResume) {\r\n              let stepid = this.state.list[res.data.groupIndex].steps[res.data.stepIndex].id;\r\n              this.props.history.push({\r\n                pathname: '/lesson/steps/attachments/'+stepid+'/details/'+res.data.id,\r\n                state: { groupIndex: res.data.groupIndex,stepIndex: res.data.stepIndex, lessonPlanId:this.state.learnId }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\t\r\n  }\r\n\r\n  routeChange(path,groupIndex,stepIndex) {\r\n    var learnId = this.state.learnId;\r\n    this.props.history.push({\r\n      pathname: path,\r\n      state: { groupIndex: groupIndex,stepIndex: stepIndex, lessonPlanId: learnId }\r\n    });\r\n  }\r\n\r\n  showNotes(status){\r\n    this.setState({\r\n      notes: status\r\n    });\r\n  }\r\n\r\n\r\n  downloadTest(testid) {\r\n      window.open('/TestInstructions/'+testid+'?lms='+this.state.learnId, \"Start Test\", 'height=' + window.screen.height + ',width=' + window.screen.width);    \r\n  }\r\n\r\n  toggleActive(id) {\r\n    this.setState({activeId: id});\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    let portlet = JSON.parse(localStorage.getItem('portlet'));\r\n    var deafult_cover_img = \"https://tuningfork-testing.s3.amazonaws.com/triangles%5Cuploads/study_resource/lessonPlan/photos%5C242.jpg\";\r\n    var courseImg = this.props?.location?.state ? this.props.location.state.card.icon : \"\";\r\n    return (\r\n      <div className=\"LearningSteps\">\r\n        {\r\n          <Container fluid>\r\n               { \r\n               this.state.lock != true ?\r\n              <div className=\"module-header courseView\">\r\n                <div className={`module-header-step2`}>\r\n                <div className=\"back\">  \r\n                  <FontAwesomeIcon icon={ faArrowLeft } onClick={() => this.routeChange('/lessonPlan/15/'+portlet.params.resourceSubTypeId+'/Learning Modules') } />\r\n                </div>\r\n                <h4>{this.state.title && this.state.title}</h4> \r\n                <FontAwesomeIcon className={this.state.view === 'grid' ? \"active list_grid_view\": \"list_grid_view\"} icon={ faThLarge } onClick={() => this.changeView('grid')} />\r\n                <FontAwesomeIcon className={this.state.view === 'list' ? \"active list_grid_view\": \"list_grid_view\"} icon={ faThList }  onClick={() => this.changeView('list')} /> \r\n                {/*<FontAwesomeIcon className={this.state.view === 'desktop' ? \"active list_grid_view\": \"list_grid_view\"} icon={ faDesktop }  onClick={() => this.changeView('desktop')} />*/}\r\n                </div>\r\n              </div> : \"\"\r\n              }\r\n              <figure className=\"mobile_course_image\" \r\n                style={{ background: ' linear-gradient(to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0) 59%, rgba(255, 255, 255, 0.65) 100%), url('+courseImg+') center center repeat, url('+deafult_cover_img+') center center repeat' }} id=\"sticky_img\" \r\n            />\r\n            {  \r\n                loading ? <Loader />: \r\n                <Container>\r\n                <div class=\"mobile_course\">\r\n                    <div className=\"headTitle\">\r\n                      <h1>{this.state.title && this.state.title}</h1> \r\n                      {  \r\n                        this.state.lock != true ?\r\n                        this.state.notes ? \r\n                        <FontAwesomeIcon className=\"MynotesClose\" icon={ faTimesCircle } onClick={() => this.showNotes(false) }  /> : <FontAwesomeIcon className=\"Mynotes\" icon={ faBook } onClick={() => this.showNotes(true) } /> \r\n                        : \"\"\r\n                      }\r\n                    </div>\r\n                    {  \r\n                        this.state.notes ? \r\n                         <NotesForwarding id={this.state.learnId} /> \r\n                         : this.state.view === 'list'? this.renderList() \r\n                         : this.renderGrid() \r\n                    }\r\n                </div> \r\n                </Container>\r\n                /*: : this.state.view === 'grid'? \r\n                <Container>\r\n                  <div class=\"mobile_course\">\r\n                    <div className=\"headTitle\">\r\n                      <h1>{this.state.title && this.state.title}</h1> \r\n                      {  \r\n                        this.state.notes ? \r\n                        <FontAwesomeIcon className=\"MynotesClose\" icon={ faTimesCircle } onClick={() => this.showNotes(false) }  /> : <FontAwesomeIcon className=\"Mynotes\" icon={ faBook } onClick={() => this.showNotes(true) } /> \r\n                      }\r\n                    </div>\r\n                    {this.state.notes ? <Notes id={this.state.learnId} /> : this.renderGrid() }                    \r\n                  </div> \r\n                </Container>\r\n                \r\n                <>\r\n                  <Container>\r\n                    <div class=\"mobile_course\">  \r\n                      <div className=\"headTitle\">\r\n                        <h1>{this.state.title && this.state.title}</h1> \r\n                        {  \r\n                          this.state.notes ? \r\n                          <FontAwesomeIcon className=\"MynotesClose\" icon={ faTimesCircle } onClick={() => this.showNotes(false) }  /> : <FontAwesomeIcon className=\"Mynotes\" icon={ faBook } onClick={() => this.showNotes(true) } /> \r\n                        }\r\n                      </div>\r\n                    </div>\r\n                    {this.state.notes ? <Notes id={this.state.learnId} /> : '' }  \r\n                  </Container>\r\n                  { this.state.notes ? '' : this.renderDesktop()}\r\n                </>*/\r\n            }\r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderList() {\r\n\t\treturn  <div className=\"list card_list\"> \r\n\t\t{\r\n      this.state.list.sort((a, b) => a.sortOrder - b.sortOrder)\r\n      .map((item, index) => {\r\n\t\t    if(item.groupTitle ==\"nogroup\"){\r\n\t\t\t\t  item.groupTitle =\"\";\r\n\t\t\t  }\r\n        return (\r\n          <div key={index}>  \r\n              <h4 class=\"text_blue\">{item.name}</h4>\r\n              <Card className=\"no_border_lrt\"> \r\n                  <Card.Body>\r\n                    <div className=\"cardbody\">\r\n                      { \r\n                        item.steps.sort((a, b) => a.sortOrder - b.sortOrder)\r\n                        .map((s, i) =>\r\n                        {\r\n                          var status = 1;\r\n                          if(s.startDate){\r\n                             status = this.checkDateStatus(s.startDate,s.endDate);     \r\n                          }                                                                          \r\n                          return ( \r\n                                status == 1 ?\r\n                                   <p className=\"option\" data-group={index} data-step={i} onClick={() => this.routeChange('/lesson/steps/attachments/' + s.id + '/'+ s.name.replace(/\\//g, \" \"),index,i)}>\r\n                                  {s.name} <FontAwesomeIcon icon={ faArrowRight }  />\r\n                                   </p>\r\n                                :\r\n                                <p className=\"option\" data-group={index} data-step={i} onClick={() => this.showAlert(status, s.startDate, s.endDate)}>\r\n                                  {s.name} <FontAwesomeIcon icon={ faArrowRight }  />\r\n                                </p>\r\n\r\n                          )\r\n                        }\r\n                        )\r\n                      }\r\n                    </div>\r\n                  </Card.Body>\r\n              </Card>\r\n          </div> \t\r\n        )\r\n      })\r\n    }\r\n    </div>\r\n  }\r\n\r\n  renderGrid() {\r\n    \r\n\t\treturn  <Accordion className=\"grid accordion\" defaultActiveKey=\"0\">\r\n\t\t{\r\n      this.state.list.sort((a, b) => a.sortOrder - b.sortOrder)\r\n      .map((item, index) => {\r\n\t\t    if(item.groupTitle ==\"nogroup\"){\r\n\t\t\t\t    item.groupTitle =\"\";\r\n\t\t\t  }\r\n\t\t\t  return (\r\n              <li className=\"card\">\r\n                  <div className=\"card-header\">\r\n                      <div className=\"row\">\r\n                          <div className=\"col-10 col-sm-10 border-right\">\r\n                              <span className=\"head-title\">{item.name} </span> \r\n                          </div> \r\n                          <div className=\"col-2 col-sm-2\">\r\n                            {\r\n                              this.state.lock === true ?\r\n                              <Accordion.Toggle as={Button} variant=\"link\" className='lock float-right'></Accordion.Toggle>\r\n                             :\r\n                             <Accordion.Toggle as={Button} onClick={() => this.toggleActive(index)} variant=\"link\" eventKey={index+1} className={this.state.activeId == index ? 'arrow float-right' : 'arrow collapsed float-right'}>\r\n                             </Accordion.Toggle>\r\n                            }\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                  {this.renderSubsections(item, index+1)}\r\n              </li>) \t\r\n      })\r\n    }\r\n    </Accordion>\r\n  }\r\n\r\n  /*renderDesktop() { \r\n    let user = JSON.parse(localStorage.getItem('user')) || [];\r\n    var url = Config.siteUrl+ 'studentportal/studentPortal.do?reqCode=fetchLessonPlanSteps&lessonPlan='+this.state.learnId+'&token='+ user.token;\r\n    return <iframe  class=\"iframe100\" width=\"100%\" title=\"My Programs\" src={url}></iframe>;\r\n  }*/\r\n\r\n  renderSubsections(section, groupIndex) {\r\n\r\n    return (\r\n        <>\r\n        <Accordion.Collapse eventKey={groupIndex} className={this.state.list.length==1 ? 'show' : '' }>\r\n            <div className=\"card-body\">\r\n                <ul className=\"step3\">\r\n                    {\r\n                    section.steps.sort((a, b) => a.sortOrder - b.sortOrder).map((s, stepIndex) => {\r\n                        \r\n                        var status = 1;\r\n                        if(s.startDate){\r\n                          status = this.checkDateStatus(s.startDate,s.endDate);     \r\n                        }\r\n\r\n                        return ( \r\n                              <>\r\n                                <h5 className=\"text_blue\">{s.name}</h5>\r\n                                 { this.renderResources(s.id,s.resources,groupIndex, stepIndex, status, s.startDate, s.endDate) }\r\n                              </>\r\n                        )\r\n                    })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </Accordion.Collapse>\r\n        </>\r\n    );\r\n  }\r\n\r\n  renderResources(sid, resources, groupIndex, stepIndex, status, startDate, endDate) {\r\n    return (\r\n        <>\r\n            {\r\n            resources.sort((a, b) => a.sortOrder - b.sortOrder).map((r, index) => {\r\n              if(r.type==\"test\"){\t\t\t\t\r\n                var button;\r\n                if(r.status==\"Launch\"){\r\n                  var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n                  if (oldTests.filter(test=> test.id == r.id).length == 0){\r\n                    button =  <button onClick={() => this.downloadTest(r.id)} className=\"download blue-card launch\">Launch</button>\r\n                  }else{\r\n                    button =  <button onClick={() => this.downloadTest(r.id)} className=\"download blue-card launch\">Launch</button>\r\n                  }\r\n                }else if(r.status == \"Time Out\"){\r\n                  button= <button className=\"download blue-light-card\">{r.status}</button>\r\n                }else if(r.status == \"View Result\"){\r\n                  button= <button onClick={() => this.routeChange('/test-result/'+this.state.learnId+'/'+r.id)} className=\"download green-card\">{r.status}</button>\r\n                }else{\r\n                  var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n                  if (oldTests.filter(test=> test.id == r.id).length == 0){\r\n                    button =  <button onClick={() => this.downloadTest(r.id)} className=\"download blue-card launch\">Launch</button>\r\n                  }else{\r\n                    button =  <button onClick={() => this.downloadTest(r.id)} className=\"download blue-card launch\">Launch</button>\r\n                  }\r\n                }\r\n\r\n                return (\r\n                  <li key={index}>\r\n                      <img src={ico_test} className=\"icon\" alt=\"text\" /> \r\n                      {r.name}\r\n                      {button}\r\n                  </li>\r\n                )\r\n                \r\n                \r\n              }else{\r\n                return ( \r\n                      status == 1 ?\r\n                      <li key={index}  onClick={() => this.displayStudyResource(r, '/lesson/steps/attachments/'+ sid + '/details/' + r.id, groupIndex-1, stepIndex, index)} >\r\n                        <img src={ico_text_format} className=\"icon\" alt=\"text\" />\r\n                        {r.name}\r\n                      </li> \r\n                      :\r\n                      <li key={index}  onClick={() => this.showAlert(status, startDate, endDate)} >\r\n                        <img src={ico_text_format} className=\"icon\" alt=\"text\" />\r\n                        {r.name}\r\n                      </li>\r\n                )\r\n              }\r\n            })\r\n            }\r\n        </>\r\n    );\r\n  }\r\n\r\n  displayStudyResource(studyResource, path, groupIndex, stepIndex, resourceIndex) {\r\n    let _path = '';\r\n    let data = {studyResource: studyResource};\r\n    if(parseInt(studyResource.studyResourceType)===StudyResourceType.FEEDBACK_FORM) {\t\t\r\n      _path = '/feedback/form/'+studyResource.id;\r\n      this.props.history.push({pathname: _path, state: data});\r\n    }\r\n    else {\r\n      this.props.history.push({\r\n        pathname: path,\r\n        state: { groupIndex: groupIndex,stepIndex: stepIndex, resourceIndex: resourceIndex, lessonPlanId: this.state.learnId}\r\n      });  \r\n    }  \r\n  }\r\n\r\n  checkDateStatus(startDate,endDate){\r\n      var today = new Date();\r\n      var dd = String(today.getDate()).padStart(2, '0');\r\n      var mm = String(today.getMonth() + 1).padStart(2, '0');\r\n      var yyyy = today.getFullYear();\r\n      today = mm + '/' + dd + '/' + yyyy;\r\n\r\n      if(startDate && endDate){\r\n          var startdatearray = startDate.split(\"/\");\r\n          var startDate = startdatearray[1] + '/' + startdatearray[0] + '/' + '20' + startdatearray[2];\r\n          var enddatearray = endDate.split(\"/\");\r\n          var endDate = enddatearray[1] + '/' + enddatearray[0] + '/' + '20' + enddatearray[2];\r\n          return this.dateCheck(startDate,endDate,today);\r\n      }else if(startDate){\r\n          var startdatearray =startDate.split(\"/\");\r\n          var startDate = startdatearray[1] + '/' + startdatearray[0] + '/' + '20' + startdatearray[2];\r\n          return this.dateCompare(startDate,today);\r\n      }\r\n  }\r\n\r\n  dateCheck(from,to,today) {\r\n      var fDate,lDate,cDate;\r\n      fDate = Date.parse(from);\r\n      lDate = Date.parse(to);\r\n      cDate = Date.parse(today);\r\n      if((cDate <= lDate && cDate >= fDate)) {\r\n          return 1;\r\n      }else{\r\n          return this.dateCompare(from,today);\r\n      } \r\n  }\r\n\r\n  dateCompare(d1, d2){\r\n      const date1 = new Date(d1);\r\n      const date2 = new Date(d2);\r\n      if(date1 > date2){\r\n          return 2;\r\n      } else if(date1 < date2){\r\n          return 0;\r\n      } else{\r\n          return 1;\r\n      }\r\n  }\r\n\r\n  showAlert(status, startDate, endDate){\r\n    swal({\r\n      title: \"Alert\",\r\n      text:  status ? \"This content is not yet Activated for you. You can access it on \"+ startDate  : \"This content is no longer available for you. Your access to it has expired on \"+endDate,\r\n      dangerMode: true,\r\n      buttons: true,\r\n      className: 'blue-card'\r\n    })\r\n    .then((willResume) => {\r\n      if (willResume) {\r\n        \r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default LearningSteps;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\profile\\Profile.js",["893"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"./Profile.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faMapMarker, faEnvelope, faPhone, faCreditCard } from '@fortawesome/free-solid-svg-icons';\r\nimport avatar from './images/blank-avatar.png';\r\nimport Config from \"../../_config/config\";\r\n\r\n\r\nclass Profile extends Component {\r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  render() {\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    if (user.photoPath) {\r\n      var pic = user.photoPath;\r\n    } else {\r\n      var pic = avatar;\r\n    }\r\n    return (\r\n      <div className=\"login\">\r\n        {\r\n          <Container fluid>\r\n            <div className=\"back\">\r\n              <FontAwesomeIcon icon={faArrowLeft} onClick={() => this.routeChange('/dashboard')} />\r\n            </div>\r\n            <div className=\"header-image\" style={{ background: `url(${Config.cover}) no-repeat transparent`, backgroundSize: 'cover', backgroundPosition: 'center' }}></div>\r\n            <div className=\"main-content\">\r\n              <img className=\"prifile_img\" src={pic} alt=\"profile\" /><br />\r\n              <span className=\"gradient-text\">\r\n                <strong> {user.enquiryName} </strong>\r\n              </span>\r\n              <p><span>{user.course} . {user.center}</span></p>\r\n              <hr />\r\n              <div className=\"profile_details\">\r\n                <p><FontAwesomeIcon icon={faCreditCard} /> <span>Student Code : {user.studentCode}</span></p>\r\n                {/* <p><FontAwesomeIcon icon={faCreditCard} /> <span>Enquiry Id : {user.enquiryId}</span></p> */}\r\n                <p><FontAwesomeIcon icon={faEnvelope} /> <span>Email : {user.emailId}</span></p>\r\n                <p><FontAwesomeIcon icon={faPhone} /> <span>Mobile : {user.mobileNumber}</span></p>\r\n                <p><FontAwesomeIcon icon={faMapMarker} /> <span>Address : <br /> <p dangerouslySetInnerHTML={{ __html: user.address }} /></span></p>\r\n              </div>\r\n            </div>\r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Profile;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\product\\Product.js",["894"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Product.css\";\r\nimport payment from \"./images/payment.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Loader from \"./../../_components/loader/loader\";\r\nimport getProducts from \"./../../_actions/productActions\";\r\nimport Utils from \"../../_helpers/utils\";\r\n\r\nclass Product extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      list: [],\r\n      message: null,\r\n      loading: false,\r\n      view: \"grid\",\r\n      isMobile: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getProducts();\r\n    if (Utils.isMobileDevice()) {\r\n      console.log(\"Ismobile.....\");\r\n      this.setState({\r\n        view: \"grid\",\r\n        isMobile: true,\r\n      });\r\n    } else {\r\n      console.log(\"Ismobile Not.....\");\r\n      this.setState({\r\n        view: \"list\",\r\n        isMobile: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"Product\">\r\n        {\r\n          <Container fluid>\r\n            <div className=\"module-header\">\r\n              <div className=\"module-header-inner blue-light-card\">\r\n                <div className=\"back\">\r\n                  <FontAwesomeIcon\r\n                    icon={faArrowLeft}\r\n                    onClick={this.props.history.goBack}\r\n                  />\r\n                </div>\r\n                <img src={payment} alt=\"Products\" />\r\n              </div>\r\n              <div className=\"arrow-set\">\r\n                <h4>Products</h4>\r\n              </div>\r\n            </div>\r\n            {loading ? <Loader /> : this.renderCard()}\r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderCard() {\r\n    console.log(this.props.product);\r\n    return (\r\n      <div className=\"card_list\">\r\n        {this.props.product &&\r\n          this.props.product.map((item, index) => {\r\n            return (\r\n              <Card\r\n                key={index}\r\n                onClick={() =>\r\n                  this.routeChange(\"/products/\" + item.id + \"/\" + item.name)\r\n                }\r\n              >\r\n                <Card.Body>\r\n                  <div className=\"cardbody\">\r\n                    <img src={item.imageUrl} alt={item.name} />\r\n                    <h4 className=\"head\">{item.name}</h4>\r\n                    <FontAwesomeIcon icon={faArrowRight} />\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  product: state.product.product,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getProducts: getProducts,\r\n};\r\n\r\n/*const mapDispatchToProps = dispatch => ({\r\n  getResource: () => dispatch(getResource())\r\n});*/\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestList.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\LearningStepAttachments.js",["895","896","897","898","899","900","901","902","903","904","905","906","907"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"./Learning.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft,faArrowRight,faBook,faFileSignature } from '@fortawesome/free-solid-svg-icons';\r\nimport Card from 'react-bootstrap/Card'\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Loader from './../../_components/loader/loader';\r\nimport swal from 'sweetalert';\r\nimport Utils from \"../../_helpers/utils\";\r\nimport { StudyResourceType } from \"../../_constants/studyResourceTypes\";\r\n\r\nclass LearningStepAttachments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      message: null,\r\n      loading: false,\r\n\t  showMsg:false\r\n    };\r\n    this.reloadLearningStepAttachmentsList = this.reloadLearningStepAttachmentsList.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.reloadLearningStepAttachmentsList();\r\n  }\r\n\r\n  reloadLearningStepAttachmentsList() {\r\n    this.setState({ loading: true }, () => {\r\n      ApiService.fetchLearningStepAttachments(this.props.match.params.id)\r\n      .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n            list: res.data.attachments,\r\n\t\t\tshowMsg:true,\r\n          });\r\n      });\r\n    });\t\r\n  }\r\n\r\n  routeChange(path, index) {\r\n      //this.props.history.push(path);\r\n\t  this.props.history.push({\r\n\t\tpathname: path,\r\n\t\tstate: { groupIndex: this.props.location.state.groupIndex,stepIndex: this.props.location.state.stepIndex, resourceIndex: index, lessonPlanId: this.props.location.state.lessonPlanId}\r\n\t  });\r\n  }\r\n\r\n  displayStudyResource(studyResource, path, index) {\r\n    console.log(\">>studyResource: \"+JSON.stringify(studyResource))\r\n\tlet _path = '';\r\n    let data = {studyResource: studyResource};\r\n    if(studyResource.typeId===StudyResourceType.FEEDBACK_FORM) {\t\t\r\n\t\t_path = '/feedback/form/'+studyResource.id;\r\n\t\tthis.props.history.push({pathname: _path, state: data});\r\n    }\r\n    else {\r\n\t\tthis.props.history.push({\r\n\t\t\tpathname: path,\r\n\t\t\tstate: { groupIndex: this.props.location.state.groupIndex,stepIndex: this.props.location.state.stepIndex, resourceIndex: index, lessonPlanId: this.props.location.state.lessonPlanId}\r\n\t\t});  \r\n    }  \r\n  }\r\n    \r\n  downloadTest(testid) {\r\n\t//|| Utils.isMobileDevice()===false\r\n\t/*if(Utils.isMobileDevice()===true){\r\n      ApiService.fetchTest(testid)\r\n      .then((res) => {\r\n\t\tif(res.data.status==1 && res.data.data.tests[0].testJSONFile!=\"TestJSONNotFound\"){\r\n\t\t\tvar studentPdfResponse = res.data.data.tests[0].studentPdfResponse;\r\n\t\t\tApiService.fetchTestJson(res.data.data.tests[0].testJSONFile)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({tests: res.data});\r\n\t\t\t\tvar oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n\t\t\t\tif (oldTests.filter(test=> test.id == testid).length == 0){\r\n\t\t\t\t\tres.data.resume=0;\r\n\t\t\t\t\tres.data.studentPdfResponse=studentPdfResponse;\r\n\t\t\t\t\toldTests.push(res.data);  \r\n\t\t\t\t\tlocalStorage.setItem('tests', JSON.stringify(oldTests));\t\t\r\n\t\t\t\t\tthis.props.history.replace('/test-instructions/'+this.props.match.params.id+'/'+testid+'?lms=1&title='+this.props.match.params.title);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t   let portlet = JSON.parse(localStorage.getItem('portlet'));\r\n\t\t   swal({\r\n\t\t\t\ttitle: \"Alert\",\r\n\t\t\t\ttext: \"Online test not available. Please contact administrator\",\r\n\t\t\t\tdangerMode: true,\r\n\t\t\t\tclassName: portlet.class ? portlet.class : 'orange-card'\r\n\t\t   });\r\n\t\t}\r\n\t  });\r\n\t}else{*/\r\n\t\t//this.props.history.replace('/TestInstructions/'+testid+'?steps='+this.props.match.params.id,0,this.props.match.params.id);\r\n\t    window.open('/TestInstructions/'+testid+'?lms='+this.props.match.params.id, \"Start Test\", 'height=' + window.screen.height + ',width=' + window.screen.width);\r\n\t//}\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n\tlet paramsString = this.props.location.search;\r\n    const params = new URLSearchParams(paramsString);\r\n\tlet portlet = JSON.parse(localStorage.getItem('portlet'));\r\n\tlocalStorage.setItem('firstVisit', false);\r\n    let bak =  params.get('back');\r\n\tlet back_url;\r\n\tif(bak==\"quiz\"){\r\n\t  let portlet = JSON.parse(localStorage.getItem('portlet'));\r\n\t  let subcat = \"/lessonPlan/15/\"+portlet.params.resourceSubTypeId+\"/\"+portlet.params.name;\r\n\t  back_url = <a onClick={() =>this.routeChange(subcat)} className=\"text-white\"><FontAwesomeIcon icon={ faArrowLeft } /></a>;\r\n\t}else if(this.props.match.params.title==\"null\"){\r\n\t\tlet portlet = JSON.parse(localStorage.getItem('portlet'));\r\n\t\tlet subcat = \"/lessonPlan/15/\"+portlet.params.resourceSubTypeId+\"/Learning Modules\";\r\n\t\tback_url = <a onClick={() =>this.routeChange(subcat)} className=\"text-white\"><FontAwesomeIcon icon={ faArrowLeft } /></a>;\r\n\t}else{\r\n\t  back_url = <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n\t}\r\n    return (\r\n      <div className=\"LearningAttachment\">\r\n        {\r\n          <Container fluid>\r\n              <div className=\"module-header\">\r\n               <div className={`module-header-step2 ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n                <div className=\"back\">\r\n                  {back_url}\r\n                </div>\r\n                <h4>{this.props.match.params.title}</h4>\r\n                </div>\r\n              </div>\r\n              {loading ?  <Loader />: this.renderCard()}           \r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderCard() {\r\n\t  console.log(this.state.list);\r\n\t  let portlet = JSON.parse(localStorage.getItem('portlet'));\r\n\t  let paramsString = this.props.location.search;\r\n\t  const params = new URLSearchParams(paramsString);\r\n\t  let bak =  params.get('back');\r\n\t    if(this.state.showMsg){\r\n\t\t\tif(this.state.list ===undefined || this.state.list.length==0 ){\r\n\t\t\t\tif(bak==\"quiz\"){\r\n\t\t\t\t\tlet subcat = \"/lessonPlan/15/\"+portlet.params.resourceSubTypeId+\"/Learning Modules\";\r\n\t\t\t\t\tthis.props.history.replace(subcat);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Alert\",\r\n\t\t\t\t\t\ttext: \"Content not Available\",\r\n\t\t\t\t\t\tdangerMode: true,\r\n\t\t\t\t\t\tclassName: portlet.class ? portlet.class : 'orange-card'\r\n\t\t\t\t\t})\r\n\t\t\t\t\t  .then(exitExam => {\r\n\t\t\t\t\t\t this.props.history.goBack();\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t  \r\n\t  return  <div className=\"card_list\"> \r\n\t  {\r\n      this.state.list && this.state.list.sort((a, b) => a.sortOrder - b.sortOrder)\r\n      .map((item, index) => {\r\n\t\t      \r\n\t  \r\n\t\t\t  if(item.type==\"test\"){\r\n\t\t\t\t\r\n\t\t\t\t  var button;\r\n\t\t\t\t  if(item.status==\"Launch\"){\r\n\t\t\t\t\tvar oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n\t\t\t\t\tif (oldTests.filter(test=> test.id == item.id).length == 0){\r\n\t\t\t\t\t  button =  <button onClick={() => this.downloadTest(item.id)} className=\"download blue-card\">Launch</button>\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t/*if(Utils.isMobileDevice()===true){\r\n\t\t\t\t\t      button= <button onClick={() =>this.routeChange('/test-instructions/'+this.props.match.params.id+'/'+item.id+'?lms=1&title='+this.props.match.params.title)} className=\"download blue-card\">Launch</button>\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t  button =  <button onClick={() => this.downloadTest(item.id)} className=\"download blue-card\">Launch</button>\r\n\t\t\t\t\t\t}*/\r\n\t\t\t\t\t\tbutton =  <button onClick={() => this.downloadTest(item.id)} className=\"download blue-card\">Launch</button>\r\n\t\t\t\t\t}\r\n\t\t\t\t  }else if(item.status == \"Time Out\"){\r\n\t\t\t\t\tbutton= <button className=\"download blue-light-card\">{item.status}</button>\r\n\t\t\t\t  }else if(item.status == \"View Result\"){\r\n\t\t\t\t\tbutton= <button onClick={() => this.routeChange('/test-result/'+this.props.match.params.id+'/'+item.id)} className=\"download green-card\">{item.status}</button>\r\n\t\t\t\t  }\r\n\t\t\t\t  \r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card className=\"no_border_lrt\" key={index}>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t  <FontAwesomeIcon className=\"Book\" icon={ faFileSignature } /> \r\n\t\t\t\t\t\t  <p className=\"option\"> {item.name}  {button}</p>  \r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t  </Card>\r\n\t\t\t\t)\r\n\t\t\t  }else{\r\n\t\t\t\t  return (\r\n\t\t\t\t\t<Card className=\"no_border_lrt\" key={index} onClick={() => this.displayStudyResource(item,'/lesson/steps/attachments/'+ this.props.match.params.id + '/details/' + item.id, index)}>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t  <FontAwesomeIcon className=\"Book\" icon={ faBook } /> \r\n\t\t\t\t\t\t  <p className=\"option\">\r\n\t\t\t\t\t\t   {item.name} <FontAwesomeIcon icon={ faArrowRight }  />\r\n\t\t\t\t\t\t  </p> \r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t  </Card>\r\n\t\t\t\t  )\r\n\t\t\t  }\r\n\t\t  })\r\n\t\t}\r\n    </div>\r\n  }\r\n\r\n}\r\n\r\nexport default LearningStepAttachments;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestListDetails.js",["908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft,faFileAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport Config from \"../../_config/config\";\r\nimport Card from 'react-bootstrap/Card'\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Loader from './../../_components/loader/loader';\r\nimport swal from 'sweetalert';\r\nimport Utils from \"../../_helpers/utils\";\r\n\r\nconst AWS = require('aws-sdk');\r\nAWS.config.clear();\r\nAWS.config.update({\r\n\tregion: Config.AWSRegion,\r\n\taccessKeyId: Config.AWSAccessKeyId,\r\n\tsecretAccessKey: Config.AWSSecretAccessKey\r\n  });\r\n\r\nclass TestListDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      message: null,\r\n      loading: false,\r\n      tests:[],\r\n      download : \"Download\",\r\n\t  testname: \"Online Test\"\r\n    };\r\n    this.reloadTestListDetails = this.reloadTestListDetails.bind(this);\r\n    this.downloadTest = this.downloadTest.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let paramsString = this.props.location.search;\r\n    const params = new URLSearchParams(paramsString);\r\n    let enquiryId =  params.get('enquiryId');\r\n    if(enquiryId){\r\n      localStorage.setItem('enquiryId', enquiryId);\r\n    }\r\n    this.reloadTestListDetails();\r\n  }\r\n\r\n  openTest = (testID) => {\r\n    var url = '/TestInstructions/'+testID+'?cat='+this.props.match.params.id;\r\n    window.open(url, 'Start Test', 'height=' + window.screen.height + ',width=' + window.screen.width);\r\n\t}\r\n\r\n  reloadTestListDetails() {\r\n    var testlist = JSON.parse(localStorage.getItem('testlist')) || [];\r\n\t  var online = navigator.onLine;\r\n    if(online == false){\r\n      this.setState({\r\n        loading: false,\r\n        list: testlist\r\n      });\r\n      /*this.setState({ loading: true }, () => {\r\n        ApiService.fetchTestList()\r\n        .then((res) => {\r\n            this.setState({\r\n              loading: false,\r\n              list: res.data\r\n            });\r\n        });\r\n      }); */\r\n    }else{\r\n      this.setState({ loading: true }, () => {\r\n        ApiService.fetchTestList()\r\n        .then((res) => {\r\n            this.setState({\r\n              loading: false,\r\n              list: res.data\r\n            });\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  payCheck(path,testID) {\r\n    this.setState({ loading: true }, () => {\r\n      let payLoad = {\r\n        \"type\": \"test\",\r\n        \"testId\": testID \r\n      };\r\n      ApiService.studentPayCheck(payLoad)\r\n      .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n          if(res.data.type==2){\r\n            const wrapper = document.createElement('div');\r\n            wrapper.innerHTML = res.data.message;\r\n            swal({\r\n              title: \"Alert\",\r\n              content: wrapper,\r\n              dangerMode: true,\r\n              buttons: true,\r\n              className: 'blue-card'\r\n            })\r\n            .then((willResume) => {\r\n              if (willResume) {\r\n                \r\n              }\r\n            });\r\n          }else {\r\n            this.props.history.push( { pathname: path, state: {testEndDate: '', testCategory: ''} } );\r\n          }\r\n      });\r\n    });\t\r\n  }\r\n\r\n  routeChange(path,testID) {\r\n    this.payCheck(path, testID);\r\n  }\r\n\r\n  routeChange2(path,endDate,testCategory) {\r\n    this.props.history.push( { pathname: path, state: {testEndDate: endDate, testCategory: testCategory} } );\r\n  }\r\n\r\n addUrlToCache(url) {\r\n    window.fetch(url).then(function(response) {\r\n      caches.open('test-images').then(function(cache) {\r\n        cache.add(url);\r\n      });\r\n    }).catch(function(error) {\r\n        console.log(\"cache put image error \"+error);\r\n    });\r\n  }\r\n  \r\n  \r\n  showAlert(msg) {\r\n\t  swal({\r\n\t\t\ttitle: \"Alert\",\r\n\t\t\ttext: msg,\r\n\t\t\tdangerMode: true,\r\n\t   });\r\n  }\r\n\r\n  downloadTest(testid) {\r\n      ApiService.fetchTest(testid)\r\n      .then((res) => {\r\n          if(res.data.status==1 && res.data.data.tests[0].testJSONFile!=\"TestJSONNotFound\"){\r\n            var d = new Date();\r\n            var rand = d.getTime();\r\n            var studentPdfResponse = res.data.data.tests[0].studentPdfResponse;\r\n            ApiService.fetchTestJson(res.data.data.tests[0].testJSONFile+\"?id=\"+rand)\r\n            .then((res) => {\r\n              this.setState({tests: res.data});\r\n              //alert(JSON.stringify(res.data.testImages));\r\n              var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n              if (oldTests.filter(test=> test.id == testid).length == 0){\r\n                res.data.resume=0;\r\n                res.data.studentPdfResponse=studentPdfResponse;\r\n                oldTests.push(res.data);  \r\n                localStorage.setItem('tests', JSON.stringify(oldTests));\r\n                this.props.history.replace('/test-instructions/'+this.props.match.params.id+'/'+testid);\r\n                /*var images = \"\";\r\n                images = res.data.testImages;\r\n                if(!images){\r\n                }else{\r\n                  //for(let i=0;i<images.length; i++){\r\n                    //this.addUrlToCache(images[i].replace('http://','https://'));\r\n                    //var per = (i/images.length)*100;\r\n                    //progress(per);\r\n                  //}\r\n                }*/\r\n                //this.addUrlToCache(\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=AM_HTMLorMML\");\r\n                //this.reloadTestListDetails();\r\n              }\r\n            });\r\n          }else{\r\n            swal({\r\n              title: \"Alert\",\r\n              text: \"Online test not available. Please contact administrator\",\r\n              dangerMode: true,\r\n            });\r\n          }\r\n      });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\t  let portlet = JSON.parse(localStorage.getItem('portlet')) || [];\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"testlist\">\r\n        {\r\n          <Container fluid>\r\n              <div className={`module-header-step2 ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n                <div className=\"\">\r\n\t\t\t\t\t<div className=\"back\">\r\n\t\t\t\t\t  <FontAwesomeIcon icon={ faArrowLeft } onClick={() => this.routeChange2('/TestList')} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h4 id=\"testname\"></h4>\r\n                </div>\r\n              </div>\r\n              {loading ?  <Loader />: this.renderCard()}           \r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderCard() {\r\n\t  let data = this.state.list;\r\n\t\treturn <div className=\"card_list\"> \r\n\t\t{\r\n\t\t  data.map((item, index) => {\r\n\t\t\treturn (\r\n\t\t\t <div>{this.renderTest(data[index].id,data[index].name, data[index].categoryBased , data[index].categoryBeans)}</div>\r\n\t\t\t)\r\n\t\t  })\r\n    }\r\n    </div>\r\n  }\r\n  \r\n  renderTest(id, name, categoryBased, categoryBeans){\r\n  let isMobile = Utils.isMobileDevice();\r\n\treturn <div>\r\n  {\t\r\n    categoryBased===true ?\t\r\n      categoryBeans.map((c, i) =>{\r\n        let test_parentcat_id = localStorage.getItem('test_parentcat_id') || 0;\r\n        if(c.id==this.props.match.params.id && id == test_parentcat_id){\r\n          document.getElementById('testname').innerHTML = c.name;\r\n            return (\r\n            <div className=\"\">\r\n              { isMobile===true ? \r\n                <div className=\"card_list\">{this.renderTestListMobile(c.testDataBeans)} </div> : \r\n                <div className=\"download_list zoom_video_list card_list\">{this.renderTestListDesktop(c.testDataBeans)}</div>\r\n              }\r\n            </div>\r\n          )\r\n        }\r\n      })\r\n    :\r\n      categoryBeans.map((c, i) =>{\r\n        if(id==this.props.match.params.id){\r\n            document.getElementById('testname').innerHTML = name;\r\n            return (\r\n            <div className=\"\">\r\n              { isMobile===true ? \r\n                <div className=\"card_list\">{this.renderTestListMobile(c.testDataBeans)} </div> : \r\n                <div className=\"download_list zoom_video_list card_list\">{this.renderTestListDesktop(c.testDataBeans)}</div>\r\n              }\r\n            </div>\r\n          )\r\n        }\r\n      })\r\n\t}\r\n\t</div>\r\n  }\r\n  \r\n  renderTestList(beans){\r\n\t  return <div>\r\n\t  {\r\n      beans.sort((a, b) => b.id - a.id) \r\n      .map((d, j) =>{\r\n        var button;\r\n        var sedate = '';\r\n        if(d.startDate != \"--\"){\r\n          sedate = d.startDate +'-'+ d.endDate;\r\n        }else{\r\n          sedate = <br />\r\n        }\r\n\t  \r\n      if(d.status==\"Launch\"){\r\n        var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n        if (oldTests.filter(test=> test.id == d.id).length == 0){\r\n          button =  <button onClick={() => this.downloadTest(d.id)} className=\"download blue-card\">Start</button>\r\n        }else{\r\n          button=  <button onClick={() => this.routeChange('/test-instructions/'+this.props.match.params.id+'/'+d.id, d.id)} className=\"download blue-card\">Start</button>\r\n          for(var i=0; i<oldTests.length; i++){\r\n            if(oldTests[i].submit==1 && (oldTests[i].id==d.id)){\r\n              button=  <button onClick={() => this.routeChange2('/test-submit/'+this.props.match.params.id+'/'+d.id)} className=\"download blue-card\">Submit</button>\r\n            }else if(oldTests[i].resume==1 && (oldTests[i].id==d.id)){\r\n              button=  <button onClick={() => this.routeChange('/test-instructions/'+this.props.match.params.id+'/'+d.id, d.id)} className=\"download blue-card\">Resume</button>\r\n            }\r\n          }\r\n        }\r\n      }else if(d.status == \"Time Out\"){\r\n        var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n        button=  <button onClick={() => this.showAlert(\"The test is closed at  \"+d.endDate)} className=\"download blue-light-card\">{d.status}</button>\r\n        for(var i=0; i<oldTests.length; i++){\r\n          if(oldTests[i].resume==1 && (oldTests[i].id==d.id)){\r\n                button=  <button onClick={() => this.routeChange2('/test-submit/'+this.props.match.params.id+'/'+d.id)} className=\"download blue-card\">{d.status}</button>\r\n          }\r\n        }     \r\n      }else if(d.status == \"View Result\"){\r\n        button=  <button onClick={() => this.routeChange2('/test-result/'+this.props.match.params.id+'/'+d.id, d.endDate)} className=\"download green-card\">Result</button>\r\n      }else if(d.status == \"Coming Soon\"){\r\n\t      button=  <button onClick={() => this.showAlert(\"The test is available between \"+sedate)} className=\"download orange-card\">{d.status}</button>\r\n\t    }\r\n      \r\n\t\t\t return (\r\n\t\t\t\t  <Card>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t  <div className=\"cardbody\">\r\n\t\t\t\t\t      <FontAwesomeIcon className=\"Book\" icon={ faFileAlt } /> \r\n\t\t\t\t\t\t  <p className=\"option\">\r\n\t\t\t\t\t\t    {d.name}\r\n\t\t\t\t\t\t   <div className=\"testdate\">{sedate}</div>\r\n\t\t\t\t\t\t  </p>\r\n                {button}\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t  </Card> \r\n\t\t\t  )\r\n\t\t })\r\n\t  }\r\n\t </div>\r\n  }\r\n\r\n  submitTimeOut=(testId)=>{\r\n    const tenant = localStorage.getItem('tenant') || Config.siteTitle\r\n    const userObject = JSON.parse(localStorage.getItem('user'));\r\n    console.log(userObject);\r\n    console.log(userObject.userId);\r\n\r\n    //'https://tuningfork-'+ Config.siteMode +'.s3.amazonaws.com/'+ tenant +'/uploads/testPapers/'+ testId +'/'+ testId +'.json'\r\n\t\tlet testUrl = 'https://tuningfork-'+ Config.siteMode +'.s3.amazonaws.com/'+ tenant +'/uploads/testPapers/'+ testId +'/'+ testId +'.json'\r\n\r\n\t\t\r\n\t\t\tconst studentTestData = {\r\n\t\t\t\t\"tenant\":tenant,\r\n\t\t\t\t\"testId\": testId,\r\n\t\t\t\t\"userId\":userObject.userId,\r\n\t\t\t\t\"s3Url\":testUrl\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(student_response);\r\n\r\n\t\t\t//alert(JSON.stringify(student_response));\r\n\t\t\tvar lambda = new AWS.Lambda();\r\n\t\t\tvar params = {\r\n\t\t\tFunctionName: 'testResume', /* required */\r\n\t\t\tPayload: JSON.stringify(studentTestData)\r\n\t\t\t};\r\n\r\n\t\t\t\tlambda.invoke(params, function(err, response) {\r\n\t\t\t\t\tif (err){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//alert(Config.CONNECTION_ERROR_MSG);\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t// console.log(err, err.stack); // an error occurred\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlet res = JSON.parse(response.Payload)\r\n\t\t\t\t\t\tlet testObject = res.data; \r\n            console.log(testObject);\r\n            const student_response = {\r\n\t\t        \t\"tenant\":tenant,\r\n\t\t        \t\"testId\": testId,\r\n\t\t        \t\"userId\": [userObject.userId],\r\n\t\t        \t\"testSubmit\": true,\r\n\t\t        \t\"submitStatus\":1,\r\n\t\t        \t\"autoSubmitToRDS\":testObject?.testConfig?.autoSubmitToRDS,\r\n\t\t        \t\"siteUrl\":Config.siteUrl\r\n\t\t        }\r\n          \r\n\t\t        console.log(student_response);\r\n          \r\n\t\t        var lambda = new AWS.Lambda();\r\n\t\t        var params = {\r\n\t\t        FunctionName: 'testResponses', /* required */\r\n\t\t        Payload: JSON.stringify(student_response)\r\n\t\t        };\r\n          \r\n\t\t        \tlambda.invoke(params, function(err, data) {\r\n\t\t        \t\tif (err){\r\n\t\t        \t\t  console.log(err, err.stack); // an error occurred\r\n\t\t        \t\t  alert(Config.CONNECTION_ERROR_MSG);\r\n\t\t        \t\t}else{\r\n\t\t        \t\t  let res = JSON.parse(data.Payload);\r\n\t\t        \t\t  //console.log(data);  // successful response\r\n                \r\n\t\t        \t\t  //if(res.status==\"success\" && testObject?.testConfig?.autoSubmitToRDS == true){\r\n\t\t        \t\t\t//that.SubmitToRDS();\r\n\t\t        \t\t  //}else \r\n                  console.log(res);\r\n\t\t\t\t  \r\n\t\t\t\t          if(res.status==\"success\"){\r\n\t\t\t\t\t          console.log(\"sucesssssssss\")\r\n                    swal({\r\n\t\t\t\t\t      \t    text: \"Test submitted successfully.\",\r\n\t\t\t\t\t      \t    icon: \"success\",\r\n\t\t\t\t\t      \t    button: \"Ok\",\r\n\t\t\t\t\t      \t    allowOutsideClick: false,\r\n\t\t\t\t\t      \t    closeOnClickOutside: false,\r\n\t\t\t\t\t      \t    closeOnEsc: false\r\n\t\t\t\t\t        }).then(()=>{\r\n                    window.location.reload();\r\n                  })\r\n                }\r\n              }\r\n      })\r\n\r\n    }\r\n  })\r\n  }\r\n\r\n  renderTestListMobile(beans){\r\n\t  return <div>\r\n\t  {\r\n      beans.sort((a, b) => b.id - a.id) \r\n      .map((d, j) =>{\r\n        var button;\r\n        var sedate = '';\r\n        if(d.startDate != \"--\"){\r\n          sedate = d.startDate +'-'+ d.endDate;\r\n        }else{\r\n          sedate = <br />\r\n        }\r\n\t  \r\n      if(d.status==\"Launch\"){\r\n\r\n        /*var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n        if (oldTests.filter(test=> test.id == d.id).length == 0){\r\n          button =  <button onClick={() => this.downloadTest(d.id)} className=\"download blue-card\">Start</button>\r\n        }else{\r\n          button=  <button onClick={() => this.routeChange('/test-instructions/'+this.props.match.params.id+'/'+d.id, d.id)} className=\"download blue-card\">Start</button>\r\n          for(var i=0; i<oldTests.length; i++){\r\n            if(oldTests[i].submit==1 && (oldTests[i].id==d.id)){\r\n              button=  <button onClick={() => this.routeChange2('/test-submit/'+this.props.match.params.id+'/'+d.id)} className=\"download blue-card\">Submit</button>\r\n            }else if(oldTests[i].resume==1 && (oldTests[i].id==d.id)){\r\n              button=  <button onClick={() => this.routeChange('/test-instructions/'+this.props.match.params.id+'/'+d.id, d.id)} className=\"download blue-card\">Resume</button>\r\n            }\r\n          }\r\n        }*/\r\n\r\n        var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n        button=  <button onClick={() => this.openTest(d.id)} className=\"download blue-card\">Start</button>\r\n\r\n      }else if(d.status == \"Time Out\"){\r\n        var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n        button=  <button onClick={() => this.submitTimeOut(d.id)/*this.showAlert(\"The test is closed at  \"+d.endDate)*/} className=\"download blue-light-card\">{d.status}</button>\r\n        for(var i=0; i<oldTests.length; i++){\r\n          if(oldTests[i].resume==1 && (oldTests[i].id==d.id)){\r\n                button=  <button onClick={() => this.routeChange2('/test-submit/'+this.props.match.params.id+'/'+d.id)} className=\"download blue-card\">{d.status}</button>\r\n          }\r\n        }     \r\n      }else if(d.status == \"View Result\"){\r\n        button=  <button onClick={() => this.routeChange2('/test-result/'+this.props.match.params.id+'/'+d.id, d.endDate)} className=\"download green-card\">Result</button>\r\n      }else if(d.status == \"Coming Soon\"){\r\n\t      button=  <button onClick={() => this.showAlert(\"The test is available between \"+sedate)} className=\"download orange-card\">{d.status}</button>\r\n\t    }\r\n      \r\n\t\t\t return (\r\n\t\t\t\t  <Card>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t  <div className=\"cardbody\">\r\n\t\t\t\t\t      <FontAwesomeIcon className=\"Book\" icon={ faFileAlt } /> \r\n\t\t\t\t\t\t  <p className=\"option\">\r\n\t\t\t\t\t\t    {d.name}\r\n\t\t\t\t\t\t   <div className=\"testdate\">{sedate}</div>\r\n\t\t\t\t\t\t  </p>\r\n                {button}\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t  </Card> \r\n\t\t\t  )\r\n\t\t })\r\n\t  }\r\n\t </div>\r\n  }\r\n\r\n  renderTestListDesktop(beans){\r\n\t  return <div>\r\n            <Card>\r\n              <Card.Body>\r\n                <div className=\"cardbody head align-center\">\r\n                <span className=\"sno\">#</span>\r\n                <h4 className=\"head\">Name</h4>\r\n                <span className=\"date\">Start Date</span>\r\n\t\t\t\t\t\t    <span className=\"date\">End Date</span>\r\n                <span>Action</span>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n\t  {\r\n      beans.sort((a, b) => b.id - a.id) \r\n      .map((d, j) =>{\r\n        var button;\r\n        var sedate = '';\r\n        if(d.startDate != \"--\"){\r\n          sedate = d.startDate +'-'+ d.endDate;\r\n        }else{\r\n          sedate = <br />\r\n        }\r\n        /** for desktop test launch code start */\r\n        \r\n        if(d.status==\"Launch\" || d.status==\"Practice\" || d.status==\"Quiz\"){\r\n          var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n          button=  <button onClick={() => this.openTest(d.id)} className=\"download blue-card\">Start</button>\r\n        }else if(d.status == \"Time Out\"){\r\n          var oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n          button=  <button onClick={() => this.submitTimeOut(d.id) /*this.showAlert(\"The test is closed at  \"+d.endDate)*/ }className=\"download blue-light-card\">{d.status}</button>\r\n          for(var i=0; i<oldTests.length; i++){\r\n            if(oldTests[i].resume==1 && (oldTests[i].id==d.id)){\r\n                  button=  <button onClick={() => this.routeChange2('/test-submit/'+this.props.match.params.id+'/'+d.id)} className=\"download blue-card\">{d.status}</button>\r\n            }\r\n          }     \r\n        }else if(d.status == \"View Result\"){\r\n          button=  <button onClick={() => this.routeChange2('/test-result/'+this.props.match.params.id+'/'+d.id, d.endDate)} className=\"download green-card\">Result</button>\r\n        }else if(d.status == \"Coming Soon\"){\r\n          button=  <button onClick={() => this.showAlert(\"The test is available between \"+sedate)} className=\"download orange-card\">{d.status}</button>\r\n        }\r\n\r\n        /** for desktop test launch code end */\r\n      \r\n\t\t\t return (\r\n\t\t\t\t  <Card>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t  <div className=\"cardbody align-center\">\r\n              <span className=\"sno\">{j+1}</span>\r\n              <h4 className=\"head\">{d.name}</h4>\r\n              <span className=\"date\">{d.startDate}</span>\r\n\t\t\t\t\t\t\t<span className=\"date\">{d.endDate}</span>\r\n              {button}\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t  </Card> \r\n\t\t\t  )\r\n\t\t })\r\n\t  }\r\n\t </div>\r\n  }\r\n\r\n}\r\n\r\nexport default TestListDetails;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestInstructions.js",["954","955"],"import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport Config from \"../../_config/config\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport swal from 'sweetalert';\r\n\r\nclass TestInstructions extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            message: null,\r\n        }\r\n        this.reloadQuestionList = this.reloadQuestionList.bind(this);\r\n\t\tthis.downloadTest = this.downloadTest.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.reloadQuestionList();\r\n\t\tthis.downloadTest();\r\n    }\r\n\r\n\tdownloadTest(){\r\n\t\tvar d = new Date();\r\n\t\tvar rand = d.getTime();\r\n\t\tvar testId = this.props.match.params.id\r\n\t\tvar tenant = localStorage.getItem('tenant') || Config.siteTitle\r\n\t\tvar testobj = 'https://tuningfork-'+ Config.siteMode +'.s3.amazonaws.com/'+ tenant +'/uploads/testPapers/'+ testId +'/'+ testId +'.json';\r\n\t\t//alert(testobj);\r\n\t\tthis.setState({ showLoading: true }, () => {\r\n\t\t\tApiService.fetchTestJson(testobj+\"?id=\"+rand)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(JSON.stringify(res));\r\n\t\t\t\tlet testObject = res.data; \r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\ttestObject: testObject,\r\n\t\t\t\t\tshowLoading: false,\r\n\t\t\t\t});\r\n\t\t\t},error => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tshowLoading: false,\r\n\t\t\t\t});\r\n\t\t\t\tif(error.response.status==404){\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttext: \"Online test not available. Please contact administrator\",\r\n\t\t\t\t\t\ticon: \"warning\",\r\n\t\t\t\t\t\tbutton: \"Ok\",\r\n\t\t\t\t\t\tallowOutsideClick: false,\r\n\t\t\t\t\t\tcloseOnClickOutside: false\r\n\t\t\t\t\t  })\r\n\t\t\t\t\t  .then((willDelete) => {\r\n\t\t\t\t\t\t  if(willDelete){\r\n\t\t\t\t\t\t\t window.close();\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t  });\r\n\t\t\t\t}else{\r\n\t\t\t\t\talert(Config.CONNECTION_ERROR_MSG);\r\n\t\t\t\t\twindow.close();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t    });\r\n\t}\r\n\r\n    reloadQuestionList() {\r\n\t\tvar testObject = JSON.parse(localStorage.getItem('tests')) || [];\r\n\t\tfor(var i=0; i<testObject.length; i++){\r\n            if(testObject[i].id==this.props.match.params.id){\r\n\t\t\t\tthis.setState({testName: testObject[i].name});\r\n\t\t\t\tthis.setState({testTime: testObject[i].testTime});\r\n\t\t\t\tthis.setState({totalMarks: testObject[i].totalMarks});\r\n\t\t\t\tthis.setState({noOfQuestions: testObject[i].noOfQuestions}); \r\n\t\t\t\tthis.setState({instructions: testObject[i].instructions}); \r\n\t\t\t}\r\n\t\t}\t\r\n    }\r\n    \r\n\trouteChange=()=> {\r\n\t\tlet paramsString = this.props.location.search;\r\n        const params = new URLSearchParams(paramsString);\r\n        let lms =  params.get('lms');\r\n\t\tlet title =  params.get('title');\r\n\t\tlet path = `/test-taking/`+this.props.match.params.pid+'/'+this.props.match.params.id+\"?lms=\"+lms+\"&title=\"+title;\r\n\t\tthis.props.history.push(path);\r\n\t\t//this.props.history.replace(path);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { testObject } = this.state;\r\n\t\tlet portlet = JSON.parse(localStorage.getItem('portlet')) || [];\r\n\t\treturn(\t \r\n\t\t   <div> \r\n\t\t      <div className={`test-header ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n\t\t\t      <div className=\"testclose\">\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={ faTimesCircle } onClick={this.props.history.goBack} />\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <h4>{this.state.testName}</h4>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"question\"><br /><br /><br />\r\n\t\t\t\t<h4>Test instructions</h4>\r\n\t\t\t\t{ \r\n\t\t\t\t  testObject && \r\n\t\t\t\t   <p className=\"mobile test_instructions\" dangerouslySetInnerHTML={{ __html: testObject.instructions || testObject.webInstructions}} /> \r\n\t\t\t\t}\r\n\t\t\t\t{/* <p>Total Question: {this.state.noOfQuestions}</p>\r\n\t\t\t\t<p>Total Marks: {this.state.totalMarks}</p>\r\n\t\t\t\t<p>Total Time: {this.state.testTime} Min</p>\r\n\t\t        */}\r\n\t\t\t\t<button className=\"btn stratTest\" onClick={this.routeChange}> CONTINUE</button>\r\n\t\t\t  </div>\r\n\t\t   </div>\r\n\t\t)\r\n     }\r\n}\r\n\r\nexport default TestInstructions;","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestSubmit.js",["956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973"],"import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport './Test.css';\r\nimport Loader from './../../_components/loader/loader';\r\nimport swal from 'sweetalert';\r\n\r\nclass TestSubmit extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            questions: [],\r\n            message: null,\r\n\t\t\tquestion_num : 0,\r\n\t\t\tmark: false,\r\n\t\t\tchecked:false,\r\n\t\t\ttests:[],\r\n\t\t};\r\n\t\tthis.node = React.createRef();\r\n\t\tthis.reloadQuestionList = this.reloadQuestionList.bind(this);\r\n\t}\r\n\t\r\n    componentDidMount() {\r\n\t\tthis.reloadQuestionList();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(){\r\n\t\tthis.EndExam();\r\n\t}\r\n\r\n    reloadQuestionList() {\r\n\t\tvar testObject = JSON.parse(localStorage.getItem('tests')) || [];\r\n\t\tfor(var i=0; i<testObject.length; i++){\r\n            if(testObject[i].id==this.props.match.params.id){\r\n\t\t\t\tthis.setState({index:i});\r\n\t\t\t\tthis.setState({testId: testObject[i].id});\r\n\t\t\t\tthis.setState({questions: testObject[i].questions});\r\n\t\t\t\tthis.setState({testName: testObject[i].name});\r\n\t\t\t\tif(testObject[i].resumeTime){\r\n\t\t\t\t  this.setState({testTime: parseInt(testObject[i].resumeTime)});\r\n\t\t\t\t}else{\r\n\t\t\t\t  this.setState({testTime: parseInt(testObject[i].testTime)*60});\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({totalMarks: testObject[i].totalMarks});\r\n\t\t\t\tthis.setState({noOfQuestions: testObject[i].noOfQuestions});\r\n\t\t\t\tlocalStorage.setItem('test_id', i);\r\n\t\t\t\tlocalStorage.setItem('test_catid', this.props.match.params.pid);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tgoBack = () => {\r\n\t\tthis.props.history.replace('/TestList/'+this.props.match.params.pid);\r\n\t}\r\n\r\n    EndExam = () => {\r\n\t var online = navigator.onLine;\r\n\t var testObject = JSON.parse(localStorage.getItem('tests')) || [];\r\n\t var i = this.state.index;\r\n\t if(online == true){\r\n        var question_array = [];\r\n\t\tfor (var j = 0; j < testObject[i].questions.length; j++) {\r\n\t\t\t var answers =''; var marks='';\r\n\t\t\t let category = testObject[i].questions[j].questionCategory;\r\n\t\t\t if(category==1 || category==26){\r\n\t\t\t\tfor(var k=0; k < testObject[i].questions[j].choices.length; k++){\r\n\t\t\t\t\tif(testObject[i].questions[j].choices[k].checked==1){\r\n\t\t\t\t\t\tanswers += testObject[i].questions[j].choices[k].id+',';\r\n\t\t\t\t\t\tif(testObject[i].questions[j].choices[k].correct==true){\r\n\t\t\t\t\t\t\tmarks = testObject[i].questions[j].marks;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tmarks = \"-\"+testObject[i].questions[j].negativeMarks;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(answers){ answers = answers.replace(/,(?=\\s*$)/, ''); }\r\n\t\t\t\tquestion_array.push({\r\n\t\t\t\t\tquestionId: \"\"+testObject[i].questions[j].id+\"\",\r\n\t\t\t\t\tanswers: \"\"+answers+\"\",\r\n\t\t\t\t\tqnType:\"mcq\",\r\n\t\t\t\t\tmarks : \"\"+marks+\"\",\r\n\t\t\t\t\ttimeTaken : \"3600\"\r\n\t\t\t\t});\r\n\t\t\t}else if(category==4 || category==7 || category==0 || category==5){\r\n\t\t\t\t//alert(testObject[i].questions[j].answered);\r\n\t\t\t\tif(testObject[i].questions[j].answered==undefined){\r\n\t\t\t\t\ttestObject[i].questions[j].answered = '';\r\n\t\t\t\t}\r\n\t\t\t\t//alert(testObject[i].questions[j].answered);\r\n\t\t\t\tquestion_array.push({\r\n\t\t\t\t\tquestionId: \"\"+testObject[i].questions[j].id+\"\",\r\n\t\t\t\t\tanswers: \"\"+testObject[i].questions[j].answered+\"\",\r\n\t\t\t\t\tqnType:\"textAnswer\",\r\n\t\t\t\t\tmarks : \"\"+marks+\"\",\r\n\t\t\t\t\ttimeTaken : \"3600\"\r\n\t\t\t\t});\r\n\t\t\t}else if(category==2){\r\n\t\t\t\tvar questionId = testObject[i].questions[j].id;\r\n\t\t\t\tvar arr = testObject[i].questions[j].answered;\r\n\r\n\t\t\t\tvar answered = {};\r\n\t\t\t\tif(arr!=undefined){\r\n\t\t\t\t\tfor(var c = 0 ; c < arr.length ; c++){\r\n\t\t\t\t\t\tvar cur = arr[c];\r\n\t\t\t\t\t\tvar choice  = cur.split(\":\")[0];\r\n\t\t\t\t\t\tvar match  = cur.split(\":\")[1];\r\n\t\t\t\t\t\tif(answered[choice]){\r\n\t\t\t\t\t\t\tvar matches = answered[choice] ;\r\n\t\t\t\t\t\t\tmatches.push(match)\r\n\t\t\t\t\t\t\tanswered[choice] = matches; \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tvar matches = [];\r\n\t\t\t\t\t\t\tmatches.push(match)\r\n\t\t\t\t\t\t\tanswered[choice] = matches;     \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t    }\r\n\r\n\t\t\t\tvar answers = Object.keys(answered);\r\n\t\t\t\tvar attemptedAnswer = \"\";\r\n\t\t\t\tfor(var d = 0 ; d < answers.length ; d++){\r\n\t\t\t\t\tvar choice = answers[d];\r\n\t\t\t\t\tattemptedAnswer+=choice+\":\"\r\n\t\t\t\t\tfor(var e = 0 ; e < answered[choice].length ; e++){\r\n\t\t\t\t\t\tattemptedAnswer+=answered[choice][e]+\";\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\tattemptedAnswer = attemptedAnswer.slice(0, attemptedAnswer.length - 1);\r\n\t\t\t\t\tattemptedAnswer+=\",\"\r\n\t\t\t\t}\r\n\t\t\t\tattemptedAnswer = attemptedAnswer.slice(0, attemptedAnswer.length - 1);\r\n\r\n                question_array.push({\r\n\t\t\t\t\tquestionId: \"\"+questionId+\"\",\r\n\t\t\t\t\tanswers: \"\"+attemptedAnswer+\"\",\r\n\t\t\t\t\tqnType:\"mcq\",\r\n\t\t\t\t\tmarks : \"5\",\r\n\t\t\t\t\ttimeTaken : \"3600\"\r\n\t\t\t\t}); \r\n\t\t\t}\r\n\t\t}\t\r\n\t\tlet user = JSON.parse(localStorage.getItem('user')) || [];\r\n\t\tif(!user.userName){\r\n\t\t\tuser.userName = \"\";\r\n\t\t\tuser.enquiryId = localStorage.getItem('enquiryId');\r\n\t\t}\r\n\t\t\r\n\t\tvar tempDate = new Date();\r\n        var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() +' '+ tempDate.getHours()+':'+ tempDate.getMinutes()+':'+ tempDate.getSeconds();\r\n\t\tvar json_data  = {\r\n\t\t\t\"info\" : {\r\n\t\t\t   \"studentCode\"   : \"\"+user.userName+\"\",\r\n\t\t\t   \"enquiryId\"     : \"\"+user.enquiryId+\"\",\r\n\t\t\t   \"testId\"        : \"\"+testObject[i].id+\"\",\r\n\t\t\t   \"testPaperId\"   : \"0\",\r\n\t\t\t   \"startDate\"     : \"\"+date+\"\",\r\n\t\t\t   \"timeTaken\"     : \"\"+this.state.testTime+\"\"\r\n\t\t\t},\r\n\t\t\t\"attempts\" : question_array\r\n\t\t}\r\n\r\n\t\tApiService.endExam(json_data)\r\n\t\t.then((res) => {\r\n\t\t   if(res.data.status==1){\r\n\t\t\t for (var i = 0; i < testObject.length; i++) {\r\n\t\t\t   if (testObject[i].id == this.props.match.params.id) {\r\n\t\t\t\t testObject.splice(i, 1); //remove item from array\r\n\t\t\t   }\r\n\t\t\t }\r\n\t\t\t localStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t\t\t this.goBack();\r\n\t\t   }else{\r\n\t\t\t   swal({\r\n\t\t\t\ttitle: \"Alert\",\r\n\t\t\t\ttext: \"Unable to submit test. Please Try Again\",\r\n\t\t\t\tdangerMode: true,\r\n\t\t       });\r\n\t\t   }\r\n\t\t});\r\n\t}else{\r\n\t\t swal({\r\n\t\t\ttitle: \"Alert\",\r\n\t\t\ttext: \"Could not Connect to Server. Please check your Internet connection and try again Later.\",\r\n\t\t\tdangerMode: true,\r\n\t\t  })\r\n\t\t  .then(endExam => {\r\n\t\t\t\tif (endExam) {\r\n\t\t\t\t\ttestObject[i].submit=1;\r\n\t\t            localStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t\t            this.goBack();\r\n\t\t\t\t}\r\n\t\t  });\r\n        \r\n\t}\r\n\r\n   }\r\n\t\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"test-header\">\r\n\t\t\t\t<div className=\"testclose\" id=\"testclose\">\r\n\t\t\t\t\t<FontAwesomeIcon icon={ faTimesCircle } onClick={this.closeExamAlert} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<h4>{this.state.testName}</h4>\r\n\t\t\t\t{<Loader />}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\t\r\n    }\r\n\t\t\r\n}\r\n\r\nexport default TestSubmit;","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestResultQuestion.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\LearningPDFDetails.js",["974","975","976","977"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"./Learning.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport Card from 'react-bootstrap/Card'\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Loader from './../../_components/loader/loader';\r\nimport { ReactReader } from '../../_components/epub';\r\n\r\nclass LearningPDFDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      message: null,\r\n      loading: false,\r\n    };\r\n    this.reloadLearningStepAttachmentDetailsList = this.reloadLearningStepAttachmentDetailsList.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    //console.log(this.props);\r\n    this.reloadLearningStepAttachmentDetailsList();\r\n  }\r\n\r\n  reloadLearningStepAttachmentDetailsList() {\r\n    this.setState({ loading: true }, () => {\r\n      ApiService.fetchLearningStepAttachments(this.props.match.params.id)\r\n      .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n            list: res.data.attachments\r\n          });\r\n      });\r\n    });\t\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"LearningAttachment\">\r\n        {\r\n          <Container fluid>\r\n              {loading ?  <Loader />: this.renderCard()}           \r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderCard() {\r\n\tlet portlet = JSON.parse(localStorage.getItem('portlet'));\r\n    let content = \"\";\r\n\t\treturn  <div className=\"card_list\"> \r\n\t\t{\r\n      this.state.list.map((item, index) => {\r\n        if(item.id==this.props.match.params.resourceId){\r\n          if(item.type===\"e-book\" ||item.type===\"book\" ){\r\n            if(item?.url?.slice((item?.url?.lastIndexOf(\".\") - 1 >>> 0) + 2)=='pdf'){\r\n              const url = window.location.protocol + \"//\" + window.location.host +\"/assets/js/pdfjs-1.1.366/web/viewer.html?file=\"+item.url;\r\n              content = <div> <iframe title={item.name} class=\"iframe100\" width=\"100%\" src={url}></iframe></div>\r\n            } else if(item?.url?.slice((item?.url?.lastIndexOf(\".\") - 1 >>> 0) + 2)=='epub'){\r\n                const { location } = this.state\r\n                content =\r\n                  <div>\r\n                    <div style={{ position: \"relative\", height: \"100vh\" }}>\r\n                      <ReactReader \r\n                        url= {item.url}\r\n                        title={item.name}\r\n                        location={location}\r\n                        locationChanged={this.onLocationChanged}\r\n                        getRendition={this.getRendition}\r\n                      />\r\n                   </div>\r\n                 </div>\r\n            }\r\n          }\r\n          return (\r\n              <div key={index}>\r\n                <div className={`module-header-step2 ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n                <div className=\"back\">\r\n                  <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n                </div>\r\n                <h4>{item.name}</h4>\r\n                </div>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <div className=\"\">\r\n                      {content} \r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </div>\r\n          )\r\n        }\r\n      })\r\n    }\r\n    </div>\r\n  }\r\n\r\n}\r\n\r\nexport default LearningPDFDetails;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestResultDetail.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestPDFDetails.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestTaking.js",["978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061"],"import React, { Component } from 'react'\r\nimport swal from 'sweetalert';\r\nimport Timer from \"../../_components/timer/timer\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport { faEye,faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport './Test.css';\r\nimport Loader from './../../_components/loader/loader';\r\nimport Utils from \"../../_helpers/utils\";\r\n\r\nclass TestTaking extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            questions: [],\r\n            message: null,\r\n\t\t\tquestion_num : 0,\r\n\t\t\tboxClass:['notvisited'],\r\n\t\t\taddClass: false,\r\n\t\t\tmark: false,\r\n\t\t\tchecked:false,\r\n\t\t\ttests:[],\r\n\t\t\tmath: '',\r\n\t\t\tquestime: 0,\r\n\t\t\tloading: false,\r\n\t\t\tnetworkError:0,\r\n\t\t\tprevTime:0\r\n\t\t};\r\n\t\tthis.node = React.createRef();\r\n\t\tthis.reloadQuestionList = this.reloadQuestionList.bind(this);\r\n\t\t//this.startTimer = this.startTimer.bind(this);\r\n\t\t//this.resetTimer = this.resetTimer.bind(this);\r\n\t}\r\n\t\r\n\t\r\n\r\n    componentDidMount() {\r\n       \r\n\t\tthis.reloadQuestionList();\r\n        this.startTimer();\r\n\t\tif (window.MathJax !== undefined) {\r\n\t\t    window.MathJax.Hub.Queue([\"Typeset\", window.MathJax.Hub,this.node.current]);\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', function() {\r\n\t\t\twindow.history.pushState({}, '')\r\n\t\t})\r\n\t\t\r\n\t\tlet paramsString = this.props.location.search;\r\n        const params = new URLSearchParams(paramsString);\r\n        let lms =  params.get('lms');\r\n\t\tlet title =  params.get('title');\r\n\r\n\t\t/*window.addEventListener(\"visibilitychange\", function() {\r\n\t\t\tvar testObject = JSON.parse(localStorage.getItem('tests')) || [];\r\n\t\t\tvar i = localStorage.getItem('test_id');\r\n\t\t\tvar catid = localStorage.getItem('test_catid');\r\n\t\t\ttestObject[i].resume=1;\r\n\t\t\ttestObject[i].resumeTime = localStorage.getItem('time_left');\r\n\t\t\tlocalStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t\t\tif(lms==1){\r\n\t\t\t  window.history.pushState(null, null, '/lesson/steps/attachments/'+catid+'/'+title+'?back=quiz');\r\n\t\t\t}else{\r\n\t\t\t  window.history.pushState(null, null, '/TestList/'+catid);\r\n\t\t\t}\r\n\t\t\twindow.location.reload();\r\n\t\t});*/\r\n         window.onbeforeunload = function () {\r\n\t\t  var testObject = JSON.parse(localStorage.getItem('tests')) || [];\r\n\t\t  var i = localStorage.getItem('test_id');\r\n\t\t  testObject[i].resume=1;\r\n\t\t  testObject[i].resumeTime = localStorage.getItem('time_left');\r\n\t\t  localStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t\t }\r\n\r\n\t\t window.addEventListener('popstate', function() {\r\n\t\t  window.history.pushState({}, '');\r\n\t\t  //this.closeExamAlert();\r\n\t\t  //document.getElementById(\"testclose\").click();\r\n\t\t  var testObject = JSON.parse(localStorage.getItem('tests')) || [];\r\n\t\t  if(typeof testObject !== 'undefined' && testObject.length > 0){\r\n\t\t\t  var i = localStorage.getItem('test_id');\r\n\t\t\t  var catid = localStorage.getItem('test_catid');\r\n\t\t\t  if(lms==1 && i){\r\n\t\t\t\t  testObject[i].resume=1;\r\n\t\t\t\t  testObject[i].resumeTime = localStorage.getItem('time_left');\r\n\t\t\t\t  localStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t\t\t\t  window.history.pushState(null, null, '/lesson/steps/attachments/'+catid+'/'+title+'?back=quiz');\r\n\t\t\t  }else if(i){\r\n\t\t\t\t  testObject[i].resume=1;\r\n\t\t\t\t  testObject[i].resumeTime = localStorage.getItem('time_left');\r\n\t\t\t\t  localStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t\t\t\t  window.history.pushState(null, null, '/TestList/'+catid);\r\n\t\t\t  }else{\r\n\t\t\t\t  window.history.pushState(null, null, '/TestList/'+catid);\r\n\t\t\t  }\r\n\t\t\t  window.location.reload();\r\n\t\t  }else{\r\n\t\t\t  var catid = localStorage.getItem('test_catid');\r\n\t\t\t  if(lms==1){\r\n\t\t\t\t  window.history.pushState(null, null, '/lesson/steps/attachments/'+catid+'/'+title+'?back=quiz');\r\n\t\t\t  }else{\r\n\t\t\t\t  window.history.pushState(null, null, '/TestList/'+catid);\r\n\t\t\t  }\r\n\t\t\t  window.location.reload();\r\n\t\t  }\r\n\t\t  /*swal({\r\n\t\t\ttitle: \"CONFIRM\",\r\n\t\t\ttext: \"Are you sure you want to quit the Test?\",\r\n\t\t\tbuttons: ['No','Yes'],\r\n\t\t\tdangerMode: true,\r\n\t\t\t})\r\n\t\t\t.then(exitExam => {\r\n\t\t\t\tif (exitExam) {\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t}\r\n\t\t    });*/\r\n\t\t})\r\n\t\t this.testActive();\r\n\t\t var intervalId = setInterval(()=> this.testActive(), 60000);\r\n\t\t this.setState({intervalId: intervalId});\r\n\t\t let testid = this.props.match.params.id;\r\n\t\t this.initTestTaking(testid);\r\n\t\t\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n\t\tif (window.MathJax !== undefined) {\r\n\t\t\twindow.MathJax.Hub.Queue([\"Typeset\", window.MathJax.Hub,this.node.current]);\r\n\t\t}\r\n\t\t//this.startTimer();\r\n\t}\r\n\t\r\n\tasync testActive() {\r\n\t\tlet testid = this.props.match.params.id;\r\n\t\tApiService.testisActive(testid)\r\n\t\t.then((res) => {\r\n\t\t   if(res.data.isActive==false){\r\n               document.getElementById(\"endExam\").click();\r\n\t\t   }\r\n\t\t}).catch((error) => {\r\n\t\t   if(this.state.networkError==2){\r\n\t\t\t   clearInterval(this.state.intervalId);\r\n\t\t\t   var testObject = JSON.parse(localStorage.getItem('tests')) || [];\r\n\t\t\t   if(typeof testObject !== 'undefined' && testObject.length > 0){\r\n\t\t\t\t  var i = localStorage.getItem('test_id');\r\n\t\t\t\t  var catid = localStorage.getItem('test_catid');\r\n\t\t\t\t  testObject[i].resume=1;\r\n\t\t\t\t  testObject[i].resumeTime = localStorage.getItem('time_left');\r\n\t\t\t\t  localStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t\t\t\t  window.history.pushState(null, null, '/TestList/'+catid);\r\n\t\t\t   }\r\n\t\t\t   swal({\r\n\t\t\t\ttitle: \"Alert\",\r\n\t\t\t\ttext: \"Could not Connect to Server. Please check your Internet connection and try again Later.\",\r\n\t\t\t\tdangerMode: true,\r\n\t\t\t  })\r\n\t\t\t  .then(endExam => {\r\n\t\t\t\t\tif (endExam) {\r\n\t\t\t\t\t\tthis.goBack();\r\n\t\t\t\t\t}\r\n\t\t\t  });\r\n\t\t   }else{\r\n\t\t\t   this.setState({networkError: this.state.networkError + 1});\r\n\t\t   }\r\n        });\r\n    }\r\n\t\r\n\tstartTimer = () => {\r\n    /* this.timer = setInterval(() => this.setState({\r\n      questime: this.state.questime + 1\r\n     }), 1000)\r\n     console.log(\"start\");*/\r\n    }\r\n\t\r\n\tresetTimer = () => {\r\n      this.setState({questime: 0})\r\n      console.log(\"reset\")\r\n    }\r\n\r\n    reloadQuestionList() {\r\n\t\tvar testObject = JSON.parse(localStorage.getItem('tests')) || [];\r\n\t\tfor(var i=0; i<testObject.length; i++){\r\n            if(testObject[i].id==this.props.match.params.id){\r\n\t\t\t\tthis.setState({index:i});\r\n\t\t\t\tthis.setState({testId: testObject[i].id});\r\n\t\t\t\tthis.setState({questions: testObject[i].questions});\r\n\t\t\t\tthis.setState({testName: testObject[i].name});\r\n\t\t\t\tif(testObject[i].resumeTime){\r\n\t\t\t\t  this.setState({testTime: parseInt(testObject[i].resumeTime)});\r\n\t\t\t\t}else{\r\n\t\t\t\t  this.setState({testTime: parseInt(testObject[i].testTime)*60});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(testObject[i].resumeQuestion){\r\n\t\t\t\t\tthis.setState({question_num: parseInt(testObject[i].resumeQuestion)});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tthis.setState({totalMarks: testObject[i].totalMarks});\r\n\t\t\t\tthis.setState({noOfQuestions: testObject[i].noOfQuestions});\r\n\t\t\t\tlocalStorage.setItem('test_id', i);\r\n\t\t\t\tlocalStorage.setItem('test_catid', this.props.match.params.pid);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinitTestTaking(testId) {\r\n\t\tthis.setState({ loading: true }, () => {\r\n\t\t  ApiService.initTestTaking(testId)\r\n\t\t  .then((res) => {\r\n\t\t\t  this.setState({\r\n\t\t\t\tloading: false,\r\n\t\t\t  });\r\n\t\t  });\r\n\t\t});\t\r\n\t}\r\n\r\n\tgoBack = () => {\r\n\t\tlet paramsString = this.props.location.search;\r\n        const params = new URLSearchParams(paramsString);\r\n        let lms =  params.get('lms');\r\n\t\tlet title =  params.get('title');\r\n\t\tif(lms==1){\r\n\t\t   this.props.history.replace('/lesson/steps/attachments/'+this.props.match.params.pid+'/'+title+'?back=quiz');\r\n\t\t}else{\r\n\t\t   this.props.history.replace('/TestList/'+this.props.match.params.pid);\r\n\t\t}\r\n\t}\r\n\t\r\n    EndExamAlert = () => {\r\n\t\tswal({\r\n\t\t\ttitle: \"CONFIRM\",\r\n\t\t\ttext: \"Are you sure you want to submit the Test?\",\r\n\t\t\tbuttons: ['No','Yes'],\r\n\t\t\tdangerMode: true,\r\n\t\t\t})\r\n\t\t\t.then(endExam => {\r\n\t\t\t\tif (endExam) {\r\n\t\t\t\t\tthis.EndExam();\r\n\t\t\t\t}\r\n\t\t    });\r\n    }\r\n\r\n    closeExamAlert = () => {\r\n\t\tswal({\r\n\t\t\ttitle: \"CONFIRM\",\r\n\t\t\ttext: \"Are you sure you want to quit the Test?\",\r\n\t\t\tbuttons: ['No','Yes'],\r\n\t\t\tdangerMode: true,\r\n\t\t\t})\r\n\t\t\t.then(exitExam => {\r\n\t\t\t\tif (exitExam) {\r\n\t\t\t\t\tclearInterval(this.state.intervalId);\r\n\t\t\t\t\tvar testObject = JSON.parse(localStorage.getItem('tests')) || [];\r\n\t\t\t\t\tvar i = this.state.index;\r\n\t\t\t\t\ttestObject[i].resume=1;\r\n\t\t\t\t\ttestObject[i].resumeTime = localStorage.getItem('time_left');\r\n\t\t\t\t\ttestObject[i].resumeQuestion = this.state.question_num;\r\n\t\t\t\t\tlocalStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t\t\t\t\tthis.goBack();\r\n\t\t\t\t}\r\n\t\t    });\r\n    }\r\n\r\n   EndExam = () => {\r\n\tclearInterval(this.state.intervalId);\r\n\tvar online = navigator.onLine;\r\n\tvar testObject = JSON.parse(localStorage.getItem('tests')) || [];\r\n\tvar i = this.state.index;\r\n\tvar studentPdfResponse = testObject[i].studentPdfResponse;\r\n\tvar test_id = testObject[i].id;\r\n\t//online = false;\r\n\tif(online == true){\r\n        var question_array = [];\r\n\t\tfor (var j = 0; j < testObject[i].questions.length; j++) {\r\n\t\t\t var answers =''; var marks='';\r\n\t\t\t let category = testObject[i].questions[j].questionCategory;\r\n\t\t\t if(category==1 || category==26){\r\n\t\t\t\tfor(var k=0; k < testObject[i].questions[j].choices.length; k++){\r\n\t\t\t\t\tif(testObject[i].questions[j].choices[k].checked==1){\r\n\t\t\t\t\t\tanswers += testObject[i].questions[j].choices[k].id+',';\r\n\t\t\t\t\t\tif(testObject[i].questions[j].choices[k].correct==true){\r\n\t\t\t\t\t\t\tmarks = testObject[i].questions[j].marks;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tmarks = \"-\"+testObject[i].questions[j].negativeMarks;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(answers){ answers = answers.replace(/,(?=\\s*$)/, ''); }\r\n\t\t\t\tquestion_array.push({\r\n\t\t\t\t\tquestionId: \"\"+testObject[i].questions[j].id+\"\",\r\n\t\t\t\t\tanswers: \"\"+answers+\"\",\r\n\t\t\t\t\tqnType:\"mcq\",\r\n\t\t\t\t\tmarks : \"\"+marks+\"\",\r\n\t\t\t\t\ttimeTaken : \"\"+(testObject[i].questions[j].question_time*1000)+\"\"\r\n\t\t\t\t});\r\n\t\t\t}else if(category==4 || category==7 || category==0 || category==5){\r\n\t\t\t\t//alert(testObject[i].questions[j].answered);\r\n\t\t\t\tif(testObject[i].questions[j].answered==undefined){\r\n\t\t\t\t\ttestObject[i].questions[j].answered = '';\r\n\t\t\t\t}\r\n\t\t\t\t//alert(testObject[i].questions[j].answered);\r\n\t\t\t\tquestion_array.push({\r\n\t\t\t\t\tquestionId: \"\"+testObject[i].questions[j].id+\"\",\r\n\t\t\t\t\tanswers: \"\"+testObject[i].questions[j].answered+\"\",\r\n\t\t\t\t\tqnType:\"textAnswer\",\r\n\t\t\t\t\tmarks : \"\"+marks+\"\",\r\n\t\t\t\t\ttimeTaken : \"\"+(testObject[i].questions[j].question_time*1000)+\"\"\r\n\t\t\t\t});\r\n\t\t\t}else if(category==2){\r\n\t\t\t\tvar questionId = testObject[i].questions[j].id;\r\n\t\t\t\tvar arr = testObject[i].questions[j].answered;\r\n\r\n\t\t\t\tvar answered = {};\r\n\t\t\t\tif(arr!=undefined){\r\n\t\t\t\t\tfor(var c = 0 ; c < arr.length ; c++){\r\n\t\t\t\t\t\tvar cur = arr[c];\r\n\t\t\t\t\t\tvar choice  = cur.split(\":\")[0];\r\n\t\t\t\t\t\tvar match  = cur.split(\":\")[1];\r\n\t\t\t\t\t\tif(answered[choice]){\r\n\t\t\t\t\t\t\tvar matches = answered[choice] ;\r\n\t\t\t\t\t\t\tmatches.push(match)\r\n\t\t\t\t\t\t\tanswered[choice] = matches; \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tvar matches = [];\r\n\t\t\t\t\t\t\tmatches.push(match)\r\n\t\t\t\t\t\t\tanswered[choice] = matches;     \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t    }\r\n\r\n\t\t\t\tvar answers = Object.keys(answered);\r\n\t\t\t\tvar attemptedAnswer = \"\";\r\n\t\t\t\tfor(var d = 0 ; d < answers.length ; d++){\r\n\t\t\t\t\tvar choice = answers[d];\r\n\t\t\t\t\tattemptedAnswer+=choice+\":\"\r\n\t\t\t\t\tfor(var e = 0 ; e < answered[choice].length ; e++){\r\n\t\t\t\t\t\tattemptedAnswer+=answered[choice][e]+\";\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\tattemptedAnswer = attemptedAnswer.slice(0, attemptedAnswer.length - 1);\r\n\t\t\t\t\tattemptedAnswer+=\",\"\r\n\t\t\t\t}\r\n\t\t\t\tattemptedAnswer = attemptedAnswer.slice(0, attemptedAnswer.length - 1);\r\n\r\n                question_array.push({\r\n\t\t\t\t\tquestionId: \"\"+questionId+\"\",\r\n\t\t\t\t\tanswers: \"\"+attemptedAnswer+\"\",\r\n\t\t\t\t\tqnType:\"mcq\",\r\n\t\t\t\t\tmarks : \"5\",\r\n\t\t\t\t\ttimeTaken : \"\"+(testObject[i].questions[j].question_time*1000)+\"\"\r\n\t\t\t\t}); \r\n\t\t\t}\r\n\t\t}\t\r\n\t\tlet user = JSON.parse(localStorage.getItem('user')) || [];\r\n\t\tif(!user.userName){\r\n\t\t\tuser.userName = \"\";\r\n\t\t\tuser.enquiryId = localStorage.getItem('enquiryId');\r\n\t\t}\r\n\t\t\r\n\t\tvar tempDate = new Date();\r\n        var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() +' '+ tempDate.getHours()+':'+ tempDate.getMinutes()+':'+ tempDate.getSeconds();\r\n\t\tvar json_data  = {\r\n\t\t\t\"info\" : {\r\n\t\t\t   \"studentCode\"   : \"\"+user.userName+\"\",\r\n\t\t\t   \"enquiryId\"     : \"\"+user.enquiryId+\"\",\r\n\t\t\t   \"testId\"        : \"\"+testObject[i].id+\"\",\r\n\t\t\t   \"testPaperId\"   : \"0\",\r\n\t\t\t   \"startDate\"     : \"\"+date+\"\",\r\n\t\t\t   \"timeTaken\"     : \"\"+this.state.testTime+\"\"\r\n\t\t\t},\r\n\t\t\t\"attempts\" : question_array\r\n\t\t}\r\n        this.setState({ loading: true }, () => {\r\n\t\t\tApiService.endExam(json_data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif(res.data.status==1){\r\n\t\t\t\t\tfor (var i = 0; i < testObject.length; i++) {\r\n\t\t\t\t\tif (testObject[i].id == this.props.match.params.id) {\r\n\t\t\t\t\t\ttestObject.splice(i, 1); //remove item from array\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlocalStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t\t\t\t\tthis.setState({ loading: false});\r\n\t\t\t\t\tif(studentPdfResponse==false){\r\n\t\t\t\t\t   this.goBack();\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t   this.props.history.push({pathname: \"/test/upload/\"+ test_id , state: { testEndTime: 0 }});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Alert\",\r\n\t\t\t\t\t\ttext: \"Could not Connect to Server. Please check your Internet connection and try again Later.\",\r\n\t\t\t\t\t\tdangerMode: true,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}else{\t\r\n        testObject[i].submit=1;\r\n\t\tlocalStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t\tthis.goBack();\r\n\t}\r\n\r\n   }\r\n\t\r\n   getCheckeboxValue(event) {\r\n\t\tconst choice = event.target.value;\r\n\t\tconst status = event.target.checked;\r\n\t\tvar testObject = JSON.parse(localStorage.getItem('tests')) || [] ; var checked =0; var mark = 0;\r\n\t\tvar i = this.state.index;\r\n\t\tfor (var j = 0; j < testObject[i].questions.length; j++) {\r\n\t\t\tif(this.state.question_num+1 === testObject[i].questions[j].questionNumber){  //look for match with id\r\n\t\t\t   let category = testObject[i].questions[j].questionCategory;\r\n\t\t\t   if(category==1 || category==26){\r\n\t\t\t\tfor(var k=0; k < testObject[i].questions[j].choices.length; k++){\t\r\n\t\t\t\t\tif(choice == testObject[i].questions[j].choices[k].id && category==1){\r\n\t\t\t\t\t\tif(status){\r\n\t\t\t\t\t\t testObject[i].questions[j].choices[k].checked = 1;\r\n\t\t\t\t\t\t testObject[i].questions[j].class=\"answered\";\r\n\t\t\t\t\t\t this.setState({ boxClass : \"answered\" });\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t testObject[i].questions[j].choices[k].checked = 0;\r\n\t\t\t\t\t\t testObject[i].questions[j].class=\"notanswered\";\r\n\t\t\t\t\t\t this.setState({ boxClass : \"notanswered\" });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.setState({ addClass : true });\r\n\t\t\t\t\t\tif(testObject[i].questions[j].mark){ mark = 1; }\r\n\t\t\t\t\t\tbreak;  //exit loop since you found the choice\r\n\t\t\t\t\t}else if(category==26){\r\n\t\t\t\t\t\tvar singleOpt = document.getElementById(\"single_opt\");\r\n\t\t\t\t\t\tvar chks = singleOpt.getElementsByTagName(\"INPUT\");\r\n\t\t\t\t\t\tfor (var c = 0; c < chks.length; c++) {\r\n\t\t\t\t\t\t\tchks[c].onclick = function () {\r\n\t\t\t\t\t\t\t\tfor (var c = 0; c < chks.length; c++) {\r\n\t\t\t\t\t\t\t\t\tif (chks[c] != this && this.checked) {\r\n\t\t\t\t\t\t\t\t\t\tchks[c].checked = false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(choice == testObject[i].questions[j].choices[k].id && status){\r\n\t\t\t\t\t\t\ttestObject[i].questions[j].choices[k].checked = 1;\r\n\t\t\t\t\t\t\ttestObject[i].questions[j].class=\"answered\";\r\n\t\t\t\t\t\t\tthis.setState({ boxClass : \"answered\" });\r\n\t\t\t\t\t\t\tchecked = 1;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\ttestObject[i].questions[j].choices[k].checked = 0;\r\n\t\t\t\t\t\t\ttestObject[i].questions[j].class=\"notanswered\";\r\n\t\t\t\t\t\t    this.setState({ boxClass : \"notanswered\" });\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.setState({ addClass : true });\r\n\t\t\t\t\t\tif(testObject[i].questions[j].mark){ mark = 1; }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t   }else if(category==2){\r\n\t\t\t\t\t var answered_array =  testObject[i].questions[j].answered || [];\r\n\t\t\t\t\t if(status){\r\n\t\t\t\t\t\tif (!answered_array.includes(choice)) {\r\n\t\t\t\t\t\t\tanswered_array.push(choice);\r\n\t\t\t\t\t\t\ttestObject[i].questions[j].answered=answered_array;\r\n\t\t\t\t\t\t\ttestObject[i].questions[j].class=\"answered\";\r\n\t\t\t\t\t\t\tthis.setState({ boxClass : \"answered\" });\r\n\t\t\t\t\t\t\tchecked = 1;\r\n\t\t\t\t\t\t\tconsole.log(\"answered\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t  }else{\r\n\t\t\t\t\t\tfor (var i = 0; i < answered_array.length; i++) { //loop over the collection\r\n\t\t\t\t\t\t\tif (answered_array[i] == choice) { //see if choice match\r\n\t\t\t\t\t\t\t\tanswered_array.splice(i, 1); //remove item from array\r\n\t\t\t\t\t\t\t\tbreak; //exit loop\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t  if(answered_array.length == 0){\r\n\t\t\t\t\t\ttestObject[i].questions[j].class=\"notanswered\";\r\n\t\t\t\t\t\tthis.setState({ boxClass : \"notanswered\" }); \r\n\t\t\t\t\t\tconsole.log(\"notanswered\");\r\n\t\t\t\t\t  }\r\n\t\t\t   }\r\n\t\t\t   \r\n\t\t\t   if(checked==1){\r\n\t\t\t\t\ttestObject[i].questions[j].class=\"answered\";\r\n\t\t\t\t\tthis.setState({ boxClass : \"answered\" });\r\n\t\t\t   }\r\n\t\t\t   //if(testObject[i].questions[j].mark){ mark = 1; }\r\n\t\t\t   break;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\t\r\n\t\tlocalStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t\tif(mark==1){this.MarkQuestion();}\r\n\t\tthis.reloadQuestionList();\t\t\r\n\t}\r\n\r\n\thandleKeyUp = event => {\r\n\t\tvar answer = event.target.value;\r\n\t\tvar testObject = JSON.parse(localStorage.getItem('tests')) || [];var mark = 0;\r\n\t\tvar i = this.state.index;\r\n\t\tfor (var j = 0; j < testObject[i].questions.length; j++) {\r\n\t\t\tlet category = testObject[i].questions[j].questionCategory;\r\n\t\t\tif(this.state.question_num+1 === testObject[i].questions[j].questionNumber){  //look for match with id\r\n\t\t\t    if(category==4 || category==7 || category==0 || category==5){\r\n\t\t\t\t  if(answer){\r\n\t\t\t\t    testObject[i].questions[j].answered=answer;\r\n\t\t\t\t    testObject[i].questions[j].class=\"answered\";\r\n\t\t\t\t    this.setState({ boxClass : \"answered\" });\r\n\t\t\t\t  }else{\r\n\t\t\t\t\ttestObject[i].questions[j].answered='';\r\n\t\t\t\t    testObject[i].questions[j].class=\"notanswered\";\r\n\t\t\t\t    this.setState({ boxClass : \"notanswered\" });\r\n\t\t\t\t  }\r\n\t\t\t\t  if(testObject[i].questions[j].mark){ mark = 1; }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\r\n\t\tlocalStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t\tif(mark==1){this.MarkQuestion();}\r\n\t\tthis.reloadQuestionList();\r\n\t}\r\n\r\n\tNextQuestion = () => {\r\n\t\tvar testObject = JSON.parse(localStorage.getItem('tests')) || []; var checked =0;\r\n\t\tvar category = testObject[this.state.index].questions[this.state.question_num].questionCategory;\r\n\t\tif(this.state.question_num < (testObject[this.state.index].questions.length-1)){\r\n\t\t  if(category==1 || category == 26){\r\n\t\t\tfor (var c = 0; c < testObject[this.state.index].questions[this.state.question_num].choices.length; c++) {\r\n\t\t\t\tif(testObject[this.state.index].questions[this.state.question_num].choices[c].checked==1){\r\n\t\t\t\t\tchecked = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t  }else if(category == 4 || category==7 || category==0 || category==5){\r\n\t\t\tif(testObject[this.state.index].questions[this.state.question_num].answered){\r\n\t\t\t\tchecked = 1;\r\n\t\t\t}\r\n\t\t  }else if(category == 2){\r\n\t\t     var answered_array =  testObject[this.state.index].questions[this.state.question_num].answered || [];\r\n\t\t\t if(answered_array.length){\r\n\t\t\t    checked = 1;\r\n\t\t\t }\r\n\t\t  }\r\n\r\n\t\t  if(checked==0){\r\n\t\t\ttestObject[this.state.index].questions[this.state.question_num].class=\"notanswered\";\r\n\t\t\tthis.setState({ boxClass : \"notanswered\" });\r\n\t\t\tthis.setState({ addClass : true });\r\n\t\t  }\r\n\t\t  \r\n\t\t  if(!localStorage.getItem('prevTime')){\r\n\t\t      localStorage.setItem('prevTime', testObject[this.state.index].testTime*60);\r\n\t\t  }\r\n\t\t  if(!testObject[this.state.index].questions[this.state.question_num].question_time){\r\n\t\t\t//alert(localStorage.getItem('prevTime') - localStorage.getItem('time_left'));\r\n\t\t    testObject[this.state.index].questions[this.state.question_num].question_time = localStorage.getItem('prevTime') - localStorage.getItem('time_left');\r\n\t\t  }else{\r\n\t\t\tvar ques_time = testObject[this.state.index].questions[this.state.question_num].question_time;\r\n\t\t\ttestObject[this.state.index].questions[this.state.question_num].question_time = parseInt(ques_time) + parseInt(localStorage.getItem('prevTime')) - parseInt(localStorage.getItem('time_left'));\r\n\t\t  }\r\n\t\t  localStorage.setItem('prevTime', localStorage.getItem('time_left'));\r\n\t\t  \r\n\t\t  this.setState({ question_num: this.state.question_num + 1 });\r\n\t\t  testObject[this.state.index].resumeQuestion = this.state.question_num + 1;\r\n\t\t}\r\n\t\tlocalStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t\tthis.reloadQuestionList();\r\n\t\tthis.renderQuestions();\r\n\t\tthis.resetTimer();\r\n\t\tthis.startTimer();\r\n\t}\r\n\t\r\n\tMarkQuestion = () => {\r\n\t\t  \r\n\t\tvar testObject = JSON.parse(localStorage.getItem('tests')) || []; var checked =0;\r\n\t\tvar category = testObject[this.state.index].questions[this.state.question_num].questionCategory;\r\n\t\tif(category==1 || category == 26){\r\n\t\t\tfor (var c = 0; c < testObject[this.state.index].questions[this.state.question_num].choices.length; c++) {\r\n\t\t\t\tif(testObject[this.state.index].questions[this.state.question_num].choices[c].checked==1){\r\n\t\t\t\t\tchecked = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t    }else if(category == 4 || category==7 || category==0 || category==5){\r\n\t\t\tif(testObject[this.state.index].questions[this.state.question_num].answered){\r\n\t\t\t\tchecked = 1;\r\n\t\t\t}\r\n\t\t}else if(category==2){\r\n\t\t\tvar answered_array =  testObject[this.state.index].questions[this.state.question_num].answered || [];\r\n\t\t\tif(answered_array.length == 0){\r\n\t\t\t\tchecked = 1; \r\n\t\t\t}\r\n\t\t}\r\n\t\tif(checked==0){\r\n\t\t\ttestObject[this.state.index].questions[this.state.question_num].mark=\"marked\";\r\n\t\t\tthis.setState({ boxClass : \"marked\" });\r\n\t\t\tthis.setState({ addClass : true });\r\n\t\t}else{\r\n\t\t\ttestObject[this.state.index].questions[this.state.question_num].mark=\"markedanswered\";\r\n\t\t\tthis.setState({ boxClass : \"markedanswered\" });\r\n\t\t\tthis.setState({ addClass : true });  \r\n\t\t}\r\n\t\tlocalStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t\tthis.reloadQuestionList();\r\n\t}\r\n\r\n\tUNMarkQuestion = () => {\r\n\t\t  \r\n\t\tvar testObject = JSON.parse(localStorage.getItem('tests')) || []; var checked =0;\r\n\t\tvar category = testObject[this.state.index].questions[this.state.question_num].questionCategory;\r\n\t\tif(category==1 || category == 26){\r\n\t\t\tfor (var c = 0; c < testObject[this.state.index].questions[this.state.question_num].choices.length; c++) {\r\n\t\t\t\tif(testObject[this.state.index].questions[this.state.question_num].choices[c].checked==1){\r\n\t\t\t\t\tchecked = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else if(category==4 || category==7 || category==0 || category==5){\r\n\t\t\tif(testObject[this.state.index].questions[this.state.question_num].answered){\r\n\t\t\t\tchecked = 1;\r\n\t\t\t}\r\n\t\t}else if(category==2){\r\n\t\t\tvar answered_array =  testObject[this.state.index].questions[this.state.question_num].answered || [];\r\n\t\t\tif(answered_array.length == 0){\r\n\t\t\t\tchecked = 1; \r\n\t\t\t}\r\n\t\t}\r\n\t\tif(checked==0){\r\n\t\t\ttestObject[this.state.index].questions[this.state.question_num].mark=\"\";\r\n\t\t\tthis.setState({ boxClass : \"\" });\r\n\t\t\tthis.setState({ addClass : true });\r\n\t\t}else{\r\n\t\t\ttestObject[this.state.index].questions[this.state.question_num].mark=\"\";\r\n\t\t\tthis.setState({ boxClass : \"\" });\r\n\t\t\tthis.setState({ addClass : true });  \r\n\t\t}\r\n\t\tlocalStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t\tthis.reloadQuestionList();\r\n\t}\r\n\t  \r\n\tPrevQuestion = () => {\r\n\t\tvar testObject = JSON.parse(localStorage.getItem('tests')) || [];\r\n\t\tif(this.state.question_num >=1 ){\r\n\t\t  this.setState({ question_num: this.state.question_num - 1 });\r\n\t\t  testObject[this.state.index].resumeQuestion = this.state.question_num - 1;\r\n\t\t  \r\n\t\t  if(!localStorage.getItem('prevTime')){\r\n\t\t      localStorage.setItem('prevTime', testObject[this.state.index].testTime*60);\r\n\t\t  }\r\n\t\t  if(!testObject[this.state.index].questions[this.state.question_num].question_time){\r\n\t\t    testObject[this.state.index].questions[this.state.question_num].question_time = localStorage.getItem('prevTime') - localStorage.getItem('time_left');\r\n\t\t  }else{\r\n\t\t\tvar ques_time = testObject[this.state.index].questions[this.state.question_num].question_time;\r\n\t\t\ttestObject[this.state.index].questions[this.state.question_num].question_time = parseInt(ques_time) + parseInt(localStorage.getItem('prevTime')) - parseInt(localStorage.getItem('time_left'));\r\n\t\t  }\r\n\t\t  localStorage.setItem('prevTime', localStorage.getItem('time_left'));\r\n\t\t  \r\n\t\t}\r\n\t\tlocalStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t}\r\n\t\r\n\tprevDisabled(){\r\n\t   if(this.state.question_num === 0){\r\n\t\t return true;\r\n\t   }else{\r\n\t     return false;\r\n\t   }\r\n\t}\r\n\t\r\n\tnextDisabled(){\r\n\t   let question = this.state.questions;\r\n\t   if(this.state.question_num < (question.length-1)){\r\n\t\t return false;\r\n\t   }else{\r\n\t     return true;\r\n\t   }\r\n\t}\r\n\t\r\n\topenNav() {\r\n\t  let isMobile = Utils.isMobileDevice();\r\n\t  if(isMobile===true){\r\n\t\tdocument.getElementById(\"QuestionsSidenav\").style.width = \"100%\";\r\n\t  }else{\r\n\t\tdocument.getElementById(\"QuestionsSidenav\").style.width = \"30%\";\r\n\t\tdocument.getElementById(\"sidenavclose\").style.right = \"71%\";\r\n\t  }\r\n\t}\r\n\t\r\n\tcloseNav() {\r\n\t  document.getElementById(\"QuestionsSidenav\").style.width = \"0\";\r\n\t}\r\n\t\r\n\tshowQuestion (e,id) {\r\n\t\te.preventDefault();\r\n\t\tthis.setState ({ question_num: id });\r\n\t\tvar testObject = JSON.parse(localStorage.getItem('tests')) || [];\r\n\t    testObject[this.state.index].resumeQuestion = id;\r\n\t\tlocalStorage.setItem(\"tests\", JSON.stringify(testObject));\r\n\t\tdocument.getElementById(\"QuestionsSidenav\").style.width = \"0\";\r\n\t}\r\n\r\n\tcurrentTime(time){\r\n\t\t//alert(time);\r\n\t\tthis.setState({ \r\n\t\t\tcurrentTimeSeconds: time,\r\n\t\t});\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tlet portlet = JSON.parse(localStorage.getItem('portlet')) || [];\r\n\t\tconst { loading } = this.state;\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<div className={`test-header ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n\t\t\t\t<div className=\"testclose\" id=\"testclose\">\r\n\t\t\t\t\t<FontAwesomeIcon icon={ faTimesCircle } id=\"closeAlert\" onClick={this.closeExamAlert} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<h4>{this.state.testName}</h4> \r\n\t\t\t\t<div className=\"timer\">\r\n\t\t\t\t  {this.state.testTime > 0 &&\t\r\n\t\t\t\t\t<Timer startTimeInSeconds={parseInt(this.state.testTime)} currentTime={this.currentTime.bind(this)} EndExam={this.EndExam.bind(this)}  type=\"mobile\" />\r\n\t\t\t\t  }\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{this.renderSidePanel()}\r\n\t\t\t\t{loading ?  <Loader />: this.renderQuestions()}\r\n\t\t\t</div>\r\n\t\t)\t\r\n    }\r\n\t\r\n\trenderSidePanel() {\r\n\t\tlet portlet = JSON.parse(localStorage.getItem('portlet')) || [];\r\n\t\treturn (\r\n\t\t\t<div id=\"QuestionsSidenav\" className=\"QuestionsSidenav\">\r\n\t\t\t\t\t <div className={`test-header ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n\t\t\t\t\t  <h4>Review</h4> \r\n\t\t\t\t\t  <div className=\"sidenavclose\" id=\"sidenavclose\">\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={ faTimesCircle } onClick={this.closeNav} />\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"questionspanelno\">\r\n\t\t\t\t\t     <p>Tap on the Question no. you want to review </p>\r\n\t\t\t\t\t\t   <div className=\"questionstatus\">\r\n\t\t\t\t\t\t\t <span className=\"answered\">Answered</span> \r\n\t\t\t\t\t\t\t <span className=\"marked\">Marked</span>\r\n\t\t\t\t\t\t\t <span className=\"markedanswered\">Marked & Answered</span>\r\n\t\t\t\t\t\t\t <span className=\"notanswered\">Not Answered</span>\r\n\t\t\t\t\t\t\t <span className=\"notvisited\">Not Visited</span>\r\n\t\t\t\t\t\t   </div>\r\n\t\t\t\t\t\t   <div className=\"questionsnumbers\">\r\n\t\t\t\t\t         {this.renderSidePanelNumbers()}\r\n\t\t\t\t\t\t   </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n    }\r\n\t\r\n\trenderSidePanelNumbers() {\r\n\t\t\r\n\t\tlet list = [];\r\n\t\tlet question = this.state.questions;\r\n\t\t//console.log(question);\r\n\t\tfor(let i=0; i<question.length; i++){\r\n\t\t\tif(question[i].mark){\r\n\t\t\t  list.push(<Button onClick={(e) => this.showQuestion(e,i)} className={question[i].mark}>{i+1} </Button>);\r\n\t\t\t}else if(question[i].class){\r\n\t\t\t\tlist.push(<Button onClick={(e) => this.showQuestion(e,i)} className={question[i].class}>{i+1} </Button>);\r\n\t\t\t}else{\r\n\t\t\t  list.push(<Button onClick={(e) => this.showQuestion(e,i)} className=\"\">{i+1} </Button>);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn <div className=\"questions-list\">{list}</div>;\t\t    \r\n\t}\r\n\r\n\trenderQuestions() {\r\n\t\tlet button = null;\r\n\t\tlet text = \"\";\r\n\t\tlet type = \"\";\r\n\t\t\r\n\t\treturn  <div className=\"questions_list\"> \r\n\t\t{\r\n\t\t  this.state.questions.map((item, index) => {\r\n\t\t    if(index===this.state.question_num){\r\n\t\t\t  let category = this.state.questions[index].questionCategory;\r\n\t\t\t  if (this.state.questions[index].mark===\"markedanswered\" || this.state.questions[index].mark===\"marked\") {\r\n\t\t\t\tbutton = <Button variant=\"danger\" onClick={this.UNMarkQuestion}>UNMARK</Button>\r\n\t\t\t  }else {\r\n\t\t\t\tbutton = <Button variant=\"primary\" onClick={this.MarkQuestion}>MARK</Button>\r\n\t\t\t  }\r\n\t\t\t  if(category==1){\r\n\t\t\t\ttype = \"multiple_opt\";\r\n\t\t\t  }else if(category==26){\r\n                type = \"single_opt\";\r\n\t\t\t  }else if(category==4 || category==7 || category==5){\r\n\t\t\t\ttype = \"num_opt\";\r\n\t\t\t\tif(this.state.questions[index].answered){\r\n                    text = <input type=\"number\"  name=\"numberic\" defaultValue={this.state.questions[index].answered}  onKeyUp={this.handleKeyUp} />;\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttext = <input type=\"number\" name=\"numberic\" defaultValue=\"\" onKeyUp={this.handleKeyUp} />;\r\n\t\t\t\t}\r\n\t\t\t  }else if(category==0){\r\n\t\t\t\ttype = \"num_opt\";\r\n\t\t\t\tthis.state.questions[index].choices = [];\r\n\t\t\t\tif(this.state.questions[index].answered){\r\n                    text = <textarea name=\"numberic\" defaultValue={this.state.questions[index].answered}  onKeyUp={this.handleKeyUp} />;\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttext = <textarea name=\"numberic\" defaultValue=\"\" onKeyUp={this.handleKeyUp} />;\r\n\t\t\t\t} \r\n\t\t\t  \r\n\t\t\t  }else if(category==2){\r\n\t\t\t\tlet list = []; let opt = [];let match = [];\r\n\t\t\t\tlet aplpha =  ['A','B','C','D','E','F'];\r\n\t\t\t\tlet aplpha2 =  ['P','Q','R','S','T','U'];\r\n\t\t\t\tvar choices = this.state.questions[index].choices;\r\n\t\t\t\tvar matches = this.state.questions[index].matches;\r\n\t\t\t\tvar answered = this.state.questions[index].answered || [];\r\n\t\t\t\tvar match_div = \"\";\tvar match_opt = \"\";\t\t\t\t\r\n\t\t\t\tfor(let i=0;i<choices.length;i++){\r\n\t\t\t\t\tlist.push(<tr><td>{aplpha[i]}. </td><td><div dangerouslySetInnerHTML={{ __html:choices[i].name}} /></td><td>{aplpha2[i]}. </td><td><div dangerouslySetInnerHTML={{ __html:matches[i].name}} /></td></tr>);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor(let c=0; c<choices.length; c++) {\r\n\t\t\t\topt.push(<label className=\"option_container\"><span className=\"mark\">{aplpha[c]}. </span></label>);\r\n\t\t\t\t\tfor(let m=0; m<matches.length; m++) {\r\n\t\t\t\t\t    if(c==0){\r\n\t\t\t\t\t\t  match.push(<label className=\"option_container\"><span className=\"mark\">{aplpha2[m]} </span></label>);\r\n\t\t\t\t\t\t}\r\n                        if(answered.includes(choices[c].id+':'+matches[m].id)){\r\n\t\t\t\t\t\t\topt.push(<label className=\"option_container\"><input defaultChecked=\"true\" className=\"option_checkbox\" type=\"checkbox\" value={choices[c].id+':'+matches[m].id}  onClick={this.getCheckeboxValue.bind(this)}/><span className=\"checkmark\"></span></label>);\r\n\t\t\t\t\t\t}else{\r\n                            opt.push(<label className=\"option_container\"><input className=\"option_checkbox\" type=\"checkbox\" value={choices[c].id+':'+matches[m].id}  onClick={this.getCheckeboxValue.bind(this)}/><span className=\"checkmark\"></span></label>);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t}\r\n\t\t\t\t\topt.push(<br/>);\r\n\t\t\t\t\topt.push(<br/>);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t    match_opt = <div className=\"match_opts\"><p className=\"option\"><label className=\"option_container\"><span className=\"mark\"></span></label>{match}<br/><br/>{opt}</p></div>\r\n\t\t\t\t\r\n\t\t\t\tmatch_div = <table><tr><th></th><th><b>column I</b> </th><th></th><th><b>column II</b></th></tr>{list}</table>\r\n\t\t\t  }\r\n\t\t\t  return (\r\n\t\t\t     <div>\r\n\t\t\t      <div className=\"questionHeader\">\r\n\t\t\t\t       <div className=\"\">{this.state.questions[index].testSectionQuestionMapping.sectionName}</div> \r\n\t\t\t           <span className=\"question_num\">Q : {this.state.questions[index].questionNumber}; &nbsp; </span> \r\n\t\t\t\t\t   <span className=\"question_marks\">Mark : {this.state.questions[index].marks}; &nbsp;</span>\r\n\t\t\t\t\t   <span className=\"question_neg_marks\">Negative Mark : {this.state.questions[index].negativeMarks}; &nbsp;</span>\r\n\t\t\t\t\t   <span className=\"question_panel\"><FontAwesomeIcon icon={ faEye } onClick={this.openNav} /></span>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"question\"  id=\"questions_res\">\r\n\t\t\t\t      <div className=\"questionStatement\" dangerouslySetInnerHTML={{ __html: this.state.questions[index].groupQuestion}}></div>\r\n\t\t\t\t\t  <div className=\"questionStatement\" dangerouslySetInnerHTML={{ __html: this.state.questions[index].statement}}></div>\r\n\t\t\t\t\t  <div id={type}>\r\n\t\t\t\t\t   {match_div}\r\n\t\t\t\t\t   {match_opt}\r\n\t\t\t\t\t   { category!=2 && this.state.questions[index].choices.map((c, i) =>\r\n\t\t\t\t\t\t\t<p className=\"option\">\r\n\t\t\t\t\t\t\t <label className=\"option_container\">\r\n\t\t\t\t\t\t\t  <input className=\"option_checkbox\" id={'checkbox'+i} name=\"option\" defaultChecked={c.checked} type=\"checkbox\" value={c.id} onClick={this.getCheckeboxValue.bind(this)}/>\r\n\t\t\t\t\t\t\t  <span className=\"checkmark\"></span>\r\n\t\t\t\t\t\t\t  <div className=\"optiin_desc\" dangerouslySetInnerHTML={{ __html: c.name }}></div>\r\n\t\t\t\t\t\t\t </label>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t   )}\r\n\t\t\t\t\t   {text}\r\n\t\t\t\t\t   </div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t </div>\r\n\t\t\t\t)\r\n\t\t     }\r\n\t\t  })\t\r\n\t\t}\r\n\t\t  <div class=\"testButtons\">\r\n\t\t\t<Button variant=\"primary\" onClick={this.PrevQuestion} disabled={this.prevDisabled()}>PREV</Button>\r\n\t\t\t<Button variant=\"primary\" onClick={this.NextQuestion} disabled={this.nextDisabled()}>NEXT</Button>\r\n\t\t\t {button}\r\n\t\t\t<Button variant=\"primary\" onClick={this.EndExamAlert}>FINISH</Button>\r\n\t\t\t<Button variant=\"primary\"  style={{display: \"none\"}} id=\"endExam\" onClick={this.EndExam}>End</Button>\r\n\t\t  </div>\r\n\t\t</div>\t \r\n     }\t\r\n}\r\n\r\nexport default TestTaking;","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestResult.js",["1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle, faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Loader from \"./../../_components/loader/loader\";\r\nimport Chart from \"chart.js\";\r\nimport { ReactComponent as PdfIcon } from \"./images/file-lines-solid.svg\";\r\nimport { ReactComponent as TickMark } from \"./images/circle-check-solid.svg\";\r\nimport { ReactComponent as Xmark } from \"./images/circle-xmark-solid.svg\";\r\nimport UserService from \"../../_services/UserService\";\r\nimport Config from \"../../_config/config\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"./testResult.styles.css\";\r\nimport { config } from \"mediaelement\";\r\n\r\nclass TestResult extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      message: null,\r\n      loading: false,\r\n      studentPdfResponse: false,\r\n      pdfUploadStatus: false,\r\n      result: 0,\r\n      displaying: \"barGraphData\",\r\n      showModal: false,\r\n      solutionData: null,\r\n      topRankers: {},\r\n      showTopRankers: false,\r\n      solutionCorrectString: \"\",\r\n      resultUrl: {},\r\n      usingS3: false,\r\n    };\r\n    this.reloadTestResult = this.reloadTestResult.bind(this);\r\n    //this.checkPaperUpload = this.checkPaperUpload.bind(this);\r\n  }\r\n  chartRef = React.createRef();\r\n\r\n  async componentDidMount() {\r\n    console.log(\"top rankers\");\r\n    console.log(this.props.match.params.id, \"top rankers\");\r\n\r\n    const { resultUrl } = this.props.location.state || {};\r\n\r\n    if (this.props.location.state?.showQuestionWiseAnalysis) {\r\n      console.log(\"Hello\");\r\n      this.requestDataNew();\r\n      // this.getTopRankers();\r\n    } else {\r\n      if (resultUrl) {\r\n        this.setState({ resultUrl });\r\n        const { res } = await this.getResultFromSigned(resultUrl);\r\n        if (res) return;\r\n      }\r\n      this.reloadTestResult();\r\n    }\r\n    localStorage.removeItem(\"test_id\");\r\n\r\n    /** compare date validation */\r\n    /*if(this.props.location.state != undefined){\r\n      var testEndDate = this.props.location.state.testEndDate;\r\n      if(testEndDate != \"--\" && testEndDate !=\"\"){\r\n        testEndDate = testEndDate.substring(0, testEndDate.length - 9);\r\n        console.log(testEndDate);\r\n        var to = this.changeDateFormat(testEndDate,'dd/MM/yy','MM/dd/yy');\r\n        var currentDate = new Date()\r\n        var day = currentDate.getDate()\r\n        var month = currentDate.getMonth() + 1\r\n        var year = currentDate.getFullYear()\r\n        var today = month + \"/\" + day + \"/\" + year;\r\n        var from = to + ' 00:00';\r\n        to = today + ' 00:00';\r\n        if(this.isFromBiggerThanTo(from, to)){\r\n          this.setState({\r\n            studentPdfResponse:true\r\n          });\r\n          this.checkPaperUpload();\r\n        }\r\n      }\r\n    }*/\r\n    /** compare date validation */\r\n  }\r\n\r\n  getResultFromSigned = async (resultUrl) => {\r\n    const { viewResult } = resultUrl;\r\n    console.log(resultUrl, \"result\");\r\n    try {\r\n      const res = await ApiService.fetchGetUrl(viewResult);\r\n      console.log(res);\r\n      if (res.data?.message === \"Success\") {\r\n        this.setState({\r\n          loading: false,\r\n          list: res.data.data,\r\n          result: res.data.result,\r\n          message: res.data.message,\r\n          usingS3: true,\r\n        });\r\n\r\n        return { res: true, err: false };\r\n      }\r\n\r\n      return { res: false, err: true };\r\n    } catch (err) {\r\n      console.log(err);\r\n      return { res: false, err: true };\r\n    }\r\n  };\r\n\r\n  getTopRankers = () => {\r\n    const { list } = this.state;\r\n\r\n    if (!list?.summary?.toprankers?.enableStatus) return;\r\n\r\n    ApiService.getTopRankers(this.props.match.params.id)\r\n      .then((res) => {\r\n        console.log(res.data, \"top rankers\");\r\n        this.setState({ topRankers: res.data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    let testResult = this.state.list;\r\n    if (\r\n      (!testResult?.resultViewerMode || testResult?.resultViewerMode == 1) &&\r\n      this.state.displaying === \"barGraphData\"\r\n    ) {\r\n      if (Config.siteTitle === \"unsat\" || Config.siteTitle === \"unsat2\") return;\r\n      this.buildChart();\r\n    }\r\n  }\r\n\r\n  reloadTestResult() {\r\n    var id = this.props.match.params.id;\r\n    this.setState({ loading: true }, () => {\r\n      ApiService.fetchTestResult(id).then((res) => {\r\n        console.log(res);\r\n        if (res.data.data.resultViewerMode === 2) {\r\n          console.log(\"top rankers here\");\r\n          this.getTopRankers();\r\n        }\r\n        this.setState({\r\n          loading: false,\r\n          list: res.data.data,\r\n          result: res.data.result,\r\n          message: res.data.message,\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  checkPaperUpload() {\r\n    var id = this.props.match.params.id;\r\n    this.setState({ loading: true }, () => {\r\n      ApiService.fetchTestPaperUploadStatus(id).then((res) => {\r\n        if (res.data.status == 1) {\r\n          this.setState({\r\n            loading: false,\r\n            url: res.data.url,\r\n            pdfUploadStatus: false,\r\n          });\r\n        } else {\r\n          if (this.state.studentPdfResponse == true) {\r\n            this.setState({\r\n              pdfUploadStatus: true,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              pdfUploadStatus: false,\r\n            });\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  routeChange(pathname, state) {\r\n    console.log(pathname, state);\r\n    if (state) {\r\n      console.log(\"here\");\r\n      return this.props.history.push({\r\n        pathname,\r\n        state,\r\n      });\r\n    }\r\n    this.props.history.push(pathname);\r\n  }\r\n\r\n  changeDateFormat(value, inputFormat, outputFormat) {\r\n    let outputSplitter = \"/\";\r\n    let strOutputFormat = outputFormat\r\n      .split(outputSplitter)\r\n      .map((i) => i.toUpperCase());\r\n    if (strOutputFormat.length != 3) {\r\n      strOutputFormat = outputFormat.split(\"-\");\r\n      outputSplitter = \"-\";\r\n    }\r\n\r\n    if (strOutputFormat.length != 3)\r\n      throw new Error(\"wrong output format splitter :(\");\r\n\r\n    let date = null;\r\n\r\n    if (value instanceof Date) {\r\n      date = {\r\n        [\"YYYY\"]: value.getUTCFullYear(),\r\n        [\"MM\"]: value.getMonth() + 1,\r\n        [\"DD\"]: value.getDate(),\r\n      };\r\n    }\r\n\r\n    if (typeof value == \"string\") {\r\n      let inputSplitter = \"/\";\r\n\r\n      var strInputFormat = inputFormat\r\n        .split(inputSplitter)\r\n        .map((i) => i.toUpperCase());\r\n      if (strInputFormat.length != 3) {\r\n        strInputFormat = inputFormat.split(\"-\");\r\n        inputSplitter = \"-\";\r\n      }\r\n\r\n      if (strInputFormat.length != 3)\r\n        throw new Error(\"wrong input format splitter :(\");\r\n\r\n      let dateElements = value.split(inputSplitter);\r\n      if (dateElements.length != 3) throw new Error(\"wrong value :(\");\r\n\r\n      date = {\r\n        [strInputFormat[0]]: dateElements[0],\r\n        [strInputFormat[1]]: dateElements[1],\r\n        [strInputFormat[2]]: dateElements[2],\r\n      };\r\n    }\r\n\r\n    if (!date) throw new Error(\"unsupported value type:(\");\r\n\r\n    let result =\r\n      date[strOutputFormat[0]] +\r\n      outputSplitter +\r\n      date[strOutputFormat[1]] +\r\n      outputSplitter +\r\n      date[strOutputFormat[2]];\r\n\r\n    return result;\r\n  }\r\n\r\n  isFromBiggerThanTo(dtmfrom, dtmto) {\r\n    return new Date(dtmfrom).getTime() >= new Date(dtmto).getTime();\r\n  }\r\n\r\n  closeWindow() {\r\n    window.opener?.location?.reload();\r\n    window.close();\r\n  }\r\n\r\n  logout = () => {\r\n    this.props.history.push({\r\n      pathname: \"/logout\",\r\n      state: { redirectRoute: \"/loginwithmobile\" },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let portlet = JSON.parse(localStorage.getItem(\"portlet\")) || [];\r\n    var pid = this.props.match.params.pid;\r\n    const { loading } = this.state;\r\n    if (this.state.result == 1) {\r\n      return (\r\n        <div className=\"testlist\">\r\n          {\r\n            <Container fluid>\r\n              <div\r\n                className={`module-header-step2 ${\r\n                  portlet.class ? portlet.class : \"orange-card\"\r\n                }`}\r\n              >\r\n                <div className=\"\">\r\n                  <div className=\"back\">\r\n                    {Config.siteTitle === \"unsat\" ||\r\n                    Config.siteTitle === \"unsat2\" ? (\r\n                      this.state.displaying === \"questionWiseAnalysis\" ? (\r\n                        <FontAwesomeIcon\r\n                          icon={faArrowLeft}\r\n                          onClick={() =>\r\n                            this.props.history.replace(\"/testdetails\")\r\n                          }\r\n                        />\r\n                      ) : (\r\n                        <div className=\"logout-wrapper\">\r\n                          <span\r\n                            className=\"test-result-logout\"\r\n                            onClick={this.logout}\r\n                          >\r\n                            Logout\r\n                          </span>\r\n                        </div>\r\n                      )\r\n                    ) : pid == 1 || pid === \"null\" ? (\r\n                      <FontAwesomeIcon\r\n                        icon={faTimesCircle}\r\n                        onClick={() => this.closeWindow()}\r\n                      />\r\n                    ) : (\r\n                      <FontAwesomeIcon\r\n                        icon={faArrowLeft}\r\n                        onClick={this.props.history.goBack}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <h4>Test Result {this.state.usingS3 && \"*\"}</h4>\r\n                </div>\r\n              </div>\r\n              {loading ? <Loader /> : this.renderTestResult()}\r\n            </Container>\r\n          }\r\n        </div>\r\n      );\r\n    } else {\r\n      let msg = (\r\n        <div dangerouslySetInnerHTML={{ __html: this.state.message }} />\r\n      );\r\n      return (\r\n        <div className=\"testlist\">\r\n          {\r\n            <Container fluid>\r\n              <div\r\n                className={`module-header-step2 ${\r\n                  portlet.class ? portlet.class : \"orange-card\"\r\n                }`}\r\n              >\r\n                <div className=\"AnalysisReport\">\r\n                  <div className=\"back\">\r\n                    {/* <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} /> */}\r\n                    {(Config.siteTitle === \"unsat\" ||\r\n                      Config.siteTitle === \"unsat2\") &&\r\n                    this.state.resultUrl.detailedProfiling ? (\r\n                      <div className=\"logout-wrapper\">\r\n                        <span\r\n                          className=\"test-result-logout\"\r\n                          onClick={this.logout}\r\n                        >\r\n                          Logout\r\n                        </span>\r\n                      </div>\r\n                    ) : pid == 1 || pid === \"null\" ? (\r\n                      <FontAwesomeIcon\r\n                        icon={faTimesCircle}\r\n                        onClick={() => this.closeWindow()}\r\n                      />\r\n                    ) : (\r\n                      <FontAwesomeIcon\r\n                        icon={faArrowLeft}\r\n                        onClick={this.props.history.goBack}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <h4>Online Tests Result</h4>\r\n                </div>\r\n              </div>\r\n              <div className=\"testResult\">\r\n                {this.state.loading ? <Loader /> : msg}\r\n                {this.state.pdfUploadStatus == true && (\r\n                  <button\r\n                    className={`resultbtn ${\r\n                      portlet.class ? portlet.class : \"orange-card\"\r\n                    }`}\r\n                    onClick={() =>\r\n                      this.routeChange(\r\n                        \"/test/upload/\" + this.props.match.params.id\r\n                      )\r\n                    }\r\n                  >\r\n                    Upload PDF\r\n                  </button>\r\n                )}\r\n              </div>\r\n              <div className=\"testgraph\" style={{ display: \"none\" }}>\r\n                <canvas id=\"myChart\" ref={this.chartRef} />\r\n              </div>\r\n            </Container>\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderTestResult() {\r\n    let testResult = this.state.list;\r\n    if (\r\n      (testResult?.resultViewerMode && testResult?.resultViewerMode == 2) ||\r\n      this.state.displaying === \"questionWiseAnalysis\"\r\n    ) {\r\n      return this.renderTestResultView2();\r\n    } else {\r\n      return this.renderTestResultView1();\r\n    }\r\n  }\r\n\r\n  sortQuestionWiseAnalysis = (sections) => {\r\n    if (!sections) return [];\r\n    const newSections = sections.map((section) => {\r\n      section.questions = section?.questions?.sort((questOne, questTwo) => {\r\n        if (\r\n          (parseInt(questOne.questionOrder) || 0) >=\r\n          (parseInt(questTwo.questionOrder) || 0)\r\n        )\r\n          return 1;\r\n        else return -1;\r\n      });\r\n      console.log(section.questions);\r\n      return section;\r\n    });\r\n    console.log(newSections);\r\n    return newSections;\r\n  };\r\n\r\n  requestDataNew = async () => {\r\n    this.setState({ usingS3: false });\r\n    const { resultUrl } = this.state;\r\n    const { detailedProfiling } = resultUrl || {};\r\n    const id = this.props.match.params.id;\r\n\r\n    this.setState({ loading: true, list: [], message: null, result: 0 });\r\n    if (detailedProfiling) {\r\n      try {\r\n        console.log(\"here success\");\r\n\r\n        const res = await ApiService.fetchGetUrl(detailedProfiling);\r\n        if (res.data?.message === \"Success\") {\r\n          let { data } = res.data;\r\n          console.log(data);\r\n          if (data?.summary?.setId > 0) {\r\n            data.sections = this.sortQuestionWiseAnalysis(data?.sections);\r\n          }\r\n          return this.setState(\r\n            {\r\n              loading: false,\r\n              list: data,\r\n              result: res.data.result,\r\n              message: res.data.message,\r\n              displaying: \"questionWiseAnalysis\",\r\n              usingS3: true,\r\n            },\r\n            () => {\r\n              this.getTopRankers();\r\n            }\r\n          );\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    try {\r\n      console.log(\"here success\");\r\n      const res = await ApiService.questionWiseAnalysis(id);\r\n      console.log(res);\r\n      let { data } = res.data;\r\n      console.log(data);\r\n      if (data?.summary?.setId > 0) {\r\n        data.sections = this.sortQuestionWiseAnalysis(data?.sections);\r\n      }\r\n      this.setState(\r\n        {\r\n          loading: false,\r\n          list: data,\r\n          result: res.data.result,\r\n          message: res.data.message,\r\n          displaying: \"questionWiseAnalysis\",\r\n        },\r\n        () => {\r\n          this.getTopRankers();\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  openResultPdf = () => {\r\n    let enquiryId = UserService.getEnquiryId();\r\n    let token = UserService.getToken();\r\n    let id = this.props.match.params.id;\r\n    // window.open();\r\n    // https://triangles.edusquares.com/triangles/offlineTestPaper.do?reqCode=viewPaper&testId=178&enquiryId=35076\r\n    window.open(\r\n      `${Config.siteUrl}${Config.siteTitle}/offlineTestPaper.do?reqCode=viewPaper&testId=${id}&enquiryId=${enquiryId}&token=${token}`\r\n    );\r\n  };\r\n\r\n  downloadSolution = (type) => {\r\n    console.log(type);\r\n    window.open(this.state.list?.summary[type]);\r\n  };\r\n\r\n  openSolution = (question) => {\r\n    console.log(question);\r\n    ApiService.viewSolution(question?.testId, question?.index, question?.id)\r\n      .then((res) => {\r\n        this.setState(\r\n          {\r\n            solutionData: res.data,\r\n            solutionCorrectString: question?.correctString || \"\",\r\n          },\r\n          () => {\r\n            this.setState({\r\n              showModal: true,\r\n            });\r\n          }\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          showModal: true,\r\n        });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  closeSolution = () => {\r\n    this.setState({\r\n      showModal: false,\r\n      solutionCorrectString: \"\",\r\n    });\r\n  };\r\n\r\n  renderRanks = () => {\r\n    const { testRank, schoolRank, batchRank, studentGrade, externalResult } =\r\n      this.state.list?.barGraphData[0] || {};\r\n\r\n    let externResultArr = [];\r\n\r\n    if (externalResult) externResultArr = externalResult.split(\",\");\r\n\r\n    const [onlineCode, onlineDisc, offlineCode, offlineDisc] = externResultArr;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"test-result-ranks\">\r\n          {testRank && (\r\n            <div className=\"test-result-rank-wrapper\">\r\n              <span className=\"test-result-rank-heading\">All India Rank</span>\r\n              <span className=\"test-details-fancy test-details-rank-value\">\r\n                {testRank}\r\n              </span>\r\n            </div>\r\n          )}\r\n          {schoolRank && (\r\n            <div className=\"test-result-rank-wrapper\">\r\n              <span className=\"test-result-rank-heading\">State Rank</span>\r\n              <span className=\"test-details-fancy test-details-rank-value\">\r\n                {schoolRank}\r\n              </span>\r\n            </div>\r\n          )}\r\n          {batchRank && (\r\n            <div className=\"test-result-rank-wrapper\">\r\n              <span className=\"test-result-rank-heading\">City Rank</span>\r\n              <span className=\"test-details-fancy test-details-rank-value\">\r\n                {batchRank}\r\n              </span>\r\n            </div>\r\n          )}\r\n          {studentGrade && (\r\n            <div className=\"test-result-rank-wrapper\">\r\n              <span className=\"test-result-rank-heading\">Scholarship Code</span>\r\n              <span className=\"test-details-fancy test-details-rank-value\">\r\n                {studentGrade}\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {externalResult && (\r\n          <div className=\"test-result-rank-wrapper\">\r\n            <span className=\"test-rank-scholarship\">\r\n              <span className=\"test-rank-bold\">Congratulations! 🎉</span>\r\n              <br />\r\n              <span\r\n                className=\"test-reult-clickable\"\r\n                onClick={() => (window.location = \"https://www.unacademy.com\")}\r\n              >\r\n                You have won{\" \"}\r\n                <span className=\"test-rank-bold\">\r\n                  {onlineDisc}% scholarship\r\n                </span>{\" \"}\r\n                on Unacademy Plus subscription. Use code:{\" \"}\r\n                <span className=\"test-result-fancy test-rank-bold\">\r\n                  {onlineCode}\r\n                </span>{\" \"}\r\n                to claim it.\r\n              </span>\r\n              {offlineCode && (\r\n                <span\r\n                  className=\"test-reult-clickable\"\r\n                  onClick={() =>\r\n                    (window.location = \"https://unacademy.com/offline/centres\")\r\n                  }\r\n                >\r\n                  <br /> You have won{\" \"}\r\n                  <span className=\"test-rank-bold\">\r\n                    {offlineDisc}% scholarship\r\n                  </span>{\" \"}\r\n                  on Unacademy Centre subscription. Use code:{\" \"}\r\n                  <span className=\"test-result-fancy test-rank-bold\">\r\n                    {offlineCode}\r\n                  </span>{\" \"}\r\n                  to claim it.\r\n                </span>\r\n              )}\r\n            </span>\r\n            {/* <span className=\"test-result-rank-heading\">Scholarship Code</span> */}\r\n            {/* <span className=\"test-details-fancy test-details-rank-value\"> */}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  renderTestResultView1() {\r\n    let data = this.state.list;\r\n    let portlet = JSON.parse(localStorage.getItem(\"portlet\")) || [];\r\n    const RenderRanks = this.renderRanks;\r\n    return (\r\n      <>\r\n        <div className=\"test-result-logo-container\">\r\n          <img\r\n            className=\"test-result-logo\"\r\n            src={`https://webfront.edusquares.com/${Config.siteTitle}/files/logos/logo.png`}\r\n            alt=\"logo\"\r\n          />\r\n        </div>\r\n        {<RenderRanks />}\r\n        {this.renderCard()}\r\n        <div className=\"testResult\">\r\n          {/* {data.showAnalysisButtons==1 && <button className={`resultbtn ${portlet.class ? portlet.class : 'orange-card'}`}  onClick={() => this.routeChange('/test-result-detail/'+this.props.match.params.id)} >Detailed Profiling</button>} */}\r\n          {data.showAnalysisButtons == 1 && (\r\n            <button\r\n              className={`resultbtn ${\r\n                portlet.class ? portlet.class : \"orange-card\"\r\n              }`}\r\n              onClick={() =>\r\n                this.routeChange(\r\n                  \"/detailed-profiling/\" + this.props.match.params.id,\r\n                  this.state.resultUrl.detailedProfiling\r\n                    ? { resultUrl: this.state.resultUrl }\r\n                    : null\r\n                )\r\n              }\r\n            >\r\n              Detailed Profiling\r\n            </button>\r\n          )}\r\n          {/* {data.showAnalysisButtons==1 && <button className={`resultbtn ${portlet.class ? portlet.class : 'orange-card'}`}  onClick={() => this.routeChange('/test-result-question-wise/'+this.props.match.params.id)} >Question Wise Analysis</button>} */}\r\n          {data.showAnalysisButtons == 1 && (\r\n            <button\r\n              className={`resultbtn ${\r\n                portlet.class ? portlet.class : \"orange-card\"\r\n              }`}\r\n              onClick={this.requestDataNew}\r\n            >\r\n              Question Wise Analysis\r\n            </button>\r\n          )}\r\n        </div>\r\n        {/* <h4>Your Performance in Test</h4> */}\r\n        {Config.siteTitle === \"unsat\" ||\r\n        Config.siteTitle === \"unsat2\" ? null : (\r\n          <div className=\"testResult\">\r\n            <div className=\"result_card_list\">\r\n              <div className=\"testgraph\">\r\n                <canvas id=\"myChart\" ref={this.chartRef} height=\"230vh\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  displayRank = () => {\r\n    this.setState({ showTopRankers: true });\r\n  };\r\n\r\n  closeRanks = () => {\r\n    this.setState({ showTopRankers: false });\r\n  };\r\n\r\n  renderTestResultView2() {\r\n    let result = this.state.list;\r\n    let user = JSON.parse(localStorage.getItem(\"user\"));\r\n    let portlet = JSON.parse(localStorage.getItem(\"portlet\")) || [];\r\n    return (\r\n      <>\r\n        <div className=\"testResult\">\r\n          <div className=\"result_card_list\">\r\n            <div className=\"test-name-div\">\r\n              <h4>{result.testName}</h4>\r\n              {this.state.topRankers.rankers?.map((data) => {\r\n                if (user.studentCode === data.studentCode) {\r\n                  return (\r\n                    <h6 className=\"rank-info\">\r\n                      {\" \"}\r\n                      Your Rank is{\" \"}\r\n                      {`${data.schoolRank}/${this.state.topRankers.rankers?.length}`}\r\n                    </h6>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </div>\r\n            {this.state.list?.summary?.toprankers?.enableStatus && (\r\n              <Button onClick={this.displayRank}>Top Rankers</Button>\r\n            )}\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5\">\r\n              <div className=\"test_summary_card blue-card test-result-mg\">\r\n                <h4>Summary</h4>\r\n                <table>\r\n                  <tr>\r\n                    <th className=\"text-center summary-box\">Total Questions</th>\r\n                    <th className=\"text-center summary-box\">Total Marks</th>\r\n                    <th className=\"text-center summary-box\">Your Score</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"text-center\">\r\n                      {result.summary.numberOfQuestions}\r\n                    </td>\r\n                    <td className=\"text-center\">{result.summary.totalMarks}</td>\r\n                    <td className=\"text-center\">\r\n                      <span style={{ fontWeight: \"bolder\" }}>\r\n                        {result.summary.marksObtained}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n              <div className=\"test_summary_card blue-card test-result-mg\">\r\n                <h4>Attempt Summary</h4>\r\n                <table>\r\n                  <tr>\r\n                    <th className=\"text-center summary-box\">Correct</th>\r\n                    <th className=\"text-center summary-box\">Wrong</th>\r\n                    <th className=\"text-center summary-box\">Unattempted</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"text-center\">\r\n                      {result.summary.correctQuestions}\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      {result.summary.wrongQuestions}\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      {result.summary.unattemptedQuestions}\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <br />\r\n          <br />\r\n          {result.sections &&\r\n            result.sections.map((section, index) => {\r\n              return (\r\n                <>\r\n                  {this.state.list?.summary?.solutions && (\r\n                    <span\r\n                      className=\"view-solution\"\r\n                      onClick={() => this.downloadSolution(\"solutions\")}\r\n                    >\r\n                      Download - Solutions{\" \"}\r\n                    </span>\r\n                  )}\r\n                  {this.state.list?.summary?.testPaper && (\r\n                    <span\r\n                      className=\"view-solution\"\r\n                      onClick={() => this.downloadSolution(\"testPaper\")}\r\n                    >\r\n                      {\" \"}\r\n                      || Download - Test Paper{\" \"}\r\n                    </span>\r\n                  )}\r\n                  {this.state.list?.summary?.testPaperWithSolutions && (\r\n                    <span\r\n                      className=\"view-solution\"\r\n                      onClick={() =>\r\n                        this.downloadSolution(\"testPaperWithSolutions\")\r\n                      }\r\n                    >\r\n                      {\" \"}\r\n                      || Download - Test Paper With Solution{\" \"}\r\n                    </span>\r\n                  )}\r\n                  {this.state.list.needsManualEvaluation && (\r\n                    <span\r\n                      className=\"view-solution\"\r\n                      onClick={this.openResultPdf}\r\n                    >\r\n                      {\" \"}\r\n                      || Your Answer Script\r\n                    </span>\r\n                  )}\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <div\r\n                        style={{ overflowY: \"scroll\" }}\r\n                        className=\"test_summary_card blue-card\"\r\n                      >\r\n                        <h4>\r\n                          {section.sectionName} /{\" \"}\r\n                          {this.state.list?.summary?.setName}\r\n                        </h4>\r\n                        <table>\r\n                          <tr>\r\n                            <th className=\"text-center\">#</th>\r\n                            {result.tagTypes &&\r\n                              result.tagTypes.map((tagType, tagTypeIndex) => {\r\n                                return (\r\n                                  <>\r\n                                    <th className=\"text-center\">\r\n                                      {tagType.name}\r\n                                    </th>\r\n                                  </>\r\n                                );\r\n                              })}\r\n                            {/* <th className=\"text-center\">Set</th> */}\r\n                            <th className=\"text-center\">Your Response</th>\r\n                            <th className=\"text-center\">Correct Answer</th>\r\n                            <th className=\"text-center\">Score</th>\r\n                            <th className=\"text-center\">\r\n                              View{\" \"}\r\n                              {this.state.list.needsManualEvaluation && (\r\n                                <PdfIcon\r\n                                  onClick={this.openResultPdf}\r\n                                  className=\"pdf-icon\"\r\n                                />\r\n                              )}\r\n                            </th>\r\n                          </tr>\r\n                          {section.questions &&\r\n                            section.questions.map((question, questionIndex) => {\r\n                              return (\r\n                                <>\r\n                                  <tr>\r\n                                    <td className=\"text-center\">\r\n                                      {question.questionOrder || question.index}\r\n                                    </td>\r\n                                    {question.tags &&\r\n                                      question.tags.map(\r\n                                        (\r\n                                          questioTagType,\r\n                                          questioTagTypesIndex\r\n                                        ) => {\r\n                                          return (\r\n                                            <>\r\n                                              <td className=\"text-center\">\r\n                                                {questioTagType.tags &&\r\n                                                  questioTagType.tags.map(\r\n                                                    (\r\n                                                      questionTag,\r\n                                                      questionTagsIndex\r\n                                                    ) => {\r\n                                                      return (\r\n                                                        <>\r\n                                                          <span className=\"text-center\">\r\n                                                            {questionTag.name}\r\n                                                          </span>\r\n                                                        </>\r\n                                                      );\r\n                                                    }\r\n                                                  )}\r\n                                              </td>\r\n                                            </>\r\n                                          );\r\n                                        }\r\n                                      )}\r\n                                    {/* <td className=\"text-center\">\r\n                                      {this.state.list?.summary?.setName}\r\n                                    </td> */}\r\n                                    <td className=\"text-center\">\r\n                                      {question.attemptedString || \"--\"}\r\n                                    </td>\r\n                                    <td className=\"text-center\">\r\n                                      {question.correctString}\r\n                                    </td>\r\n                                    <td className=\"text-center\">\r\n                                      {question.marks}/\r\n                                      {parseFloat(question.actualMarks)}\r\n                                    </td>\r\n                                    <td className=\"text-center\">\r\n                                      <button\r\n                                        onClick={() =>\r\n                                          this.openSolution(question)\r\n                                        }\r\n                                        className={\r\n                                          \"download \" +\r\n                                          (question.attemptStatus == 1\r\n                                            ? \" green-card\"\r\n                                            : question.attemptStatus == -1\r\n                                            ? \" blue-card\"\r\n                                            : \" orange-card\")\r\n                                        }\r\n                                      >\r\n                                        Solution\r\n                                      </button>\r\n                                    </td>\r\n                                  </tr>\r\n                                </>\r\n                              );\r\n                            })}\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <br />\r\n                </>\r\n              );\r\n            })}\r\n          <button\r\n            className={`resultbtn ${\r\n              portlet.class ? portlet.class : \"orange-card\"\r\n            }`}\r\n            onClick={() =>\r\n              this.routeChange(\r\n                \"/detailed-profiling/\" + this.props.match.params.id,\r\n                this.state.resultUrl.detailedProfiling\r\n                  ? { resultUrl: this.state.resultUrl }\r\n                  : null\r\n              )\r\n            }\r\n          >\r\n            Detailed Profiling\r\n          </button>\r\n        </div>\r\n        <Modal show={this.state.showModal} onHide={this.closeSolution}>\r\n          <Modal.Header className=\"text-uppercase\" closeButton>\r\n            <Modal.Title></Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {this.state.solutionData ? (\r\n              <>\r\n                <h4>Question: </h4>\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: this.state.solutionData?.questionStatement,\r\n                  }}\r\n                ></div>\r\n                {this.state.solutionData?.choiceGroup1.map((choice, i) => (\r\n                  <div>\r\n                    <span className=\"solution-choice-string\">\r\n                      {choice.choiceString}\r\n                    </span>\r\n                    <div\r\n                      className=\"solution-choice\"\r\n                      key={i}\r\n                      dangerouslySetInnerHTML={{ __html: choice.choiceValue }}\r\n                    ></div>\r\n                    {this.state.solutionCorrectString ===\r\n                    this.state.solutionData?.studentResponse ? (\r\n                      choice.choiceString ===\r\n                        this.state.solutionData?.studentResponse && (\r\n                        <TickMark className=\"success-option\" />\r\n                      )\r\n                    ) : (\r\n                      <>\r\n                        {choice.choiceString ===\r\n                          this.state.solutionCorrectString && (\r\n                          <TickMark className=\"correct-option\" />\r\n                        )}\r\n                        {choice.choiceString ===\r\n                          this.state.solutionData?.studentResponse && (\r\n                          <Xmark className=\"wrong-option\" />\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n                <div\r\n                  className=\"answer-box\"\r\n                  style={{\r\n                    color: `var(${\r\n                      this.state.solutionCorrectString ===\r\n                      this.state.solutionData?.studentResponse\r\n                        ? \"--success\"\r\n                        : \"--danger\"\r\n                    })`,\r\n                  }}\r\n                >\r\n                  <span>Correct Answer : </span>{\" \"}\r\n                  <span>{this.state.solutionCorrectString}</span> |{\" \"}\r\n                  <span>My Answer : </span>{\" \"}\r\n                  <span>{this.state.solutionData?.studentResponse}</span>\r\n                </div>\r\n                <h4>Solution: </h4>\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: this.state.solutionData?.solution,\r\n                  }}\r\n                ></div>\r\n              </>\r\n            ) : (\r\n              <h5>Data is not uploaded</h5>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"danger\"\r\n              className=\"text-uppercase\"\r\n              onClick={this.closeSolution}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal\r\n          size=\"xl\"\r\n          show={this.state.showTopRankers}\r\n          onHide={this.closeRanks}\r\n        >\r\n          <Modal.Header className=\"text-uppercase\" closeButton>\r\n            <Modal.Title>\r\n              <h3>Top Ranks</h3>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {this.state.topRankers.rankers?.length ? (\r\n              <div className=\"rank-wrapper\">\r\n                <div className=\"rank-div rank-heading\">\r\n                  {this.state.list?.summary?.toprankers?.columns?.map(\r\n                    (column) => (\r\n                      <div className=\"rank-details\">\r\n                        <h5>{column?.DisplayLabel}</h5>\r\n                      </div>\r\n                    )\r\n                  )}\r\n                </div>\r\n                {this.state.topRankers?.rankers.map((data) => (\r\n                  <div className=\"rank-div\">\r\n                    {this.state.list?.summary?.toprankers?.columns?.map(\r\n                      (column) => (\r\n                        <div className=\"rank-details\">\r\n                          <h6>{data[column.property]}</h6>\r\n                        </div>\r\n                      )\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <h1>No data Found</h1>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"danger\"\r\n              className=\"text-uppercase\"\r\n              onClick={this.closeRanks}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderCard() {\r\n    let data = this.state.list;\r\n    if (typeof data !== \"undefined\" || data != null) {\r\n      return (\r\n        <div className=\"testResult\">\r\n          <div className=\"result_card_list\">\r\n            {/* <h4>Your Performance in Test</h4> */}\r\n            <table>\r\n              <tr className=\"blue-card\">\r\n                <th>Section</th>\r\n                <th>Marks</th>\r\n                <th>Max</th>\r\n                <th>%</th>\r\n                {Config.siteTitle === \"unsat\" ||\r\n                this.siteTitle === \"unsat2\" ? null : (\r\n                  <>\r\n                    <th>\r\n                      CH{\" \"}\r\n                      <i className=\"test-result-info\">\r\n                        i{\" \"}\r\n                        <span className=\"test-result-legend test-result-right-legend\">\r\n                          Course Highest\r\n                        </span>\r\n                      </i>\r\n                    </th>\r\n                    <th>\r\n                      CA{\" \"}\r\n                      <i className=\"test-result-info\">\r\n                        i{\" \"}\r\n                        <span className=\"test-result-legend test-result-left-legend\">\r\n                          Course Average\r\n                        </span>\r\n                      </i>\r\n                    </th>\r\n                  </>\r\n                )}\r\n              </tr>\r\n              {data.testTableData &&\r\n                data.testTableData\r\n                  .sort((a, b) => a.sortOrder - b.sortOrder)\r\n                  .map((item, index) => {\r\n                    if (item.sortOrder == 100) {\r\n                      item.sectionName = \"Test Total\";\r\n                    }\r\n                    return (\r\n                      <tr>\r\n                        <td>\r\n                          <b>{item.sectionName}</b>\r\n                        </td>\r\n                        <td>{item.marks}</td>\r\n                        <td>{item.totalMarks}</td>\r\n                        <td>{item.percentage.toFixed(2)}</td>\r\n                        {Config.siteTitle === \"unsat\" ||\r\n                        this.siteTitle === \"unsat2\" ? null : (\r\n                          <>\r\n                            {\" \"}\r\n                            <td>{item.testHighestPercentage}</td>\r\n                            <td>{item.testAveragePercentage}</td>{\" \"}\r\n                          </>\r\n                        )}\r\n                      </tr>\r\n                    );\r\n                  })}\r\n            </table>\r\n          </div>\r\n          <br />\r\n          {/* {this.renderLegends()} */}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderLegends() {\r\n    return (\r\n      <div className=\"result_card_list\">\r\n        {/* <h4>Legends</h4> */}\r\n        <table>\r\n          {/* <tr>\r\n            <td>\r\n              <b>Sec</b>\r\n            </td>\r\n            <td>Section</td>\r\n          </tr> */}\r\n          {/* <tr>\r\n            <td>\r\n              <b>Max</b>\r\n            </td>\r\n            <td>Maximum Marks</td>\r\n          </tr> */}\r\n          {/* <tr>\r\n            <td>\r\n              <b>%</b>\r\n            </td>\r\n            <td>Percentage</td>\r\n          </tr> */}\r\n          <tr>\r\n            <td>\r\n              <b>CH</b>\r\n            </td>\r\n            <td>Course Highest</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <b>CA</b>\r\n            </td>\r\n            <td>Course Average</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  buildChart = () => {\r\n    let t1 = {};\r\n    t1.label = \"Marks\";\r\n    t1.data = [];\r\n    t1.backgroundColor = [];\r\n    t1.borderColor = [];\r\n    t1.borderWidth = 1;\r\n\r\n    let t2 = {};\r\n    t2.label = \"Topper\";\r\n    t2.data = [];\r\n    t2.backgroundColor = [];\r\n    t2.borderColor = [];\r\n    t2.borderWidth = 1;\r\n\r\n    let t3 = {};\r\n    t3.label = \"Total\";\r\n    t3.data = [];\r\n    t3.backgroundColor = [];\r\n    t3.borderColor = [];\r\n    t3.borderWidth = 1;\r\n    let labels = [];\r\n    let barChartData = {};\r\n    let data = this.state.list;\r\n    if (typeof data !== \"undefined\" || data != null) {\r\n      data.barGraphData &&\r\n        data.barGraphData.map((item, index) => {\r\n          if (index == 0) {\r\n            item.name = \"Test\";\r\n          }\r\n          labels.push(item.name);\r\n\r\n          t1.data.push(item.marks);\r\n          t1.backgroundColor.push(\"rgba(0, 128 ,0, 0.8)\");\r\n          t1.borderColor.push(\"rgba(0, 128 ,0, 1)\");\r\n\r\n          t2.data.push(item.toppermarks);\r\n          t2.backgroundColor.push(\"rgba(255, 0, 0, 0.8)\");\r\n          t2.borderColor.push(\"rgba(255, 0, 0, 1)\");\r\n\r\n          t3.data.push(item.totalmarks);\r\n          t3.backgroundColor.push(\"rgba(31, 119, 180, 0.8)\");\r\n          t3.borderColor.push(\"rgba(31, 119, 180, 1)\");\r\n        });\r\n\r\n      barChartData = {\r\n        labels: labels,\r\n        datasets: [t1, t2, t3],\r\n      };\r\n\r\n      const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n      myChartRef.height = 700;\r\n      new Chart(myChartRef, {\r\n        type: \"bar\",\r\n        data: barChartData,\r\n        options: {\r\n          legend: {\r\n            display: true,\r\n            position: \"bottom\",\r\n            labels: {\r\n              fontColor: \"#000080\",\r\n            },\r\n          },\r\n          scales: {\r\n            yAxes: [\r\n              {\r\n                display: true,\r\n                ticks: {\r\n                  beginAtZero: true,\r\n                  min: 0,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          responsive: true,\r\n          maintainAspectRatio: true,\r\n        },\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport default TestResult;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\test-details.component.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\analysis\\AnalysisList.js",["1086","1087","1088","1089","1090","1091"],"import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Parser from 'html-react-parser';\r\nimport \"./Analysis.css\";\r\nimport Card from 'react-bootstrap/Card'\r\nimport {getResource} from './../../_actions/resourceActions';\r\nimport Iframe from \"../../_components/iframe/iframe\";\r\nimport doc from \"./images/doc.png\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft,faArrowRight,faFile } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass AnalysisList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  routeChange(path) {\r\n    this.props.history.push({pathname:path,state:{testId:this.props?.location?.state?.testId}});\r\n  }\r\n\r\n  render() {\r\n\t    let portlet = JSON.parse(localStorage.getItem('portlet'));\r\n\t    console.log(this.props.location.state);\r\n\t\treturn  <div className=\"Analysis analysis_details card_list\">  \r\n\t\t\t\t  <div className={`module-header-step2 ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n\t\t\t\t\t  <div className=\"back\">\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <h4>{this.props.location.state.card.name}</h4>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"card\">\r\n\t\t\t\t  {this.renderCard()}\r\n\t\t\t\t  </div>\r\n               </div>\r\n  }\r\n  \r\n  renderCard() {\r\n\t\treturn  <div className=\"card_list\"> \r\n\t\t{\r\n\t\t  this.props.location.state.card.tests && \r\n\t\t  this.props.location.state.card.tests.map((item, index) => {\r\n\t\t\t return ( \r\n\t\t\t\t  <div  key={index} className=\"cardbody\" onClick={() => this.routeChange(\"/test/reports/\"+ item.id)}>\r\n\t\t\t\t     <FontAwesomeIcon className=\"Book\" icon={ faFile } /> \r\n\t\t\t\t\t <h4 className=\"head\">{item.name}</h4>\r\n\t\t\t\t\t <FontAwesomeIcon icon={ faArrowRight }  />\r\n\t\t\t\t  </div> \r\n\t\t\t  )\r\n\t\t  })\r\n       }\r\n       </div>\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default AnalysisList;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test\\TestUploadDetails.js",["1092","1093","1094","1095","1096"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Loader from './../../_components/loader/loader';\r\nimport Parser from 'html-react-parser';\r\nimport dateFormat from 'dateformat';\r\n\r\nclass TestUploadDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: null,\r\n      loading: false,\r\n      result: 0,\r\n      selectedFile: null,\r\n      invalidImage:\"\",\r\n      submitDateBefore:\"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  onFileChange = event => {  \r\n    // Update the state \r\n    var File = event.target.files[0];\r\n    this.setState({ selectedFile: File });\r\n    if (!File) {\r\n      this.setState({ invalidImage: 'Please Upload your handwritten PDF File.' });\r\n      return false;\r\n    }\r\n   \r\n    if (!File.name.match(/\\.(pdf|PDF)$/)) {\r\n      this.setState({ invalidImage: 'Please select PDF File.' });\r\n      return false;\r\n    }else{\r\n      this.setState({ invalidImage: '' });\r\n    }\r\n\r\n  };\r\n\r\n  onFileUpload = () => { \r\n    // Create an object of formData \r\n    const formData = new FormData(); \r\n    // Update the formData object \r\n    if(this.state.selectedFile){\r\n      let portlet = JSON.parse(localStorage.getItem('portlet')) || [];\r\n      //var compltedDate = this.props.location.state.testEndTime;\r\n      var compltedDate = \"\";\r\n      var now = new Date();\r\n      var submitDateBefore =dateFormat(now, \"yyyy-mm-dd 23:59:59\");;\r\n      if(compltedDate){\r\n        var d = new Date(compltedDate);\r\n        var minutes = portlet.params.secondsActiveAfterExamSubmit/60;\r\n        var newtime = d.setMinutes ( d.getMinutes() + minutes );\r\n        submitDateBefore = dateFormat(newtime, \"yyyy-mm-dd HH:MM:ss\");\r\n        //submitDateBefore = \"2020-09-30 23:00:00\";\r\n      }\r\n      formData.append('dateBefore', submitDateBefore);\r\n      formData.append( \r\n        \"answersheetFile\", \r\n        this.state.selectedFile, \r\n        this.state.selectedFile.name,    \r\n      );\r\n      var testId = this.props.match.params.id;\r\n      this.setState({ loading: true }, () => {\r\n        ApiService.uploadFile(formData,testId)\r\n        .then((res) => {\r\n            this.setState({\r\n              loading: false,\r\n            });\r\n            if(res.data.type==\"error\"){\r\n              this.setState({ invalidImage: res.data.message });\r\n            }else if(res.data.type==\"timeout\"){\r\n              this.setState({ invalidImage: portlet.params.TimeoutMessage });\r\n            }else{\r\n              this.props.history.push({ pathname: '/test/pdfview/'+testId, state: { pdfpreview: res.data.url, testEndTime: compltedDate} });\r\n              if(res.data.url){\r\n                this.props.history.push({ pathname: '/test/pdfview/'+testId, state: { pdfpreview: res.data.url, testEndTime: compltedDate} });\r\n              }else{\r\n                //this.props.history.push({ pathname: '/test/pdfview/'+testId, state: { pdfpreview: \"https://tuningfork-live.s3.amazonaws.com/triangles/uploads/study_resource/25-11-19/12/Algebra.pdf\", testEndTime: compltedDate} });\r\n              }\r\n              \r\n            }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({ invalidImage: err });\r\n        });\r\n      });\r\n\r\n       // Details of the uploaded file \r\n       console.log(this.state.selectedFile);        \r\n  \r\n    }else{\r\n      this.setState({ invalidImage: 'Please Upload your handwritten PDF File.' });\r\n    }\r\n    \r\n  }; \r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    let portlet = JSON.parse(localStorage.getItem('portlet')) || [];\r\n    return (\r\n      <div className=\"testlist\">\r\n        {\r\n          <Container fluid>\r\n          <div className=\"learn-header\">\r\n          <div className={`module-header-step2 AnalysisReport ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n\t\t\t\t\t<div className=\"back\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h4>Test Uploads</h4>\r\n          </div>\r\n          </div>\r\n          <div className=\"testResult testFileupload\">\r\n              <div className=\"\">\r\n                <h4>Upload PDF</h4>\r\n                <p class=\"help-block\">Please Scan your handwritten notes into a <b>single</b> PDF and upload it here.</p>\r\n                <div class=\"custom-file\">\r\n                  <input type=\"file\" class=\"custom-file-input\" id=\"customFile\" name=\"answersheetFile\" onChange={this.onFileChange}/>\r\n                  <label class=\"custom-file-label\" for=\"customFile\">{this.state.selectedFile ? this.state.selectedFile.name : 'Choose file'} </label>\r\n                </div>\r\n                <p class=\"error\">{this.state.invalidImage}</p>\r\n                <button type=\"submit\" class=\"btn btn-primary full-width\" onClick={this.onFileUpload}>Upload File</button>\r\n              </div>\r\n          </div>\r\n          {loading ?  <Loader /> : \"\"}\r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default TestUploadDetails;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\analysis\\Analysis.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\resource\\Resource.js",["1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./Resource.css\";\r\nimport announcement from \"./images/announcement.png\";\r\nimport download from \"./images/downloads.png\";\r\nimport ebook from \"./images/ebook.png\";\r\nimport stream from \"./images/stream.png\";\r\nimport reference from \"./images/reference.png\";\r\nimport message from \"./images/message.png\";\r\nimport feedbackform from \"./images/feedbackform.png\";\r\nimport doc from \"./images/doc.png\";\r\nimport download2 from \"./images/download2.png\";\r\nimport reference2 from \"./images/reference2.png\";\r\nimport video from \"./images/video.png\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft,faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Loader from './../../_components/loader/loader';\r\nimport {getResource} from './../../_actions/resourceActions';\r\nimport { faSearch,faVideo } from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Parser from 'html-react-parser';\r\nimport { StudyResourceType } from \"../../_constants/studyResourceTypes\";\r\n\r\nclass Resource extends Component {\r\n   constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\t  loading: true,\r\n\t  isMobile:true,\r\n\t  resource:[]\r\n    };\r\n\tthis.props = {\r\n      loading: true,\r\n\t  resource: []\r\n\t};\r\n\tthis.fetchResources = this.fetchResources.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n\t//this.props.getResource(this.props.match.params.typeId,this.props.match.params.subTypeId);\r\n\t\r\n\t// device detection\r\n    if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) \r\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))) { \r\n        this.setState({\r\n          isMobile:true\r\n        });\r\n    }else{\r\n      this.setState({\r\n        isMobile:false\r\n      });\r\n\t}\r\n\tthis.fetchResources();\r\n  }\r\n\r\n  fetchResources() {\r\n    this.setState({ loading: true }, () => {\r\n      ApiService.fetchResources(this.props.match.params.typeId,this.props.match.params.subTypeId)\r\n      .then((res) => {\r\n\t\t  console.log(res.data);\r\n          this.setState({\r\n            loading: false,\r\n            resource: res.data\r\n          });\r\n      });\r\n    });\t\r\n  }\r\n  \r\n  routeChange=(path,data,studyResource)=> {\r\n\t  let typeId = parseInt(this.props.match.params.typeId);\r\n\t  console.log(\"here\");\r\n\t  if(typeId===16){\r\n\t\t  console.log(\"data--->\",studyResource);\r\n\t\t  console.log(this.state.resource);\r\n\t\t  this.props.history.push({pathname:'/shaka',state:{selectedVideo: studyResource}});\r\n\t\t//   this.props.history.push('/shaka');\r\n\t\t\r\n\t  }else{\r\n\t\t  this.props.history.push({\r\n\t\t\tpathname: path,\r\n\t\t\tstate: { portlet: data }});\r\n\t  }\r\n\t// this.routeChange('/studyResource/' + this.props.match.params.typeId + '/' + this.props.match.params.subTypeId + '/details/' + item.id, this.props.location.state.portlet)} >\r\n    //this.props.history.push(path);\t\r\n  }\r\n\r\n  displayStudyResource=(studyResource)=> {\r\n\t//console.log(\"displayStudyResource...\"+JSON.stringify(studyResource));\r\n\tlet typeId = parseInt(this.props.match.params.typeId);\r\n\tlet subTypeId = this.props.match.params.subTypeId;\r\n\tlet _path = '';\r\n\tlet data = {portlet: this.props.location.state.portlet};\r\n\tif(typeId===StudyResourceType.REFERENCE) {\t\t\r\n\t\twindow.open(studyResource.url, \"_blank\");\r\n\t}\r\n\telse if(typeId===StudyResourceType.FEEDBACK_FORM) {\t\t\t\t\r\n\t\t_path = '/feedback/form/'+studyResource.id;\r\n\t\tdata.studyResource = studyResource;\r\n\t\tthis.props.history.push({pathname: _path, state: data});\r\n\t}else if(typeId===16){\r\n\t\tconsole.log(\"resource--->\",studyResource)\r\n\t\tconsole.log(this.state.resource);\r\n\t\tthis.props.history.push({pathname:'/shaka',state:{selectedVideo: studyResource}});\r\n\t}\r\n\telse {\r\n\t\t_path = '/studyResource/' + typeId + '/' + subTypeId + '/details/'+ studyResource.id;\r\n\t\tthis.props.history.push({pathname: _path, state: data});\r\n\t}\r\n\t\r\n  }\r\n\r\n  \tdisplaySingleResource=(studyResource)=> {\r\n\t\tlet typeId = parseInt(this.props.match.params.typeId);\r\n\t\tlet subTypeId = this.props.match.params.subTypeId;\r\n\t\tlet _path = '';\r\n\t\tlet data = {portlet: this.props.location.state.portlet};\r\n\t\tif(typeId===StudyResourceType.FEEDBACK_FORM) {\t\t\t\t\r\n\t\t\t_path = '/feedback/form/'+studyResource.id;\r\n\t\t\tdata.studyResource = studyResource;\r\n\t\t\tthis.props.history.replace({pathname: _path, state: data});\r\n\t\t}else if(typeId===16){\r\n\t\t\tconsole.log(this.state.resource);\r\n\t\t\tthis.props.history.replace({pathname:'/shaka',state:{selectedVideo: studyResource}});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.props.history.replace({\r\n\t\t\t\tpathname: '/studyResource/' + typeId + '/' + subTypeId + '/details/' + studyResource.id,\r\n\t\t\t\tstate: { portlet: this.props.location.state.portlet }});\r\n\t\t}\r\n\t}\r\n\r\n  openUrl(url){\r\n\twindow.open( url, '_blank');\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n\t//console.log(this.props.loading);\r\n    //const { loading } = this.props.loading;\r\n\tconst { loading } = this.state;\r\n\tlet icon = ''; let icon2 = '';\r\n\tlet typeId = this.props.match.params.typeId;\r\n\tif(typeId==1){\r\n\t\ticon = download;\r\n\t\ticon2 = download2;\r\n\t}else if(typeId==5){\r\n\t\ticon = reference;\r\n\t\ticon2 = reference2;\r\n\t}else if(typeId==6){\r\n\t\ticon = announcement;\r\n\t\ticon2 = message;\r\n\t}else if(typeId==13){\r\n\t\ticon = ebook;\r\n\t\ticon2 = doc;\r\n\t}else if(typeId==16 || typeId==30 || typeId==3 || typeId==31){\r\n\t\ticon = stream;\r\n\t\ticon2 = video;\r\n\t}else if(typeId==StudyResourceType.FEEDBACK_FORM){\r\n\t\ticon = feedbackform;\r\n\t\ticon2 = doc;\r\n\t}\r\n\r\n\t\t\r\n    return (\r\n      <div className=\"Message\">\r\n        {\r\n\t\t  loading ?  <Loader />:\r\n          <Container fluid>\r\n              <div className=\"module-header\">\r\n                <div className={`module-header-inner ${this.props.location.state.portlet.class}`} >\r\n                <div className=\"back\">\r\n                  <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n                </div>\r\n                  <img src={icon} alt={this.props.match.params.type} /> \r\n                </div>\r\n                <div className=\"arrow-set\">\r\n                  <h4>{this.props.match.params.type}</h4>\r\n                </div>\r\n              </div>\r\n\t\t\t  {\r\n\t\t\t   typeId==1 || typeId==5 || typeId==13 || typeId==16 || typeId==30 || typeId==31 || typeId==3 ? \r\n\t\t\t     this.state.isMobile ? this.renderCard(icon2) : typeId==30 ? this.renderCardDesktop2(typeId,icon2) : this.renderCardDesktop(typeId,icon2)\r\n\t\t\t   :  this.renderCard(icon2)\r\n\t\t\t  }     \r\n\t\t\t  { //<Loader />: this.renderCard(icon2)\r\n\t\t\t  }      \r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderCard(icon2) {\r\n\t\t  \r\n\t\treturn  <div className=\"card_list\"> \r\n\t\t{\r\n\t\t  //this.props.resource.sort((a, b) => b.id - a.id)\r\n\t\t  this.state.resource.sort((a, b) => b.id - a.id)\r\n\t\t  .map((item, index) => {\r\n\t\t\t\tlet paramsString = this.props.location.search;\r\n\t\t\t\tif(this.state.resource.length==1){\r\n\t\t\t\t\t//this.props.history.push('/studyResource/' + this.props.match.params.typeId + '/' + this.props.match.params.subTypeId + '/details/' + item.id +'?item=1&back=1');\r\n\t\t\t\t\tthis.displaySingleResource(item)\r\n\t\t\t\t}\r\n\t\t\t\treturn ( \r\n\t\t\t\t\t<Card key={index} onClick={() => this.displayStudyResource(item)}>\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t<div className=\"cardbody\">\r\n\t\t\t\t\t\t\t<img src={icon2} alt={item.name} />\r\n\t\t\t\t\t\t\t<h4 className=\"head\">{item.name}</h4>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={ faArrowRight }  />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t)\r\n\t\t\t  })\r\n\t\t}\r\n    </div>\r\n  }\r\n\r\n    renderCardDesktop(typeId,icon2) {\r\n\t\t  \r\n\t return  <div className=\"download_list card_list\"> \r\n                <Card>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t  <div className=\"cardbody head align-center\">\r\n\t\t\t            <span className=\"sno\">#</span>\r\n\t\t\t\t\t\t<h4 className=\"head\">Name</h4>\r\n\t\t\t\t\t\t<p className=\"desc\">Description</p>\r\n\t\t\t\t\t\t<span className=\"date\">Date</span>\r\n\t\t\t\t\t\t<span>Action</span>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t\t{\r\n\t\t\t\tthis.state.resource.sort((a, b) => b.id - a.id)\r\n\t\t\t\t.map((item, index) => {\r\n\t\t\t\t\t\tvar description = 'NA';\r\n\t\t\t\t\t\tif(item.description){\r\n\t\t\t\t\t\t\tdescription = item.description.replace(/<(.|\\n)*?>/g, '');\r\n\t\t\t\t\t\t\tdescription = description.replace(/&nbsp;/g, '');\r\n\t\t\t\t\t\t\tdescription = description.replace(/&#39;/g, \"'\");\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar link;\r\n\t\t\t\t\t\tif(typeId == 1 || typeId == 5){\r\n\t\t\t\t\t\t\tvar youtube = /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\r\n\t\t\t\t\t\t\tvar url = item.url || \"\"\r\n\t\t\t\t\t\t\tif(url?.match(youtube)){\r\n\t\t\t\t\t\t\t\tlink = <a className=\"\" onClick={() => this.routeChange('/studyResource/' + this.props.match.params.typeId + '/' + this.props.match.params.subTypeId + '/details/' + item.id, this.props.location.state.portlet,item)} ><img src={icon2} alt={item.name} /></a>\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tlink =  <a className=\"\" onClick={() => this.openUrl(item.url)} ><img src={icon2} alt={item.name} /></a>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn ( \r\n\t\t\t\t\t\t\t<Card key={index} >\r\n\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<div className=\"cardbody align-center\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"sno\">{index+1}</span>\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"head\">{item.name}</h4>\r\n\t\t\t\t\t\t\t\t\t<p className=\"desc\">\r\n\t\t\t\t\t\t\t\t\t  <div dangerouslySetInnerHTML={{ __html:description}} />\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\r\n\t\t\t\t\t\t\t\t\t<span className=\"date\">{item.creationDate}</span>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\ttypeId == 1 || typeId == 5 ? link\r\n\t\t\t\t\t\t\t\t\t\t: typeId == 16 || typeId == 31 || typeId == 3 ?\r\n                                        <a className={`custom_icon ${this.props.location.state.portlet.class}`} onClick={() => this.routeChange('/studyResource/' + this.props.match.params.typeId + '/' + this.props.match.params.subTypeId + '/details/' + item.id, this.props.location.state.portlet,item)} ><FontAwesomeIcon icon={ faVideo }  /></a>\r\n\t\t\t\t\t\t\t\t\t\t:\r\n                                        <a className={`custom_icon ${this.props.location.state.portlet.class}`} onClick={() => this.routeChange('/studyResource/' + this.props.match.params.typeId + '/' + this.props.match.params.subTypeId + '/pdf/' + item.id)} ><FontAwesomeIcon icon={ faSearch }  /></a>\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t}\r\n\t\r\n\trenderCardDesktop2(typeId,icon2) {\r\n\t\t  \r\n\t\treturn  <div className=\"download_list zoom_video_list card_list\"> \r\n\t\t\t\t   <Card>\r\n\t\t\t\t\t   <Card.Body>\r\n\t\t\t\t\t\t <div className=\"cardbody head align-center\">\r\n\t\t\t\t\t\t   <span className=\"sno\">#</span>\r\n\t\t\t\t\t\t   <h4 className=\"head\">Name</h4>\r\n\t\t\t\t\t\t   <span className=\"date\">Start Date</span>\r\n\t\t\t\t\t\t   <span className=\"date\">End Date</span>\r\n\t\t\t\t\t\t   <span>Action</span>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   </Card.Body>\r\n\t\t\t\t   </Card>\r\n\t\t\t\t   {\r\n\t\t\t\t   this.state.resource.sort((a, b) => b.id - a.id)\r\n\t\t\t\t   .map((item, index) => {\r\n\t\t\t\t\t\t   return ( \r\n\t\t\t\t\t\t\t   <Card key={index} >\r\n\t\t\t\t\t\t\t\t   <Card.Body>\r\n\t\t\t\t\t\t\t\t   <div className=\"cardbody align-center\">\r\n\t\t\t\t\t\t\t\t\t   <span className=\"sno\">{index+1}</span>\r\n\t\t\t\t\t\t\t\t\t   <h4 className=\"head\">{item.name}</h4>\r\n\t\t\t\t\t\t\t\t\t   <span className=\"date\">{item.startDateTime}</span>\r\n\t\t\t\t\t\t\t\t\t   <span className=\"date\">{item.endDateTime}</span>\r\n\t\t\t\t\t\t\t\t\t   <a className={`custom_icon ${this.props.location.state.portlet.class}`} onClick={() => this.openUrl(item.url)}><FontAwesomeIcon icon={ faVideo }  /></a>\r\n\t\t\t\t\t\t\t\t   </div>\r\n\t\t\t\t\t\t\t\t   </Card.Body>\r\n\t\t\t\t\t\t\t   </Card>\r\n\t\t\t\t\t\t   )\r\n\t\t\t\t\t   })\r\n\t\t\t\t   }\r\n\t\t\t   </div>\r\n\t}\r\n\r\n}\r\n\r\n/*const mapStateToProps = state => ({\r\n  resource: state.resource.resource,\r\n  loading: false\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getResource: getResource,\r\n};*/\r\n//export default connect(mapStateToProps,mapDispatchToProps) (Resource);\r\n\r\nexport default Resource;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\resource\\ResourcePDFDetails.js",["1177","1178","1179","1180"],"import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./Resource.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport Card from 'react-bootstrap/Card'\r\nimport {getResource} from './../../_actions/resourceActions';\r\nimport Iframe from \"../../_components/iframe/iframe\";\r\nimport { ReactReader } from '../../_components/epub';\r\n\r\nconst storage = global.localStorage || null\r\n\r\nclass ResourcePDFDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      fullscreen: false,\r\n      location:\r\n        storage && storage.getItem('epub-location')\r\n          ? storage.getItem('epub-location')\r\n          : 2,\r\n      localFile: null,\r\n      localName: null,\r\n      largeText: false\r\n    };\r\n    this.rendition = null\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.props.getResource(this.props.match.params.typeId,this.props.match.params.subTypeId);\r\n  }\r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  onLocationChanged = location => {\r\n    this.setState(\r\n      {\r\n        location\r\n      },\r\n      () => {\r\n        storage && storage.setItem('epub-location', location)\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n\t  let portlet = JSON.parse(localStorage.getItem('portlet'));\r\n\t  var content =\"\";\r\n\t\treturn  <div className=\"ebook_details card_list mt60\"> \r\n\t\t{\r\n      this.props.resource.map((item, index) => {\r\n        if(item.id==this.props.match.params.id){\r\n          if(item?.url?.slice((item?.url?.lastIndexOf(\".\") - 1 >>> 0) + 2)=='pdf'){\r\n          const url = window.location.protocol + \"//\" + window.location.host +\"/assets/js/pdfjs-1.1.366/web/viewer.html?file=\"+item.url;\r\n            content = <div> <Iframe url={url} title={item.name} class=\"iframe100\" width=\"100%\" /> </div>\r\n          } else if(item?.url?.slice((item?.url?.lastIndexOf(\".\") - 1 >>> 0) + 2)=='epub'){\r\n            const { location } = this.state\r\n            content =\r\n              <div>\r\n                <div style={{ position: \"relative\", height: \"100vh\" }}>\r\n                  <ReactReader \r\n                    url= {item.url}\r\n                    title={item.name}\r\n                    location={location}\r\n                    locationChanged={this.onLocationChanged}\r\n                    getRendition={this.getRendition}\r\n                  />\r\n               </div>\r\n             </div>\r\n          }\r\n          return ( \r\n            <div key={index}>\r\n              <div className={`module-header-step2 ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n              <div className=\"back\">\r\n                <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n              </div>\r\n              <h4>{item.name}</h4>\r\n              </div>\r\n              <Card>\r\n                <Card.Body>\r\n                  <div className=\"\">\r\n\t\t\t\t\t          {content}\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n          </div>\r\n          )\r\n        }\r\n      })\r\n    }\r\n    </div>\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  resource: state.resource.resource\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getResource: getResource,\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (ResourcePDFDetails);\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\exam-upload\\ExamUpload.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\analysis\\AnalysisReportDetails.js",["1181","1182","1183","1184","1185","1186"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Loader from './../../_components/loader/loader';\r\nimport Chart from \"chart.js\";\r\n\r\nclass AnalysisReportDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      message: null,\r\n      loading: false,\r\n      result: 0\r\n    };\r\n    this.reloadTestResult = this.reloadTestResult.bind(this);\r\n  }\r\n  chartRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.reloadTestResult();\r\n    this.buildChart();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.buildChart();\r\n  }\r\n\r\n  reloadTestResult() {\r\n    var id = this.props.match.params.id;\r\n    this.setState({ loading: true }, () => {\r\n      ApiService.fetchTestResult(id)\r\n      .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n            list: res.data.data,\r\n            result : res.data.result\r\n          });\r\n      });\r\n    });\t\r\n  }\r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  render() {\r\n\tlet portlet = JSON.parse(localStorage.getItem('portlet'));\r\n    const { loading } = this.state;\r\n\tlet data = this.state.list;\r\n    if(this.state.result==1){\r\n    return (\r\n      <div className=\"testlist\">\r\n        {\r\n          <Container fluid>\r\n          <div className=\"learn-header\">\r\n          <div className={`module-header-step2 AnalysisReport ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n\t\t\t\t\t<div className=\"back\">\r\n\t\t\t\t\t  <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h4>Online Tests Result</h4>\r\n          </div>\r\n          </div>\r\n          <div className=\"testResult\">\r\n               {data.showAnalysisButtons==1 && <button className=\"resultbtn orange-card\" onClick={() => this.routeChange('/test-result-detail/'+this.props.match.params.id)} >Detailed Profiling</button>}\r\n               {/* {data.showAnalysisButtons==1 && <button className=\"resultbtn orange-card\" onClick={() => this.routeChange('/test-result-question-wise/'+this.props.match.params.id)} >Question Wise Analysis</button>} */}\r\n              {data.showAnalysisButtons==1 && <button className={`resultbtn ${portlet.class ? portlet.class : 'orange-card'}`}  onClick={()=> this.props.history.push({pathname: `/test-result/${this.props?.location?.state?.testId}/${this.props?.match?.params?.id}`, state: {showQuestionWiseAnalysis:true}})} >Question Wise Analysis</button>}\r\n          </div>\r\n          <div className=\"testResult\">\r\n              <div className=\"card_list\">\r\n                <h4>Your Performance in Test</h4>\r\n                <div className=\"testgraph\">\r\n                  <canvas id=\"myChart\" ref={this.chartRef} height=\"230vh\"/>\r\n                </div>\r\n              </div>\r\n          </div>\r\n\r\n          {loading ?  <Loader />: this.renderCard()}           \r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n    }else{\r\n      let msg = <h4>No Result Found</h4>;\r\n      return (\r\n        <div className=\"testlist\">\r\n          {\r\n            <Container fluid>\r\n            <div className={`module-header-step2 AnalysisReport ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n            <div className=\"AnalysisReport\">\r\n            <div className=\"back\">\r\n              <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n            </div>\r\n            <h4>Online Tests Result</h4>\r\n            </div>\r\n            </div>\r\n              <div className=\"testResult\">\r\n                {loading ?  <Loader />: msg}\r\n              </div>\r\n              <div className=\"testgraph\" style={{display: \"none\"}}>\r\n                  <canvas id=\"myChart\" ref={this.chartRef} />\r\n              </div>\r\n            </Container>\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderCard() {\r\n    let data = this.state.list;\r\n    if(typeof(data) !== 'undefined' || data != null){\r\n      return  <div className=\"testResult\">\r\n              <div className=\"card_list\">\r\n                <h4>Your Performance in Test</h4>\r\n                <table>\r\n                  <tr className=\"blue-card\">\r\n                    <th>Sec</th>\r\n                    <th>Marks</th>\r\n                    <th>Max</th>\r\n                    <th>%</th>\r\n                    <th>CH</th>\r\n                    <th>CA</th>\r\n                  </tr>\r\n      {\r\n        data.testTableData && data.testTableData.sort((a, b) => a.sortOrder - b.sortOrder)\r\n            .map((item, index) => {\r\n            if(item.sortOrder==100){ item.sectionName = \"Test Total\";  }\r\n            return ( \r\n              <tr key={index}>\r\n                <td><b>{item.sectionName}</b></td>\r\n                <td>{item.marks}</td>\r\n                <td>{item.totalMarks}</td>\r\n                <td>{item.percentage}</td>\r\n                <td>{item.testHighestPercentage}</td>\r\n                <td>{item.testAveragePercentage}</td>\r\n              </tr>\r\n            )\r\n          })\r\n      }\r\n      </table>\r\n      </div><br />\r\n      {this.renderLegends()} \r\n      </div>\r\n    }\r\n  }\r\n\r\n  renderLegends() {\r\n    return (\r\n      <div className=\"card_list\">\r\n      <h4>Legends</h4>\r\n      <table>  \r\n      <tr>\r\n        <td><b>Sec</b></td>\r\n        <td>Section</td>        \r\n      </tr>\r\n      <tr>\r\n        <td><b>Max</b></td>\r\n        <td>Maximum Marks</td>        \r\n      </tr>\r\n      <tr>\r\n        <td><b>%</b></td>\r\n        <td>Percentage</td>        \r\n      </tr>\r\n      <tr>\r\n        <td><b>CH</b></td>\r\n\r\n        <td>Course Highest</td>        \r\n      </tr>\r\n      <tr>\r\n        <td><b>CA</b></td>\r\n        <td>Course Average</td>        \r\n      </tr>\r\n      </table> \r\n      </div>\r\n    )\r\n  }\r\n\r\n  buildChart = () => {\r\n    let t1 = {};\r\n    t1.label = 'Marks';\r\n    t1.data = [];\r\n    t1.backgroundColor = [];\r\n    t1.borderColor = [];\r\n    t1.borderWidth = 1;\r\n\r\n    let t2 = {};\r\n    t2.label = 'Topper';\r\n    t2.data = [];\r\n    t2.backgroundColor = [];\r\n    t2.borderColor = [];\r\n    t2.borderWidth = 1;\r\n\r\n    let t3 = {};\r\n    t3.label = 'Total';\r\n    t3.data = [];\r\n    t3.backgroundColor = [];\r\n    t3.borderColor = [];\r\n    t3.borderWidth = 1;\r\n    let labels = [];\r\n    let barChartData = {};\r\n    let data = this.state.list;\r\n    if(typeof(data) !== 'undefined' || data != null){\r\n      data.barGraphData && data.barGraphData.map((item, index) => {\r\n\t\t          if(index==0){ item.name = \"Test\"; }\r\n                  labels.push(item.name);\r\n\r\n                  t1.data.push(item.marks);\r\n                  t1.backgroundColor.push('rgba(0, 128 ,0, 0.8)');\r\n                  t1.borderColor.push('rgba(0, 128 ,0, 1)');\r\n\r\n                  t2.data.push(item.toppermarks);\r\n                  t2.backgroundColor.push('rgba(255, 0, 0, 0.8)');\r\n                  t2.borderColor.push('rgba(255, 0, 0, 1)');\r\n\r\n                  t3.data.push(item.totalmarks);\r\n                  t3.backgroundColor.push('rgba(31, 119, 180, 0.8)');\r\n                  t3.borderColor.push('rgba(31, 119, 180, 1)');\r\n      });\r\n\r\n      barChartData = {\r\n          labels: labels,\r\n          datasets: [t1,t2,t3]\r\n      }\r\n\r\n\r\n    const myChartRef = this.chartRef.current.getContext(\"2d\"); \r\n\tmyChartRef.height = 700; \r\n    new Chart(myChartRef, {\r\n        type: \"bar\",\r\n        data:  barChartData,\r\n        options: {\r\n          legend: {\r\n            display: true,\r\n            position: 'bottom',\r\n            labels: {\r\n              fontColor: \"#000080\",\r\n            }\r\n          },\r\n          responsive: true,\r\n          maintainAspectRatio: true\r\n        }\r\n    });\r\n   }\r\n  }\r\n\r\n}\r\n\r\nexport default AnalysisReportDetails;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\exam-upload\\ExamUploadDetails.js",["1187","1188"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Loader from './../../_components/loader/loader';\r\nimport \"./ExamUpload.css\";\r\nimport Parser from 'html-react-parser';\r\nimport dateFormat from 'dateformat';\r\n\r\nclass ExamUploadDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: null,\r\n      loading: false,\r\n      result: 0,\r\n      selectedFile: null,\r\n      invalidImage:\"\",\r\n      submitDateBefore:\"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  onFileChange = event => {  \r\n    // Update the state \r\n    var File = event.target.files[0];\r\n    this.setState({ selectedFile: File });\r\n    if (!File) {\r\n      this.setState({ invalidImage: 'Please Upload your handwritten PDF File.' });\r\n      return false;\r\n    }\r\n   \r\n    if (!File.name.match(/\\.(pdf|PDF)$/)) {\r\n      this.setState({ invalidImage: 'Please select PDF File.' });\r\n      return false;\r\n    }else{\r\n      this.setState({ invalidImage: '' });\r\n    }\r\n\r\n  };\r\n\r\n  onFileUpload = () => { \r\n    // Create an object of formData \r\n    const formData = new FormData(); \r\n    // Update the formData object \r\n    if(this.state.selectedFile){\r\n      let portlet = JSON.parse(localStorage.getItem('portlet')) || [];\r\n      var compltedDate = this.props.location.state.testEndTime;\r\n      var submitDateBefore =\"\";\r\n      if(compltedDate){\r\n        var d = new Date(compltedDate);\r\n        var minutes = portlet.params.secondsActiveAfterExamSubmit/60;\r\n        var newtime = d.setMinutes ( d.getMinutes() + minutes );\r\n        submitDateBefore = dateFormat(newtime, \"yyyy-mm-dd HH:MM:ss\");\r\n        //submitDateBefore = \"2020-09-30 23:00:00\";\r\n      }\r\n      formData.append('dateBefore', submitDateBefore);\r\n      formData.append( \r\n        \"answersheetFile\", \r\n        this.state.selectedFile, \r\n        this.state.selectedFile.name,    \r\n      );\r\n      var testId = this.props.match.params.id;\r\n      this.setState({ loading: true }, () => {\r\n        ApiService.uploadFile(formData,testId)\r\n        .then((res) => {\r\n            this.setState({\r\n              loading: false,\r\n            });\r\n            if(res.data.type==\"error\"){\r\n              this.setState({ invalidImage: res.data.message });\r\n            }else if(res.data.type==\"timeout\"){\r\n              this.setState({ invalidImage: portlet.params.TimeoutMessage });\r\n            }else{\r\n              if(res.data.url){\r\n                this.props.history.push({ pathname: '/exam/pdfview/'+testId, state: { pdfpreview: res.data.url, testEndTime: compltedDate} });\r\n              }\r\n              \r\n            }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({ invalidImage: err });\r\n        });\r\n      });\r\n\r\n       // Details of the uploaded file \r\n       console.log(this.state.selectedFile);        \r\n  \r\n    }else{\r\n      this.setState({ invalidImage: 'Please Upload your handwritten PDF File.' });\r\n    }\r\n    \r\n  }; \r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    let portlet = JSON.parse(localStorage.getItem('portlet')) || [];\r\n    var compltedDate = this.props.location.state.testEndTime;\r\n    if(compltedDate){\r\n      var d = new Date(compltedDate);\r\n      var minutes = portlet.params.secondsActiveAfterExamSubmit/60;\r\n      var newtime = d.setMinutes ( d.getMinutes() + minutes );\r\n      //var submitDateBefore = dateFormat(newtime, \"yyyy-mm-dd HH:MM:ss\");\r\n      //this.setState({ submitDateBefore: submitDateBefore });\r\n      var submit_time = dateFormat(newtime, \"h:MM TT\");\r\n    }\r\n    \r\n    return (\r\n      <div className=\"testlist\">\r\n        {\r\n          <Container fluid>\r\n          <div className=\"learn-header\">\r\n          <div className={`module-header-step2 AnalysisReport ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n\t\t\t\t\t<div className=\"back\">\r\n\t\t\t\t\t  <FontAwesomeIcon icon={ faArrowLeft } onClick={() => this.routeChange('/examUpload') } />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h4>Exam Uploads</h4>\r\n          </div>\r\n          </div>\r\n          <div className=\"testResult testFileupload\">\r\n              <div className=\"\">\r\n                <h4>Upload PDF</h4>\r\n                <p class=\"help-block\">{Parser(portlet.params.DisplayTextOnUploadScreen)}</p>\r\n                <p>You have to complete the upload process by: <strong>{submit_time}</strong></p>\r\n                <div class=\"custom-file\">\r\n                  <input type=\"file\" class=\"custom-file-input\" id=\"customFile\" name=\"answersheetFile\" onChange={this.onFileChange}/>\r\n                  <label class=\"custom-file-label\" for=\"customFile\">{this.state.selectedFile ? this.state.selectedFile.name : 'Choose file'} </label>\r\n                </div>\r\n                <p class=\"error\">{this.state.invalidImage}</p>\r\n                <button type=\"submit\" class=\"btn btn-primary full-width\" onClick={this.onFileUpload}>Upload File</button>\r\n              </div>\r\n          </div>\r\n          {loading ?  <Loader /> : \"\"}\r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default ExamUploadDetails;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\exam-upload\\ExamPDFDetails.js",["1189","1190"],"import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport \"./ExamUpload.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport Loader from './../../_components/loader/loader';\r\nimport swal from 'sweetalert';\r\n\r\nclass ExamPDFDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: null,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    //console.log(this.props);\r\n  }\r\n\r\n  \r\n  onFileUpload = () => { \r\n    swal({\r\n      title: \"Success\",\r\n      text: \"Successfully uploaded your answer sheet. Thank you.\",\r\n      dangerMode: false,\r\n     })\r\n     .then(exit => {\r\n        this.props.history.push({ pathname: '/dashboard'})\r\n     });\r\n  };\r\n\r\n  onFileUploadCancel = () => { \r\n    var testId = this.props.match.params.id;\r\n    this.props.history.push({ pathname: '/exam/upload/'+ testId, state: { testEndTime: this.props.location.state.testEndTime}})\r\n  };\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"testlist\">\r\n        {\r\n          <Container fluid>\r\n              {loading ?  <Loader />: this.renderCard()}           \r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderCard() {\r\n    let portlet = JSON.parse(localStorage.getItem('portlet'));\r\n    console.log(this.props.location.state.pdfpreview);\r\n    let content = \"\";\r\n    if(this.props.location.state.pdfpreview){\r\n      let pdfurl = this.props.location.state.pdfpreview;\r\n      const url = window.location.protocol + \"//\" + window.location.host +\"/assets/js/pdfjs-1.1.366/web/viewer.html?file=\"+pdfurl;\r\n      content = <div> <iframe title=\"pdf\" height=\"500\" width=\"100%\" src={url}></iframe></div>\r\n    }\r\n\t\treturn  <div className=\"card_list\"> \r\n    {         \r\n        <div>\r\n          <div className={`module-header-step2 ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n          <h4>Finalise Submit</h4>\r\n          </div>\r\n          <Card>\r\n            <Card.Body>\r\n              <div className=\"cardbody\">\r\n                {content} \r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n          {this.renderFooter()}\r\n        </div>\r\n    }\r\n    </div>\r\n  }\r\n\r\n  renderFooter() {\r\n    console.log(\"QuizZone -> renderFooter()... \");\r\n    return ( \r\n        <div className=\"ilearn-footer\">                    \r\n            <Row>\r\n                <Col className=\"ilearn-footer-col ilearn-blue-btn\" onClick={() => this.onFileUpload()}>\r\n                    <button className=\"btn ilearn-blue-btn ilearn-footer-btn btn-block\" > \r\n                        <b>Submit</b> \r\n                    </button>\r\n                </Col>\r\n                <Col className=\"ilearn-footer-col ilearn-blue-btn\" onClick={() => this.onFileUploadCancel()}>\r\n                    <button className=\"btn btn-danger ilearn-footer-btn btn-block\" > \r\n                        <b>Cancel</b> \r\n                    </button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default ExamPDFDetails;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test-player\\TestInstructions.js",["1191","1192","1193","1194","1195","1196","1197","1198","1199","1200","1201","1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1212","1213","1214","1215","1216","1217","1218","1219","1220","1221","1222","1223","1224","1225","1226"],"import React, { Component } from \"react\";\r\nimport \"./question-style.css\";\r\nimport Config from \"../../_config/config\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport { ILoader } from \"./../../_components/iloader/iloader\";\r\nimport Header from \"./components/Header\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faClosedCaptioning,\r\n  faPlay,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport swal from \"sweetalert\";\r\nimport Utils from \"../../_helpers/utils\";\r\nimport lock_icon from \"./img/lock.png\";\r\nimport test_icon from \"./img/test.png\";\r\nimport { Container, Row, Modal, Form } from \"react-bootstrap\";\r\n\r\nconst AWS = require(\"aws-sdk\");\r\nAWS.config.clear();\r\n// AWS.config.update({\r\n//   region: Config.AWSRegion,\r\n//   accessKeyId: Config.AWSAccessKeyId,\r\n//   secretAccessKey: Config.AWSSecretAccessKey,\r\n// });\r\nvar docClient = new AWS.DynamoDB.DocumentClient();\r\n\r\nclass TestInstructions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showLoading: false,\r\n      show: false,\r\n      close: false,\r\n      testObject: \"\",\r\n      userObject: \"\",\r\n      testCategory: null,\r\n      msg: \"\",\r\n      blockMsg:\r\n        \"Suspicious activity detected. Your Exam is now blocked. Please contact the Exam Department for further assistance.\",\r\n      showLockdownSection: false,\r\n      lockdownUrl: \"\",\r\n      sebUrl: \"\",\r\n      testPaperStatus: undefined,\r\n      testTimeStatus: \"timein\",\r\n      effectiveTestTime: \"\",\r\n      showModal: false,\r\n      modalTitle: \"Enter Password\",\r\n      testPassword: {\r\n        studentPassword: \"\",\r\n        testMasterPassword: \"\",\r\n      },\r\n      submitted: false,\r\n      validatePwdStatus: false,\r\n    };\r\n    this.downloadTest = this.downloadTest.bind(this);\r\n    this.dynamodbInit = this.dynamodbInit.bind(this);\r\n    this.timeout = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      userObject: JSON.parse(localStorage.getItem(\"user\")) || [],\r\n      tenant: localStorage.getItem(\"tenant\") || Config.siteTitle,\r\n      //tenant: \"isbat_testing\",\r\n      testCategory: this.props.location.state\r\n        ? this.props.location.state.testCategory\r\n        : \"\",\r\n      testId: this.props.match.params.id,\r\n    });\r\n    document.body.classList.add(\"test-player-body\");\r\n    this.dynamodbInit();\r\n  }\r\n\r\n  showAlert() {\r\n    const wrapper = document.createElement(\"div\");\r\n    wrapper.innerHTML = Config.CONNECTION_ERROR_MSG;\r\n    swal({\r\n      content: wrapper,\r\n      icon: \"warning\",\r\n      button: \"Ok\",\r\n      allowOutsideClick: false,\r\n      closeOnClickOutside: false,\r\n      className: \"orange-card\",\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        window.location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n  dynamodbInit() {\r\n    let tenant = localStorage.getItem(\"tenant\") || Config.siteTitle;\r\n    //let tenant = \"isbat_testing\";\r\n    let userObject = JSON.parse(localStorage.getItem(\"user\")) || [];\r\n    var student_response = {\r\n      tenant: tenant,\r\n      testId: this.props.match.params.id,\r\n      userId: userObject.userId,\r\n      isTimer: false,\r\n      isUpdate: false,\r\n    };\r\n    console.log(student_response, \"response\");\r\n    var that = this;\r\n\r\n    that.setState({ showLoading: true }, () => {\r\n      ApiService.testResponses(JSON.stringify(student_response))\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          //   console.log(res,'response');\r\n          if (res.status == \"success\") {\r\n            if (\r\n              res?.testSubmit == 1 ||\r\n              res?.testSubmit == 2 ||\r\n              res?.testSubmit == 3\r\n            ) {\r\n              let paramsString = that.props.location.search;\r\n              const params = new URLSearchParams(paramsString);\r\n              let testCategory = params.get(\"cat\");\r\n              window.location =\r\n                \"/test-result/\" +\r\n                testCategory +\r\n                \"/\" +\r\n                that.props.match.params.id;\r\n            }\r\n            that.setState({\r\n              msg: res.message,\r\n              testResume: res.testResume,\r\n              testPaperStatus: res.testPaperUrl,\r\n              showLoading: false,\r\n            });\r\n            that.downloadTest(res.testPaperUrl, 0);\r\n          } else {\r\n            that.setState({\r\n              showLoading: false,\r\n              testPaperStatus: undefined,\r\n            });\r\n            console.log(res, \"res\");\r\n            that.showAlert();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          that.setState({\r\n            showLoading: false,\r\n          });\r\n          that.showAlert();\r\n          console.log(err, err.stack); // an error occurred\r\n        });\r\n      // }\r\n    });\r\n    // })\r\n  }\r\n\r\n  /* code for read item from dynamodb start*/\r\n  dynamodbUpdateProfile = async (tenant_userId, key, bucket) => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const { userId } = user;\r\n\r\n    const payload = {\r\n      photo: key,\r\n      userId,\r\n      clientName: Config.siteTitle,\r\n      photoBucketName: bucket,\r\n      profileUpdate: true,\r\n    };\r\n\r\n    console.log(payload, \"payload\");\r\n\r\n    try {\r\n      const res = await ApiService.updateProctoredProfile(\r\n        JSON.stringify(payload)\r\n      );\r\n      const data = await res.json();\r\n      if (data.message?.status === \"success\") {\r\n        return console.log(data, \"proctordata\");\r\n      }\r\n      this.showAlert();\r\n    } catch (err) {\r\n      console.log(err);\r\n      this.showAlert();\r\n    }\r\n  };\r\n  /* code for read item from dynamodb end*/\r\n\r\n  dynamodbUpdateUrl(testPaperUrl, paperId) {\r\n    let tenant = localStorage.getItem(\"tenant\") || Config.siteTitle;\r\n    //let tenant = \"isbat_testing\";\r\n    let userObject = JSON.parse(localStorage.getItem(\"user\")) || [];\r\n    var student_response = {\r\n      tenant: tenant,\r\n      testId: this.props.match.params.id,\r\n      userId: userObject.userId,\r\n      testUrl: true,\r\n      testPaper: testPaperUrl,\r\n      testPaperId: paperId,\r\n    };\r\n\r\n    console.log(student_response, \"response\");\r\n\r\n    var that = this;\r\n\r\n    that.setState({ showLoading: true }, () => {\r\n      ApiService.testResponses(JSON.stringify(student_response))\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.status == \"success\") {\r\n            that.setState({\r\n              msg: res.message,\r\n              showLoading: false,\r\n              testPaperStatus: res.status,\r\n            });\r\n          } else {\r\n            that.setState({\r\n              showLoading: false,\r\n              testPaperStatus: undefined,\r\n            });\r\n            that.showAlert();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          that.setState({\r\n            showLoading: false,\r\n          });\r\n          that.showAlert();\r\n          console.log(err, err.stack); // an error occurred\r\n        });\r\n    });\r\n  }\r\n\r\n  checkLockdownBrowser() {\r\n    var response = {\r\n      userAgent: navigator.userAgent,\r\n      checkUserAgent: true,\r\n    };\r\n\r\n    let tenant = localStorage.getItem(\"tenant\") || Config.siteTitle;\r\n\r\n    var that = this;\r\n\r\n    console.log(response, \"response\");\r\n\r\n    ApiService.testResponses(JSON.stringify(response))\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status == \"failed\") {\r\n          that.setState({\r\n            showLockdownSection: true,\r\n            lockdownUrl: res.LockdownUrl,\r\n            sebUrl:\r\n              \"https://tuningfork-live.s3-ap-southeast-1.amazonaws.com/\" +\r\n              tenant +\r\n              \"/files/seb/edusquares.seb\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, err.stack);\r\n      });\r\n  }\r\n\r\n  checkProctorStatus(testId, lockdownBrowser) {\r\n    var blockMsg = this.state.blockMsg;\r\n    const { tenant, userObject } = this.state;\r\n    var student_response = {\r\n      tenant: tenant,\r\n      testId: testId,\r\n      userId: userObject.userId,\r\n      isTimer: true,\r\n      proctor: true,\r\n      proctorStatus: true,\r\n    };\r\n    console.log(student_response, \"response\");\r\n    var that = this;\r\n\r\n    ApiService.testResponses(JSON.stringify(student_response))\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        if (res.blanket_flag == \"BLOCK\") {\r\n          that.BlockAlert(blockMsg, lockdownBrowser);\r\n        } else if (res.blanket_flag == \"\" && res.block_test == true) {\r\n          that.BlockAlert(blockMsg, lockdownBrowser);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, err.stack); // an error occurred\r\n      });\r\n  }\r\n\r\n  testTimerCheck(testId, testTime, endDateTime, dayEndTime, dayStartTime) {\r\n    const { tenant, userObject } = this.state;\r\n    var student_response = {\r\n      tenant: tenant,\r\n      testId: testId,\r\n      userId: userObject.userId,\r\n      dayTimes: true,\r\n      endDateTime: endDateTime,\r\n      testTime: testTime,\r\n      dayStartTime: dayStartTime,\r\n      dayEndTime: dayEndTime,\r\n    };\r\n\r\n    var that = this;\r\n\r\n    console.log(student_response, \"response\");\r\n\r\n    ApiService.testResponses(JSON.stringify(student_response))\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.timeStatus) {\r\n          that.setState({\r\n            testTimeStatus: res.timeStatus,\r\n            effectiveTestTime: res.testTime,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, err.stack); // an error occurred\r\n      });\r\n  }\r\n\r\n  BlockAlert(msg, lockdownBrowser) {\r\n    swal({\r\n      text: msg,\r\n      icon: \"warning\",\r\n      button: \"Ok\",\r\n      allowOutsideClick: false,\r\n      closeOnClickOutside: false,\r\n      closeOnEsc: false,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        if (lockdownBrowser == true) {\r\n          window.location.href = \"/dashboard\";\r\n          //this.props.history.replace('/dashboard');\r\n        } else {\r\n          window.close();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  validatePassword() {\r\n    if (\r\n      (this.state.testObject?.testConfig?.studentLevelPasswordCheck ||\r\n        this.state.testObject?.testConfig?.testLevelPasswordCheck) &&\r\n      this.state.validatePwdStatus == false\r\n    ) {\r\n      this.setState({\r\n        showModal: true,\r\n      });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      showModal: false,\r\n    });\r\n  }\r\n\r\n  updateInput = (e) => {\r\n    let v = e.target.value;\r\n    let k = e.target.name;\r\n    let testPassword = { ...this.state.testPassword };\r\n    testPassword[k] = v;\r\n    this.setState({ testPassword });\r\n  };\r\n\r\n  renderModal() {\r\n    let { submitted, testPassword } = this.state;\r\n    //let CURRENT_PORTLET = JSON.parse(localStorage['portlet']);\r\n    let CURRENT_PORTLET = \"blue-full-card\";\r\n    return (\r\n      <>\r\n        <Modal\r\n          show={this.state.showModal}\r\n          size=\"sm\"\r\n          onHide={() => this.handleClose()}\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header\r\n            closeButton\r\n            className={`ilearn-plain-header text-white blue-full-card`}\r\n          >\r\n            <Modal.Title>\r\n              {\" \"}\r\n              <div>{this.state.modalTitle}</div>{\" \"}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form>\r\n              <Form.Group controlId=\"message\">\r\n                {this.state.testObject?.testConfig\r\n                  ?.studentLevelPasswordCheck === true ? (\r\n                  <>\r\n                    <Form.Label>Student Test Password</Form.Label>\r\n                    <div\r\n                      className={\r\n                        \"item-inner\" +\r\n                        (submitted && !testPassword.studentPassword\r\n                          ? \" has-error\"\r\n                          : \"\")\r\n                      }\r\n                    >\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"Password\"\r\n                        name=\"studentPassword\"\r\n                        onChange={this.updateInput}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ) : null}\r\n\r\n                {(this.state.testObject?.testConfig\r\n                  ?.studentLevelPasswordCheck === false &&\r\n                  this.state.testObject?.testConfig?.testLevelPasswordCheck) ||\r\n                (this.state.msg == \"test record exist\" &&\r\n                  this.state.testObject?.testConfig?.testLevelPasswordCheck ===\r\n                    true) ? (\r\n                  <>\r\n                    <br />\r\n                    <Form.Label>Test Master Password</Form.Label>\r\n                    <div\r\n                      className={\r\n                        \"item-inner\" +\r\n                        (submitted && !testPassword.testMasterPassword\r\n                          ? \" has-error\"\r\n                          : \"\")\r\n                      }\r\n                    >\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"Password\"\r\n                        name=\"testMasterPassword\"\r\n                        onChange={this.updateInput}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ) : null}\r\n              </Form.Group>\r\n            </Form>\r\n            {this.state.errorMessage && (\r\n              <div className=\"text-danger\">{this.state.errorMessage}</div>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-primary\"\r\n              onClick={() => this.validateTestPwd()}\r\n            >\r\n              Start Test\r\n            </button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n  validateTestPwd() {\r\n    let { testPassword } = this.state;\r\n    if (\r\n      this.state.testObject?.testConfig?.studentLevelPasswordCheck &&\r\n      this.state.testObject?.testConfig?.testLevelPasswordCheck &&\r\n      testPassword.studentPassword &&\r\n      (this.state.msg !== \"test record exist\" ||\r\n        (this.state.msg == \"test record exist\" &&\r\n          testPassword.testMasterPassword === this.state.testObject?.password))\r\n    ) {\r\n      this.studentLevelPasswordCheckApi(testPassword.studentPassword);\r\n    } else if (\r\n      this.state.testObject?.testConfig?.testLevelPasswordCheck === false &&\r\n      this.state.testObject?.testConfig?.studentLevelPasswordCheck &&\r\n      testPassword.studentPassword\r\n    ) {\r\n      this.studentLevelPasswordCheckApi(testPassword.studentPassword);\r\n    } else if (\r\n      this.state.testObject?.testConfig?.studentLevelPasswordCheck === false &&\r\n      this.state.testObject?.testConfig?.testLevelPasswordCheck === true &&\r\n      testPassword.testMasterPassword === this.state.testObject?.password\r\n    ) {\r\n      this.setState({\r\n        showLoading: false,\r\n        validatePwdStatus: true,\r\n      });\r\n      setTimeout(() => {\r\n        this.routeChange(\r\n          \"/TestPlayer/\" + this.state.testId,\r\n          0,\r\n          this.state.testCategory\r\n        );\r\n      }, 100);\r\n    } else if (\r\n      this.state.testObject?.testConfig?.testLevelPasswordCheck === true &&\r\n      testPassword.testMasterPassword !== this.state.testObject?.password\r\n    ) {\r\n      this.setState({\r\n        submitted: true,\r\n        errorMessage: \"Please enter valid test password\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submitted: true,\r\n        errorMessage: \"Please enter password\",\r\n      });\r\n    }\r\n  }\r\n\r\n  studentLevelPasswordCheckApi(studentPassword) {\r\n    this.setState({ submitted: true, showLoading: true }, () => {\r\n      ApiService.studentLevelPasswordCheck(\r\n        this.state.testId,\r\n        studentPassword\r\n      ).then((res) => {\r\n        if (res.data.type === 1) {\r\n          this.setState({\r\n            showLoading: false,\r\n            validatePwdStatus: true,\r\n          });\r\n          this.routeChange(\r\n            \"/TestPlayer/\" + this.state.testId,\r\n            0,\r\n            this.state.testCategory\r\n          );\r\n        } else {\r\n          this.setState({\r\n            showLoading: false,\r\n            errorMessage: res.data.message,\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  routeChange(path, endDate, testCategory) {\r\n    if (this.validatePassword()) {\r\n      let paramsString = this.props.location.search;\r\n      const params = new URLSearchParams(paramsString);\r\n      let lms = params.get(\"lms\") || 0;\r\n      let steps = params.get(\"steps\") || 0;\r\n      let testCategory2 = params.get(\"cat\") || testCategory;\r\n\r\n      if (this.state.testPaperStatus == undefined) {\r\n        this.showAlert();\r\n      } else {\r\n        this.props.history.replace({\r\n          pathname: path,\r\n          state: {\r\n            testEndDate: endDate,\r\n            testCategory: testCategory2,\r\n            lms: lms,\r\n            steps: steps,\r\n            resume: this.state.msg == \"test record exist\" ? true : false,\r\n            testUrl: this.state.testUrl,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  closeTest() {\r\n    window.close();\r\n  }\r\n\r\n  payCheck(testId, testObject) {\r\n    this.setState({ loading: true }, () => {\r\n      let payLoad = {\r\n        type: \"test\",\r\n        testId: testId,\r\n      };\r\n      ApiService.studentPayCheck(payLoad).then((res) => {\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        if (res.data.type == 2) {\r\n          const wrapper = document.createElement(\"div\");\r\n          wrapper.innerHTML = res.data.message;\r\n          swal({\r\n            content: wrapper,\r\n            icon: \"warning\",\r\n            button: \"Ok\",\r\n            allowOutsideClick: false,\r\n            closeOnClickOutside: false,\r\n            className: \"orange-card\",\r\n          }).then((willDelete) => {\r\n            if (willDelete) {\r\n              window.close();\r\n            }\r\n          });\r\n        } else {\r\n          this.setState({\r\n            testObject: testObject,\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  downloadTest(testPaperUrl, randomTest) {\r\n    let testId = this.props.match.params.id;\r\n    var d = new Date();\r\n    var rand = d.getTime();\r\n    let tenant = localStorage.getItem(\"tenant\") || Config.siteTitle;\r\n    //let tenant = 'isbat_testing';\r\n    var testobj = \"\";\r\n    if (testPaperUrl) {\r\n      testobj = testPaperUrl;\r\n    } else if (randomTest) {\r\n      testobj =\r\n        \"https://tuningfork-\" +\r\n        Config.siteMode +\r\n        \".s3.amazonaws.com/\" +\r\n        tenant +\r\n        \"/uploads/testPapers/\" +\r\n        testId +\r\n        \"/papers/\" +\r\n        randomTest +\r\n        \".json\";\r\n    } else {\r\n      testobj =\r\n        \"https://tuningfork-\" +\r\n        Config.siteMode +\r\n        \".s3.amazonaws.com/\" +\r\n        tenant +\r\n        \"/uploads/testPapers/\" +\r\n        testId +\r\n        \"/\" +\r\n        testId +\r\n        \".json\";\r\n    }\r\n\r\n    this.setState({ showLoading: true }, () => {\r\n      ApiService.fetchTestJson(testobj + \"?id=\" + rand)\r\n        .then(\r\n          (res) => {\r\n            //console.log(JSON.stringify(res));\r\n            let testObject = res.data;\r\n            this.setState({\r\n              showLoading: false,\r\n            });\r\n\r\n            if (testObject?.testPapers?.length > 0) {\r\n              let testPapers = testObject.testPapers;\r\n              let randomTestId = Math.floor(Math.random() * testPapers.length);\r\n              this.downloadTest(null, testPapers[randomTestId]);\r\n            } else {\r\n              if (testObject?.testConfig?.webCamProctoring?.enabled == true) {\r\n                this.checkProctorStatus(\r\n                  testId,\r\n                  testObject?.testConfig?.lockdownBrowser\r\n                );\r\n\r\n                /** profile update */\r\n                const userObject = JSON.parse(localStorage.getItem(\"user\"));\r\n                const url = userObject.photoPath;\r\n                let userId = userObject.userId;\r\n                //const url = '';\r\n                var referencePhoto = \"\";\r\n                var referencePhotoBucketName = \"\";\r\n                var tenant_userId = tenant + \"_\" + userId;\r\n                if (url) {\r\n                  var match = url.match(\r\n                    /^https?:\\/\\/([^.]+).s3.amazonaws.com\\/?(.*?)$/\r\n                  );\r\n                  if (match) {\r\n                    referencePhoto = match[2];\r\n                    referencePhotoBucketName = match[1];\r\n                    this.dynamodbUpdateProfile(\r\n                      tenant_userId,\r\n                      referencePhoto,\r\n                      referencePhotoBucketName\r\n                    );\r\n                  }\r\n                } else {\r\n                  this.BlockAlert(\r\n                    \"Dear Student you don't have profile image. Please contact the Exam Department for further assistance.\",\r\n                    testObject?.testConfig?.lockdownBrowser\r\n                  );\r\n                }\r\n                /** profile update */\r\n              }\r\n\r\n              if (\r\n                testObject?.testConfig != undefined &&\r\n                testObject.testConfig.dayStartTime != undefined &&\r\n                testObject.testConfig.dayEndTime != undefined\r\n              ) {\r\n                this.testTimerCheck(\r\n                  testId,\r\n                  testObject?.testTime,\r\n                  testObject?.endDateTime,\r\n                  testObject.testConfig.dayEndTime,\r\n                  testObject.testConfig.dayStartTime\r\n                );\r\n              }\r\n\r\n              if (\r\n                testObject?.testConfig?.checkForPaymentStatusBeforeStart == true\r\n              ) {\r\n                this.payCheck(testId, testObject);\r\n              }\r\n\r\n              this.setState({\r\n                testObject: testObject,\r\n                testUrl: testobj,\r\n              });\r\n\r\n              if (this.state.testResume == 0) {\r\n                this.dynamodbUpdateUrl(testobj, randomTest);\r\n              } else if (\r\n                this.state.testResume == 1 &&\r\n                this.state.testPaperStatus == undefined\r\n              ) {\r\n                this.dynamodbUpdateUrl(testobj, randomTest);\r\n              }\r\n\r\n              if (testObject?.testConfig?.lockdownBrowser == true) {\r\n                this.checkLockdownBrowser();\r\n              }\r\n            }\r\n          }\r\n          // ,error => {\r\n          // }\r\n        )\r\n        .catch((err) => {\r\n          const testDate = JSON.parse(sessionStorage.getItem(\"testDate\"));\r\n          const testTime = JSON.parse(sessionStorage.getItem(\"testTime\"));\r\n          console.log(err.response.status, err);\r\n          this.setState({\r\n            showLoading: false,\r\n          });\r\n          if (err.response.status === 404) {\r\n            this.BlockAlert(\r\n              \"Online test not available. Please contact administrator\",\r\n              false\r\n            );\r\n          }\r\n          if (err.response.status === 403) {\r\n            this.BlockAlert(\r\n              `Hey! Looks like you are a  ahead of the scheduled time. \\n Please come back on ${testDate} ${testTime} and take the test!`,\r\n              false\r\n            );\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"test-player\">\r\n        <Container id=\"container\" fluid>\r\n          <div className=\"mainView\">\r\n            <Header title={this.state.testObject.name} />\r\n            <Row>{this.state.testObject ? this.renderInstructions() : \"\"}</Row>\r\n            {this.renderLoader()}\r\n          </div>\r\n        </Container>\r\n        {this.state.testObject?.testConfig?.studentLevelPasswordCheck ||\r\n        this.state.testObject?.testConfig?.testLevelPasswordCheck\r\n          ? this.renderModal()\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderInstructions() {\r\n    const { testObject } = this.state;\r\n    let isMobile = Utils.isMobileDevice();\r\n    return (\r\n      <div className=\"col-md-12 col-sm-12 col-xs-12\">\r\n        <div className=\"test_instructions\">\r\n          {this.state.showLockdownSection === false ? (\r\n            <div className=\"qustion_div\">\r\n              {this.state.testTimeStatus == \"timeout\" ? (\r\n                <h6 className=\"error-message\">\r\n                  Note : Your test is timed out. <br /> Please come tomorrow to\r\n                  take the test.{\" \"}\r\n                </h6>\r\n              ) : this.state.testTimeStatus == \"partialtimeout\" ? (\r\n                <h6 className=\"error-message\">\r\n                  Note : Your test time is less than{\" \"}\r\n                  {this.state.effectiveTestTime} minuts. <br />\r\n                  Please come tomorrow to take the test.{\" \"}\r\n                </h6>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {isMobile === true ? (\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html:\r\n                      testObject.instructions || testObject.webInstructions,\r\n                  }}\r\n                ></div>\r\n              ) : (\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html:\r\n                      testObject.webInstructions || testObject.instructions,\r\n                  }}\r\n                ></div>\r\n              )}\r\n\r\n              <br />\r\n              <div className=\"center\">\r\n                {this.state.testTimeStatus == \"timein\" ? (\r\n                  <button\r\n                    className=\"btn btn-primary text-center\"\r\n                    onClick={() =>\r\n                      this.routeChange(\r\n                        \"/TestPlayer/\" + this.state.testId,\r\n                        0,\r\n                        this.state.testCategory\r\n                      )\r\n                    }\r\n                  >\r\n                    {this.state.msg == \"test record exist\"\r\n                      ? \"Resume Test\"\r\n                      : \"Start Test\"}{\" \"}\r\n                    &nbsp;\r\n                    <FontAwesomeIcon icon={faPlay} />\r\n                  </button>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                &nbsp;{\" \"}\r\n                <button\r\n                  className=\"btn btn-primary text-center\"\r\n                  onClick={() => this.closeTest()}\r\n                >\r\n                  Cancel <FontAwesomeIcon icon={faTimes} />\r\n                </button>\r\n              </div>\r\n              <div className=\"center\">\r\n                <br /> <br /> <br /> <br /> <br /> <br />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"locakdown\">\r\n              <div className=\"panel panel-default\">\r\n                <div className=\"panel-heading\">\r\n                  Lockdown Exam Browser Required\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                  <br />\r\n                  <h5 className=\"text-center\">\r\n                    You need to take this Test from Lockdown Exam Browser.\r\n                  </h5>\r\n                  <br />\r\n                  <a href={this.state.lockdownUrl} target=\"_blank\">\r\n                    <button type=\"button\" className=\"btn btn-success\">\r\n                      <img src={lock_icon} /> Download Lockdown Exam Browser\r\n                    </button>\r\n                  </a>\r\n                  <a href={this.state.sebUrl} target=\"_blank\">\r\n                    <button type=\"button\" className=\"btn btn-warning\">\r\n                      <img src={test_icon} /> Download Exam Launcher\r\n                    </button>\r\n                  </a>\r\n                </div>\r\n                <br />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderLoader = () => {\r\n    const _loadingText = \"Please wait...\";\r\n    return (\r\n      <ILoader\r\n        loadingText={_loadingText}\r\n        isShow={this.state.showLoading}\r\n      ></ILoader>\r\n    );\r\n  };\r\n}\r\n\r\nexport default TestInstructions;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\play-ground\\PlayGround.js",["1227","1228"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport Config from '../../_config/config'\r\n\r\nclass PlayGround extends Component {\r\n\r\n  routeChange(path) {\r\n    this.props.history.push({\r\n      pathname: path,\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n\t  let portlet = JSON.parse(localStorage.getItem('portlet')) || [];\r\n    let user = JSON.parse(localStorage.getItem('user')) || [];\r\n    var url = Config.siteUrl+ \"popup/practice.do?reqCode=loadPlayGround&token=\"+user.token;\r\n\r\n    {/* https://triangles.edusquares.com/popup/practice.do?reqCode=loadPlayGround&token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI0MzAyOSIsImp0aSI6IjQzMDI5IiwiaWF0IjoxNjEzOTk2NDcwLCJ1c2VybmFtZSI6IlMxIiwidXNlcl9lbWFpbCI6InN1cHBvcnRAY29uY2VwdHdhdmVzLmNvbSIsInJvbGVzIjpbIlN0YW5kYXJkU3R1ZGVudCJdfQ.4R7rfSkTcDjked7OOeVQ-KaXm2v-L5S0GfP7HhZYhhM */}\r\n\r\n    return (\r\n      <div className=\"testlist\">\r\n        {\r\n          <Container fluid>\r\n            <div className={`module-header-step2 ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n              <div className=\"\">\r\n                <div className=\"back\">\r\n                  <FontAwesomeIcon icon={ faArrowLeft }  onClick={() => this.routeChange('/dashboard')}/>\r\n                </div>\r\n                <h4> Play Ground </h4>\r\n              </div>\r\n              </div>\r\n              <iframe  key=\"iframe100\" class=\"iframe100\" width=\"100%\" title=\"Play Ground \" src={url} title=\"iframe\" id=\"my_iframe\" sandbox=\"allow-same-origin allow-forms allow-scripts allow-modals allow-popups\"></iframe>\r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default PlayGround;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\my-programs\\MyPrograms.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\resource\\ResourceDetails.js",["1229","1230","1231","1232","1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244","1245","1246"],"import React, { Component } from \"react\";\r\n//import {connect} from \"react-redux\";\r\nimport Parser from 'html-react-parser';\r\nimport \"./Resource.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport Card from 'react-bootstrap/Card'\r\n//import {getResource} from './../../_actions/resourceActions';\r\nimport Iframe from \"../../_components/iframe/iframe\";\r\nimport swal from 'sweetalert';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Loader from './../../_components/loader/loader';\r\nimport VideoPlayer from \"../../_components/video-player\";\r\nimport XAPIUtils from \"../xapi/xapiutils\";\r\n\r\nclass ResourceDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\t  loading: true,\r\n\t  resource:[]\r\n\t};\r\n\tthis.fetchResources = this.fetchResources.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    //this.props.getResource(this.props.match.params.typeId,this.props.match.params.subTypeId);\r\n\tlet paramsString = this.props.location.search;\r\n    const params = new URLSearchParams(paramsString);\r\n    let item =  params.get('item');\r\n\t window.addEventListener('popstate', function() {\r\n\t if(item==1){\r\n\t   window.history.pushState({}, '');\r\n\t   window.history.pushState(null, null, '/dashboard');\r\n\t   window.location.reload();\r\n\t }\r\n\t});\r\n\tthis.fetchResources();\r\n  }\r\n\r\n  routeChange(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  fetchResources() {\r\n    this.setState({ loading: true }, () => {\r\n      ApiService.fetchResources(this.props.match.params.typeId,this.props.match.params.subTypeId)\r\n      .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n            resource: res.data\r\n          });\r\n      });\r\n    });\t\r\n  }\r\n\r\n  render() {\r\n\t    const { loading } = this.state;\r\n\t    var enquiryId = localStorage.getItem('enquiryId');\r\n\t\tif(loading==false && this.state.resource.length==0 ){\r\n\t\t\t  swal({\r\n\t\t\t\ttitle: \"Alert\",\r\n\t\t\t\ttext: \"Content not Available\",\r\n\t\t\t\tdangerMode: true,\r\n\t\t\t\tclassName: this.props.location.state.portlet.class ? this.props.location.state.portlet.class : 'orange-card'\r\n\t\t\t  })\r\n\t\t\t  .then(exitExam => {\r\n\t\t\t\t this.props.history.goBack();\t\r\n\t\t\t  });\r\n\t\t}\r\n\t\treturn  <div className=\"message_details\"> \r\n\t\t{\r\n\t\t  loading ?  <Loader />: this.renderCard()\r\n\t\t}\r\n        </div>\r\n  }\r\n\r\n  renderCard() {\r\n\tvar content = \"\"; var video =\"\"; var pdf =\"\";\r\n\treturn  <div className=\"\"> \r\n\t{\r\n\t\tthis.state.resource && this.state.resource.map((item, index) => {\r\n\t\t\tif(item.id==this.props.match.params.id){\r\n\t\t\t\tXAPIUtils.track(item);\r\n\t\t\t\r\n\t\t\tif(this.props.match.params.typeId==16){\r\n\t\t\t\tif(item.url){ video = <div id=\"video_div\"><VideoPlayer url={item.url} transcripts={[]} /></div> }\r\n\t\t\t\tcontent =  <div>\r\n\t\t\t\t\t\t\t{video}\r\n\t\t\t\t\t\t\t<div id=\"content\">{Parser(item.description)}</div>\r\n\t\t\t\t\t\t\t</div>;\r\n\t\t\t}else if(this.props.match.params.typeId==13 || this.props.match.params.typeId==6){\r\n\t\t\t\tif(item.url){ pdf = <div id=\"Attachment\"><a onClick={() => this.routeChange('/studyResource/' + this.props.match.params.typeId + '/' + this.props.match.params.subTypeId + '/pdf/' + item.id)}>VIEW ATTACHMENT</a></div> }\r\n\t\t\t\tcontent = <div>\r\n\t\t\t\t\t\t\t<div id=\"content\">{Parser(item.description)}</div>\r\n\t\t\t\t\t\t\t{pdf}\r\n\t\t\t\t\t\t\t</div>;\r\n\t\t\t}else if(this.props.match.params.typeId==1){\r\n\t\t\t\tif(item.url){ pdf = <div id=\"Attachment\"><a href={item.url} download >VIEW ATTACHMENT</a></div> }\r\n\t\t\t\tcontent = <div>\r\n\t\t\t\t\t\t\t<div id=\"content\">{Parser(item.description)}</div>\r\n\t\t\t\t\t\t\t{pdf}\r\n\t\t\t\t\t\t</div>;\r\n\t\t\t}else if(this.props.match.params.typeId==5){\r\n\t\t\t\tvar youtube = /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\r\n\t\t\t\tvar url = item.url\r\n\t\t\t\tif(url.match(youtube)){\r\n\t\t\t\t\tcontent = <div id=\"video_div\"><VideoPlayer url={url} transcripts={[]} /></div>\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcontent = <div><Iframe height=\"1000\" url={url} /></div>\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}else if(this.props.match.params.typeId==3){\r\n\t\t\t\tvar url =  \"https://view.officeapps.live.com/op/embed.aspx?src=\" + item.url;\r\n\t\t\t\tcontent = <div>\r\n\t\t\t\t\t\t\t<Iframe height=\"500\" url={url} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t}else if(this.props.match.params.typeId==31){\r\n\t\t\t\tvar url = item.url;\r\n\t\t\t\t\tif(url.includes(\"player\")){\r\n\t\t\t\t\turl = item.url;\r\n\t\t\t\t}else{\r\n\t\t\t\t\turl = new URL(item.url);\r\n\t\t\t\t\turl = url.pathname.substring(1);\r\n\t\t\t\t\turl = url.substring(0, url.lastIndexOf(\"/\") + 1);\r\n\t\t\t\t\turl = \"https://player.vimeo.com/video/\"+url;\r\n\t\t\t\t}\r\n\t\t\t\tcontent =   <div id=\"video_div\"> <VideoPlayer url={url} transcripts={[]} /> </div> \r\n\t\t\t}else if(this.props.match.params.typeId==30){\r\n\t\t\t\tcontent = <div>\r\n\t\t\t\t\t\t\t<div id=\"content\">{item.name}\r\n\t\t\t\t\t\t\t\t<a href={item.url} style={{float:'right'}}>START MEETING</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>{item.startDateTime}&nbsp;--&nbsp;{item.endDateTime}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t}else{\r\n\t\t\t\tcontent = <div>\r\n\t\t\t\t\t\t\t<div id=\"content\">No Resource Type Found!</div>\r\n\t\t\t\t\t\t  </div>;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet paramsString = this.props.location.search;\r\n\t\t\tconst params = new URLSearchParams(paramsString);\r\n\t\t\tvar len =  params.get('item');\r\n\t\t\tvar back_url =\"\";\r\n\t\t\tif(len==1){\r\n\t\t\t\tback_url = <a href=\"/dashboard\" className=\"text-white\"><FontAwesomeIcon icon={ faArrowLeft } /></a> ;\r\n\t\t\t}else{\r\n\t\t\t\tback_url = <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} /> ;\r\n\t\t\t}\r\n\t\t\r\n\t\t\treturn ( \r\n\t\t\t\t<div key={index}>\r\n\t\t\t\t<div className={`module-header-step2 ${this.props.location.state ? this.props.location.state.portlet.class : 'orange-card'}`}>\r\n\t\t\t\t<div className=\"back\">\r\n\t\t\t\t\t{back_url}\r\n\t\t\t\t</div>\r\n\t\t\t\t<h4>{item.name}</h4>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Card className=\"no_border_lrt\">\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<div className=\"cardbody\">\r\n\t\t\t\t\t\t{content}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t\t\t}\r\n\t\t})\r\n    }\r\n\t</div>\r\n  }\r\n\r\n}\r\n\r\n/*const mapStateToProps = state => ({\r\n  resource: state.resource.resource\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getResource: getResource,\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (ResourceDetails);\r\n\r\n*/\r\nexport default ResourceDetails;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test-player\\TestPlayer.js",["1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1270","1271","1272","1273","1274","1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285","1286","1287","1288","1289","1290","1291","1292","1293","1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306","1307","1308","1309","1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320","1321","1322","1323","1324","1325","1326","1327","1328","1329"],"import React, { Component, useState } from \"react\";\r\nimport \"./question-style.css\";\r\nimport Config from \"../../_config/config\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport { ILoader } from \"./../../_components/iloader/iloader\";\r\nimport { Row, Container } from \"react-bootstrap\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport Header from \"./components/Header\";\r\nimport Section from \"./components/Section\";\r\nimport Timer from \"./../../_components/timer/timer\";\r\nimport QuestionPalette from \"./components/QuestionPalette\";\r\nimport Model from \"./components/Model\";\r\nimport Question from \"./components/Question\";\r\nimport { QUESTION_TYPES } from \"./components/Types\";\r\nimport swal from \"sweetalert\";\r\nimport NumPad from \"react-numpad\";\r\nimport avatar from \"./img/blank-avatar.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Proctored from \"./../../_components/proctored\";\r\nimport toogleOpen from \"./img/mobile-slide.png\";\r\nimport toogleClose from \"./img/mobile-slide2.png\";\r\nimport Utils from \"../../_helpers/utils\";\r\n\r\nconst AWS = require(\"aws-sdk\");\r\nAWS.config.clear();\r\n// AWS.config.update({\r\n//   region: Config.AWSRegion,\r\n//   accessKeyId: Config.AWSAccessKeyId,\r\n//   secretAccessKey: Config.AWSSecretAccessKey,\r\n// });\r\n\r\nclass TestPlayer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showLoading: false,\r\n      questions: [],\r\n      show: false,\r\n      close: false,\r\n      testObject: \"\",\r\n      userObject: \"\",\r\n      section_index: 0,\r\n      question_index: 0,\r\n      view: \"question\",\r\n      prevTime: 0,\r\n      answer: null,\r\n      testCategory: null,\r\n      isUpdate: true,\r\n      progress: \"\",\r\n      allowAttachmentUploadAfterTest: false,\r\n      webCamProctoring: false,\r\n      blockMsg:\r\n        \"Suspicious activity detected. Your Exam is now blocked. Please contact the Exam Department for further assistance.\",\r\n      toogleActive: false,\r\n      notificationActive: true,\r\n      similarity: 100,\r\n      timerBlock: false,\r\n    };\r\n    //this.downloadTest = this.downloadTest.bind(this);\r\n    this.resumeTest = this.resumeTest.bind(this);\r\n    this.node = React.createRef();\r\n    this.inputOpenFileRef = React.createRef();\r\n    this.myBucket = new AWS.S3({\r\n      params: { Bucket: \"tuningfork-live\" },\r\n      region: Config.AWSRegion,\r\n    });\r\n    this.timeout = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    //console.log(\"this.props.location.....\");\r\n    //console.log(this.props.location);\r\n    //console.log(\"this.props.location.....end\");\r\n    this.setState({\r\n      userObject: JSON.parse(localStorage.getItem(\"user\")) || [],\r\n      tenant: localStorage.getItem(\"tenant\") || Config.siteTitle,\r\n      //testTime: parseInt(testobj.testTime)*60\r\n      testCategory: this.props.location.state\r\n        ? this.props.location.state.testCategory\r\n        : \"\",\r\n      testLms: this.props.location.state ? this.props.location.state.lms : 0,\r\n      testSteps: this.props.location.state\r\n        ? this.props.location.state.steps\r\n        : 0,\r\n      testResume: this.props.location.state\r\n        ? this.props.location.state.resume\r\n        : false,\r\n      testUrl: this.props.location.state\r\n        ? this.props.location.state.testUrl\r\n        : \"\",\r\n    });\r\n    document.body.classList.add(\"test-player-body\");\r\n    //this.downloadTest();\r\n    if (window.MathJax !== undefined) {\r\n      window.MathJax.Hub.Queue([\r\n        \"Typeset\",\r\n        window.MathJax.Hub,\r\n        this.node.current,\r\n      ]);\r\n    }\r\n\r\n    //this.updateTimer();\r\n    this.interval = setInterval(() => {\r\n      this.updateTimer();\r\n    }, 60000);\r\n\r\n    this.resumeTest();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (window.MathJax !== undefined) {\r\n      window.MathJax.Hub.Queue([\r\n        \"Typeset\",\r\n        window.MathJax.Hub,\r\n        this.node.current,\r\n      ]);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  showAlert() {\r\n    const wrapper = document.createElement(\"div\");\r\n    wrapper.innerHTML = Config.CONNECTION_ERROR_MSG;\r\n    swal({\r\n      content: wrapper,\r\n      icon: \"warning\",\r\n      button: \"Ok\",\r\n      allowOutsideClick: false,\r\n      closeOnClickOutside: false,\r\n      className: \"orange-card\",\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        window.location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n  BlockAlert(msg) {\r\n    const { testObject } = this.state;\r\n    swal({\r\n      text: msg,\r\n      icon: \"warning\",\r\n      button: \"Ok\",\r\n      allowOutsideClick: false,\r\n      closeOnClickOutside: false,\r\n      closeOnEsc: false,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        if (testObject?.testConfig?.lockdownBrowser == true) {\r\n          //this.props.history.push('/');\r\n          window.location.href = \"/dashboard\";\r\n        } else {\r\n          window.close();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onFileChange(event) {\r\n    event.preventDefault();\r\n    let testObject = this.state.testObject;\r\n    let file = event.target.files[0];\r\n    let fileName = event.target.files[0].name;\r\n    //var res_field = document.myform.elements[\"filefield\"].value;\r\n    var extension = fileName\r\n      .substr(fileName.lastIndexOf(\".\") + 1)\r\n      .toLowerCase();\r\n    var allowedExtensions = testObject?.testConfig?.validUploadFormats || [\r\n      \"pdf\",\r\n      \"doc\",\r\n      \"docx\",\r\n      \"xls\",\r\n      \"xlsx\",\r\n    ];\r\n    if (fileName.length > 0) {\r\n      if (allowedExtensions.indexOf(extension) === -1) {\r\n        alert(\r\n          \"Invalid file Format. Only \" +\r\n            allowedExtensions.join(\", \") +\r\n            \" are allowed.\"\r\n        );\r\n        return false;\r\n      } else {\r\n        this.uploadFile(file);\r\n      }\r\n    }\r\n    /*var allowedExtensions = /(\\.pdf|\\.doc|\\.docx|\\.xls|\\.xlsx)$/i;\r\n\t\tif (!allowedExtensions.exec(fileName)) {\r\n\t\t\talert('Invalid file type');\r\n\t\t}else{\r\n\t\t\tthis.uploadFile(file)\r\n\t\t}*/\r\n  }\r\n\r\n  uploadFile = async (file) => {\r\n    const { userObject, testObject, section_index, question_index } =\r\n      this.state;\r\n    const question =\r\n      testObject.sections[section_index].questions[question_index];\r\n    const tenant = localStorage.getItem(\"tenant\") || Config.siteTitle;\r\n\r\n    const testId = this.props.match?.params?.id;\r\n\r\n    this.setState({ showLoading: true }, async () => {\r\n        const formData = new FormData();\r\n        formData.append('dateBefore', new Date());\r\n        formData.append( \r\n          \"answersheetFile\", \r\n          file, \r\n          file.name,    \r\n        );\r\n  \r\n      try {\r\n        const { testObject, section_index, question_index } = this.state;\r\n        const question =\r\n          testObject.sections[section_index].questions[question_index];\r\n        console.log('here');\r\n        const res = await ApiService.uploadDoucment(\r\n          formData,\r\n          testId,\r\n          question.id\r\n        );\r\n        console.log(res);\r\n        var uploads = question.studentUploads || [];\r\n        const {url} = res?.data || {};\r\n        const urlArr = url?.split('/') || [];\r\n        console.log(urlArr);\r\n        const fileName = urlArr[urlArr.length -1];\r\n        console.log(fileName);\r\n        uploads.push(fileName);\r\n        question.studentUploads = uploads;\r\n        //console.log(question);\r\n        this.setState({\r\n          testObject: testObject,\r\n        });\r\n        this.updateS3file(question.id, uploads);\r\n      } catch (err) {\r\n        console.log(err);\r\n        this.showAlert();\r\n      } finally {\r\n        this.setState({\r\n          showLoading: false,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  deleteFile(e, index) {\r\n    e.preventDefault();\r\n    const { testObject, section_index, question_index } = this.state;\r\n    const question =\r\n      testObject.sections[section_index].questions[question_index];\r\n    var uploads = question.studentUploads;\r\n    const filteredItems = uploads\r\n      .slice(0, index)\r\n      .concat(uploads.slice(index + 1, uploads.length));\r\n    question.studentUploads = filteredItems;\r\n    this.updateS3file(question.id, filteredItems);\r\n  }\r\n\r\n  updateS3file(question_id, uploads) {\r\n    const fileUploads = uploads.join();\r\n    const { tenant, userObject, testObject } = this.state;\r\n    var student_response = {\r\n      tenant: tenant,\r\n      testId: testObject.id,\r\n      userId: userObject.userId,\r\n      isTimer: false,\r\n      isUpload: true,\r\n      student_uploads: {\r\n        [question_id]: fileUploads,\r\n      },\r\n    };\r\n\r\n    console.log(student_response, \"response\");\r\n\r\n    ApiService.testResponses(JSON.stringify(student_response))\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, err.stack); // an error occurred\r\n        this.showAlert();\r\n      });\r\n  }\r\n\r\n  resumeTest() {\r\n    const userObject = JSON.parse(localStorage.getItem(\"user\"));\r\n    const testId = this.props.match.params.id;\r\n    var tenant = localStorage.getItem(\"tenant\") || Config.siteTitle;\r\n    //'https://tuningfork-'+ Config.siteMode +'.s3.amazonaws.com/'+ tenant +'/uploads/testPapers/'+ testId +'/'+ testId +'.json'\r\n    let testUrl = this.props.location.state?.testUrl;\r\n\r\n    if (testUrl) {\r\n      var student_response = {\r\n        tenant: tenant,\r\n        testId: testId,\r\n        userId: userObject.userId,\r\n        s3Url: testUrl,\r\n      };\r\n      var that = this;\r\n\r\n      this.setState({ showLoading: true }, () => {\r\n        ApiService.testResumes(JSON.stringify(student_response))\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            console.log(res, \"response\");\r\n\r\n            let section_index = 0;\r\n            let question_index = 0;\r\n            let testObject = res.data;\r\n            console.log(testObject, \"Test object\");\r\n            if (testObject?.last_attempt != undefined) {\r\n              let sindex = testObject.sections.findIndex(\r\n                (x) => x.id === testObject.last_attempt.sectionid\r\n              );\r\n              if (sindex >= 0) {\r\n                section_index = sindex;\r\n              }\r\n            }\r\n\r\n            testObject?.sections.forEach((section, i) => {\r\n              var questions = [];\r\n              testObject.sections[i].questions.forEach((question, j) => {\r\n                if (question.hasOwnProperty(\"questions\")) {\r\n                  var questions_list =\r\n                    testObject.sections[i].questions[j].questions;\r\n                  questions_list.forEach((q, k) => {\r\n                    questions.push(questions_list[k]);\r\n                  });\r\n                } else {\r\n                  questions.push(question);\r\n                }\r\n              });\r\n              testObject.sections[i].questions = questions;\r\n              if (testObject.last_attempt != undefined) {\r\n                let qindex = questions.findIndex(\r\n                  (x) => x.id === testObject.last_attempt.questionid\r\n                );\r\n                if (qindex >= 0) {\r\n                  question_index = qindex;\r\n                }\r\n              }\r\n            });\r\n\r\n            if (!testObject.sections[0]?.questions[0]?.class) {\r\n              testObject.sections[0].questions[0].class = \"not-answered-large\";\r\n            }\r\n\r\n            if (\r\n              testObject?.testConfig?.initRDSonTestStart == true ||\r\n              testObject?.testConfig?.initRDSonTestStart == undefined\r\n            ) {\r\n              that.initTestRDS(testId);\r\n            }\r\n\r\n            if (that.state.testResume == false) {\r\n              that.initTestDynamodb();\r\n            }\r\n\r\n            that.setState({\r\n              testObject: testObject,\r\n              timeSpent: parseInt(testObject.timeSpent),\r\n              //testTime : (parseInt(testObject.testTime)-parseInt(testObject.timer.time || 0))*60,\r\n              //prevTime: (parseInt(testObject.testTime)-parseInt(testObject.timer.time || 0))*60,\r\n              testTime: parseInt(testObject.testTime) * 60,\r\n              prevTime: parseInt(testObject.testTime) * 60,\r\n              showLoading: false,\r\n              section_index: section_index,\r\n              question_index: question_index,\r\n              webCamProctoring:\r\n                testObject?.testConfig?.webCamProctoring?.enabled,\r\n              allowAttachmentUploadAfterTest:\r\n                testObject?.testConfig?.allowAttachmentUploadAfterTest,\r\n            });\r\n\r\n            if (that.timeout) clearTimeout(that.timeout);\r\n            that.timeout = setTimeout(() => {\r\n              that.considerBestOf(section_index);\r\n            }, 100);\r\n          })\r\n          .catch((err) => {\r\n            that.setState({\r\n              showLoading: false,\r\n            });\r\n            //alert(Config.CONNECTION_ERROR_MSG);\r\n            that.showAlert();\r\n            console.log(err, err.stack); // an error occurred\r\n          });\r\n      });\r\n    } else {\r\n      this.showAlert();\r\n    }\r\n  }\r\n\r\n  initTestRDS(testId) {\r\n    this.setState({ loading: true }, () => {\r\n      ApiService.initTestTaking(testId).then(\r\n        (res) => {\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            showLoading: false,\r\n          });\r\n          this.showAlert();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  initTestDynamodb() {\r\n    let tenant = localStorage.getItem(\"tenant\") || Config.siteTitle;\r\n    //let tenant = \"isbat_testing\"\r\n    let userObject = JSON.parse(localStorage.getItem(\"user\")) || [];\r\n    var student_response = {\r\n      tenant: tenant,\r\n      testId: this.props.match.params.id,\r\n      userId: userObject.userId,\r\n      testDetails: true,\r\n    };\r\n\r\n    console.log(student_response, \"response\");\r\n    var that = this;\r\n\r\n    ApiService.testResponses(JSON.stringify(student_response))\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        that.props.history.replace({ state: { resume: true } });\r\n      })\r\n      .catch((err) => {\r\n        that.showAlert();\r\n        console.log(err, err.stack); // an error occurred\r\n      });\r\n  }\r\n\r\n  updateTimer() {\r\n    if (this.state.timerBlock === false) {\r\n      var blockMsg = this.state.blockMsg;\r\n      var time = Math.round(\r\n        (this.state.testTime - this.state.currentTimeSeconds) / 60\r\n      );\r\n      const { tenant, userObject, testObject, timeSpent } = this.state;\r\n      var student_response = {\r\n        tenant: tenant,\r\n        testId: testObject.id,\r\n        userId: userObject.userId,\r\n        time: timeSpent + time,\r\n        sectionid: \"\",\r\n        isTimer: true,\r\n        isUpdate: this.state.isUpdate,\r\n        proctor: this.state.webCamProctoring,\r\n      };\r\n      var that = this;\r\n      console.log(student_response, \"response\");\r\n\r\n      ApiService.testResponses(JSON.stringify(student_response))\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          console.log(res); // successful response\r\n          if (that.state.webCamProctoring) {\r\n            that.setState({\r\n              similarity: res.similarity,\r\n              notificationActive: true,\r\n            });\r\n          }\r\n          if (res.blanket_flag == \"BLOCK\") {\r\n            that.BlockAlert(blockMsg);\r\n            that.setState({\r\n              timerBlock: true,\r\n            });\r\n          } else if (res.blanket_flag == \"\" && res.block_test == true) {\r\n            that.BlockAlert(blockMsg);\r\n            that.setState({\r\n              timerBlock: true,\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          alert(Config.CONNECTION_ERROR_MSG);\r\n          console.log(err, err.stack); // an error occurred\r\n        });\r\n    }\r\n  }\r\n\r\n  downloadTest() {\r\n    var d = new Date();\r\n    var rand = d.getTime();\r\n    var testId = this.props.match.params.id;\r\n    var tenant = localStorage.getItem(\"tenant\") || Config.siteTitle;\r\n    var testobj =\r\n      \"https://tuningfork-\" +\r\n      Config.siteMode +\r\n      \".s3.amazonaws.com/\" +\r\n      tenant +\r\n      \"/uploads/testPapers/\" +\r\n      testId +\r\n      \"/\" +\r\n      testId +\r\n      \".json\";\r\n    this.setState({ showLoading: true }, () => {\r\n      ApiService.fetchTestJson(testobj + \"?id=\" + rand).then(\r\n        (res) => {\r\n          console.log(JSON.stringify(res));\r\n          let testObject = res.data;\r\n          for (let i = 0; i < testObject.sections.length; i++) {\r\n            for (let j = 0; j < testObject.sections[i].questions.length; j++) {\r\n              if (testObject.sections[i].questions[j].questions) {\r\n                var questions_list =\r\n                  testObject.sections[i].questions[j].questions;\r\n                var questions_length = questions_list.length;\r\n                //delete testObject.sections[i].questions[j];\r\n                for (let k = 0; k < questions_length; k++) {\r\n                  testObject.sections[i].questions.push(questions_list[k]);\r\n                }\r\n                //testObject.sections[i].questions.splice(j,1);\r\n              }\r\n            }\r\n          }\r\n\r\n          for (let i = 0; i < testObject.sections.length; i++) {\r\n            for (let j = 0; j < testObject.sections[i].questions.length; j++) {\r\n              if (testObject.sections[i].questions[j].questions) {\r\n                testObject.sections[i].questions.splice(j, 1);\r\n                //\tconsole.log(JSON.stringify(testObject));\r\n              }\r\n            }\r\n            testObject.sections[i].questions.sort(function (a, b) {\r\n              return a.questionNumber - b.questionNumber;\r\n            });\r\n          }\r\n\r\n          for (let i = 0; i < testObject.sections.length; i++) {\r\n            for (let j = 0; j < testObject.sections[i].questions.length; j++) {\r\n              if (testObject.sections[i].questions[j].questions) {\r\n                testObject.sections[i].questions.splice(j, 1);\r\n                //\tconsole.log(JSON.stringify(testObject));\r\n              }\r\n            }\r\n          }\r\n\r\n          if (!testObject.sections[0].questions[0].class) {\r\n            testObject.sections[0].questions[0].class = \"not-answered-large\";\r\n          }\r\n\r\n          //console.log(JSON.stringify(testObject));\r\n          this.setState({\r\n            testObject: testObject,\r\n            testTime: parseInt(testObject.testTime) * 60,\r\n            prevTime: parseInt(testObject.testTime) * 60,\r\n            showLoading: false,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            showLoading: false,\r\n          });\r\n          alert(Config.CONNECTION_ERROR_MSG);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  modeShow = (show) => {\r\n    this.setState({\r\n      show: show,\r\n    });\r\n  };\r\n\r\n  changeView(view) {\r\n    this.setState({\r\n      view: view,\r\n      toogleActive: false,\r\n      overlay: false,\r\n    });\r\n  }\r\n\r\n  toggleClass() {\r\n    const currentState = this.state.toogleActive;\r\n    this.setState({ toogleActive: !currentState, overlay: !currentState });\r\n  }\r\n\r\n  closeNotifiction() {\r\n    this.setState({ notificationActive: false });\r\n  }\r\n\r\n  EndExam = (status) => {\r\n    this.NextQuestion(\"submit\");\r\n    const { tenant, userObject, testObject } = this.state;\r\n    var submitStatus = status;\r\n    if (!submitStatus) {\r\n      submitStatus = 2;\r\n    }\r\n    var student_response = {\r\n      tenant: tenant,\r\n      testId: testObject.id,\r\n      userId: [userObject.userId],\r\n      testSubmit: true,\r\n      submitStatus: submitStatus,\r\n      autoSubmitToRDS: testObject?.testConfig?.autoSubmitToRDS,\r\n      siteUrl: Config.siteUrl,\r\n    };\r\n    var that = this;\r\n    console.log(student_response, \"response\");\r\n\r\n    that.setState({ showLoading: true }, () => {\r\n      ApiService.testResponses(JSON.stringify(student_response))\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          //console.log(data);  // successful response\r\n          that.setState({\r\n            showLoading: false,\r\n          });\r\n\r\n          //if(res.status==\"success\" && testObject?.testConfig?.autoSubmitToRDS == true){\r\n          //that.SubmitToRDS();\r\n          //}else\r\n\r\n          if (res.status == \"success\") {\r\n            swal({\r\n              text:\r\n                testObject?.testConfig?.resutDeclarationMessage ||\r\n                \"Test submitted successfully.\",\r\n              icon: \"success\",\r\n              button: \"Ok\",\r\n              allowOutsideClick: false,\r\n              closeOnClickOutside: false,\r\n              closeOnEsc: false,\r\n            }).then((willDelete) => {\r\n              if (willDelete) {\r\n                document.body.classList.remove(\"test-player-body\");\r\n                if (that.state.allowAttachmentUploadAfterTest == true) {\r\n                  console.log(\"here\");\r\n                  that.props.history.replace({\r\n                    pathname: \"/test/upload/\" + testObject.id,\r\n                    state: { testEndTime: 0 },\r\n                  });\r\n                } else if (testObject?.testConfig?.lockdownBrowser == true) {\r\n                  window.location.href = \"/dashboard\";\r\n                } else if (testObject?.testConfig?.autoSubmitToRDS == true) {\r\n                  that.props.history.replace(\"/test-result/1/\" + testObject.id);\r\n                } else {\r\n                  window.close();\r\n                }\r\n              }\r\n            });\r\n          } else {\r\n            that.BlockAlert(\"Unable to submit test. Please try again later\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err, err.stack); // an error occurred\r\n          that.setState({\r\n            showLoading: false,\r\n          });\r\n          alert(Config.CONNECTION_ERROR_MSG);\r\n        });\r\n    });\r\n\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  };\r\n\r\n  SubmitToRDS = () => {\r\n    const { tenant, userObject, testObject } = this.state;\r\n    this.setState({ showLoading: true }, () => {\r\n      ApiService.submitTest(testObject.id, userObject.userId).then(\r\n        (res) => {\r\n          console.log(JSON.stringify(res));\r\n          this.setState({\r\n            showLoading: false,\r\n          });\r\n          if (res.data.message) {\r\n            //Your answers have been saved and the Test has been submitted successfully.\r\n            //Please wait we are redirect to test result page.\r\n            swal({\r\n              text: res.data.message,\r\n              icon: \"success\",\r\n              button: \"Ok\",\r\n              allowOutsideClick: false,\r\n              closeOnClickOutside: false,\r\n              closeOnEsc: false,\r\n            }).then((willDelete) => {\r\n              if (willDelete) {\r\n                document.body.classList.remove(\"test-player-body\");\r\n                if (this.state.allowAttachmentUploadAfterTest == true) {\r\n                  console.log(\"here\");\r\n                  this.props.history.push({\r\n                    pathname: \"/test/upload/\" + testObject.id,\r\n                    state: { testEndTime: 0 },\r\n                  });\r\n                } else if (\r\n                  this.state.testLms == 0 &&\r\n                  this.state.testSteps == 0\r\n                ) {\r\n                  this.props.history.replace(\"/test-result/1/\" + testObject.id);\r\n                } else {\r\n                  this.props.history.replace(\"/test-result/1/\" + testObject.id);\r\n                }\r\n              }\r\n            });\r\n          } else {\r\n            swal({\r\n              text: \"Unable to submit test. Please try again later\",\r\n              icon: \"warning\",\r\n              button: \"Ok\",\r\n              allowOutsideClick: false,\r\n              closeOnClickOutside: false,\r\n              closeOnEsc: false,\r\n            }).then((willDelete) => {\r\n              if (willDelete) {\r\n                document.body.classList.remove(\"test-player-body\");\r\n                if (this.state.testLms == 0 && this.state.testSteps == 0) {\r\n                  this.props.history.replace(\"/test-result/1/\" + testObject.id);\r\n                } else {\r\n                  this.props.history.replace(\"/test-result/1/\" + testObject.id);\r\n                }\r\n              }\r\n            });\r\n          }\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            showLoading: false,\r\n          });\r\n          alert(Config.CONNECTION_ERROR_MSG);\r\n        }\r\n      );\r\n    });\r\n\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  };\r\n\r\n  changeSection = (section_index) => {\r\n    this.setState({\r\n      section_index: section_index,\r\n      question_index: 0,\r\n    });\r\n    let question_index = 0;\r\n    const testObject = this.state.testObject;\r\n    const question =\r\n      testObject.sections[section_index].questions[question_index];\r\n    if (!question.class) {\r\n      question.class = \"not-answered-large\";\r\n    }\r\n\r\n    if (this.timeout) clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      this.considerBestOf(this.state.section_index);\r\n    }, 100);\r\n  };\r\n\r\n  showQuestion(section_index, question_index) {\r\n    const testObject = this.state.testObject;\r\n    const question =\r\n      testObject.sections[section_index].questions[question_index];\r\n    //console.log(testObject);\r\n    var a = [];\r\n    a = document.getElementsByTagName(\"input\");\r\n\r\n    if (question.questionCategory == QUESTION_TYPES[5].value) {\r\n      for (var b = 0; b < a.length; b++) {\r\n        if (a[b].type == \"checkbox\") {\r\n          a[b].checked = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      section_index: section_index,\r\n      question_index: question_index,\r\n      answer: \"\",\r\n    });\r\n\r\n    //let answered = question.answered;\r\n    if (!question.class) {\r\n      question.class = \"not-answered-large\";\r\n    }\r\n\r\n    this.setState({ toogleActive: false, overlay: false });\r\n  }\r\n\r\n  getCheckeboxValue(event) {\r\n    const choice = event.target.value;\r\n    //const status = event.target.checked;\r\n    this.setState({\r\n      choice: choice,\r\n    });\r\n  }\r\n\r\n  onTodoChange(answer) {\r\n    this.setState({\r\n      answer: answer,\r\n    });\r\n  }\r\n\r\n  NextQuestion = (type) => {\r\n    var that = this;\r\n    const { tenant, userObject, testObject, section_index, question_index } =\r\n      this.state;\r\n    const section = testObject.sections[section_index];\r\n    const question =\r\n      testObject.sections[section_index].questions[question_index];\r\n\r\n    //console.log(testObject.sections[section_index].questions);\r\n\r\n    var choiceString = [];\r\n    var status = \"\";\r\n    var choice = [];\r\n    var checkeds = \"\";\r\n    if (\r\n      question.questionCategory == QUESTION_TYPES[0].value ||\r\n      question.questionCategory == QUESTION_TYPES[1].value\r\n    ) {\r\n      if (question.questionCategory == QUESTION_TYPES[0].value) {\r\n        checkeds = document.querySelectorAll(\"input[type=checkbox]:checked\");\r\n      } else if (question.questionCategory == QUESTION_TYPES[1].value) {\r\n        checkeds = document.querySelectorAll(\"input[type=radio]:checked\");\r\n      }\r\n\r\n      for (let i = 0; i < checkeds.length; i++) {\r\n        if (checkeds[i].checked) {\r\n          for (var opt = 0; opt < question.choices.length; opt++) {\r\n            if (question.choices[opt].id == checkeds[i].value) {\r\n              choiceString[opt] = question.choices[opt].choiceString;\r\n              choice[opt] = checkeds[i].value;\r\n              question.choices[opt].checked = 1;\r\n              question.answered = 1;\r\n            } else {\r\n              question.choices[opt].checked = 0;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (choiceString.length > 0) {\r\n        choiceString = choiceString.filter((n) => n);\r\n        choiceString = choiceString.join();\r\n        choice = choice.filter((n) => n);\r\n        choice = choice.join();\r\n      } else {\r\n        choiceString = \"\";\r\n        choice = \"\";\r\n      }\r\n    } else if (\r\n      question.questionCategory == QUESTION_TYPES[2].value ||\r\n      question.questionCategory == QUESTION_TYPES[3].value ||\r\n      question.questionCategory == QUESTION_TYPES[4].value ||\r\n      question.questionCategory == QUESTION_TYPES[6].value\r\n    ) {\r\n      var choiceString = \"\";\r\n      var choice = \"\";\r\n      choiceString = this.state.answer || question.answered;\r\n      question.answered = this.state.answer || question.answered;\r\n    } else if (question.questionCategory == QUESTION_TYPES[5].value) {\r\n      /*var answered_array =  \"\";\r\n\t\t\tvar choiceString = \"\";\r\n\t\t\tvar choice = \"\";*/\r\n      var answered_array = [];\r\n      var choiceString = [];\r\n      var choice = [];\r\n      checkeds = document.querySelectorAll(\"input[type=checkbox]:checked\");\r\n      for (let i = 0; i < checkeds.length; i++) {\r\n        if (checkeds[i].checked) {\r\n          answered_array.push(checkeds[i].value);\r\n        }\r\n      }\r\n      question.answered = answered_array;\r\n      var arr = answered_array;\r\n      var answered = {};\r\n      if (arr != undefined) {\r\n        for (var c = 0; c < arr.length; c++) {\r\n          var cur = arr[c];\r\n          var choice = cur.split(\":\")[0];\r\n          var match = cur.split(\":\")[1];\r\n          if (answered[choice]) {\r\n            var matches = answered[choice];\r\n            matches.push(match);\r\n            answered[choice] = matches;\r\n          } else {\r\n            var matches = [];\r\n            matches.push(match);\r\n            answered[choice] = matches;\r\n          }\r\n        }\r\n      }\r\n\r\n      var answers = Object.keys(answered);\r\n      var attemptedAnswer = \"\";\r\n      for (var d = 0; d < answers.length; d++) {\r\n        var choice = answers[d];\r\n        attemptedAnswer += choice + \":\";\r\n        for (var e = 0; e < answered[choice].length; e++) {\r\n          attemptedAnswer += answered[choice][e] + \";\";\r\n        }\r\n        attemptedAnswer = attemptedAnswer.slice(0, attemptedAnswer.length - 1);\r\n        attemptedAnswer += \",\";\r\n      }\r\n      attemptedAnswer = attemptedAnswer.slice(0, attemptedAnswer.length - 1);\r\n\r\n      if (answered_array.length == 0) {\r\n        choiceString = \"\";\r\n      } else {\r\n        //choiceString = answered_array;\r\n        choiceString = answered_array.join();\r\n      }\r\n      choice = attemptedAnswer;\r\n    }\r\n\r\n    if (\r\n      choiceString &&\r\n      (type == \"next\" ||\r\n        type === \"save\" ||\r\n        type === \"prev\" ||\r\n        type === \"submit\")\r\n    ) {\r\n      status = \"A\";\r\n      question.class = \"answered-large\";\r\n    } else if (\r\n      type == \"next\" ||\r\n      type === \"save\" ||\r\n      type === \"prev\" ||\r\n      type === \"submit\"\r\n    ) {\r\n      status = \"N_A\";\r\n      question.class = \"not-answered-large\";\r\n    } else if (choiceString && (type == \"mark\" || type === \"mark_notSave\")) {\r\n      status = \"M_A\";\r\n      question.class = \"answered-marked-large\";\r\n    } else if (type == \"mark\" || type === \"mark_notSave\") {\r\n      status = \"M\";\r\n      question.class = \"marked-large\";\r\n    }\r\n\r\n    var ts =\r\n      parseInt(this.state.prevTime) - parseInt(this.state.currentTimeSeconds);\r\n    this.setState({\r\n      prevTime: this.state.currentTimeSeconds,\r\n    });\r\n\r\n    var timestamp = new Date().valueOf();\r\n    var student_response = {\r\n      tenant: tenant,\r\n      testId: testObject.id,\r\n      userId: userObject.userId,\r\n      t: timestamp,\r\n      ts: ts,\r\n      questionid: question.id,\r\n      sectionid: section.id,\r\n      attemptedchoiceid: choice,\r\n      attemptedchoicestring: choiceString,\r\n      status: status,\r\n      isTimer: false,\r\n      isUpdate: this.state.isUpdate,\r\n    };\r\n\r\n    question.attemptedchoiceid = choice;\r\n    question.attemptedchoicestring = choiceString;\r\n\r\n    console.log(student_response, \"response\");\r\n\r\n    that.setState({ showLoading: true }, () => {\r\n      ApiService.testResponses(JSON.stringify(student_response))\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          console.log(res); // successful response\r\n          that.setState({\r\n            showLoading: false,\r\n          });\r\n\r\n          if (type === \"submit\") return;\r\n          if (type === \"save\") return;\r\n          if (type === \"prev\") return;\r\n          if (type === \"mark_notSave\") return;\r\n\r\n          this.considerBestOf();\r\n\r\n          var a = [];\r\n          a = document.getElementsByTagName(\"input\");\r\n          for (var b = 0; b < a.length; b++) {\r\n            if (a[b].type == \"checkbox\") {\r\n              a[b].checked = false;\r\n            }\r\n          }\r\n\r\n          if (\r\n            question_index <\r\n            testObject.sections[section_index].questions.length - 1\r\n          ) {\r\n            this.setState({\r\n              question_index: this.state.question_index + 1,\r\n              choice: \"\",\r\n              answer: \"\",\r\n              testObject: testObject,\r\n            });\r\n          } else if (section_index < testObject.sections.length - 1) {\r\n            this.setState({\r\n              section_index: this.state.section_index + 1,\r\n              question_index: 0,\r\n              choice: \"\",\r\n              answer: \"\",\r\n              testObject: testObject,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              section_index: 0,\r\n              question_index: 0,\r\n              choice: \"\",\r\n              answer: \"\",\r\n              testObject: testObject,\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          that.setState({\r\n            showLoading: false,\r\n          });\r\n          alert(Config.CONNECTION_ERROR_MSG);\r\n          console.log(err, err.stack); // an error occurred\r\n        });\r\n    });\r\n\r\n    //console.log(this.state.testObject)\r\n  };\r\n\r\n  PrevQuestion = () => {\r\n    this.NextQuestion(\"prev\");\r\n\r\n    const { testObject, section_index, question_index } = this.state;\r\n\r\n    if (question_index != 0) {\r\n      this.setState({\r\n        question_index: this.state.question_index - 1,\r\n        choice: \"\",\r\n        answer: \"\",\r\n        testObject: testObject,\r\n      });\r\n    } else if (section_index != 0) {\r\n      this.setState({\r\n        section_index: this.state.section_index - 1,\r\n        question_index:\r\n          testObject.sections[this.state.section_index - 1].questions.length -\r\n          1,\r\n        choice: \"\",\r\n        answer: \"\",\r\n        testObject: testObject,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        section_index: 0,\r\n        question_index: 0,\r\n        choice: \"\",\r\n        answer: \"\",\r\n        testObject: testObject,\r\n      });\r\n    }\r\n  };\r\n\r\n  considerBestOf = (section_ind) => {\r\n    const { testObject, section_index } = this.state;\r\n    let section_ques;\r\n    if (section_ind) {\r\n      section_ques = testObject.sections[section_ind].questions;\r\n    } else {\r\n      section_ques = testObject.sections[section_index].questions;\r\n    }\r\n\r\n    let answered_count = 0;\r\n    for (var e = 0; e < section_ques.length; e++) {\r\n      if (\r\n        section_ques[e].class == \"answered-large\" ||\r\n        section_ques[e].class == \"answered-marked-large\"\r\n      ) {\r\n        answered_count++;\r\n      }\r\n    }\r\n\r\n    if (\r\n      testObject.sections[section_index].considerBestOf == true &&\r\n      section_ques.length ==\r\n        testObject.sections[section_index].noOfQuestionsToConsider\r\n    ) {\r\n      document.getElementById(\"save_next\").disabled = false;\r\n      let markNext = document.getElementById(\"mark_next\");\r\n      if (markNext) {\r\n        markNext.disabled = false;\r\n      }\r\n    } else if (\r\n      testObject.sections[section_index].considerBestOf == true &&\r\n      testObject.sections[section_index].noOfQuestionsToConsider <=\r\n        answered_count\r\n    ) {\r\n      document.getElementById(\"save_next\").disabled = true;\r\n      let markNext = document.getElementById(\"mark_next\");\r\n      if (markNext) {\r\n        markNext.disabled = true;\r\n      }\r\n    } else {\r\n      document.getElementById(\"save_next\").disabled = false;\r\n      let markNext = document.getElementById(\"mark_next\");\r\n      if (markNext) {\r\n        markNext.disabled = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  clearResponse = () => {\r\n    var that = this;\r\n    var a = [];\r\n    a = document.getElementsByTagName(\"input\");\r\n\r\n    const textArea = document.getElementsByTagName(\"textarea\");\r\n    if (textArea) this.setState({ answer: \"\" });\r\n\r\n    for (var b = 0; b < a.length; b++) {\r\n      if (a[b].type == \"radio\") {\r\n        a[b].checked = false;\r\n      } else if (a[b].type == \"checkbox\") {\r\n        a[b].checked = false;\r\n      } else if (a[b].type == \"text\") {\r\n        console.log(\"here\");\r\n        this.setState({\r\n          answer: \"\",\r\n        });\r\n      }\r\n    }\r\n\r\n    const { tenant, userObject, testObject, section_index, question_index } =\r\n      this.state;\r\n    const section = testObject.sections[section_index];\r\n    const question =\r\n      testObject.sections[section_index].questions[question_index];\r\n    if (\r\n      question.questionCategory == QUESTION_TYPES[0].value ||\r\n      question.questionCategory == QUESTION_TYPES[1].value\r\n    ) {\r\n      for (var opt = 0; opt < question.choices.length; opt++) {\r\n        question.choices[opt].checked = \"\";\r\n      }\r\n    } else if (\r\n      question.questionCategory == QUESTION_TYPES[2].value ||\r\n      question.questionCategory == QUESTION_TYPES[3].value ||\r\n      question.questionCategory == QUESTION_TYPES[4].value ||\r\n      question.questionCategory == QUESTION_TYPES[6].value ||\r\n      question.questionCategory == QUESTION_TYPES[5].value\r\n    ) {\r\n      question.answered = \"\";\r\n    }\r\n    question.class = \"not-answered-large\";\r\n\r\n    question.attemptedchoicestring = \"\";\r\n    question.attemptedchoiceid = \"\";\r\n    var ts =\r\n      parseInt(this.state.prevTime) - parseInt(this.state.currentTimeSeconds);\r\n    this.setState({\r\n      prevTime: this.state.currentTimeSeconds,\r\n    });\r\n\r\n    var timestamp = new Date().valueOf();\r\n    var student_response = {\r\n      tenant: tenant,\r\n      testId: testObject.id,\r\n      userId: userObject.userId,\r\n      t: timestamp,\r\n      ts: ts,\r\n      questionid: question.id,\r\n      sectionid: section.id,\r\n      attemptedchoiceid: \"\",\r\n      attemptedchoicestring: \"\",\r\n      status: \"N_A\",\r\n      isTimer: false,\r\n      isUpdate: this.state.isUpdate,\r\n    };\r\n\r\n    console.log(student_response, \"response\");\r\n\r\n    that.setState({ showLoading: true }, () => {\r\n      ApiService.testResponses(JSON.stringify(student_response))\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          console.log(res); // successful response\r\n          that.setState({\r\n            showLoading: false,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          that.setState({\r\n            showLoading: false,\r\n          });\r\n          alert(Config.CONNECTION_ERROR_MSG);\r\n          console.log(err, err.stack); // an error occurred\r\n        });\r\n    });\r\n\r\n    this.setState({\r\n      testObject: testObject,\r\n    });\r\n\r\n    this.considerBestOf();\r\n  };\r\n\r\n  currentTime(time) {\r\n    this.setState({\r\n      currentTimeSeconds: time,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    //console.log(this.state.testObject);\r\n    const userObject = JSON.parse(localStorage.getItem(\"user\"));\r\n    const testId = this.props.match.params.id;\r\n    var tenant = localStorage.getItem(\"tenant\") || Config.siteTitle;\r\n    return (\r\n      <div className=\"test-player\">\r\n        {this.state.webCamProctoring == true && this.state.similarity <= 70 ? (\r\n          <div\r\n            className={\r\n              this.state.notificationActive\r\n                ? \"alert alert-warning open\"\r\n                : \"alert alert-warning close\"\r\n            }\r\n          >\r\n            <strong>\r\n              Please adjust your camera to avoid blocking of the test\r\n            </strong>{\" \"}\r\n            <button className=\"close\" onClick={() => this.closeNotifiction()}>\r\n              &times;\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <Container id=\"container\" fluid>\r\n          <div className=\"mainView\">\r\n            <Header title={this.state.testObject.name} />\r\n            {this.state.testObject !== \"\" &&\r\n            this.state.testObject?.testConfig?.disableNavigationPanel ? null : (\r\n              <div\r\n                className={\r\n                  this.state.toogleActive ? \"toggle-name open\" : \"toggle-name\"\r\n                }\r\n                onClick={() => this.toggleClass()}\r\n              >\r\n                <img src={toogleOpen} className=\"toggle-open\" alt=\"\" />\r\n                <img src={toogleClose} className=\"toggle-close\" alt=\"\" />\r\n              </div>\r\n            )}\r\n            <div className={this.state.webCamProctoring ? \"proctored_div\" : \"\"}>\r\n              {this.state.webCamProctoring && (\r\n                <Row>\r\n                  <div className=\"col-9 padding-0\"></div>\r\n                  <div className=\"col-3 padding-0\">\r\n                    <Proctored\r\n                      tenant={tenant}\r\n                      testId={testId}\r\n                      userId={userObject.userId}\r\n                      bucketName=\"tuningfork-proctored-live\"\r\n                    />\r\n                  </div>\r\n                </Row>\r\n              )}\r\n              <Row>\r\n                <Section\r\n                  testObject={this.state.testObject}\r\n                  sectionIndex={this.state.section_index}\r\n                  changeSection={this.changeSection.bind(this)}\r\n                />\r\n\r\n                <div className=\"col-md-3 col-sm-3 col-xs-12 order-first order-md-last padding-0\">\r\n                  {this.renderProfileWebcam()}\r\n                  {this.state.timerBlock === false &&\r\n                    this.state.testTime >= 0 && (\r\n                      <Timer\r\n                        startTimeInSeconds={parseInt(this.state.testTime)}\r\n                        EndExam={this.EndExam.bind(this)}\r\n                        currentTime={this.currentTime.bind(this)}\r\n                        type=\"desktop\"\r\n                      />\r\n                    )}\r\n                </div>\r\n                <div\r\n                  className={\r\n                    this.state.toogleActive ? \"overlay_show\" : \"overlay_hide\"\r\n                  }\r\n                  onClick={() => this.toggleClass()}\r\n                >\r\n                  &nbsp;\r\n                </div>\r\n              </Row>\r\n\r\n              <Row>\r\n                {this.state.view == \"question\" ? this.renderQuestions() : \" \"}\r\n                {this.state.view == \"profile\" ? this.renderProfile() : \" \"}\r\n                {this.state.view == \"instructions\"\r\n                  ? this.renderInstructions()\r\n                  : \" \"}\r\n                {this.state.view == \"paper\" ? this.renderPaper() : \" \"}\r\n                {this.renderQuestionsPalette()}\r\n                <div\r\n                  className={\r\n                    this.state.toogleActive ? \"overlay_show\" : \"overlay_hide\"\r\n                  }\r\n                  onClick={() => this.toggleClass()}\r\n                >\r\n                  &nbsp;\r\n                </div>\r\n              </Row>\r\n            </div>\r\n\r\n            <Model\r\n              show={this.state.show}\r\n              close={this.state.close}\r\n              modeShow={this.modeShow.bind(this)}\r\n              EndExam={this.EndExam.bind(this)}\r\n            />\r\n            {this.renderLoader()}\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderProfileWebcam() {\r\n    return (\r\n      <>\r\n        <div className=\"profile_block\">\r\n          <span className=\"img-container\">\r\n            {this.state.userObject?.photoPath && (\r\n              <img\r\n                className=\"profile_pic\"\r\n                src={this.state.userObject.photoPath}\r\n                onError={(e) => {\r\n                  e.target.onerror = null;\r\n                  e.target.src = avatar;\r\n                }}\r\n                alt=\"\"\r\n              />\r\n            )}\r\n            <img\r\n              style={{\r\n                marginLeft: this.state.userObject?.photoPath ? \"30px\" : \"0px\",\r\n              }}\r\n              className=\"test-player-logo-img\"\r\n              src={`https://webfront.edusquares.com/${Config.siteTitle}/files/logos/logo.png`}\r\n              alt=\"logo\"\r\n            />\r\n          </span>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderQuestions() {\r\n    let isMobile = Utils.isMobileDevice();\r\n    const { section_index, question_index } = this.state;\r\n    return (\r\n      <div className=\"col-md-9 col-sm-9 col-xs-12 mobile-p15\">\r\n        {this.state.testObject &&\r\n          this.renderQuestionsInfo(section_index, question_index)}\r\n        {this.state.testObject &&\r\n          this.renderQuestionsType(section_index, question_index)}\r\n        {isMobile === true\r\n          ? this.renderQuestionsBtnsMobile(true)\r\n          : this.state.testObject !== \"\" &&\r\n            this.state.testObject?.testConfig?.disableNavigationPanel\r\n          ? this.renderQuestionsBtnsMobile(false)\r\n          : this.renderQuestionsBtns()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderQuestionsPalette = () => {\r\n    if (\r\n      this.state.testObject !== \"\" &&\r\n      this.state.testObject?.testConfig?.disableNavigationPanel\r\n    ) {\r\n      return null;\r\n    } else {\r\n      return (\r\n        <div\r\n          className={\r\n            this.state.toogleActive\r\n              ? \"col-md-3 col-sm-3 col-xs-12 question-palette open\"\r\n              : \"col-md-3 col-sm-3 col-xs-12 question-palette\"\r\n          }\r\n        >\r\n          <div className=\"panel-right\">\r\n            <QuestionPalette\r\n              testObject={this.state.testObject}\r\n              showSection={this.state.section_index}\r\n              showQuestion={this.showQuestion.bind(this)}\r\n              curentQuestion={this.state.question_index}\r\n            />\r\n            {this.renderLegend()}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  renderQuestionsInfo(section_index, question_index) {\r\n    const question =\r\n      this.state.testObject.sections[section_index].questions[question_index];\r\n    return (\r\n      <>\r\n        <div className=\"question-info\">\r\n          <span className=\"question-type\">\r\n            Question Type :\r\n            <span className=\"category\">\r\n              {QUESTION_TYPES.map((questionType, index) => {\r\n                return (\r\n                  <>\r\n                    {\" \"}\r\n                    {question.questionCategory == questionType.value\r\n                      ? questionType.key\r\n                      : \"\"}{\" \"}\r\n                  </>\r\n                );\r\n              })}\r\n            </span>\r\n          </span>\r\n          <span className=\"marks_details\">\r\n            Marks for correct answer :{\" \"}\r\n            <font className=\"green\">\r\n              <span>{question.marks}</span>\r\n            </font>{\" \"}\r\n            ; Negative Marks :{\" \"}\r\n            <font className=\"red\">\r\n              <span>{question.negativeMarks}</span>\r\n            </font>\r\n          </span>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderQuestionsType(section_index, question_index) {\r\n    let testObject = this.state.testObject;\r\n    //console.log(testObject);\r\n    const question =\r\n      testObject.sections[section_index].questions[question_index];\r\n    const section = this.state.testObject.sections[section_index];\r\n    return (\r\n      <>\r\n        {question.questionCategory == QUESTION_TYPES[0].value\r\n          ? this.renderMultipleChoiceType(section, question)\r\n          : question.questionCategory == QUESTION_TYPES[1].value\r\n          ? this.renderSingleChoiceType(section, question)\r\n          : question.questionCategory == QUESTION_TYPES[2].value\r\n          ? this.renderNumericalAnswerType(section, question)\r\n          : question.questionCategory == QUESTION_TYPES[3].value\r\n          ? this.renderNumericalAnswerType(section, question)\r\n          : question.questionCategory == QUESTION_TYPES[4].value\r\n          ? this.renderNumericalAnswerType(section, question)\r\n          : question.questionCategory == QUESTION_TYPES[6].value\r\n          ? this.renderTextQuestionType(section, question)\r\n          : question.questionCategory == QUESTION_TYPES[5].value\r\n          ? this.renderMatchTheFollowingType(section, question)\r\n          : \"\"}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderMultipleChoiceType(section, question) {\r\n    return (\r\n      <div className=\"qustion_div\" id=\"question\">\r\n        <div>\r\n          <p\r\n            className=\"margin-bottom-0\"\r\n            dangerouslySetInnerHTML={{ __html: section?.instructions }}\r\n          ></p>\r\n        </div>\r\n        <div className=\"question-sno\">\r\n          Question Number : <span>{question.questionNumber}</span>\r\n        </div>\r\n        <div className=\"qstatement_div\">\r\n          <div\r\n            id=\"qstatement\"\r\n            className={question.groupQuestion ? \"div50l\" : \"\"}\r\n          >\r\n            {question.groupQuestion && (\r\n              <p\r\n                dangerouslySetInnerHTML={{ __html: question.groupQuestion }}\r\n              ></p>\r\n            )}\r\n          </div>\r\n          <div className={question.groupQuestion ? \"div50r\" : \"\"}>\r\n            <div id=\"qstatement\">\r\n              <p dangerouslySetInnerHTML={{ __html: question.statement }}></p>\r\n            </div>\r\n            <ul className=\"options\">\r\n              {question.choices.map((option, index) => (\r\n                <li key={index}>\r\n                  <div className=\"optionsro\">( {option.choiceString} )</div>\r\n                  <div>\r\n                    <p dangerouslySetInnerHTML={{ __html: option.name }}></p>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <ul className=\"checkbox_div\">\r\n              {question.choices.map((option, i) =>\r\n                question.attemptedchoiceid &&\r\n                question.attemptedchoiceid.includes(option.id) ? (\r\n                  <li key={option.id}>\r\n                    <input\r\n                      className=\"option_checkbox\"\r\n                      id={\"checkbox\" + option.id}\r\n                      name={\"option\" + question.id}\r\n                      type=\"checkbox\"\r\n                      value={option.id}\r\n                      onClick={this.getCheckeboxValue.bind(this)}\r\n                      defaultChecked=\"true\"\r\n                    />\r\n                    <span className=\"choiceString\">{option.choiceString}</span>\r\n                  </li>\r\n                ) : (\r\n                  <li key={option.id}>\r\n                    <input\r\n                      className=\"option_checkbox\"\r\n                      id={\"checkbox\" + option.id}\r\n                      name={\"option\" + question.id}\r\n                      type=\"checkbox\"\r\n                      value={option.id}\r\n                      onClick={this.getCheckeboxValue.bind(this)}\r\n                      defaultChecked={option.checked}\r\n                    />\r\n                    <span className=\"choiceString\">{option.choiceString}</span>\r\n                  </li>\r\n                )\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSingleChoiceType(section, question) {\r\n    //var testObject = JSON.parse(localStorage.getItem('tests'));\r\n    //var question = testObject[0].questions[2];\r\n    return (\r\n      <div className=\"qustion_div\" id=\"question\">\r\n        <div>\r\n          <p\r\n            className=\"margin-bottom-0\"\r\n            dangerouslySetInnerHTML={{ __html: section?.instructions }}\r\n          ></p>\r\n        </div>\r\n        <div className=\"question-sno\">\r\n          Question Number : <span>{question.questionNumber}</span>\r\n        </div>\r\n        <div className=\"qstatement_div\">\r\n          <div\r\n            id=\"qstatement\"\r\n            className={question.groupQuestion ? \"div50l\" : \"\"}\r\n          >\r\n            {question.groupQuestion && (\r\n              <p\r\n                dangerouslySetInnerHTML={{ __html: question.groupQuestion }}\r\n              ></p>\r\n            )}\r\n          </div>\r\n\r\n          <div className={question.groupQuestion ? \"div50r\" : \"\"}>\r\n            <div id=\"qstatement\">\r\n              <p dangerouslySetInnerHTML={{ __html: question.statement }}></p>\r\n            </div>\r\n            <ul className=\"options\">\r\n              {question.choices.map((option, index) => (\r\n                <li key={index}>\r\n                  <div className=\"optionsro\">( {option.choiceString} )</div>\r\n                  <div>\r\n                    <p dangerouslySetInnerHTML={{ __html: option.name }}></p>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <ul className=\"checkbox_div\">\r\n              {question.choices.map((option, i) =>\r\n                question.attemptedchoiceid == option.id ? (\r\n                  <li key={option.id}>\r\n                    <input\r\n                      className=\"option_checkbox\"\r\n                      type=\"radio\"\r\n                      id={\"checkbox\" + option.id}\r\n                      name={\"option\" + question.id}\r\n                      value={option.id}\r\n                      onClick={this.getCheckeboxValue.bind(this)}\r\n                      defaultChecked=\"true\"\r\n                    />\r\n                    <span className=\"choiceString\">{option.choiceString}</span>\r\n                  </li>\r\n                ) : (\r\n                  <li key={option.id}>\r\n                    <input\r\n                      className=\"option_checkbox\"\r\n                      type=\"radio\"\r\n                      id={\"checkbox\" + option.id}\r\n                      name={\"option\" + question.id}\r\n                      value={option.id}\r\n                      onClick={this.getCheckeboxValue.bind(this)}\r\n                      defaultChecked={option.checked}\r\n                    />\r\n                    <span className=\"choiceString\">{option.choiceString}</span>\r\n                  </li>\r\n                )\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderNumericalAnswerType(section, question) {\r\n    //console.log(\"answered\" + question.answered);\r\n    if (question.attemptedchoicestring) {\r\n      question.answered = parseFloat(question.attemptedchoicestring);\r\n      //console.log(question.attemptedchoicestring)\r\n    }\r\n    return (\r\n      <div className=\"qustion_div\" id=\"question\">\r\n        <div>\r\n          <p\r\n            className=\"margin-bottom-0\"\r\n            dangerouslySetInnerHTML={{ __html: section?.instructions }}\r\n          ></p>\r\n        </div>\r\n        <div className=\"question-sno\">\r\n          Question Number : <span>{question.questionNumber}</span>\r\n        </div>\r\n        <div className=\"qstatement_div\">\r\n          <div\r\n            id=\"qstatement\"\r\n            className={question.groupQuestion ? \"div50l\" : \"\"}\r\n          >\r\n            {question.groupQuestion && (\r\n              <p\r\n                dangerouslySetInnerHTML={{ __html: question.groupQuestion }}\r\n              ></p>\r\n            )}\r\n          </div>\r\n          <div className={question.groupQuestion ? \"div50r\" : \"\"}>\r\n            <div id=\"qstatement\">\r\n              <p dangerouslySetInnerHTML={{ __html: question.statement }}></p>\r\n            </div>\r\n            {typeof question.answered !== \"undefined\" ? (\r\n              <NumPad.Number\r\n                name={\"numberic\" + question.id}\r\n                value={this.state.answer || question.answered}\r\n                id={\"numberic\" + question.id}\r\n                onChange={(value) => this.onTodoChange(value)}\r\n              />\r\n            ) : (\r\n              <NumPad.Number\r\n                name={\"numberic\" + question.id}\r\n                id={\"numberic\" + question.id}\r\n                value={this.state.answer ? this.state.answer : \"\"}\r\n                onChange={(value) => this.onTodoChange(value)}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderTextQuestionType(section, question) {\r\n    //console.log(\"answered\" + question.answered);\r\n    const { testObject } = this.state;\r\n    if (question.attemptedchoicestring) {\r\n      question.answered = question.attemptedchoicestring;\r\n    }\r\n\r\n    if (question.uploads) {\r\n      question.studentUploads = question.uploads.split(\",\");\r\n    }\r\n    let studentUploads = question.studentUploads;\r\n    let validUploadFormats = testObject?.testConfig?.validUploadFormats || [\r\n      \"pdf\",\r\n      \"doc\",\r\n      \"docx\",\r\n      \"xls\",\r\n      \"xlsx\",\r\n    ];\r\n\r\n    return (\r\n      <div className=\"qustion_div\" id=\"question\">\r\n        <div>\r\n          <p\r\n            className=\"margin-bottom-0\"\r\n            dangerouslySetInnerHTML={{ __html: section?.instructions }}\r\n          ></p>\r\n        </div>\r\n        <div className=\"question-sno\">\r\n          Question Number : <span>{question.questionNumber}</span>\r\n        </div>\r\n        <div className=\"qstatement_div\">\r\n          <div\r\n            id=\"qstatement\"\r\n            className={question.groupQuestion ? \"div50l\" : \"\"}\r\n          >\r\n            {question.groupQuestion && (\r\n              <p\r\n                dangerouslySetInnerHTML={{ __html: question.groupQuestion }}\r\n              ></p>\r\n            )}\r\n          </div>\r\n          <div className={question.groupQuestion ? \"div50r\" : \"\"}>\r\n            <div id=\"qstatement\">\r\n              <p dangerouslySetInnerHTML={{ __html: question.statement }}></p>\r\n            </div>\r\n            {typeof question.answered !== \"undefined\" ? (\r\n              <textarea\r\n                rows=\"15\"\r\n                id={\"numberic\" + question.id}\r\n                name={\"numberic\" + question.id}\r\n                value={this.state.answer || question.answered}\r\n                onChange={(e) => this.onTodoChange(e.target.value)}\r\n              />\r\n            ) : (\r\n              <textarea\r\n                rows=\"15\"\r\n                name={\"numberic\" + question.id}\r\n                value={this.state.answer}\r\n                id={\"numberic\" + question.id}\r\n                onChange={(e) => this.onTodoChange(e.target.value)}\r\n              />\r\n            )}\r\n          </div>\r\n          {testObject?.testConfig\r\n            ?.allowAttachmentUploadForEachTextQuestionResponse == true ? (\r\n            <div className=\"fileUploadText\">\r\n              <h5>\r\n                Attachments{\" \"}\r\n                <span>*Supports {validUploadFormats?.join(\", \")} only.</span>\r\n              </h5>\r\n              {studentUploads &&\r\n                studentUploads.map((upload, index) => {\r\n                  return (\r\n                    <span className=\"tag\">\r\n                      <span>\r\n                        <a href=\"#\" className=\"title ng-binding\">\r\n                          {upload}\r\n                        </a>\r\n                      </span>\r\n                      <span\r\n                        className=\"remover\"\r\n                        onClick={(e) => this.deleteFile(e, index)}\r\n                      >\r\n                        ×\r\n                      </span>\r\n                    </span>\r\n                  );\r\n                })}\r\n              <span\r\n                className=\"btn btn-sm btn-default btn-file fileUplodWrap\"\r\n                onClick={this.showOpenFileDlg}\r\n              >\r\n                Add <FontAwesomeIcon icon={faPlusCircle} id=\"closeAlert\" />\r\n                <input\r\n                  type=\"file\"\r\n                  ref={this.inputOpenFileRef}\r\n                  onChange={(e) => this.onFileChange(e)}\r\n                />\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  showOpenFileDlg = () => {\r\n    this.inputOpenFileRef.current.click();\r\n  };\r\n\r\n  renderMatchTheFollowingType(section, question) {\r\n    let list_choices = [];\r\n    let list_matches = [];\r\n    let opt = [];\r\n    let match = [];\r\n    let aplpha = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\r\n    let aplpha2 = [\"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\"];\r\n    var choices = question.choices;\r\n    var matches = question.matches;\r\n    var answered = question.answered || question.attemptedchoicestring || [];\r\n    var match_opt = \"\";\r\n\r\n    //console.log(answered);\r\n\r\n    question.choices.map((option, index) =>\r\n      list_choices.push(\r\n        <tr key={index}>\r\n          <td className=\"choiceString\">\r\n            <p>{option.choiceString}. </p>\r\n          </td>\r\n          <td>\r\n            <div dangerouslySetInnerHTML={{ __html: option.name }} />\r\n          </td>\r\n        </tr>\r\n      )\r\n    );\r\n\r\n    question.matches.map((option, index) =>\r\n      list_matches.push(\r\n        <tr key={index}>\r\n          <td className=\"choiceString\">\r\n            <p>{option.choiceString}.</p>\r\n          </td>\r\n          <td>\r\n            <div dangerouslySetInnerHTML={{ __html: option.name }} />\r\n          </td>\r\n        </tr>\r\n      )\r\n    );\r\n\r\n    for (let c = 0; c < choices.length; c++) {\r\n      opt.push(\r\n        <label className=\"option_container2\">\r\n          <span className=\"mark\">{aplpha[c]}. </span>\r\n        </label>\r\n      );\r\n      for (let m = 0; m < matches.length; m++) {\r\n        if (c == 0) {\r\n          match.push(\r\n            <label className=\"option_container2\">\r\n              <span className=\"mark\">{aplpha2[m]} </span>\r\n            </label>\r\n          );\r\n        }\r\n\r\n        if (answered.includes(choices[c].id + \":\" + matches[m].id)) {\r\n          opt.push(\r\n            <label className=\"000 option_container2\">\r\n              <input\r\n                id={\"checkbox\" + choices[c].id}\r\n                name={\"option\" + choices[c].id}\r\n                checked=\"true\"\r\n                className=\"option_checkbox\"\r\n                type=\"checkbox\"\r\n                value={choices[c].id + \":\" + matches[m].id}\r\n                onClick={this.getCheckeboxValue.bind(this)}\r\n              />\r\n            </label>\r\n          );\r\n        } else {\r\n          opt.push(\r\n            <label className=\"111 option_container2\">\r\n              <input\r\n                className=\"option_checkbox\"\r\n                id={\"checkbox\" + choices[c].id}\r\n                name={\"option\" + choices[c].id}\r\n                type=\"checkbox\"\r\n                value={choices[c].id + \":\" + matches[m].id}\r\n                onClick={this.getCheckeboxValue.bind(this)}\r\n              />\r\n            </label>\r\n          );\r\n        }\r\n      }\r\n      opt.push(<br />);\r\n    }\r\n\r\n    match_opt = (\r\n      <div className=\"match_opts\">\r\n        <p className=\"option\">\r\n          <label className=\"option_container2\">\r\n            <span className=\"mark\"></span>\r\n          </label>\r\n          {match}\r\n          <br />\r\n          {opt}\r\n        </p>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"mtf_statement qustion_div\" id=\"question\">\r\n        <div>\r\n          <p\r\n            className=\"margin-bottom-0\"\r\n            dangerouslySetInnerHTML={{ __html: section?.instructions }}\r\n          ></p>\r\n        </div>\r\n        <div className=\"question-sno\">\r\n          Question Number : <span>{question.questionNumber}</span>\r\n        </div>\r\n        <div className=\"qstatement_div\">\r\n          <div>\r\n            <div id=\"qstatement\">\r\n              <p dangerouslySetInnerHTML={{ __html: question.statement }}></p>\r\n            </div>\r\n            <ul className=\"options\">\r\n              <table className=\"mtf_statement_table\">\r\n                <tr className=\"mtf_statement_head\">\r\n                  <td colspan=\"2\">\r\n                    <tr align=\"center\">\r\n                      <td colspan=\"2\">\r\n                        <b>Column I</b>\r\n                      </td>\r\n                    </tr>\r\n                    {list_choices}\r\n                  </td>\r\n                  <td colspan=\"2\">\r\n                    <tr align=\"center\">\r\n                      <td colspan=\"2\">\r\n                        <b>Column II</b>\r\n                      </td>\r\n                    </tr>\r\n                    {list_matches}\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n              {match_opt}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderLegend() {\r\n    return (\r\n      <div className=\"question-palette-btn\">\r\n        <div id=\"legend\" className=\"margin-bottom-5\">\r\n          <div className=\"margin-bottom-5\">\r\n            <b>Legend : </b>\r\n          </div>\r\n          <Row>\r\n            <div className=\"col-6 margin-bottom-5\">\r\n              <div className=\"answered-small pull-left\">&nbsp; </div>&nbsp;\r\n              Answered\r\n            </div>\r\n            <div className=\"col-6 margin-bottom-5\">\r\n              <div className=\"not-answered-small pull-left\">&nbsp; </div>&nbsp;\r\n              Not Answered\r\n            </div>\r\n            <div className=\"col-6 margin-bottom-5\">\r\n              <div className=\"marked-small pull-left\">&nbsp; </div>&nbsp; Marked\r\n            </div>\r\n            <div className=\"col-6 margin-bottom-5\">\r\n              <div className=\"not-visited-small pull-left\">&nbsp; </div>&nbsp;\r\n              Not Visited\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <div className=\"answered-marked-small pull-left\">&nbsp; </div>\r\n              &nbsp; Marked &amp; Answered\r\n            </div>\r\n          </Row>\r\n        </div>\r\n\r\n        <Row>\r\n          <div className=\"col-6 margin-bottom-5\">\r\n            <button\r\n              className=\"btn btn-primary width100\"\r\n              onClick={() =>\r\n                Config.siteTitle === \"unsat\" || Config.siteTitle === \"unsat2\"\r\n                  ? null\r\n                  : this.changeView(\"profile\")\r\n              }\r\n            >\r\n              Profile\r\n            </button>\r\n          </div>\r\n          <div className=\"col-6 margin-bottom-5\">\r\n            <button\r\n              className=\"btn btn-primary width100\"\r\n              onClick={() => this.changeView(\"instructions\")}\r\n            >\r\n              Instructions\r\n            </button>\r\n          </div>\r\n        </Row>\r\n        <Row className=\"mobile_hide\">\r\n          <div className=\"col-6\">\r\n            <button\r\n              className=\"btn btn-primary width100\"\r\n              onClick={() => this.changeView(\"paper\")}\r\n            >\r\n              Paper\r\n            </button>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <OverlayTrigger\r\n              placement=\"left\"\r\n              overlay={\r\n                <Popover id=\"popover-basic\" className=\"popover\">\r\n                  <Popover.Title as=\"h3\">\r\n                    <strong className=\"red\">Alert</strong>\r\n                  </Popover.Title>\r\n                  <Popover.Content>\r\n                    <p>\r\n                      Are you sure you want to <br />\r\n                      finish the Test ?\r\n                    </p>\r\n                  </Popover.Content>\r\n                </Popover>\r\n              }\r\n            >\r\n              <button\r\n                className=\"btn btn-success width100\"\r\n                onClick={() => this.setState({ show: true })}\r\n              >\r\n                Finish\r\n              </button>\r\n            </OverlayTrigger>\r\n          </div>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderQuestionsBtnsMobile(onMobile) {\r\n    console.log(\r\n      this.state.testObject?.sections &&\r\n        this.state.section_index ===\r\n          this.state.testObject?.sections?.length - 1 &&\r\n        this.state.question_index ===\r\n          this.state.testObject?.sections[this.state.section_index]?.questions\r\n            ?.length -\r\n            1\r\n    );\r\n    return (\r\n      <div\r\n        className=\"testButtons\"\r\n        style={{ bottom: !onMobile ? \"30px\" : \"0px\" }}\r\n      >\r\n        {this.state.question_index === 0 &&\r\n        this.state.section_index === 0 ? null : (\r\n          <button\r\n            className={`btn ${!onMobile && \"m-3 btn-lg\"} btn-primary`}\r\n            onClick={() => this.PrevQuestion()}\r\n          >\r\n            PREV\r\n          </button>\r\n        )}\r\n        {this.state.testObject?.sections &&\r\n        this.state.section_index ===\r\n          this.state.testObject?.sections?.length - 1 &&\r\n        this.state.question_index ===\r\n          this.state.testObject?.sections[this.state.section_index]?.questions\r\n            ?.length -\r\n            1 ? (\r\n          <button\r\n            className={`btn btn-primary ${!onMobile && \"m-3\"}`}\r\n            id=\"save_next\"\r\n            onClick={() => this.NextQuestion(\"save\")}\r\n          >\r\n            SAVE\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className={`btn btn-primary ${!onMobile && \"m-3\"}`}\r\n            id=\"save_next\"\r\n            onClick={() => this.NextQuestion(\"next\")}\r\n          >\r\n            NEXT\r\n          </button>\r\n        )}\r\n        <button\r\n          className={`btn btn-primary ${!onMobile && \"m-3\"}`}\r\n          onClick={() => this.clearResponse()}\r\n        >\r\n          CLEAR\r\n        </button>\r\n        {this.state.testObject?.sections &&\r\n        this.state.section_index ===\r\n          this.state.testObject?.sections?.length - 1 &&\r\n        this.state.question_index ===\r\n          this.state.testObject?.sections[this.state.section_index]?.questions\r\n            ?.length -\r\n            1\r\n          ? ((this.state.testObject !== \"\" &&\r\n              this.state.testObject?.testConfig?.markForReview) ||\r\n              (this.state.testObject !== \"\" &&\r\n                this.state.testObject?.testConfig?.markForReview ===\r\n                  undefined)) && (\r\n              <button\r\n                className={`btn btn-primary ${!onMobile && \"m-3\"}`}\r\n                id=\"mark_next\"\r\n                onClick={() => this.NextQuestion(\"mark_notSave\")}\r\n              >\r\n                MARK\r\n              </button>\r\n            )\r\n          : ((this.state.testObject !== \"\" &&\r\n              this.state.testObject?.testConfig?.markForReview) ||\r\n              (this.state.testObject !== \"\" &&\r\n                this.state.testObject?.testConfig?.markForReview ===\r\n                  undefined)) && (\r\n              <button\r\n                className={`btn btn-primary ${!onMobile && \"m-3\"}`}\r\n                id=\"mark_next\"\r\n                onClick={() => this.NextQuestion(\"mark\")}\r\n              >\r\n                MARK\r\n              </button>\r\n            )}\r\n        <button\r\n          className={`btn btn-primary ${!onMobile && \"m-3\"}`}\r\n          onClick={() => this.setState({ show: true })}\r\n        >\r\n          FINISH\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderQuestionsBtns() {\r\n    return (\r\n      <div className=\"question-btns\">\r\n        <Row>\r\n          {this.state.testObject?.sections &&\r\n          this.state.section_index ===\r\n            this.state.testObject?.sections?.length - 1 &&\r\n          this.state.question_index ===\r\n            this.state.testObject?.sections[this.state.section_index]?.questions\r\n              ?.length -\r\n              1\r\n            ? ((this.state.testObject !== \"\" &&\r\n                this.state.testObject?.testConfig?.markForReview) ||\r\n                (this.state.testObject !== \"\" &&\r\n                  this.state.testObject?.testConfig?.markForReview ===\r\n                    undefined)) && (\r\n                <div className=\"col-md-3 col-sm-3 col-xs-6\">\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    id=\"mark_next\"\r\n                    onClick={() => this.NextQuestion(\"mark_notSave\")}\r\n                  >\r\n                    Mark\r\n                  </button>\r\n                </div>\r\n              )\r\n            : ((this.state.testObject !== \"\" &&\r\n                this.state.testObject?.testConfig?.markForReview) ||\r\n                (this.state.testObject !== \"\" &&\r\n                  this.state.testObject?.testConfig?.markForReview ===\r\n                    undefined)) && (\r\n                <div className=\"col-md-3 col-sm-3 col-xs-6\">\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    id=\"mark_next\"\r\n                    onClick={() => this.NextQuestion(\"mark\")}\r\n                  >\r\n                    Mark for Review &amp; Next\r\n                  </button>\r\n                </div>\r\n              )}\r\n          <div className=\"col-md-3 col-sm-3 col-xs-6\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => this.clearResponse()}\r\n            >\r\n              Clear Response\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md-6 col-sm-3 col-xs-6\">\r\n            {this.state.testObject?.sections &&\r\n            this.state.section_index ===\r\n              this.state.testObject?.sections?.length - 1 &&\r\n            this.state.question_index ===\r\n              this.state.testObject?.sections[this.state.section_index]\r\n                ?.questions?.length -\r\n                1 ? (\r\n              <button\r\n                className=\"btn btn-primary pull-right\"\r\n                id=\"save_next\"\r\n                onClick={() => this.NextQuestion(\"save\")}\r\n              >\r\n                Save\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-primary pull-right\"\r\n                id=\"save_next\"\r\n                onClick={() => this.NextQuestion(\"next\")}\r\n              >\r\n                Save &amp; Next\r\n              </button>\r\n            )}\r\n          </div>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const user = this.state.userObject;\r\n    //console.log(user);\r\n    return (\r\n      <div className=\"col-md-9 col-sm-9 col-xs-12\">\r\n        <div className=\"testinfo_tab\">\r\n          <div className=\"profile\">\r\n            <table\r\n              className=\"table-bordered table-condensed table-striped profile_info\"\r\n              align=\"center\"\r\n            >\r\n              <tbody>\r\n                <tr>\r\n                  <td colspan=\"2\" className=\"active profile_info_head\">\r\n                    Profile Information\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td colspan=\"2\" align=\"center\">\r\n                    <span className=\"ng-binding\">\r\n                      {this.state.userObject?.photoPath && (\r\n                        <img\r\n                          src={user.photoPath}\r\n                          alt=\"\"\r\n                          onError={(e) => {\r\n                            e.target.onerror = null;\r\n                            e.target.src = avatar;\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"studentName\">Name</td>\r\n                  <td className=\"studentCode\">\r\n                    <span className=\"ng-binding\">{user.enquiryName}</span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"studentName\">Code</td>\r\n                  <td className=\"studentCode\">\r\n                    <span className=\"ng-binding\">\"{user.studentCode}\"</span>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <br />\r\n            <div className=\"center\">\r\n              <button\r\n                className=\"btn btn-info text-center\"\r\n                onClick={() => this.changeView(\"question\")}\r\n              >\r\n                Back\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderInstructions() {\r\n    const { testObject } = this.state;\r\n    let isMobile = Utils.isMobileDevice();\r\n    return (\r\n      <div className=\"col-md-9 col-sm-9 col-xs-12\">\r\n        <div className=\"testinfo_tab\">\r\n          <div className=\"test_instruction\">\r\n            <div className=\"qustion_div\">\r\n              {isMobile === true ? (\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html:\r\n                      testObject.instructions || testObject.webInstructions,\r\n                  }}\r\n                ></div>\r\n              ) : (\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html:\r\n                      testObject.webInstructions || testObject.instructions,\r\n                  }}\r\n                ></div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"center\">\r\n            <button\r\n              className=\"btn btn-info text-center\"\r\n              onClick={() => this.changeView(\"question\")}\r\n            >\r\n              Back\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderPaper() {\r\n    const testObject = this.state.testObject;\r\n    return (\r\n      <div className=\"col-md-9 col-sm-9 col-xs-12\">\r\n        <div className=\"testinfo_tab\">\r\n          <div className=\"qustion_div question_paper\">\r\n            {testObject.sections.map((section, section_index) => (\r\n              <>\r\n                <div className=\"section_name\">\r\n                  Section:{\" \"}\r\n                  <span className=\"label label-success ng-binding\">\r\n                    {section.name}\r\n                  </span>\r\n                </div>\r\n                {section.questions.map((question, question_index) => {\r\n                  return (\r\n                    <div className=\"\" id=\"question\">\r\n                      <div className=\"question-sno\">\r\n                        Question Number : <span>{question.questionNumber}</span>\r\n                      </div>\r\n                      <Question question={question} />\r\n                      {this.renderQuestionsInfo(section_index, question_index)}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </>\r\n            ))}\r\n          </div>\r\n          <div className=\"center\">\r\n            <button\r\n              className=\"btn btn-info text-center\"\r\n              onClick={() => this.changeView(\"question\")}\r\n            >\r\n              Back\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderLoader = () => {\r\n    const _loadingText = \"Please wait...\";\r\n    return (\r\n      <ILoader\r\n        loadingText={_loadingText}\r\n        isShow={this.state.showLoading}\r\n      ></ILoader>\r\n    );\r\n  };\r\n}\r\n\r\nexport default TestPlayer;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\_services\\google-analytics\\register-event.service.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\learningStepAttacmentDetails.wrapper.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\product\\ProductDetails.jsx",["1330"],"import React, { Component } from \"react\";\r\nimport \"./ProductDetails.css\";\r\nimport {Container, Card, Button} from \"react-bootstrap\";\r\nimport swal from 'sweetalert';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport LearningSteps from '../learning/LearningSteps'\r\nimport ApiService from '../../_services/ApiService';\r\nimport Config from '../../_config/config';\r\n\r\n\r\nclass ProductDetails extends Component {  \r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tif(!Config.CURRENT_PORTLET) {\r\n\t\t\tConfig.CURRENT_PORTLET = JSON.parse(localStorage.getItem('portlet'));\r\n\t\t}\r\n\t\tthis.state = {\r\n\t\t\tproduct:this.props.location.state.product,\r\n\t\t\tpreOrderDetails: null\r\n\t\t};\r\n\t}\r\n\r\n  \tcomponentDidMount() {\r\n\t\tconsole.log(this.props.location.state.product);\r\n\t\tconsole.log(\"Product : \", this.state.product);\r\n\t}\r\n\r\n  \trouteChange(path) {\r\n    \tthis.props.history.push(path);\r\n\t}\r\n\t  \r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"ilearn-full-height page-product-details\">\r\n\t\t\t\t\t<Container fluid>\r\n\t\t\t\t\t\t{this.renderHeader()}\r\n\t\t\t\t\t\t{this.renderBody()}         \r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\trenderHeader() {\r\n\t\treturn (\r\n\t\t  <div className={`ilearn-plain-header ${Config.CURRENT_PORTLET.class}`}>\r\n\t\t\t<div className=\"back\">\r\n\t\t\t  <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n\t\t\t</div>\r\n\t\t\t<h4>{this.state.product?.name}</h4>\r\n\t\t  </div>\r\n\t\t);\r\n\t}\r\n\r\n\trenderBody() {\r\n\t\tconsole.log(\"ProductDetails -> renderBody()... \");\r\n\t\treturn (\r\n\t\t\t<> \r\n\t\t\t\t{ this.state.product.previewLearningModuleId ? \r\n\t\t\t\t\tthis.renderLearningModule() : \r\n\t\t\t\t\tthis.renderProduct() \r\n\t\t\t\t}\r\n\t\t\t</>\r\n\t\t);\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\trenderProduct() {\r\n\t\tconsole.log(\"ProductDetails -> renderProduct()... \");\r\n\t\treturn  (\r\n\t\t\t<>\t\t\t\t\r\n\t\t\t\t<div className=\"ilearn-padding-top\">\r\n\t\t\t\t\t<Card className=\"mx-auto\" style={{ maxWidth: '50rem' }}>\r\n\t\t\t\t\t\t<Card.Img top width=\"100%\" src={this.state.product.imageUrl} alt=\"Card image cap\" />\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t<Card.Title><h4>{this.state.product.name}</h4></Card.Title>\r\n\t\t\t\t\t\t\t<Card.Text dangerouslySetInnerHTML={{__html:this.state.product.description}}></Card.Text>\r\n\t\t\t\t\t\t\t{this.renderBuyNow()}\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\t\r\n\t}\r\n\r\n\trenderBuyNow() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Button type=\"button\" className=\"btn btn-primary btn-lg btn-block\" \r\n\t\t\t\t\tonClick={() => this.buyNow()}>\r\n\t\t\t\t\t&#x20b9; {this.state.product.cost} &nbsp; &nbsp; Buy Now\r\n\t\t\t\t</Button>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\trenderLearningModule() {\r\n\t\tconsole.log(\"ProductDetails -> renderLearningModule()... \");\r\n\t\treturn  (\r\n\t\t\t<>\r\n\t\t\t    <div className=\"product_learning_module\">\r\n\t\t\t\t\t<LearningSteps\r\n\t\t\t\t\t\tlearnId={this.state.product.previewLearningModuleId}\r\n\t\t\t\t\t\tlock={true}\r\n\t\t\t\t\t\thistory={this.props.history}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{this.renderBuyNow()}\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\t  \r\n\tbuyNow() {\r\n\t\tconsole.log(\"ProductDetails -> buyNow()...\");\r\n\t\tthis.renderPreOrderAlert();\r\n\t\t/*ApiService.preOrderProduct(this.state.product.id)\r\n            .then(res => {\r\n                console.log(\"ProductDetails -> Pre Order Details : \"+JSON.stringify(res.data));\r\n\t\t\t\tlet resp = res.data;\r\n\t\t\t\tif(resp.result ==1 ) {\r\n\t\t\t\t\tthis.renderPreOrderAlert(resp.data);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(\"Error : \"+resp.message);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n            },\r\n            error => {\r\n\t\t\t\tconsole.log(\"ProductDetails -> Pre Order Details, Connection Error : \"+Config.CONNECTION_ERROR);\r\n            }\r\n        );*/\r\n\t\t\r\n\t}\r\n\r\n\trenderPreOrderAlert() {\r\n\t\tconsole.log(\"ProductDetails -> renderPreOrderAlert()...\");\r\n\t\tswal({\r\n\t\t\ttitle: \"CONFIRM\",\r\n\t\t\ttext: \"Product : \"+this.state.product.name+\"\\n Price : Rs. \"+this.state.product.cost ,\r\n\t\t\tbuttons: ['CANCEL','MAKE PAYMENT'],\r\n\t\t\tdangerMode: true,\r\n\t\t\tclassName: 'PaymentConfirm'\r\n\t\t\t})\r\n\t\t\t.then(resp => { \r\n\t\t\t\tif (resp) { // Yes else No\r\n\t\t\t\t\tconsole.log(\"ProductDetails -> Redirect CCAvenue Page...\");\r\n\t\t\t\t\tthis.makePayment();\r\n\t\t\t\t}\r\n\t\t    });\r\n\t}\r\n\r\n\t/*\r\n\trenderPreOrderAlert(orderDetails) {\r\n\t\tconsole.log(\"ProductDetails -> renderPreOrderAlert()...\");\r\n\t\tswal({\r\n\t\t\ttitle: \"ORDER DETAILS\",\r\n\t\t\ttext: \"Order Id : \"+orderDetails.orderNumber+\"\\n Price : Rs. \"+orderDetails.amount ,\r\n\t\t\tbuttons: ['CANCEL','MAKE PAYMENT'],\r\n\t\t\tdangerMode: true,\r\n\t\t\t})\r\n\t\t\t.then(resp => { \r\n\t\t\t\tif (resp) { // Yes else No\r\n\t\t\t\t\tconsole.log(\"ProductDetails -> Redirect CCAvenue Page...\");\r\n\t\t\t\t\tthis.redirectToPaymentGateway(orderDetails);\r\n\t\t\t\t}\r\n\t\t    });\r\n\t}\r\n\r\n\tredirectToPaymentGateway(orderDetails) {\r\n\t\t//var paymentGatewayUrl=\"http://icegateinstitute.studentdetails.com/icegateacademy/paymentgateway/ccavRequestHandler.jsp\";\r\n\t\tlet paymentGatewayUrl=orderDetails.paymentGatewayURl;\r\n\t\tpaymentGatewayUrl+=\"?merchant_id=\"+orderDetails.merchantId;\r\n\t\tpaymentGatewayUrl+=\"&amount=\"+orderDetails.amount;\r\n\t\tpaymentGatewayUrl+=\"&order_id=\"+orderDetails.orderNumber;\r\n\t\tpaymentGatewayUrl+=\"&currency=INR\";\r\n\t\tpaymentGatewayUrl+=\"&redirect_url=\"+orderDetails.redirectUrl;\r\n\t\tpaymentGatewayUrl+=\"&cancel_url=\"+orderDetails.cancelUrl;\r\n\t\tpaymentGatewayUrl+=\"&language=EN\";\r\n\t\tpaymentGatewayUrl+=\"&workingKey=\"+orderDetails.workingKey;\r\n\t\tpaymentGatewayUrl+=\"&accessCode=\"+orderDetails.accessCode;\r\n\t\tpaymentGatewayUrl+=\"&merchant_param1=\"+orderDetails.productId;\r\n\t\tpaymentGatewayUrl+=\"&merchant_param2=\"+orderDetails.verificationCode;\r\n\t\tconsole.log(\"ProductDetails -> PaymentGateway URL : \"+paymentGatewayUrl);\r\n\t\twindow.open(paymentGatewayUrl, '_blank', 'location=no');\r\n\t}*/\r\n\r\n\tmakePayment() {\r\n\t\tconsole.log(\"MakePayment -> makePayment() : \"+this.state.product.cost);\r\n\t\tlet instituteHomeLink = Config.siteUrl; \r\n\t\tif(localStorage.getItem('instituteHomeLink') && localStorage.getItem('instituteHomeLink')!=='undefined'){\r\n\t\t\tinstituteHomeLink = \"https://\"+ localStorage.getItem('instituteHomeLink') +'/';\r\n\t\t}\r\n\t\tlet paymentURL = instituteHomeLink +\"popup/mobilePayment.do?reqCode=makePayment&enquiryId=\"+localStorage.getItem('enquiryId')+\"&amountPaying=\"+this.state.product.cost+\"&productId=\"+this.state.product.id;\r\n\t\tconsole.log(paymentURL);\r\n\t\twindow.open(paymentURL, '_blank', 'location=no');\r\n    }\r\n  \r\n}\r\n  \r\nexport {ProductDetails};\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\notification\\Notification.jsx",["1331","1332"],"import React, { Component } from \"react\";\r\nimport \"./Notification.css\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\nimport { markNotificationsAsRead } from \"./../../push-notification\";\r\n\r\n\r\nclass Notification extends Component {\r\n  constructor(props) {    \r\n    super(props);\r\n    //console.log(\"Notification -> constructor()... \");\r\n    this.state = {\r\n      notifications: [],\r\n      message: null,\r\n      showLoading: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //console.log(\"Notification -> componentDidMount()... \");\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    //console.log(\"Notification -> init()... \");\r\n    let notificationMsgs = localStorage.getItem('ilearn-notifications');\r\n    this.setState(state => ({ notifications:  notificationMsgs?JSON.parse(notificationMsgs):[] }));\r\n    markNotificationsAsRead();   \r\n  }\r\n  \r\n  render() {\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          {this.renderHeader()}\r\n          {this.renderBody()}\r\n          {this.renderLoader()}          \r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderHeader() {\r\n    //console.log(\"Notification -> renderHeader()... \");\r\n    return (\r\n      <div className={`ilearn-plain-header blue-card`}>\r\n        <div className=\"back\">\r\n          <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n        </div>\r\n        <h4>Notifications</h4>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderBody() {\r\n    //console.log(\"Notification -> renderBody()... \");\r\n    let _notifications = this.state.notifications;\r\n    return  (\r\n      <>\r\n        <div className=\"ilearn-padding-top\">\r\n            {\r\n                _notifications.sort((a, b) => b.messageId - a.messageId)\r\n                .map((notification, index) => {\r\n                    return ( \r\n                        <div key={index} className=\"ilearn-padding-both-sides ilearn-padding-top\">\r\n                            <Card>\r\n                              {notification.picture?\r\n                                <Card.Img variant=\"top\" src={notification.picture} />\r\n                                : ''}\r\n                            <Card.Body>\r\n                                <div className=\"ilearn-item-block notification-card\">\r\n                                    <p className={`notification-text ${notification.status == 0? 'notification-unread' : ''}`}>{notification.message}</p>\r\n                                </div>\r\n                                <Row>\r\n                                  <Col className=\"text-right notification-date\">\r\n                                    {notification.receivedDate}\r\n                                  </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderLoader() {\r\n    //console.log(\"Notification -> renderLoader()... \");\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n        <ILoader\r\n          loadingText={_loadingText}\r\n          isShow={this.state.showLoading}\r\n        >\r\n        </ILoader>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport {Notification};\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\quiz\\QuizList.jsx",["1333","1334","1335","1336"],"﻿import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\nimport Config from './../../_config/config'\r\n\r\nclass QuizList extends Component {\r\n  constructor(props) {    \r\n    super(props);\r\n    console.log(\"QuizList -> constructor()... \");\r\n    console.log(\"QuizList -> constructor(); Portlet : \"+JSON.stringify(Config.CURRENT_PORTLET));\r\n    console.log(\"QuizList -> constructor(); quizBlock : \"+JSON.stringify(this.props.location.state.quizBlock));\r\n    if(!Config.CURRENT_PORTLET) {\r\n      Config.CURRENT_PORTLET = JSON.parse(localStorage.getItem('portlet'));\r\n    }\r\n    this.state = {\r\n      quizBlock : this.props.location.state.quizBlock,\r\n      testCategoryId : this.props.location.state.quizBlock.testCategoryId,\r\n      testBeans : [],\r\n      message: null,\r\n      showLoading: false,\r\n      errorMessage: null\r\n    };\r\n    //this.init = this.init.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"QuizList -> componentDidMount()... \");\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    console.log(\"QuizList -> init()... \"+JSON.stringify(this.state.testCategoryId));\r\n    this.setState({ showLoading: true }, () => {\r\n        ApiService.getTestCategoryWiseTestList(this.state.testCategoryId)\r\n        .then((res) => {\r\n          console.log(\"QuizList -> init(); res : \"+JSON.stringify(res));\r\n          let testBeans = res.data.length>0?res.data[0].categoryBeans[0].testDataBeans:[];\r\n          this.setState({\r\n            showLoading: false,            \r\n            testBeans : testBeans,\r\n            errorMessage : testBeans.length<=0?\"No tests found!\":null\r\n          });\r\n        });\r\n      });\r\n  }\r\n  \r\n  render() {\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          {this.renderHeader()}\r\n          {this.state.errorMessage && this.renderError()}\r\n          {!this.state.errorMessage && this.renderBody()}\r\n          {this.renderLoader()}          \r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderHeader() {\r\n    console.log(\"QuizList -> renderHeader()... \");\r\n    return (\r\n      <div className={`ilearn-plain-header ${Config.CURRENT_PORTLET.class}`}>\r\n        <div className=\"back\">\r\n          <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n        </div>\r\n        <h4>{this.state.quizBlock.displayName}</h4>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderBody() {\r\n    console.log(\"QuizList -> renderBody()... \");\r\n    let testBeans = this.state.testBeans.sort((a, b) => a.id - b.id);\r\n    return  <ul className=\"list-group\">\r\n      {\r\n        testBeans.map((testBean, index) => {\r\n            return (             \r\n                <li className=\"list-group-item ilearn-item-border\" key={index} onClick={() => this.start(testBean)}>\r\n                  <div className=\"ilearn-item-block \">\r\n                    <h4>{testBean.name}</h4>\r\n                    <button \r\n                      className={`ilearn-btn-right  ${testBean.status=='Launch'? 'ilearn-blue-btn' : testBean.status=='View Result' ? 'ilearn-green-btn':'ilearn-grey-btn'}`}>\r\n                      {testBean.status}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n            )\r\n        })\r\n      }\r\n      </ul>\r\n  }\r\n\r\n  renderLoader() {\r\n    console.log(\"QuizList -> renderLoader()... \");\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n        <ILoader\r\n          loadingText={_loadingText}\r\n          isShow={this.state.showLoading}\r\n        >\r\n        </ILoader>\r\n    )\r\n  }\r\n\r\n  start(testBean) {\r\n    console.log(\"QuizList -> start()... \"+JSON.stringify(testBean));\r\n    if(testBean.status==='Launch') {\r\n      this.startQuiz(testBean);      \r\n    }\r\n    else if(testBean.status==='View Result') {\r\n      //this.navCtrl.push(QuizResultPage, {testBean:JSON.stringify(testBean)});\r\n      this.showResult(testBean);\r\n    }\r\n  };\r\n\r\n  startQuiz(testBean) {\r\n    console.log(\"QuizList -> startQuiz()... \"+JSON.stringify(testBean));\r\n    let path = \"/quizPlayer\";\r\n    this.props.history.push({\r\n        pathname: path,\r\n        state: { testBean: testBean }\r\n    });\r\n  }\r\n\r\n  showResult(testBean) {\r\n    console.log(\"QuizList -> startQuiz()... \"+JSON.stringify(testBean));\r\n    let path = \"/quizResult\";\r\n    this.props.history.push({\r\n        pathname: path,\r\n        state: { testBean: testBean }\r\n    });  \r\n  }\r\n\r\n  renderError() {\r\n    return (\r\n        <> \r\n          <br/>        \r\n          <div className=\"alert alert-danger text-center\">\r\n              <h4 className=\"alert-heading\">Error!</h4>\r\n              <p>{this.state.errorMessage}</p>\r\n          </div>\r\n        </>\r\n    )    \r\n  }\r\n\r\n}\r\n\r\nexport {QuizList};\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\quiz\\QuizResult.jsx",["1337","1338","1339"],"import React, { Component } from \"react\";\r\nimport {Container, Card, Button} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\nimport Config from './../../_config/config'\r\n\r\nclass QuizResult extends Component {\r\n  constructor(props) {    \r\n    super(props);\r\n    console.log(\"QuizResult -> constructor()... \");\r\n    console.log(\"QuizResult -> constructor(); Portlet : \"+JSON.stringify(Config.CURRENT_PORTLET));\r\n    console.log(\"QuizResult -> constructor(); quizBlock : \"+JSON.stringify(this.props.location.state.quizBlock));\r\n    if(!Config.CURRENT_PORTLET) {\r\n      Config.CURRENT_PORTLET = JSON.parse(localStorage.getItem('portlet'));\r\n    }\r\n    this.state = {\r\n      testBean : this.props.location.state.testBean,\r\n      testResult : null,\r\n      message: null,\r\n      showLoading: true\r\n    };\r\n    //this.init = this.init.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"QuizResult -> componentDidMount()... \");\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    console.log(\"QuizResult -> init()... \"+JSON.stringify(this.state.testCategoryId));\r\n    this.setState({ showLoading: true }, () => {\r\n        ApiService.getTestAnalysis(this.state.testBean.id)\r\n        .then((res) => {\r\n          let respData = res.data;\r\n          console.log(\"QuizResult -> init(); res : \"+JSON.stringify(respData));          \r\n          let totalMarks = 0;\r\n          let correctCount = 0;\r\n          let wrongCount = 0;\r\n          for(let index in respData) {\r\n              //console.log(\"Section Marks : \"+quizResult[index].marks);\r\n              var secMarks = respData[index].marks;\r\n              if(secMarks) {\r\n                  totalMarks = totalMarks+parseInt(secMarks);\r\n                  correctCount = correctCount+parseInt(respData[index].correctcount);\r\n                  wrongCount = wrongCount+parseInt(respData[index].wrongcount);\r\n                  respData[index].marks = parseInt(secMarks);\r\n              }\r\n          }\r\n          this.setState({\r\n            showLoading: false,\r\n            testResult : {'totalMarks':totalMarks, 'correctCount':correctCount, 'wrongCount':wrongCount}\r\n          });\r\n        });\r\n      });\r\n  }\r\n  \r\n  render() {\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n      <>\r\n        <div className=\"ilearn-full-height page-quiz-zone\">\r\n          <Container fluid>\r\n            {this.renderHeader()}\r\n            {this.renderBody()}\r\n            {this.renderLoader()}          \r\n          </Container>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderHeader() {\r\n    console.log(\"QuizResult -> renderHeader()... \");\r\n    return (\r\n      <div className={`ilearn-plain-header ${Config.CURRENT_PORTLET.class}`}>\r\n        <div className=\"back\">\r\n          <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n        </div>\r\n        <h4>{this.state.testBean.name}</h4>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderBody() {\r\n    console.log(\"QuizResult -> renderBody()... \");\r\n    return (\r\n      <>\r\n        {\r\n        !this.state.showLoading && this.state.testResult && \r\n        <div className=\"ilearn-padding-top\">\r\n          <Card className=\"mx-auto\" style={{ maxWidth: '75rem' }}>\r\n          <Card.Header>\r\n            <h2>Quiz Result</h2>\r\n          </Card.Header>\r\n            <Card.Body>\r\n              <Card.Text className=\"text-center\">\r\n              <button className=\"circle\" style={{background:'#11c1f3', color:'#ffffff', outline: 'none'}}>\r\n                <span style={{display:'block', fontSize:'12px'}}>Coins Won</span>\r\n                <h1>{this.state.testResult.totalMarks}</h1>\r\n                <img src=\"./assets/imgs/coins-32.png\" style={{marginBottom:'2px !important'}}/>\r\n              </button>\r\n              </Card.Text>\r\n\r\n              <div className=\"btn btn-danger btn-lg\" aria-label=\"Left Align\">\r\n                <FontAwesomeIcon icon={ faTimes }  size = 'lg' color='#fff'/> &nbsp;\r\n                <span>Wrong </span> &nbsp; <b>{this.state.testResult.wrongCount}</b>\r\n              </div>\r\n\r\n              <div className=\"btn btn-success btn-lg float-right\" aria-label=\"Left Align\">\r\n                <FontAwesomeIcon icon={ faCheck }  size = 'lg' color='#fff'/> &nbsp;\r\n                <span>Correct </span> &nbsp; <b>{this.state.testResult.correctCount}</b>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n        }\r\n      </>\r\n    );\r\n    \r\n  }\r\n\r\n  renderLoader() {\r\n    console.log(\"QuizResult -> renderLoader()... \");\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n        <ILoader\r\n          loadingText={_loadingText}\r\n          isShow={this.state.showLoading}\r\n        >\r\n        </ILoader>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport {QuizResult};\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\quiz\\QuizZone.jsx",["1340"],"﻿import React, { Component } from \"react\";\r\nimport \"./Quiz.css\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport test_icon from \"./images/test.png\";\r\nimport test_list_icon from \"./images/test-list.png\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faChevronRight, faTrophy, faCreditCard } from '@fortawesome/free-solid-svg-icons';\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\nimport Config from './../../_config/config'\r\n\r\nclass QuizZone extends Component { \r\n\r\n\tconstructor(props) {\r\n        super(props);\r\n        console.log(\"QuizZone -> constructor()... \");\r\n        this.state = {\r\n            quizBlocks: this.props.location.state.portlet.params.blocks,\r\n            message: null,\r\n            showLoading: false,\r\n            portlet: this.props.location.state.portlet\r\n        };\r\n    }\r\n    \r\n    componentDidMount() {\r\n        console.log(\"QuizZone -> componentDidMount()... \");\r\n        this.init();\r\n    }\r\n    \r\n    init() {\r\n        console.log(\"QuizZone -> init()... \");\r\n        Config.CURRENT_PORTLET = this.state.portlet;         \r\n        /*let quizBlocks = this.props.location.state.portlet.params.blocks || [];\r\n        if(quizBlocks.length > 0) {\r\n          this.setState({\r\n            showLoading: false,\r\n            quizBlocks: quizBlocks,\r\n            portlet : this.props.location.state.portlet\r\n          }); \r\n        }*/\r\n\r\n    }\r\n    \r\n    render() {\r\n        console.log(\"QuizZone -> render()... \");        \r\n        return (  \r\n            <>\r\n                <div className=\"ilearn-full-height page-quiz-zone\">\r\n                    <Container fluid >\r\n                        {this.renderHeader()}\r\n                        {this.renderBody()}\r\n                        {this.renderLoader()}                    \r\n                    </Container>\r\n                </div>   \r\n                {this.renderFooter()}\r\n            </>           \r\n              \r\n        );\r\n    }\r\n\r\n    renderHeader() {\r\n        console.log(\"QuizZone -> renderHeader()... \");\r\n        return (\r\n            <div className=\"module-header\">\r\n                <div className={`module-header-inner ${this.state.portlet.class}`} >\r\n                    <div className=\"back\">\r\n                        <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n                    </div>\r\n                    <img src={test_icon} alt=\"test icon\" /> \r\n                </div>\r\n                <div className=\"arrow-set\">\r\n                    <h4>{this.state.portlet.name}</h4>                            \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    renderBody() {\r\n        console.log(\"QuizZone -> renderBody()... \");\r\n        let data = this.state.quizBlocks;\r\n        return  (\r\n            <div className=\"ilearn-padding-top\"> \r\n                {\r\n                    data.map((quizBlock, index) => {\r\n                        return ( \r\n                            <div key={index} className=\"ilearn-padding-both-sides ilearn-padding-top\">\r\n                                <Card onClick={() => this.showQuizList(quizBlock)}>\r\n                                <Card.Body>\r\n                                    <div className=\"ilearn-item-block \">\r\n                                        <img className=\"ilearn-avatar\" src={test_list_icon} alt={quizBlock.displayName} />\r\n                                        <h4 className=\"ilearn-item-inner\">{quizBlock.displayName}</h4>\r\n                                        <FontAwesomeIcon icon={ faChevronRight }  size = 'lg' color=\"gray\" className=\"float-right\"/>\r\n                                    </div>\r\n                                </Card.Body>\r\n                                </Card>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderFooter() {\r\n        console.log(\"QuizZone -> renderFooter()... \");\r\n        return ( \r\n            <div className=\"ilearn-footer\">                    \r\n                <Row>\r\n                    <Col className=\"ilearn-footer-col ilearn-blue-btn\" onClick={() => this.showLeaderBoard()}>\r\n                        <button className=\"btn ilearn-blue-btn ilearn-footer-btn btn-block\" > \r\n                            <FontAwesomeIcon icon={ faTrophy }  size = 'lg' color='#fff'/> &nbsp;\r\n                            <b>LEADER BOARD</b> \r\n                        </button>\r\n                    </Col>\r\n                    <Col className=\"ilearn-footer-col ilearn-blue-btn\" onClick={() => this.showWallet()}>\r\n                        <button className=\"btn ilearn-footer-btn btn-block\" > \r\n                            <FontAwesomeIcon icon={ faCreditCard }  size = 'lg' color='#fff'/> &nbsp;\r\n                            <b>WALLET</b> \r\n                        </button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderLoader() {\r\n        console.log(\"QuizZone -> renderLoader()... \");\r\n        const _loadingText = 'Please wait...';\r\n        return (\r\n            <ILoader\r\n                loadingText={_loadingText}\r\n                isShow={this.state.showLoading}\r\n                >\r\n            </ILoader>\r\n        )\r\n    }\r\n\r\n    toggleLoading = () => {\r\n        console.log(\"QuizZone -> toggleLoading()... \");\r\n        this.setState(state => ({ showLoading: !state.showLoading }));\r\n    };\r\n\r\n    showQuizList(quizBlock) {\r\n        console.log(\"QuizZone -> showQuizList(): \"+JSON.stringify(quizBlock));\r\n        let path = \"/quizList\";\r\n        this.props.history.push({\r\n            pathname: path,\r\n            state: { quizBlock: quizBlock }\r\n        });\r\n    }\r\n\r\n    showLeaderBoard() {\r\n        console.log(\"QuizZone -> showLeaderBoard()... \");\r\n        let path = \"/leaderboard\";\r\n        this.props.history.push({\r\n            pathname: path\r\n        });    \r\n    }\r\n    \r\n    showWallet() {\r\n        console.log(\"QuizZone -> showWallet()... \");\r\n        let path = \"/wallet\";\r\n        this.props.history.push({\r\n            pathname: path\r\n        });    \r\n    }\r\n\r\n}\r\n\r\n\r\n  \r\nexport {QuizZone};","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\quiz\\LeaderBoard.jsx",["1341","1342","1343","1344","1345","1346","1347","1348"],"import React, { Component } from \"react\";\r\nimport {Container, Card } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\nimport Config from './../../_config/config'\r\n\r\nclass LeaderBoard extends Component {\r\n  constructor(props) {    \r\n    super(props);\r\n    console.log(\"LeaderBoard -> constructor()... \");\r\n    console.log(\"LeaderBoard -> constructor(); Portlet : \"+JSON.stringify(Config.CURRENT_PORTLET));\r\n    if(!Config.CURRENT_PORTLET) {\r\n      Config.CURRENT_PORTLET = JSON.parse(localStorage.getItem('portlet'));\r\n    }\r\n    this.state = {\r\n      enquiryId : localStorage.getItem('enquiryId')+\"\",\r\n      message: null,\r\n      showLoading: true,\r\n      rankDetails: []\r\n    };\r\n    //this.init = this.init.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"LeaderBoard -> componentDidMount()... \");\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    console.log(\"LeaderBoard -> LeaderBoard()... \");    \r\n    ApiService.getQuizLeaderBoard()\r\n    .then((res) => {\r\n      let respData = res.data.data;\r\n      console.log(\"LeaderBoard -> init(); res : \"+JSON.stringify(respData));\r\n      this.setState({\r\n        showLoading: false,\r\n        rankDetails: respData.rankDetails\r\n      });\r\n    },\r\n    error => { //ErrorCB\r\n      console.log(\"LeaderBoard -> init() -> Connection Error : \"+Config.CONNECTION_ERROR);\r\n      this.setState({\r\n        showLoading: false\r\n      });\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n      <>\r\n        <div className=\"ilearn-full-height page-quiz-zone\">\r\n          <Container fluid>\r\n            {this.renderHeader()}\r\n            {this.renderBody()}\r\n            {this.renderLoader()}          \r\n          </Container>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderHeader() {\r\n    console.log(\"LeaderBoard -> renderHeader()... \");\r\n    return (\r\n      <div className={`ilearn-plain-header ${Config.CURRENT_PORTLET.class}`}>\r\n        <div className=\"back\">\r\n          <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n        </div>\r\n        <h4>Leaderboard</h4>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderBody() {\r\n    console.log(\"LeaderBoard -> renderBody()... \");\r\n    let _rankDetails = this.state.rankDetails;\r\n    let _enquiryId = this.state.enquiryId;\r\n    if(typeof(_rankDetails) !== 'undefined' || _rankDetails != null){\t\r\n    return (\r\n      <>\r\n        {\r\n        !this.state.showLoading && \r\n        <div className=\"ilearn-padding-top\">\r\n          <Card className=\"mx-auto\" style={{ maxWidth: '75rem' }}>\r\n            <Card.Header className=\"leader-board-item\">\r\n              <div className=\"row leader-board-row\">\r\n                <div className=\"col leader-board-header-col leader-board-header-rank\">\r\n                  RANK\r\n                </div>\r\n                <div className=\"col leader-board-header-col\">NAME</div>\r\n                <div className=\"col leader-board-header-col leader-board-header-coins\">\r\n                  COINS\r\n                </div>\r\n              </div>\r\n            </Card.Header>          \r\n            <ul className=\"list-group list-group-flush\">\r\n            {\r\n              _rankDetails.map((rankDetail, index) => {\r\n                return ( \r\n              <li key={index}  className=\"list-group-item ilearn-item-border leader-board-item\">\r\n                <div className={`row leader-board-row ${rankDetail.enquiryId===_enquiryId? 'leaderboard-active-row' : ''}`}>\r\n                  <div className=\"col col-rank-no-padding\">\r\n                    {rankDetail.rank==1 ?\r\n                      <img src=\"./assets/imgs/gold-medal.png\" style={{maxWidth: '32px', maxHeight: '32px'}}/>\r\n                    : rankDetail.rank==2 ?\r\n                    <img src=\"./assets/imgs/silver-medal.png\" style={{maxWidth: '32px', maxHeight: '32px'}}/>\r\n                    : rankDetail.rank==3 ?\r\n                    <img src=\"./assets/imgs/bronze-medal.png\" style={{maxWidth: '32px', maxHeight: '32px'}}/>\r\n                    : <b>{rankDetail.rank}</b>\r\n                    }\r\n                  </div>\r\n                  <div className=\"col col-photo\">\r\n                    <div className=\"leaderboard-photo\">\r\n                      <img style={{maxWidth: '100%', maxHeight: '100%'}} src={rankDetail.photo}/>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col col-name\">{rankDetail.name}</div>\r\n                  <div className=\"col col-coins\">\r\n                    <b>{rankDetail.totalCoins}</b>\r\n                  </div>\r\n                </div>      \r\n              </li>\r\n                );\r\n              })\r\n            }\r\n            </ul>\r\n          </Card>\r\n        </div>\r\n        }\r\n      </>\r\n    );\r\n      }\r\n  }\r\n\r\n  renderLoader() {\r\n    console.log(\"LeaderBoard -> renderLoader()... \");\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n        <ILoader\r\n          loadingText={_loadingText}\r\n          isShow={this.state.showLoading}\r\n        >\r\n        </ILoader>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport {LeaderBoard};\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\quiz\\Wallet.jsx",["1349","1350","1351"],"import React, { Component } from \"react\";\r\nimport {Container, Card, ListGroup } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\nimport Config from './../../_config/config'\r\n\r\nclass Wallet extends Component {\r\n  constructor(props) {    \r\n    super(props);\r\n    console.log(\"Wallet -> constructor()... \");\r\n    console.log(\"Wallet -> constructor(); Portlet : \"+JSON.stringify(Config.CURRENT_PORTLET));\r\n    if(!Config.CURRENT_PORTLET) {\r\n      Config.CURRENT_PORTLET = JSON.parse(localStorage.getItem('portlet'));\r\n    }\r\n    this.state = {\r\n      enquiryId : localStorage.getItem('enquiryId')+\"\",\r\n      message: null,\r\n      showLoading: true,\r\n      wallet: null,\r\n      transactions: []\r\n    };\r\n    //this.init = this.init.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"Wallet -> componentDidMount()... \");\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    console.log(\"Wallet -> init()... \");    \r\n    ApiService.getWalletTransactions(0)\r\n    .then((res) => {\r\n      let respData = res.data;\r\n      console.log(\"Wallet -> init(); res : \"+JSON.stringify(respData));\r\n      this.setState({\r\n        showLoading: false,\r\n        wallet: respData,\r\n        transactions: respData.transactions\r\n      });\r\n    },\r\n    error => { //ErrorCB\r\n      console.log(\"Wallet -> init() -> Connection Error : \"+Config.CONNECTION_ERROR);\r\n      this.setState({\r\n        showLoading: false\r\n      });\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n      <>\r\n        <div className=\"ilearn-full-height page-quiz-zone\">\r\n          <Container fluid>\r\n            {this.renderHeader()}\r\n            {this.renderBody()}\r\n            {this.renderLoader()}          \r\n          </Container>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderHeader() {\r\n    console.log(\"Wallet -> renderHeader()... \");\r\n    return (\r\n      <div className={`ilearn-plain-header ${Config.CURRENT_PORTLET.class}`}>\r\n        <div className=\"back\">\r\n          <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n        </div>\r\n        <h4>Wallet</h4>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderBody() {\r\n    console.log(\"Wallet -> renderBody()... \");\r\n    let _wallet = this.state.wallet;\r\n    let _transactions = this.state.transactions\r\n    return (\r\n        <>\r\n            <div className=\"ilearn-padding-top\">\r\n            <Card className=\"mx-auto\" style={{ maxWidth: '75rem' }}>\r\n                <Card.Body>\r\n                    <Card className=\"ilearn-blue-btn\">\r\n                        <Card.Body>\r\n                            <h4 style={{color:'#fff'}}>Wallet</h4>\r\n                            <Card.Text className=\"text-center\">\r\n                            <span style={{color:'#fff', fontSize:'32px'}}>\r\n                                <b>{(_wallet && _wallet.balance)?_wallet.balance:0}</b> &nbsp; \r\n                                <img class=\"wallet-coin\" src=\"./assets/imgs/coins-64.png\"/>            \r\n                            </span>     \r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Card.Title>Recent</Card.Title>\r\n                    <ul className=\"list-group\">\r\n                    {\r\n                      _transactions.map((transaction, index) => {\r\n                        return ( \r\n                        <li key={index} className=\"list-group-item wallet-item\" >\r\n                            <div className=\"ilearn-item-block \">\r\n                                <div className={`${transaction.transactionType === 'C'? 'circle-plus' : 'circle-minus'}`}/>\r\n                                <div className=\"ilearn-item-inner\">\r\n                                <h4>{transaction.name}</h4>\r\n                                <p className=\"wallet-transaction-remarks\"> {transaction.date} </p>\r\n                                </div>\r\n                                <div className=\"wallet-transaction-coins\">{transaction.coins}</div>\r\n                            </div>\r\n                        </li>\r\n                        );\r\n                      })\r\n                    }\r\n                    </ul>\r\n                </Card.Body>    \r\n            </Card>\r\n            </div>\r\n        </>\r\n    )\r\n  }\r\n\r\n  renderLoader() {\r\n    console.log(\"Wallet -> renderLoader()... \");\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n        <ILoader\r\n          loadingText={_loadingText}\r\n          isShow={this.state.showLoading}\r\n        >\r\n        </ILoader>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport {Wallet};\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\quiz\\QuizPlayer.jsx",["1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363","1364","1365","1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379","1380","1381","1382","1383","1384","1385","1386","1387","1388","1389","1390","1391","1392","1393","1394","1395","1396","1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411","1412","1413","1414","1415","1416","1417","1418","1419","1420","1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431","1432","1433","1434","1435","1436","1437","1438","1439","1440","1441","1442","1443","1444","1445","1446","1447","1448","1449"],"import React, { Component } from \"react\";\r\nimport \"./Quiz.css\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft , faClock} from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\nimport swal from 'sweetalert';\r\nimport Config from './../../_config/config'\r\nimport Confetti from 'react-dom-confetti';\r\n\r\nclass QuizPlayer extends Component {\r\n  constructor(props) {    \r\n    super(props);\r\n    console.log(\"QuizPlayer -> constructor()... \");\r\n    console.log(\"QuizPlayer -> constructor(); Portlet : \"+JSON.stringify(Config.CURRENT_PORTLET));\r\n    console.log(\"QuizPlayer -> constructor(); testBean : \"+JSON.stringify(this.props.location.state.testBean));\r\n    if(!Config.CURRENT_PORTLET) {\r\n      Config.CURRENT_PORTLET = JSON.parse(localStorage.getItem('portlet'));\r\n    }\r\n    this.state = {\r\n      testBean : this.props.location.state.testBean,\r\n      enquiryId : localStorage.getItem('enquiryId'),\r\n      enrollmentId : 0,\r\n      message: null,\r\n      errorMessage: null,\r\n      showLoading: false,\r\n      testdata: null,\r\n      showConfettii: false,\r\n      testRemainingTimeInSeconds: 0,\r\n      time: {} // Timer\r\n    };\r\n    /* Timer Properties */\r\n    this.timer = 0;\r\n    this.done = false;\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n    this.sync = this.sync.bind(this);\r\n    this.autoSyncTimer = 0;\r\n    /* Timer Properties*/\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"QuizPlayer -> componentDidMount()... \");\r\n    this.init();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    \r\n  }\r\n\r\n  init() {\r\n    console.log(\"QuizPlayer -> init()... \"+JSON.stringify(this.state.testBean));\r\n    this.setState({ showLoading: true }, () => {\r\n        ApiService.getOnlineTestData(this.state.testBean.id)\r\n        .then((res) => {\r\n          console.log(\"QuizPlayer -> init(); res : \"+JSON.stringify(res));\r\n          let testData = res.data;\r\n          if(!testData) {\r\n            console.log(\"QuizPlayer -> init() -> No test data found!\");\r\n            this.setState({\r\n              showLoading: false,\r\n              errorMessage: \"No test data found!\"\r\n            });\r\n          }\r\n          else {\r\n            this.setUp(testData);\r\n          }     \r\n          \r\n        },\r\n        error => { //ErrorCB\r\n          console.log(\"QuizPlayer -> init() -> Connection Error : \"+Config.CONNECTION_ERROR);\r\n          this.setState({\r\n            showLoading: false\r\n          });\r\n        });\r\n    });    \r\n  }\r\n\r\n  setUp(data) {\r\n    console.log(\"QuizPlayer -> setUp()...\"+JSON.stringify(data));\r\n    //this.showLoading(\"Initializing...\");\r\n    \r\n\r\n    /*periodically update test remaining time  every autosyncperiod configured in the resource*/\r\n    if(data.test.autosyncperiod!=undefined) {\r\n      this.autoSyncTimer = setInterval(this.sync, data.test.autosyncperiod);\r\n    }\r\n    let autoTerminateTest=\"0\";\r\n    let sectionaldistribution=data.test.sectionaldistribution;\r\n    let prematureTermination=data.test.prematuretermination;\r\n    if(prematureTermination == 0 && sectionaldistribution == 1) { // disable Finish button\r\n      autoTerminateTest=\"1\";\r\n    }\r\n    let sections=[];\r\n    for(let secIndex=0; secIndex<data.test.sections.section.length-1; secIndex++) {\r\n      let section= data.test.sections.section[secIndex];\r\n      /*Creating JSON Array(question) when there is single JSON Object(question)*/\r\n      if(!(Array.isArray(section.questions.question))) {\r\n        let questionJsonArray = [];\r\n        questionJsonArray.push(section.questions.question);\r\n        section.questions.question = questionJsonArray;\r\n      }\r\n      sections.push(section);\r\n    }\r\n\r\n    console.log(\"sections : \"+JSON.stringify(sections));\r\n    let currentIndex=0;\r\n    let currentSectionIndex=0;\r\n    let question=sections[0].questions.question[currentIndex];\r\n    console.log(\"QuizPlayer -> setUp(); question <<1>> \"+JSON.stringify(question));\r\n    if( ! this.isNumber(question.textanswer) && question.textanswer==false) {\r\n      question.textanswer=\"\";\r\n    }\r\n    let sectionDataStore={data: []};\r\n    let _sectionDataStore={data: []};\r\n    for(let section in sections) {\r\n      _sectionDataStore.data[section]= {\r\n          \"sectionIndex\":section,\r\n          \"sectionId\":sections[section].id,\r\n          \"sectionQuestionIndex\":0\r\n      }\r\n      sectionDataStore=_sectionDataStore;\r\n    }\r\n    let lastAttemptedSectionId=data.test.lastattemptedsectionid;\r\n    let resumeFromSection;\r\n    let totalQuestions = 0;\r\n    let questionDataStore={data:[]};\r\n    console.log(\"QuizPlayer -> setUp(); Iterating section START...\");\r\n    console.log(\"QuizPlayer -> setUp(); lastAttemptedSectionId : \"+lastAttemptedSectionId);\r\n    for(let si in data.test.sections.section) {\r\n      let section= data.test.sections.section[si];\r\n      if(lastAttemptedSectionId > 0 && lastAttemptedSectionId == section.sectionid){\r\n        console.log(\"QuizPlayer -> setUp(); resumeFromSection : \"+JSON.stringify(resumeFromSection));\r\n        resumeFromSection = section;\r\n        currentSectionIndex = parseInt(si);\r\n      }\r\n      if(!section.sectionid)  // Checking blank Section\r\n          continue;\r\n      for(let qi in section.questions.question) {\r\n        let _question = section.questions.question[qi];\r\n        let attemptedChoices = [];\r\n        if(_question.questioncategory==\"1\" || _question.questioncategory==\"26\") {\r\n          for(let choiceIndex in _question.choices.choice) {\r\n            if(_question.choices.choice[choiceIndex].attempted==\"1\") {\r\n                attemptedChoices.push(_question.choices.choice[choiceIndex].id);\r\n            }\r\n          }\r\n        }\r\n        /*if(_question.questioncategory==\"2\"){ // mtf\r\n          let choices=_question.choices;\r\n          for(let index in choices.choice){\r\n            let matches=choices.choice[index].matches;\r\n            let selectedMatches=\"\";\r\n            for(let matchIndex in matches.match){\r\n              if(matches.match[matchIndex].attempted==\"1\"){\r\n                if(selectedMatches.length>0){\r\n                  selectedMatches+=\";\";\r\n                }\r\n                selectedMatches+=matches.match[matchIndex].id;\r\n              }\r\n            }\r\n            if(selectedMatches.length>0){\r\n              attemptedChoices.push(choices.choice[index].id+\":\"+selectedMatches);\r\n            }\r\n          }\r\n        }*/\r\n        let textualAnswer = \"\";\r\n        /*if(_question.questioncategory==\"0\" || _question.questioncategory==\"4\" ||  _question.questioncategory==\"5\") {\r\n            if(isNumber(_question.textanswer) || _question.textanswer != false) {\r\n              textualAnswer=_question.textanswer;\r\n            }\r\n        }*/\r\n        let _question1 = {\r\n            questionIndex       : qi,\r\n            questionNumber      : _question.questionnumber,\r\n            testid              : this.state.testBean.id,\r\n            sectionid           : _question.questionsectionid,\r\n            enquiryid           : this.state.enquiryId,\r\n            enrollmentid        : this.state.enrollmentId,\r\n            questionnumber      : _question.questionnumber,\r\n            questionid          : _question.id,\r\n            questioncategory    : _question.questioncategory,\r\n            attemptid           : _question.attemptid,\r\n            attempted           : _question.attempted,\r\n            timetaken           : _question.timespent ,\r\n            currenttimetaken    : \"\",\r\n            attemptedchoices    : attemptedChoices,\r\n            textualanswer       : textualAnswer,\r\n            state               : \"\",\r\n            stateid             : _question.markforlater,\r\n            markstatus          : \"\",\r\n            runningquestionnumber: _question.runningquestionnumber\r\n        };\r\n        //questionDataStore.data.push(_question1);\r\n        questionDataStore.data[_question.questionnumber] = _question1;\r\n      }\r\n    }\r\n    console.log(\"QuizPlayer -> setUp(); questionDataStore : \"+JSON.stringify(questionDataStore));\r\n    console.log(\"QuizPlayer -> setUp(); Iterating section END...\");\r\n    console.log(\"QuizPlayer -> setUp(); currentSectionIndex : \"+currentSectionIndex);\r\n    if(!questionDataStore.data[0]){\r\n      console.log(\"QuizPlayer -> setUp(); Removing Empty question\");\r\n      totalQuestions = questionDataStore.data.length-1;\r\n    }\r\n    else {\r\n      totalQuestions = questionDataStore.data.length;\r\n    }\r\n    \r\n    //console.log(questionDataStore);\r\n    questionDataStore.data[question.questionnumber].attempted=1; // first question always in READY TO ATTEMPT mode i.e. 1\r\n    //sections[0].questions.question[0].visited=\"1\";\r\n    question.visited=\"1\";\r\n    //question.marked=questionDataStore.data[question.questionnumber].stateid;\r\n    //console.log(\"currentSectionIndex = \"+currentSectionIndex);\r\n    let currentSection = null;\r\n    let testtime = 0;\r\n    let currentTab = 0;\r\n    if(typeof resumeFromSection !== 'undefined' ) {\r\n      console.log(\"QuizPlayer -> setUp(); resumeFromSection : \"+resumeFromSection);\r\n      currentSection = resumeFromSection;      \r\n      //this.selectTab(currentSectionIndex);\r\n      //console.log(currentSection);\r\n      currentIndex=data.test.resumefrom-1;\r\n      testtime = data.test.resumetime;\r\n      question = sections[currentSectionIndex].questions.question[currentIndex];\r\n      console.log(\"QuizPlayer -> setUp(); resumeFromSection >> currentIndex: \"+currentIndex);\r\n      console.log(\"QuizPlayer -> setUp(); resumeFromSection >> testtime: \"+testtime);\r\n    }\r\n    else {\r\n      console.log(\"QuizPlayer -> setUp(); resumeFromSection else....\"); \r\n      /*start of [ to resume from in case of non-sectional time] */\r\n      let resumeFrom = data.test.resumefrom-1; // rF = 7 ,1s = 6,2s = 6 (12-7 = 5)\r\n      let questionCount = 0;\r\n      for(let si in sections) {\r\n        let section = sections[si];\r\n        questionCount+= section.questions.question.length;\r\n        if(questionCount > resumeFrom ) {\r\n          currentIndex = resumeFrom - ( questionCount - section.questions.question.length);\r\n          currentSection = section;\r\n          question = currentSection.questions.question[currentIndex ];\r\n          currentSectionIndex = parseInt(si);\r\n          currentTab = currentSectionIndex;\r\n          break;\r\n        }\r\n      }\r\n      /* end of [to resume from in case of non-sectional time]*/\r\n      //currentSection=sections[0]; // uncomment this line if [to resume from in case of non-sectional time] has any issue\r\n\r\n      if(sectionaldistribution==1){\r\n        testtime = currentSection.testtime;\r\n      }\r\n      else{\r\n        testtime = data.test.testtime;\r\n      }\r\n    }\r\n\r\n    let testJSONObj = {\r\n      \"syncCounter\":0,\r\n      \"testName\":data.test.name,\r\n      \"studentName\":data.test.studentname,\r\n      \"studentCode\":data.test.studentcode,\r\n      \"studentPhotoPath\":data.test.studentphotopath,\r\n      \"usefulData\":data.test.showusefuldata,\r\n      \"isTodayEndDate\":data.test.isTodayEndDate,\r\n      \"testAutoQuitMessage\":data.test.testAutoQuitMessage,\r\n      \"importantConstants\":data.test.importantConstants,\r\n      \"sectionaldistribution\":sectionaldistribution,\r\n      \"prematureTermination\":prematureTermination,\r\n      \"autosyncperiod\":data.test.autosyncperiod,\r\n      \"instructions\": data.test.instructions,\r\n      \"autoTerminateTest\":autoTerminateTest,\r\n      \"sections\":sections,\r\n      \"currentIndex\":currentIndex,\r\n      \"currentSectionIndex\":currentSectionIndex,\r\n      \"question\":question,\r\n      \"sectionDataStore\":sectionDataStore,\r\n      \"lastAttemptedSectionId\":lastAttemptedSectionId,\r\n      \"resumeFromSection\":resumeFromSection,\r\n      \"totalQuestions\":totalQuestions,\r\n      \"questionDataStore\":questionDataStore,\r\n      \"currentSection\":currentSection,\r\n      \"testtime\":testtime,\r\n      \"currentTab\":currentTab,\r\n      \"choicetype\":currentSection.choicetype,\r\n      \"calculatorMode\":currentSection.calculatortype,\r\n      \"startTime\":new Date().getTime(),\r\n      \"display\":1\r\n    }\r\n\r\n    console.log(\"QuizPlayer -> setUp();  Question : \"+JSON.stringify(testJSONObj.question));\r\n    console.log(\"QuizPlayer -> setUp(); Test time : \"+testtime);\r\n    let testRemainingTimeInSeconds = testtime/1000;\r\n    console.log(\"QuizPlayer -> setUp(); testRemainingTimeInSeconds \"+ testRemainingTimeInSeconds);\r\n    let timeLeftVar = this.secondsToTime(testRemainingTimeInSeconds);\r\n    this.setState({\r\n      showLoading: false,\r\n      testdata : testJSONObj,\r\n      testRemainingTimeInSeconds : testRemainingTimeInSeconds,\r\n      time: timeLeftVar\r\n    });\r\n\r\n    console.log(\"QuizPlayer -> setUp(); Test Data : \"+JSON.stringify(testJSONObj));\r\n    \r\n    this.startTimer();\r\n    \r\n    //this.loadMathJax();\r\n  }\r\n\r\n\r\n  /* -----Timer Methods Start----- */\r\n  startTimer() {\r\n    console.log(\"QuizPlayer -> startTimer()... \");\r\n    if (this.timer == 0 && this.state.testRemainingTimeInSeconds > 0) {\r\n      this.timer = setInterval(this.countDown, 1000);\r\n    }\r\n  }\r\n\r\n  countDown() {\r\n    //console.log(\"QuizPlayer -> countDown()... \"+this.done);\r\n    // Remove one second, set state so a re-render happens.\r\n    let seconds = this.state.testRemainingTimeInSeconds - 1;\r\n    this.setState({\r\n      time: this.secondsToTime(seconds),\r\n      testRemainingTimeInSeconds: seconds,\r\n    });\r\n    \r\n    // Check if we're at zero.\r\n    if (seconds == 0  || this.done == true) { \r\n      //clearInterval(this.timer);\r\n      //alert(\"Timer stop!...\");\r\n      this.stopCountdown();       \r\n    }\r\n  }\r\n\r\n  stopCountdown() {\r\n    console.log(\"QuizPlayer -> stopCountdown();\");\r\n    if(this.timer) {\r\n      clearInterval(this.timer);\r\n      this.timer= undefined;\r\n    }\r\n    if(this.autoSyncTimer) {\r\n      clearInterval(this.autoSyncTimer);\r\n    }\r\n    \r\n    if(!this.done) {\r\n      this.timeOut();\r\n    }\r\n  };\r\n\r\n  secondsToTime(secs ){\r\n    let hours = Math.floor(secs / (60 * 60));\r\n\r\n    let divisor_for_minutes = secs % (60 * 60);\r\n    let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n    let divisor_for_seconds = divisor_for_minutes % 60;\r\n    let seconds = Math.ceil(divisor_for_seconds);\r\n\r\n    let obj = {\r\n      \"h\": hours<10?\"0\"+hours:hours,\r\n      \"m\": minutes<10?\"0\"+minutes:minutes,\r\n      \"s\": seconds<10?\"0\"+seconds:seconds\r\n    };\r\n    return obj;\r\n  }\r\n\r\n\r\n  /* -----Timer Methods END----- */\r\n\r\n  \r\n  render() {\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          {this.renderHeader()}\r\n          {this.state.errorMessage && this.renderError()}\r\n          {!this.state.errorMessage && this.renderBody()}\r\n          {this.renderLoader()}          \r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderHeader() {\r\n    //console.log(\"QuizPlayer -> renderHeader()... \");\r\n    return (\r\n      <div className={`ilearn-plain-header ${Config.CURRENT_PORTLET.class}`}>\r\n        <div className=\"ilearn-item-block \">\r\n          { this.state.testdata && \r\n            <>\r\n            <div className=\"quiz-player-back\" onClick={() => this.forceDismiss()}>\r\n              <FontAwesomeIcon icon={ faArrowLeft } />\r\n            </div>\r\n            <h4 className=\"quiz-header\">{this.state.testBean.name}</h4>\r\n            <div className=\"quiz-player-timer\">{this.renderTimer()}</div>\r\n            </>\r\n          }\r\n          {\r\n            !this.state.testdata && \r\n            <div className=\"quiz-player-back\" onClick={() => this.props.history.goBack()}>\r\n              <FontAwesomeIcon icon={ faArrowLeft } />\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderBody() {\r\n    //console.log(\"QuizPlayer -> renderBody()... \");\r\n    return (      \r\n      <>\r\n      {\r\n        this.state.testdata && this.state.testdata.question && \r\n        <div className=\"ilearn-padding-both-sides ilearn-padding-top\">\r\n          <Card>\r\n          <Card.Header as=\"h5\" className=\"question-number\">Q :{this.state.testdata.question.runningquestionnumber}/{this.state.testdata.totalQuestions}               \r\n          </Card.Header>\r\n            <Card.Body>\r\n                <div className=\"ilearn-item-block \">\r\n                    <p className=\"ilearn-item-inner card-text\" dangerouslySetInnerHTML={{__html: this.state.testdata.question.statement}}>\r\n                    </p>\r\n                </div>\r\n                {\r\n                    this.state.testdata.question.choices.choice.map((choice, index) => {\r\n                        return ( \r\n                          this.renderChoice(choice)\r\n                        );\r\n                    })\r\n                }\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      }\r\n      </>\r\n    );\r\n    \r\n  }\r\n\r\n  renderChoice(choice) {\r\n    //console.log(\"QuizPlayer -> renderChoice()... \");\r\n    return (\r\n      <>\r\n        <div className=\"ilearn-padding-both-sides ilearn-padding-top\">\r\n          <Card onClick={() => this.onClickOption(this.state.testdata.question, choice.id)}>\r\n            <Card.Body className={`question-choice  ${choice.flag==true? 'correct' : choice.flag==false?'wrong':'normal'}`}>\r\n                <div className=\"ilearn-item-block \">\r\n                    <p className=\"ilearn-item-inner card-text question-choice-item-inner\" dangerouslySetInnerHTML={{__html: choice.choice}}>\r\n                    </p>\r\n                </div>                \r\n            </Card.Body>\r\n          </Card>          \r\n              <Confetti active={ choice.flag && this.state.showConfettii } />\r\n          </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  renderLoader() {\r\n    //console.log(\"QuizPlayer -> renderLoader()... \");\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n        <ILoader\r\n          loadingText={_loadingText}\r\n          isShow={this.state.showLoading}\r\n        >\r\n        </ILoader>\r\n    )\r\n  }\r\n\r\n  renderTimer() {\r\n    //console.log(\"QuizPlayer -> renderTimer()... \");\r\n    return ( \r\n        <span className=\"float-right\">\r\n            <FontAwesomeIcon icon={ faClock }/> {this.state.time.h}:{this.state.time.m}:{this.state.time.s}\r\n        </span>\r\n    );\r\n  }\r\n\r\n  renderError() {\r\n    return (\r\n        <> \r\n          <br/>        \r\n          <div className=\"alert alert-danger text-center\">\r\n              <h4 className=\"alert-heading\">Error!</h4>\r\n              <p>{this.state.errorMessage}</p>\r\n          </div>\r\n        </>\r\n    )    \r\n  }\r\n\r\n  toggleConfetti() {\r\n    console.log(\"QuizPlayer -> toggleConfetti()... \");\r\n    this.setState(state => ({ showConfettii: !state.showConfettii }));\r\n  }\r\n  \r\n  onClickOption(question, selectedChoiceId) {\r\n    console.log(\"QuizPlayer -> onClickOption(); selectedChoiceId: \"+selectedChoiceId);\r\n    if(!this.state.showLoading) { //For Blocking multiple clicks on option buttons.      \r\n      this.setState({\r\n        showLoading: true\r\n      });\r\n      let _showConfetti = false;\r\n      let correctChoiceIndex = null;\r\n      let selectedChoiceIndex = null;\r\n      let correctChoice = null;\r\n      let selectedChoice = null;\r\n      for(let choiceIndex in question.choices.choice) {\r\n        if(question.choices.choice[choiceIndex].correctFlag==1) {\r\n          correctChoiceIndex = choiceIndex;\r\n          correctChoice = question.choices.choice[choiceIndex];\r\n          console.log(\"QuizPlayer -> onClickOption(); Correct Flag :\"+JSON.stringify(correctChoice))\r\n        }\r\n        if(question.choices.choice[choiceIndex].id==selectedChoiceId) {\r\n          selectedChoiceIndex = choiceIndex;\r\n          selectedChoice = question.choices.choice[choiceIndex].id;\r\n          console.log(\"QuizPlayer -> onClickOption(); Selected Flag :\"+JSON.stringify(selectedChoice))\r\n        }\r\n      }\r\n      question.choices.choice[selectedChoiceIndex].attempted=\"1\";\r\n      if(question.choices.choice[correctChoiceIndex].id == question.choices.choice[selectedChoiceIndex].id) {\r\n          question.choices.choice[selectedChoiceIndex].flag= true; \r\n          _showConfetti = true;         \r\n      }\r\n      else {\r\n        question.choices.choice[selectedChoiceIndex].flag= false;        \r\n        question.choices.choice[correctChoiceIndex].flag = true;\r\n      }\r\n      this.setState({\r\n        showLoading: false,\r\n        showConfettii: _showConfetti\r\n      });\r\n      \r\n      //setInterval(this.next(question.questionnumber), 2000);\r\n      setTimeout(() => {\r\n        this.next(question.questionnumber);\r\n      }, 1000);\r\n      /*setInterval(function() {        \r\n        console.log(\"QuizPlayer -> onClickOption(); nextQuestion... \");\r\n        this.next(question.questionnumber);\r\n      },2000);*/\r\n      \r\n    }\r\n  }\r\n\r\n  next(questionNumber) {\r\n    console.log(\"QuizPlayer -> next()... \");\r\n    if(this.state.testdata.question.runningquestionnumber >= this.state.testdata.totalQuestions) {\r\n      console.log(\"QuizPlayer -> next(); FINISH... \");\r\n      this.finish();\r\n    }\r\n    else {\r\n      this.goNext(questionNumber,0);\r\n    }\r\n  }\r\n\r\n  goNext(questionNumber,stateId) {\r\n    console.log(\"QuizPlayer -> goNext()... \");\r\n    let stateName=stateId==0 ? \"next\" : stateId==1 ? \"mark\" : \"\";\r\n    let currentSectionIndex=this.state.testdata.currentSectionIndex ;\r\n    let sectionData=this.state.testdata.sectionDataStore.data[currentSectionIndex];\r\n    //let questionIndex=sectionData.sectionQuestionIndex;\r\n    let questionIndex=this.state.testdata.questionDataStore.data[questionNumber].questionIndex;\r\n    //this.sections[currentSectionIndex].questions.question[questionIndex].marked=\"0\";\r\n    if(this.state.testdata.questionDataStore.data[this.state.testdata.question.questionnumber].stateid==\"1\"){\r\n      this.state.testdata.questionDataStore.data[this.state.testdata.question.questionnumber].markstatus=\"reset\";\r\n    }\r\n    this.state.testdata.questionDataStore.data[this.state.testdata.question.questionnumber].stateid=stateId;\r\n    //console.log(this.question)\r\n    if( ! this.isNumber(this.state.testdata.question.textanswer) && this.state.testdata.question.textanswer==false){\r\n      this.state.testdata.question.textanswer=\"\";\r\n    }\r\n    /*if(this.question.questioncategory==\"0\" || this.question.questioncategory==\"4\" || this.question.questioncategory==\"5\"){\r\n        let value=document.getElementById(\"answer\").value;\r\n        this.question.textanswer=value;\r\n        this.questionDataStore.data[this.question.questionnumber].textualanswer=value;\r\n    }*/\r\n    this.state.testdata.questionDataStore.data[this.state.testdata.question.questionnumber].state=stateName;\r\n    this.processAttemptedQuestions(stateName);\r\n    questionIndex++;\r\n    let sectionCount=this.state.testdata.sections.length;\r\n    if(questionIndex >= this.state.testdata.sections[currentSectionIndex].questions.question.length) {\r\n      if(this.state.testdata.sectionaldistribution==0){\r\n        if(currentSectionIndex<sectionCount-1){\r\n          currentSectionIndex++;\r\n          this.state.testdata.currentSectionIndex=currentSectionIndex;\r\n          questionIndex=0;\r\n          this.state.testdata.currentTab = currentSectionIndex;\r\n        }\r\n        else {\r\n          currentSectionIndex=0;\r\n          this.state.testdata.currentSectionIndex=currentSectionIndex;\r\n          questionIndex=0;\r\n          this.state.testdata.currentTab = currentSectionIndex;\r\n        }\r\n      }\r\n      if(this.state.testdata.sectionaldistribution==1) {\r\n        this.state.testdata.currentSectionIndex=currentSectionIndex;\r\n        questionIndex=0;\r\n        this.state.testdata.currentTab = currentSectionIndex;\r\n      }\r\n    }\r\n    this.state.testdata.sectionDataStore.data[currentSectionIndex].sectionQuestionIndex=questionIndex;\r\n    this.state.testdata.question=this.state.testdata.sections[currentSectionIndex].questions.question[questionIndex];\r\n    this.state.testdata.question.visited=\"1\";\r\n    this.state.testdata.questionDataStore.data[this.state.testdata.question.questionnumber].attempted=1; // first question always in READY TO ATTEMPT mode i.e. 1\r\n    if( ! this.isNumber(this.state.testdata.question.textanswer) && this.state.testdata.question.textanswer==false) {\r\n      this.state.testdata.question.textanswer=\"\";\r\n    }\r\n    if(this.state.testdata.question.questioncategory==\"0\" || this.state.testdata.question.questioncategory==\"4\" || this.state.testdata.question.questioncategory==\"5\") {\r\n      /*if(this.questionDataStore.data[this.question.questionnumber].textualanswer==\"false\"){\r\n        document.getElementById(\"answer\").value=\"\";\r\n        }\r\n        else{\r\n        document.getElementById(\"answer\").value=this.questionDataStore.data[this.question.questionnumber].textualanswer;\r\n        }*/\r\n      /*if(document.getElementById(\"answer\")!=undefined) {\r\n        (<HTMLInputElement>document.getElementById(\"answer\")).value=this.question.textanswer;\r\n      }*/\r\n\r\n    }\r\n    this.state.testdata.currentSection=this.state.testdata.sections[currentSectionIndex];\r\n    this.state.testdata.calculatorMode=this.state.testdata.currentSection.calculatortype;\r\n    this.state.testdata.choicetype=this.state.testdata.currentSection.choicetype;\r\n    //this.isLoading=false;\r\n    //this.loadMathJax();\r\n  }\r\n\r\n  processAttemptedQuestions(state) {\r\n    console.log(\"QuizPlayer -> processAttemptedQuestions()... \");\r\n    let presentTime=  new Date().getTime();\r\n    // Calculate the difference in milliseconds\r\n    let timeDifference = presentTime - this.state.testdata.startTime;\r\n    let seconds = Math.round(parseInt(timeDifference)/1000);\r\n    this.state.testdata.startTime= presentTime;\r\n    let currentQuestion= this.state.testdata.question;\r\n    if(currentQuestion==undefined){\r\n      return;\r\n    }\r\n    let attemptedChoices=[];\r\n    if(this.state.testdata.question.questioncategory==\"1\" || this.state.testdata.question.questioncategory==\"26\") { // mcq\r\n      let choices=currentQuestion.choices;\r\n      for(let index in choices.choice) {\r\n        if(choices.choice[index].attempted==\"1\") {\r\n          attemptedChoices.push(choices.choice[index].id);\r\n        }\r\n      }\r\n    }\r\n    /*if(this.state.testdata.question.questioncategory==\"2\"){ // mtf\r\n        //console.log(\"mtf\")\r\n        let choices=currentQuestion.choices;\r\n        for(let index in choices.choice){\r\n          let matches=choices.choice[index].matches;\r\n          let selectedMatches=\"\";\r\n          for(let matchIndex in matches.match){\r\n            //console.log(matchIndex+\"=\"+matches.match[matchIndex].attempted)\r\n            if(matches.match[matchIndex].attempted==true){\r\n              //console.log(\"yes\")\r\n              if(selectedMatches.length>0){\r\n                selectedMatches+=\";\";\r\n              }\r\n              selectedMatches+=matches.match[matchIndex].id;\r\n            }\r\n          }\r\n          if(selectedMatches.length>0){\r\n            attemptedChoices.push(choices.choice[index].id+\":\"+selectedMatches);\r\n          }\r\n        }\r\n        //console.log(attemptedChoices)\r\n    }*/\r\n    //this.choicetype;\r\n    //console.log(attemptedChoices)\r\n    let summedTimeSpent=parseInt(this.state.testdata.questionDataStore.data[currentQuestion.questionnumber].timetaken) + seconds;\r\n    this.state.testdata.questionDataStore.data[currentQuestion.questionnumber].sectionid=currentQuestion.questionsectionid;\r\n    this.state.testdata.questionDataStore.data[currentQuestion.questionnumber].attemptid=currentQuestion.attemptid;\r\n    if(this.state.testdata.question.questioncategory==\"1\" || this.state.testdata.question.questioncategory==\"26\") {\r\n      this.state.testdata.questionDataStore.data[currentQuestion.questionnumber].attemptedchoices=attemptedChoices;\r\n    }\r\n    /*if(this.state.testdata.question.questioncategory==\"2\"){\r\n      this.state.testdata.questionDataStore.data[currentQuestion.questionnumber].attemptedchoices=attemptedChoices;\r\n    }*/\r\n    this.state.testdata.questionDataStore.data[currentQuestion.questionnumber].timetaken=summedTimeSpent;\r\n    this.state.testdata.questionDataStore.data[currentQuestion.questionnumber].currenttimetaken=seconds;\r\n    this.state.testdata.questionDataStore.data[currentQuestion.questionnumber].state=state;\r\n    this.state.testdata.questionDataStore.data[currentQuestion.questionnumber].attempted=1;\r\n    /*if(this.state.testdata.question.questioncategory==\"0\" || this.question.questioncategory==\"4\" || this.question.questioncategory==\"5\"){\r\n        this.state.testdata.questionDataStore.data[this.question.questionnumber].textualanswer=currentQuestion.textanswer;\r\n    }*/\r\n    let currentAttempted=[] ;\r\n    let toBeSubmittedIndex=0;\r\n    for( let failedIndex in this.state.testdata.questionDataStore.data){\r\n      if(this.state.testdata.questionDataStore.data[failedIndex].attempted==1){\r\n        currentAttempted[toBeSubmittedIndex]=this.state.testdata.questionDataStore.data[failedIndex];\r\n        toBeSubmittedIndex++;\r\n      }\r\n    }\r\n    if(currentAttempted.length>=5){\r\n       this.connectionError();\r\n    }\r\n    //console.log(currentAttempted);\r\n\r\n    console.log(\"QuizPlayer -> processAttemptedQuestions(); submitTestData()-> currentAttempted :  \"+JSON.stringify(currentAttempted));\r\n    ApiService.submitTestData(currentAttempted)\r\n      .then(res => { //SuccessCB\r\n        //console.log(\"QuizPlayer -> processAttemptedQuestions(); submitTestData()-> Response :  \"+JSON.stringify(res));\r\n        let respData = res.data;\r\n        console.log(\"QuizPlayer -> processAttemptedQuestions(); submitTestData()-> Response :  \"+JSON.stringify(respData));\r\n        /*{\"status\":1,\"message\":\"Test data successfully saved.\",\"data\":[]}*/\r\n        this.state.testdata.syncCounter=0;\r\n        if(respData.status==1 || respData.status==2 ) { // server responded with NO ERRORS\r\n          for(let updateIndex in currentAttempted) {   // if server responded i.e. submitted data saved successfully , change currentAttempts status to ATTEMPTED STATUS as 2\r\n            this.state.testdata.questionDataStore.data[currentAttempted[updateIndex].questionnumber].attempted=2;\r\n          }\r\n          if(respData.status==2){\r\n            this.state.testdata.publishResultLater=2;\r\n            this.state.testdata.publishResultLaterMessage=\"<br/>We will publish the result soon.\";\r\n          }\r\n          else{\r\n            this.state.testdata.publishResultLater=0;\r\n            this.state.testdata.publishResultLaterMessage=\"\";\r\n          }\r\n        }\r\n        if(respData.status==0){ // server responded with SOME ERRORS\r\n          for(let updateIndex in currentAttempted){   // if server responded i.e. submitted data saved successfully , change currentAttempts status to ATTEMPTED STATUS as 1\r\n            this.state.testdata.questionDataStore.data[currentAttempted[updateIndex].questionnumber].attempted=1;\r\n          }\r\n        }  \r\n      },\r\n      error => { //ErrorCB\r\n        console.log(\"QuizPlayer -> processAttemptedQuestions(); submitTestData()-> Connection Error : \"+Config.CONNECTION_ERROR);\r\n        this.state.testdata.syncCounter++;\r\n      }\r\n    );    \r\n  };\r\n\r\n  finish() {\r\n    console.log(\"QuizPlayer -> finish(); Finish Quiz...\");\r\n    ApiService.checkServer(this.state.enquiryId)\r\n      .then(res => { //SuccessCB\r\n        //this.isLoading=false;    \r\n        let respData = res.data;\r\n        console.log(\"QuizPlayer -> finish(); Response :  \"+JSON.stringify(respData));\r\n        /*{\"status\":1,\"message\":\"Test data successfully saved.\",\"data\":[]}*/\r\n        if(respData.status==1) {\r\n          let finishMode=\"finish\";\r\n          if(this.state.testdata.timeover==\"1\") {\r\n            finishMode=\"autofinish\";\r\n          }\r\n          this.done=true;//this.stopCountdown();\r\n          this.processAttemptedQuestions(finishMode);\r\n          this.state.testdata.showcancel=\"0\";\r\n          if(this.state.testdata.timeover==\"1\"){\r\n            this.timeOverConfirm();\r\n          }\r\n          else{\r\n            this.confirm();\r\n          }\r\n        } \r\n      },\r\n      error => { //ErrorCB\r\n        console.log(\"QuizPlayer -> finish();Connection Error : \"+Config.CONNECTION_ERROR);\r\n        this.state.testdata.syncCounter++;\r\n        if(this.state.testdata.syncCounter>=1) {\r\n          this.connectionError();\r\n        }\r\n      }\r\n    );    \r\n  }\r\n\r\n  /*update test remaining time periodically*/\r\n  sync() {\r\n    console.log(\"QuizPlayer -> sync();\");\r\n    let presentTime=  new Date().getTime();\r\n    // Calculate the difference in milliseconds\r\n    let timeDifference = presentTime - this.state.testdata.startTime;\r\n    let seconds = Math.round(parseInt(timeDifference)/1000);\r\n    this.state.testdata.startTime = presentTime;\r\n    let currentQuestion = this.state.testdata.question;\r\n    if(currentQuestion==undefined) {\r\n      return;\r\n    }\r\n    let summedTimeSpent = parseInt(this.state.testdata.questionDataStore.data[currentQuestion.questionnumber].timetaken) + seconds;\r\n    this.state.testdata.questionDataStore.data[currentQuestion.questionnumber].sectionid = currentQuestion.questionsectionid;\r\n    this.state.testdata.questionDataStore.data[currentQuestion.questionnumber].attemptid = currentQuestion.attemptid;\r\n    this.state.testdata.questionDataStore.data[currentQuestion.questionnumber].timetaken = summedTimeSpent;\r\n    this.state.testdata.questionDataStore.data[currentQuestion.questionnumber].currenttimetaken = seconds;\r\n    let currentAttempted = [];\r\n    let toBeSubmittedIndex = 0;\r\n    currentAttempted[toBeSubmittedIndex] = this.state.testdata.questionDataStore.data[currentQuestion.questionnumber];\r\n    ApiService.syncTime(currentAttempted)\r\n      .then(res => { //SuccessCB\r\n        let respData = res.data;\r\n        console.log(\"QuizPlayer -> syncTime(); Response :  \"+JSON.stringify(respData));\r\n        /*{\"status\":1,\"message\":\"Test data successfully saved.\",\"data\":[]}*/\r\n        this.state.testdata.syncCounter=0;\r\n        if(respData.status==2) {\r\n          this.timeOut();\r\n        }\r\n      },\r\n      error => { //ErrorCB\r\n        console.log(\"QuizPlayer -> finish();Connection Error : \"+Config.CONNECTION_ERROR);\r\n        this.state.testdata.syncCounter++;\r\n        if(this.state.testdata.syncCounter>=1) {\r\n          this.connectionError();\r\n        }\r\n      }\r\n    ); \r\n  }\r\n\r\n  /*time over and finish the Test*/\r\n  timeOut() {\r\n    this.state.testdata.timeover=\"1\";\r\n    this.submitTest();\r\n  }\r\n\r\n  submitTest() {\r\n    console.log(\"QuizPlayer -> submitTest();\");\r\n    let currentSectionIndex=this.state.testdata.currentSectionIndex;\r\n    if( ! this.isLastSection() && this.state.testdata.sectionaldistribution==1) {\r\n      this.processAttemptedQuestions(\"endsection\");\r\n      ApiService.checkServer(this.state.enquiryId)\r\n      .then(res => { //SuccessCB   \r\n        let respData = res.data;\r\n        console.log(\"QuizPlayer -> submitTest(); Response :  \"+JSON.stringify(respData));\r\n        /*{\"status\":1,\"message\":\"Test data successfully saved.\",\"data\":[]}*/\r\n        if(respData.status==1) {\r\n          currentSectionIndex++;\r\n          this.state.testdata.currentSectionIndex=currentSectionIndex;\r\n          this.state.testdata.testtime = this.sections[this.state.testdata.currentSectionIndex].sectiontesttime;\r\n          //this.startCountdown(this.state.testdata.testtime);\r\n          this.performancePage=\"performancePage\";\r\n          this.display=\"1\"\r\n        }\r\n      },\r\n      error => { //ErrorCB\r\n        console.log(\"QuizPlayer -> submitTest();Connection Error : \"+Config.CONNECTION_ERROR);\r\n        this.state.testdata.syncCounter++;\r\n        if(this.state.testdata.syncCounter>=1) {\r\n          this.connectionError();\r\n        }\r\n      });\r\n    }\r\n    else{\r\n        this.performancePage=\"\";\r\n        this.finish();\r\n    }\r\n  }\r\n\r\n  confirm() {\r\n    console.log(\"QuizPlayer -> confirm();\");    \r\n    swal({\r\n      title: \"Good job!\",\r\n      text: \"Your answers have been saved and the Quiz has been submitted successfully.\",\r\n      //icon: \"success\",\r\n      button: \"OK\",\r\n    })\r\n    .then((value) => {\r\n      console.log(\"Redirect Test Analysis/home...\");\r\n      this._dismiss(1);\r\n    });  \r\n  }\r\n\r\n  /*time over confirm*/\r\n  timeOverConfirm() {\r\n    console.log(\"QuizPlayer -> timeOverConfirm();\");\r\n    swal({\r\n\t\t\ttitle: \"Time Out!\",\r\n\t\t\ttext: \"<span style='color: #e94c42;font-weight: bold;'>The Quiz End Time is over.<span><div style='color: #000;font-weight: normal;'>Your answers have been saved and the quiz has been submitted successfully.</div>\" ,\r\n\t\t\tbuttons: \"OK\",\r\n\t\t\t})\r\n    .then(resp => { \r\n      console.log(\"Redirect Test Analysis/home...\");\r\n      this._dismiss(1);\r\n    });\r\n      \r\n  }\r\n\r\n  connectionError() {\r\n    console.log(\"QuizPlayer -> connectionError();\");\r\n    swal({\r\n\t\t\ttitle: \"Netwok/Connection Error!\",\r\n\t\t\ttext: Config.CONNECTION_ERROR ,\r\n\t\t\tbutton: \"OK\",\r\n\t\t\t})\r\n    .then(resp => { \r\n      console.log(\"Connection Error OK Clicked!..\");\r\n    });  \r\n  }\r\n\r\n  forceDismiss() {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"You want to quit the quiz?\",\r\n      //icon: \"info\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willQuit) => {\r\n      if (willQuit) { // Yes else No\r\n        this.done=true;  //stops the timer.\r\n        this.sync();\r\n        this._dismiss(0);\r\n      }\r\n    });\r\n  }\r\n\r\n  _dismiss(status) {\r\n    this.done=true;  //stops the timer.\r\n    this.props.history.goBack();   \r\n  } \r\n\r\n  isLastSection() {\r\n    return this.sections.length-1==this.currentSectionIndex;\r\n  }\r\n\r\n  startQuiz(testBean) {\r\n    console.log(\"QuizPlayer -> startQuiz()... \"+JSON.stringify(testBean));\r\n  }\r\n\r\n  isNumber(n) {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n  }\r\n\r\n  isEmpty(str) {\r\n    return (! this.isNumber(str) && str.length == 0);\r\n  }\r\n\r\n}\r\n\r\nexport {QuizPlayer};\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\payments\\paymentDetail.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\payments\\makePayment.jsx",["1450"],"import React, { Component } from \"react\";\r\nimport \"./payments.css\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {ILoader} from '../../_components/iloader/iloader';\r\nimport swal from 'sweetalert';\r\nimport Config from '../../_config/config'\r\n\r\nclass MakePayment extends Component { \r\n\r\n\tconstructor(props) {\r\n        super(props);\r\n        console.log(\"MakePayment -> constructor()... \");\r\n        if(!Config.CURRENT_PORTLET) {\r\n            Config.CURRENT_PORTLET = JSON.parse(localStorage.getItem('portlet'));\r\n        }\r\n        this.state = {\r\n            message: null,\r\n            showLoading: false,\r\n            paymentDetail : this.props.location.state.paymentDetail,\r\n            amountPaying : parseFloat(this.props.location.state?.paymentDetail?.currentOutstandingWithTaxRounded?.replace(/,/g, ''))\r\n        };\r\n    }\r\n    \r\n    componentDidMount() {\r\n        console.log(\"MakePayment -> componentDidMount()... \");\r\n    }\r\n    \r\n    render() {\r\n        console.log(\"MakePayment -> render()... \");        \r\n        return (  \r\n            <>\r\n                <div className=\"ilearn-full-height page-payments\">\r\n                    <Container fluid >\r\n                        {this.renderHeader()}\r\n                        {this.renderBody()}\r\n                        {this.renderLoader()}                    \r\n                    </Container>\r\n                </div>\r\n                {this.renderFooter()}\r\n            </>           \r\n              \r\n        );\r\n    }\r\n\r\n    renderHeader() {\r\n        console.log(\"MakePayment -> renderHeader()... \");\r\n        return (\r\n            <div className={`ilearn-plain-header ${Config.CURRENT_PORTLET.class}`}>\r\n                <div className=\"back\">\r\n                <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n                </div>\r\n                <h4>Make Payment</h4>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    renderBody() {\r\n        console.log(\"MakePayment -> renderBody()... \");\r\n        let paymentDetail = this.state.paymentDetail;\r\n        return (\r\n            <>\r\n                <div className=\"ilearn-padding-top\">\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item payment-detail-item\" >\r\n                            <div className=\"ilearn-item-block \">\r\n                                <div className=\"ilearn-item-inner\">\r\n                                    <span>Total Outstanding</span>\r\n                                    <span className=\"float-right\"><div style={{display: 'contents'}} dangerouslySetInnerHTML={{__html: `${paymentDetail?.symbol}`}} />{paymentDetail.totalOutstandingWithTaxRounded}</span>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"list-group-item payment-detail-item\" >\r\n                            <div className=\"ilearn-item-block \">\r\n                                <div className=\"ilearn-item-inner\">\r\n                                    <span>Current Outstanding</span>\r\n                                    <span className=\"float-right\"><div style={{display: 'contents'}} dangerouslySetInnerHTML={{__html: `${paymentDetail?.symbol}`}} />{paymentDetail.currentOutstandingWithTaxRounded}</span>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"list-group-item payment-detail-item\" >\r\n                            <div className=\"ilearn-item-block \">\r\n                                <div className=\"ilearn-item-inner\">\r\n                                    <span>Amount Paying</span>\r\n                                    <Form.Control type=\"text\" placeholder=\"Amount\" name=\"amountPaying\" defaultValue={this.state.amountPaying} onChange={this.updateInput}/>                         \r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </>\r\n        );        \r\n    }\r\n    \r\n    renderFooter() {\r\n        console.log(\"MakePayment -> renderFooter()... \");\r\n        return ( \r\n            <>\r\n            {\r\n            this.state.amountPaying && this.state.amountPaying > 0 && \r\n            <div className=\"ilearn-footer\">                    \r\n                <Row>\r\n                    <Col className=\"ilearn-footer-col ilearn-blue-btn\" onClick={() => this.makePayment()}>\r\n                        <button className=\"btn ilearn-blue-btn ilearn-footer-btn btn-block\" > \r\n                            <b>Make Payment</b> \r\n                        </button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n    \r\n    renderLoader() {\r\n        console.log(\"MakePayment -> renderLoader()... \");\r\n        const _loadingText = 'Please wait...';\r\n        return (\r\n            <ILoader\r\n                loadingText={_loadingText}\r\n                isShow={this.state.showLoading}\r\n                >\r\n            </ILoader>\r\n        )\r\n    }\r\n\r\n    updateInput = (e) => {\r\n        const v = e.target.value;\r\n        const k = e.target.name;\r\n        this.setState({k:v});\r\n    }\r\n\r\n    makePayment() {\r\n        console.log(\"MakePayment -> makePayment() : \"+this.state.amountPaying);\r\n        if(parseInt(this.state.amountPaying)<=0) {\r\n          this.showAlert(\"Alert\", \"Amount must be greater than 0.\");\r\n        }\r\n        else if(parseInt(this.state.amountPaying) < parseFloat(this.state.paymentDetail.currentOutstandingWithTaxRounded.replace(/,/g, ''))) {\r\n          this.showAlert(\"Alert\", \"Amount cannot be less than current outstanding.\");\r\n        }\r\n        else if(parseInt(this.state.amountPaying) > parseFloat(this.state.paymentDetail.totalOutstandingWithTaxRounded.replace(/,/g, ''))) {\r\n          this.showAlert(\"Alert\", \"Amount cannot be more than total outstanding.\");\r\n        }\r\n        else {\r\n            let paymentURL = Config.siteUrl+\"popup/paymentGateway.do?reqCode=preCollectPaymentFromStudentPortal&enrollmentId=\"+this.state.paymentDetail.enrollmentId+\"&receiptSeriesId=\"+this.state.paymentDetail.receiptSeriesId;\r\n            this.openBrowser(paymentURL);\r\n        }\r\n    }\r\n\r\n    showAlert(title, message) {\r\n        swal({\r\n            title: title,\r\n            text: message,\r\n            //icon: \"success\",\r\n            button: \"OK\",\r\n          })\r\n          .then((value) => {\r\n            console.log(\"Ok Clicked...\");\r\n        }); \r\n    }\r\n\r\n    openBrowser(paymentGatewayUrl) {\r\n        window.open(paymentGatewayUrl, '_blank', 'location=no');\r\n    }\r\n\r\n}\r\n\r\n\r\n  \r\nexport {MakePayment};","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\payments\\payments.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\timetable\\TimeTable.jsx",["1451","1452","1453","1454","1455","1456","1457"],"import React, { Component } from \"react\";\r\nimport \"./timetable.css\";\r\nimport { Container, Modal } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faVideo} from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport UserService from '../../_services/UserService';\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\nimport HorizontalDatePicker from './../../_components/horizontal-date-picker/HorizontalDatePicker';\r\nimport DatePicker from 'react-mobile-datepicker';\r\nimport list from \"../../_assets/imgs/calendar.svg\";\r\nimport swal from 'sweetalert';\r\n\r\nclass TimeTable extends Component { \r\n\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: null,\r\n            showLoading: false,\r\n            timeTableData: null,\r\n            selectedTimeTable: null,\r\n            portlet: this.props?.location?.state?.portlet,\r\n            showCalendar: false,\r\n            time: new Date(),\r\n            currentDate: new Date(),\r\n            showVideo: false,\r\n            videoDetails: null,\r\n        };\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.payCheck();\r\n    }\r\n\r\n\r\n    payCheck() {\r\n        this.setState({ showLoading: true }, () => {\r\n          let payLoad = {\r\n            \"type\": \"lms\",\r\n          };\r\n          ApiService.studentPayCheck(payLoad)\r\n          .then((res) => {\r\n              this.setState({\r\n                showLoading: false,\r\n                payType : res.data.type,\r\n                payMessage : res.data.message\r\n              });\r\n              this.init();\r\n          });\r\n        });\t\r\n    }\r\n\r\n    showAlert = () => {\r\n        const wrapper = document.createElement('div');\r\n        wrapper.innerHTML = this.state.payMessage;\r\n        swal({\r\n          title: \"Alert\",\r\n          content: wrapper,\r\n          dangerMode: true,\r\n          buttons: true,\r\n          className: 'blue-card'\r\n        })\r\n        .then((willResume) => {\r\n          if (willResume) {\r\n             \r\n          }\r\n        });\r\n\t}\r\n\r\n\r\n    onSelectedDay = (selectedDate) =>{\r\n        //console.log(\"selectedDate : \"+selectedDate);\r\n        this.setState({\r\n            selectedTimeTable : this.state.timeTableData[this.parseDate(selectedDate)],\r\n            currentDate: selectedDate\r\n        });\r\n    };\r\n\r\n    monthMap = {\r\n        '1': 'Jan',\r\n        '2': 'Feb',\r\n        '3': 'Mar',\r\n        '4': 'Apr',\r\n        '5': 'May',\r\n        '6': 'Jun',\r\n        '7': 'Jul',\r\n        '8': 'Aug',\r\n        '9': 'Sep',\r\n        '10': 'Oct',\r\n        '11': 'Nov',\r\n        '12': 'Dec',\r\n    };\r\n\r\n    dateConfig = {\r\n        'year': {\r\n            format: 'YYYY',\r\n            caption: 'Year',\r\n            step: 1,\r\n        },\r\n        'month': {\r\n            format: value => this.monthMap[value.getMonth()+1],\r\n            caption: 'Month',\r\n            step: 1,\r\n        },\r\n        'date': {\r\n            format: 'DD',\r\n            caption: 'Day',\r\n            step: 1,\r\n        },\r\n        // 'hour': {\r\n        //     format: 'hh',\r\n        //     caption: 'Hour',\r\n        //     step: 1,\r\n        // },\r\n        // 'minute': {\r\n        //     format: 'mm',\r\n        //     caption: 'Min',\r\n        //     step: 1,\r\n        // },\r\n        // 'second': {\r\n        //     format: 'hh',\r\n        //     caption: 'Sec',\r\n        //     step: 1,\r\n        // },\r\n    }\r\n\r\n    handleClick = () => {\r\n\t\tthis.setState({ showCalendar: true });\r\n\t}\r\n\r\n\thandleCancel = () => {\r\n\t\tthis.setState({ showCalendar: false });\r\n\t}\r\n\r\n\thandleSelect = (time) => {\r\n        //console.log(\"Time : \", time);\r\n        this.setState({ time:time, currentDate: time, showCalendar: false }, () => {\r\n            this.init();\r\n        });        \r\n\t}\r\n    \r\n    init() {\r\n        let prev_date = new Date(this.state.time);\r\n        prev_date.setDate(this.state.time.getDate() - 1);\r\n\r\n        let next_date = new Date(this.state.time);\r\n        next_date.setDate(this.state.time.getDate()+29);\r\n        let searchParams={\r\n            \"startDate\": this.parseDate(prev_date),\r\n            \"endDate\": this.parseDate(next_date),\r\n            \"enquiryId\": localStorage.getItem('enquiryId')\r\n        }\r\n        //console.log(\"searchParams: \"+JSON.stringify(searchParams));\r\n        this.setState({ showLoading: true }, () => {\r\n            ApiService.getTimeTables(searchParams)\r\n            .then((res) => {\r\n              this.parseTimeTableData(res?.data?.data?.timeTableDataBeans || []);              \r\n            });\r\n        });\r\n    }\r\n\r\n    parseTimeTableData(timeTableDataBeans) {\r\n        let timetableJSON = {}; \r\n        for(let t=0; t < timeTableDataBeans.length; t++) {\r\n            timetableJSON[timeTableDataBeans[t].dateString] = timeTableDataBeans[t];\r\n        }\r\n        this.setState({\r\n            showLoading: false,\r\n            timeTableData : timetableJSON,\r\n            selectedTimeTable : timetableJSON[this.parseDate(this.state.currentDate)]\r\n        });\r\n        //console.log(\"timetableJSON : \"+JSON.stringify(timetableJSON));\r\n    }\r\n    \r\n    render() {\r\n        return (  \r\n            <>\r\n                <div className=\"ilearn-full-height page-payments\">\r\n                    <Container fluid >\r\n                        {this.renderHeader()}\r\n                        {this.renderBody()}\r\n                        {this.renderLoader()}                    \r\n                    </Container>\r\n                </div>\r\n            </>           \r\n              \r\n        );       \r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className={`ilearn-plain-header ${this.state?.portlet?.class}`}>\r\n                <div className=\"back\">\r\n                <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props?.history?.goBack} />\r\n                </div>\r\n                <h4>{this.state?.portlet?.name}</h4>\r\n                <div className=\"calendar\" onClick={this.handleClick}>\r\n                    <img alt=\"calendar\" className=\"calendar-icon\" src={list} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    renderBody() {\r\n        let timetable = this.state.selectedTimeTable;\r\n        return (\r\n            <>\r\n            <HorizontalDatePicker selectedDay={this.onSelectedDay} enableScroll={true} enableDays={30} customSelectedDate={this.state.time}/> \r\n            <div className=\"ilearn-padding-both-sides ilearn-padding-top\">\r\n            <div class=\"card-columns\">\r\n                {\r\n                   timetable && \r\n                   timetable.activitySlotDataBeans.map((activitySlot, index) => {\r\n                    //alert(JSON.stringify(activitySlot?.studyResourceIds))\r\n                    return ( \r\n                        <div key={index}  className=\"card bg-info\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"text-center text-white\">\r\n                                    <h3>{activitySlot.batchName}</h3>\r\n                                    <h4>{activitySlot.topicName} </h4>\r\n                                </div>\r\n                                <span className=\"float-left text-white\">{activitySlot.startTime+' - '+activitySlot.endTime}</span><br/>\r\n                                <span className=\"float-left text-white\">{activitySlot.instructorName}</span>\r\n                                {\r\n                                    activitySlot.showZoomMeeting ? \r\n                                        this.state.payType ==2 ?\r\n                                        <a className=\"btn btn-primary float-right\"  \r\n                                            onClick={() => this.showAlert()} \r\n                                            style={{padding: '1px 5px '}}>\r\n                                            <FontAwesomeIcon icon={ faVideo }  size = 'lg' color='#fff'/> &nbsp;\r\n                                            Online Class\r\n                                        </a>\r\n                                        :\r\n                                        <a className=\"btn btn-primary float-right\"  \r\n                                        href={activitySlot.zoomMeetingJoinUrl} \r\n                                        target=\"_blank\"  \r\n                                        style={{padding: '1px 5px '}}>\r\n                                        <FontAwesomeIcon icon={ faVideo }  size = 'lg' color='#fff'/> &nbsp;\r\n                                        Online Class\r\n                                        </a>\r\n                                        : ''\r\n                                }\r\n                                {\r\n                                    !activitySlot.showZoomMeeting ? \r\n                                        activitySlot.zoomMeetingId ?\r\n                                            this.state.payType ==2 ?\r\n                                                <button className=\"btn btn-warning float-right\" \r\n                                                    onClick={() => this.showAlert()} \r\n                                                    style={{padding: '1px 5px '}}>\r\n                                                    <FontAwesomeIcon icon={ faVideo }  size = 'lg' color='#fff'/> &nbsp;\r\n                                                    Recorded Video\r\n                                                </button>\r\n                                            : \r\n                                            activitySlot?.studyResourceIds==null ?\r\n                                                <button className=\"btn btn-warning float-right\" \r\n                                                    onClick={() => this.showRecordeVideo(activitySlot,null)} \r\n                                                    style={{padding: '1px 5px '}}>\r\n                                                    <FontAwesomeIcon icon={ faVideo }  size = 'lg' color='#fff'/> &nbsp;\r\n                                                    Recorded Video\r\n                                                </button>\r\n                                            :\r\n                                            activitySlot?.studyResourceIds?.length && activitySlot?.studyResourceIds.map((studyResourceId, index) => {\r\n                                                return ( \r\n                                                    <>\r\n                                                    { index === 0 ? <br /> : '' }\r\n                                                    <button className=\"btn btn-warning \" \r\n                                                        onClick={() => this.showRecordeVideo(activitySlot,studyResourceId)} \r\n                                                        style={{padding: '1px 5px ', margin: '5px'}}>\r\n                                                        <FontAwesomeIcon icon={ faVideo }  size = 'lg' color='#fff'/> &nbsp;\r\n                                                        Recorded Video {index+1}\r\n                                                    </button>\r\n                                                    </>\r\n                                                )\r\n                                            })\r\n                                        : ''\r\n                                    :''\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                    })\r\n                }                \r\n            </div>\r\n                {\r\n                    !timetable && !this.state.showLoading && \r\n                    <div class=\"alert alert-warning text-center\">\r\n                        <h4 class=\"alert-heading\">Free Day!</h4>\r\n                        <p>Yippie! No classes for today.</p>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <DatePicker\r\n                isOpen={this.state.showCalendar}\r\n                theme={'android'}\r\n                showHeader\r\n                showCaption\r\n                dateConfig={this.dateConfig}\r\n                onSelect={this.handleSelect}\r\n                onCancel={this.handleCancel} \r\n                confirmText={'SET'} \r\n                cancelText={'CANCEL'}\r\n                value={this.state.currentDate}\r\n\r\n            />\r\n            {\r\n                this.showVideoModal()\r\n            }\r\n            </>\r\n        )\r\n    }\r\n    \r\n    renderLoader() {\r\n        const _loadingText = 'Please wait...';\r\n        return (\r\n            <ILoader\r\n                loadingText={_loadingText}\r\n                isShow={this.state.showLoading}\r\n                >\r\n            </ILoader>\r\n        )\r\n    }\r\n\r\n    showVideoModal() {\r\n        let videoDetails = this.state.videoDetails;\r\n        //console.log(videoDetails);\r\n        let content = '';\r\n        if(videoDetails?.status==2) {\r\n            content = videoDetails.message;\r\n        }\r\n        else { \r\n            if(videoDetails?.type==\"vimeo\"){\r\n                let url = videoDetails.url;\r\n                if(!url.includes(\"player\")) {\r\n                    url = new URL(url);\r\n                    url = url.pathname.substring(1);\r\n                    url = url.substring(0, url.lastIndexOf(\"/\") + 1);\r\n                    url = \"https://player.vimeo.com/video/\"+url;\r\n                }\r\n                content =   <iframe title={videoDetails.name} height=\"300\" width=\"100%\" src={url} allowfullscreen=\"allowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" msallowfullscreen=\"msallowfullscreen\" oallowfullscreen=\"oallowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\"></iframe> \r\n            }\r\n        }\r\n        return (\r\n            <>\r\n            <Modal show={this.state.showVideo} size=\"lg\" onHide={()=> this.handleClose()}>\r\n                <Modal.Header closeButton className={`ilearn-plain-header text-white ${this.state?.portlet?.class}`}>\r\n                <Modal.Title> {videoDetails?.name || 'Alert'} </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {\r\n                        videoDetails?.status==2 ?\r\n                            <div dangerouslySetInnerHTML={{ __html:content}} />\r\n                        : content\r\n                    }\r\n                <br />\r\n                </Modal.Body>\r\n            </Modal>\r\n            </>\r\n        );\r\n    }\r\n\r\n    handleClose = () => \r\n    {\r\n        this.setState(state => ({ showVideo: !this.state.showVideo}));        \r\n    }\r\n\r\n    showRecordeVideo(activitySlotBean,studyResourceId) {  \r\n        //console.log('showRecordeVideo: ', activitySlotBean);\r\n        let searchParams = {\r\n            \"activitySlotTemplateId\": activitySlotBean.activitySlotId,\r\n            \"batchId\": activitySlotBean.batchId,\r\n            \"userId\": UserService.getUserId(),\r\n            \"studyResourceId\":studyResourceId\r\n        }\r\n        this.setState({ showLoading: true }, () => {\r\n            ApiService.getRecordedVideos(searchParams)\r\n            .then((res) => {\r\n                console.log(res)\r\n                this.setState({\r\n                    showLoading: false,\r\n                    videoDetails : res.data,\r\n                    showVideo: true,\r\n                });           \r\n            });\r\n        });\r\n    }\r\n\r\n    parseDate(_date) {\r\n        let dd = String(_date.getDate()).padStart(2, '0');\r\n        let mm = String(_date.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        let yyyy = _date.getFullYear();\r\n\r\n        return dd + '/' + mm + '/' + yyyy;\r\n    }\r\n\r\n}\r\n  \r\nexport {TimeTable};","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\payments\\paymentHistory.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\lecode-games\\Games.jsx",["1458"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport stream from \"./stream.png\";\r\nimport Plays from './Components/Plays'\r\nimport GamePlaysInvitations from './Components/GamePlaysInvitations'\r\nimport CompletedGameDetails from './Components/CompletedGameDetails'\r\nimport UpcomingGameDetails from './Components/UpcomingGameDetails'\r\nimport OpenGameDetails from './Components/OpenGameDetails'\r\nimport RegisterGames from './Components/RegisterGames'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft,faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport Loader from './../../_components/loader/loader';\r\nimport { BrowserRouter as Router,Route, Switch } from \"react-router-dom\";\r\nimport './Components/styles.css'\r\n\r\nclass Games extends Component {\r\n   constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\t  loading: false,\r\n\t  isMobile:true,\r\n\t  resource:[]\r\n    };\r\n\tthis.props = {\r\n      loading: true,\r\n\t  resource: []\r\n\t};\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n  \r\n  routeChange(path,data) {\r\n    this.props.history.push({\r\n      pathname: path,\r\n      state: { portlet: data }});\r\n  }\r\n\r\n  render() {\r\n    \r\n\tconst { loading } = this.state;\r\n\tlet icon = stream; \r\n  console.log(this.props);\r\n  let color = this.props.location.state.portlet.class.split(\"-\")[0]\r\n  const enquiryId = localStorage.getItem(\"enquiryId\")\r\n\r\n  // let path = this.props.location.pathname\r\n  // let comp = path[1].toUpperCase()+path.slice(2,-1)\r\n\r\n\t\treturn (\r\n      <div className=\"Message\">\r\n        {\r\n\t\t  loading ?  <Loader />:\r\n          <Container fluid>\r\n              <div className=\"module-header\" style={{position:\"sticky\"}}>\r\n                <div className={`module-header-inner ${this.props.location.state.portlet.class}`} >\r\n               \r\n                <div className=\"back\">\r\n                  <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n                </div>\r\n                  <img src={icon} alt={this.props.location.state.portlet.name} /> \r\n                </div>\r\n                <div className=\"arrow-set\">\r\n                  <h2>{this.props.location.state.portlet.name}</h2>\r\n                </div>\r\n              </div>\r\n              <Router>\r\n                <Switch>\r\n                  <Route exact path='/gamePlaysInvitations'>\r\n                    <GamePlaysInvitations color={color}/>\r\n                  </Route>\r\n                  <Route path=\"/gamePlaysAll\" exact >\r\n                    <Plays color={color}/>\r\n                  </Route>\r\n                  <Route path='/gamePlaysCompleted' exact>\r\n                    <CompletedGameDetails color={color} enquiryId={enquiryId}/>  \r\n                  </Route>\r\n                  <Route path=\"/gamePlaysOpen\" exact>\r\n                    <OpenGameDetails color={color} enquiryId={enquiryId}/>\r\n                  </Route>\r\n                  <Route path=\"/gamePlaysUpcoming\" exact>\r\n                    <UpcomingGameDetails color={color} enquiryId={enquiryId}/>\r\n                  </Route>\r\n                  <Route path=\"/gamePlaysRegistration\" exact>\r\n                    <RegisterGames color={color}/>\r\n                  </Route>\r\n                </Switch>\r\n              </Router>\r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Games;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\discussion\\DiscussionBoard.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\discussion\\AddTopic.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\discussion\\DiscussionBoardTopicList.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\discussion\\DiscussionBoardTopic.jsx",["1459"],"import React, { Component } from \"react\";\r\nimport { Container, Card, Row, Col, Modal, Form } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faArrowLeft,\r\n  faCommentDots,\r\n  faPaperPlane,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport CKEditor from \"ckeditor4-react\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport UserService from \"../../_services/UserService\";\r\nimport { ILoader } from \"./../../_components/iloader/iloader\";\r\nimport Comment from \"./components/Comment\";\r\nimport Config from \"./../../_config/config\";\r\nimport Question from \"./../test-player/components/Question\";\r\nimport Resource from \"./../learning/components/Resource\";\r\nimport { ReactComponent as CloseButton } from \"./images/xmark-solid.svg\";\r\nimport { ReactComponent as CameraIcon } from \"./images/camera-solid.svg\";\r\nimport \"./discussion-board-topic.styles.css\";\r\n\r\nclass DiscussionBoardTopic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //console.log(\"DiscussionBoardTopic -> constructor()... \");\r\n    this.state = {\r\n      message: null,\r\n      showLoading: false,\r\n      topic: null,\r\n      open: false,\r\n      showCommentReply: false,\r\n      comment: null,\r\n      commentModalHeader: \"Post Comment\",\r\n    };\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    //console.log(\"DiscussionBoardTopic -> componentDidMount()... \");\r\n    console.log(this.props.location.state);\r\n    if(this.props.location.state?.prevStates){\r\n      this.setState({...this.props.location.state.prevStates})\r\n    }else{\r\n\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  init() {\r\n    //console.log(\"DiscussionBoardTopic -> init()... \");\r\n    if (this.props.match.params.topicId) {\r\n      console.log(\"DiscussionBoardTopic -> init(); IF.....\");\r\n      this.getDiscussionBoardTopic(this.props.match.params.topicId);\r\n    } else if (this.props.match.params.resourceId) {\r\n      console.log(\"DiscussionBoardTopic -> init(); IF ELSE.....\");\r\n      this.getDiscussionBoardResourceTopic(this.props.match.params.resourceId);\r\n    } else {\r\n      console.log(\"DiscussionBoardTopic -> init(); ELSE.....\");\r\n      this.getDiscussionBoardQuestionTopic(this.props.match.params.questionId);\r\n    }\r\n  }\r\n\r\n  getDiscussionBoardTopic(topicId) {\r\n    this.setState({ showLoading: true }, () => {\r\n      ApiService.getDiscussionBoardTopic(topicId).then(\r\n        (res) => {\r\n          console.log(\r\n            \"DiscussionBoardTopic -> init(); res : \" + JSON.stringify(res)\r\n          );\r\n          this.setState({\r\n            showLoading: false,\r\n            topic: res.data,\r\n          });\r\n        },\r\n        (error) => {\r\n          //ErrorCB\r\n          this.setState({\r\n            showLoading: false,\r\n            errorMessage: Config.CONNECTION_ERROR_MSG,\r\n          });\r\n          console.log(\r\n            \"DiscussionBoardTopic --> init...error =>\" + JSON.stringify(error)\r\n          );\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  getDiscussionBoardQuestionTopic(questionId) {\r\n    this.setState({ showLoading: true }, () => {\r\n      ApiService.getDiscussionBoardQuestionTopic(questionId).then(\r\n        (res) => {\r\n          console.log(\r\n            \"DiscussionBoardTopic -> init(); res : \" + JSON.stringify(res)\r\n          );\r\n          this.setState({\r\n            showLoading: false,\r\n            topic: res.data,\r\n          });\r\n        },\r\n        (error) => {\r\n          //ErrorCB\r\n          this.setState({\r\n            showLoading: false,\r\n            errorMessage: Config.CONNECTION_ERROR_MSG,\r\n          });\r\n          console.log(\r\n            \"DiscussionBoardTopic --> init...error =>\" + JSON.stringify(error)\r\n          );\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  getDiscussionBoardResourceTopic(resourceId) {\r\n    this.setState({ showLoading: true }, () => {\r\n      ApiService.getDiscussionBoardResourceTopic(resourceId).then(\r\n        (res) => {\r\n          console.log(\r\n            \"getDiscussionBoardResourceTopic -> init(); res : \" +\r\n              JSON.stringify(res)\r\n          );\r\n          this.setState({\r\n            showLoading: false,\r\n            topic: res.data,\r\n          });\r\n        },\r\n        (error) => {\r\n          //ErrorCB\r\n          this.setState({\r\n            showLoading: false,\r\n            errorMessage: Config.CONNECTION_ERROR_MSG,\r\n          });\r\n          console.log(\r\n            \"DiscussionBoardTopic --> init...error =>\" + JSON.stringify(error)\r\n          );\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"DiscussionBoardTopic -> render()... \");\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          {this.state.topic && (\r\n            <>\r\n              {this.renderHeader()}\r\n              {this.renderBody()}\r\n              {this.renderFooter()}\r\n            </>\r\n          )}\r\n          {this.renderLoader()}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderHeader() {\r\n    //console.log(\"DiscussionBoardTopic -> renderHeader()... \");\r\n    let CURRENT_PORTLET = JSON.parse(localStorage[\"portlet\"]);\r\n    return (\r\n      <div className={`ilearn-plain-header ${CURRENT_PORTLET.class}`}>\r\n        <div className=\"back\">\r\n          <FontAwesomeIcon\r\n            icon={faArrowLeft}\r\n            onClick={()=>this.props.history.replace(`/discussionBoard/${this.props.match.params.discussionBoardId}/topics`)}\r\n          />\r\n        </div>\r\n        {\r\n          <h4>\r\n            {this.state.topic.title ? this.state.topic.title : \"Question\"}\r\n          </h4>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderBody() {\r\n    //console.log(\"DiscussionBoardTopic -> renderBody()... \");\r\n    let comments = this.state.topic.comments;\r\n    return (\r\n      <>\r\n        {this.renderTopicContent()}\r\n        <Card>\r\n          <Card.Header className=\"p-2 clear-fix\">\r\n            <span className=\"badge badge-primary\">{comments.length}</span>&nbsp;\r\n            Comments\r\n          </Card.Header>\r\n          <Card.Body className=\"p-1\">\r\n            <div className=\"list-group\">\r\n              {comments.map((comment, index) => {\r\n                return (\r\n                  <Comment\r\n                    comment={comment}\r\n                    commentPermission={this.state.topic.commentPermission}\r\n                    moderatorPermission={this.state.topic.moderatorPermission}\r\n                    onCommentReply={this.onCommentReply}\r\n                    onCommentDelete={this.onCommentDelete}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n        <br />\r\n        <br />\r\n        {this.renderCommentReplyModal()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderTopicContent() {\r\n    let question = this.state.topic.question\r\n      ? JSON.parse(this.state.topic.question)\r\n      : null;\r\n    let resource = this.props.match.params.resourceId || null;\r\n    let topicContent = this.state.topic.content;\r\n    return (\r\n      <>\r\n        {!question && !resource && (\r\n          <div\r\n            className=\"alert alert-info mb-0 p-2 rounded-0\"\r\n            role=\"alert\"\r\n            dangerouslySetInnerHTML={{ __html: topicContent }}\r\n          ></div>\r\n        )}\r\n        {question && (\r\n          <div class=\"alert alert-info mb-0 p-1 rounded-0\" role=\"alert\">\r\n            <Card>\r\n              <Card.Body className=\"p-1\">\r\n                <Question question={question} />\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        )}\r\n        {resource && (\r\n          <div class=\"alert alert-info mb-0 p-1 rounded-0\" role=\"alert\">\r\n            <Card>\r\n              <Card.Body className=\"p-1\">\r\n                <Resource\r\n                  data={this.props.location.state.resource}\r\n                  stepId={this.props.location.state.stepId}\r\n                />\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderFooter() {\r\n    //console.log(\"DiscussionBoardTopic -> renderFooter()... \");\r\n    return (\r\n      <>\r\n        {this.state.topic && this.state.topic.commentPermission && (\r\n          <div className=\"ilearn-footer\">\r\n            <Row>\r\n              <Col\r\n                className=\"ilearn-footer-col ilearn-blue-btn\"\r\n                onClick={() => this.addComment()}\r\n              >\r\n                <button className=\"btn ilearn-blue-btn ilearn-footer-btn btn-block text-uppercase\">\r\n                  <FontAwesomeIcon\r\n                    icon={faCommentDots}\r\n                    size=\"lg\"\r\n                    color=\"#fff\"\r\n                  />{\" \"}\r\n                  &nbsp;\r\n                  <b style={{ color: \"#fff\" }}>Leave a comment</b>\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderLoader() {\r\n    //console.log(\"DiscussionBoardTopic -> renderLoader()... \");\r\n    const _loadingText = \"Please wait...\";\r\n    return (\r\n      <ILoader\r\n        loadingText={_loadingText}\r\n        isShow={this.state.showLoading}\r\n      ></ILoader>\r\n    );\r\n  }\r\n\r\n  customModelclicked = (e) => {\r\n    if (e.target.className === \"custom-modal-outer\") {\r\n      this.handleClose();\r\n    }\r\n  };\r\n\r\n  openCamera = () => {\r\n    this.props.history.push({\r\n      pathname: \"/camera\",\r\n      state: { prevStates: this.state, pathParams: this.props.match.params },\r\n    });\r\n  };\r\n\r\n  renderCommentReplyModal() {\r\n    //console.log(\"DiscussionBoardTopic -> renderCommentReplyModal()... \");\r\n    let CURRENT_PORTLET = JSON.parse(localStorage[\"portlet\"]);\r\n    return (\r\n      <div\r\n        className=\"custom-modal-outer\"\r\n        style={{ display: this.state.showCommentReply ? \"flex\" : \"none\" }}\r\n        onClick={this.customModelclicked}\r\n      >\r\n        <div className=\"custom-modal\">\r\n          <div\r\n            className={`ilearn-plain-header text-white ${CURRENT_PORTLET.class} custom-modal-header`}\r\n          >\r\n            <h3>{this.state.commentModalHeader} </h3>\r\n            <div className=\"cusom-modal-icons\">\r\n              <CameraIcon\r\n                onClick={this.openCamera}\r\n                className=\"custom-modal-icon-button\"\r\n              />\r\n              <CloseButton\r\n                onClick={this.handleClose}\r\n                className=\"custom-modal-icon-button\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"custom-modal-body\">\r\n            <Form>\r\n              <Form.Group controlId=\"message\">\r\n                <Form.Label>Message</Form.Label>\r\n                <CKEditor\r\n                 config={{\r\n                  filebrowserBrowseUrl: `${Config.siteUrl}${Config.siteTitle}/FCKeditor/editor/filemanager/browser/default/browser.html?Type=Image&Connector=connectors/jsp/connector`,\r\n                  // filebrowserUploadUrl: '/ckfinder/core/connector/php/connector.php?command=QuickUpload&type=Files',\r\n                }\r\n              }\r\n                  name=\"message\"\r\n                  placeholder=\"Compose message\"\r\n                  data={this.state.message}\r\n                  onChange={this.updateEditor}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </div>\r\n          <div className=\"custom-modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-danger custom-modal-button\"\r\n              onClick={() => this.handleClose()}\r\n            >\r\n              <FontAwesomeIcon icon={faTimes} />\r\n              &nbsp; Cancel\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-primary custom-modal-button\"\r\n              onClick={() => this.postComment()}\r\n            >\r\n              Post &nbsp;\r\n              <FontAwesomeIcon icon={faPaperPlane} />\r\n            </button>\r\n      <script src=\"/ckfinder/ckfinder.js\"></script>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  updateEditor = (e) => {\r\n    console.log(\"here\");\r\n    const v = e.editor.getData();\r\n    // const k = \"message\";\r\n    // let message = { ...this.state.message };\r\n    let message = v;\r\n    this.setState({ message: message }, () => {\r\n      console.log(this.state.message);\r\n    });\r\n    //console.log(this.state)\r\n  };\r\n\r\n  postComment() {\r\n    //console.log(\"DiscussionBoardTopic --> postComment...\"+this.state.message);\r\n    let message = this.state.message;\r\n    let comment = this.state.comment;\r\n    if (message && message.trim().length > 0) {\r\n      if (comment) {\r\n        //Comment Reply\r\n        //console.log(\"DiscussionBoardTopic --> commentReply...\");\r\n        comment.replyContent = message;\r\n        comment.replyUserId = UserService.getUserId();\r\n        this.replyComment(comment);\r\n      } else {\r\n        //create comment\r\n        //console.log(\"DiscussionBoardTopic --> createComment ...\");\r\n        let commentJSON = {\r\n          topicId: this.state.topic.id,\r\n          comment: message,\r\n          userId: UserService.getUserId(),\r\n        };\r\n        this.createComment(commentJSON);\r\n      }\r\n    }\r\n  }\r\n\r\n  replyComment(comment) {\r\n    //console.log(\"DiscussionBoardTopic --> replyComment...\"+JSON.stringify(comment));\r\n    this.setState(\r\n      {\r\n        showLoading: true,\r\n        commentModalHeader: \"Reply to Comment\",\r\n        showCommentReply: !this.state.showCommentReply,\r\n      },\r\n      () => {\r\n        ApiService.replyComment(comment).then(\r\n          (res) => {\r\n            //console.log(\"DiscussionBoardTopic -> replyComment(); res : \"+JSON.stringify(res))\r\n            this.setState(\r\n              {\r\n                showLoading: false,\r\n                message: null,\r\n                comment: null,\r\n              },\r\n              () => {\r\n                this.init();\r\n              }\r\n            );\r\n          },\r\n          (error) => {\r\n            //ErrorCB\r\n            this.setState({\r\n              showLoading: false,\r\n              showCommentReply: !this.state.showCommentReply,\r\n              errorMessage: Config.CONNECTION_ERROR_MSG,\r\n            });\r\n            console.log(\r\n              \"DiscussionBoardTopic --> replyComment...error =>\" +\r\n                JSON.stringify(error)\r\n            );\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  createComment(comment) {\r\n    //console.log(\"DiscussionBoardTopic --> createComment...\"+JSON.stringify(comment));\r\n    this.setState(\r\n      {\r\n        showLoading: true,\r\n        commentModalHeader: \"Leave a Comment\",\r\n        showCommentReply: !this.state.showCommentReply,\r\n      },\r\n      () => {\r\n        ApiService.createComment(comment).then(\r\n          (res) => {\r\n            //console.log(\"DiscussionBoardTopic -> createComment(); res : \"+JSON.stringify(res))\r\n            this.setState(\r\n              {\r\n                showLoading: false,\r\n                message: null,\r\n                comment: null,\r\n              },\r\n              () => {\r\n                this.init();\r\n              }\r\n            );\r\n          },\r\n          (error) => {\r\n            //ErrorCB\r\n            this.setState({\r\n              showLoading: false,\r\n              showCommentReply: !this.state.showCommentReply,\r\n              errorMessage: Config.CONNECTION_ERROR_MSG,\r\n            });\r\n            console.log(\r\n              \"DiscussionBoardTopic --> createComment...error =>\" +\r\n                JSON.stringify(error)\r\n            );\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  addComment() {\r\n    //console.log(\"DiscussionBoardTopic --> addComment...\");\r\n    this.setState((state) => ({\r\n      showCommentReply: !this.state.showCommentReply,\r\n      comment: null,\r\n      message: null,\r\n    }));\r\n  }\r\n\r\n  onCommentDelete = (data) => {\r\n    console.log(\r\n      \"DiscussionBoardTopic --> onCommentDelete...\" + JSON.stringify(data)\r\n    );\r\n    let _data = {\r\n      id: data.commentId,\r\n      type: data.type,\r\n    };\r\n\r\n    this.setState({ showLoading: true }, () => {\r\n      ApiService.deleteCommentOrReply(_data).then(\r\n        (res) => {\r\n          //console.log(\"DiscussionBoardTopic -> deleteCommentOrReply(); res : \"+JSON.stringify(res))\r\n          this.setState(\r\n            {\r\n              showLoading: false,\r\n              message: null,\r\n              comment: null,\r\n            },\r\n            () => {\r\n              this.init();\r\n            }\r\n          );\r\n        },\r\n        (error) => {\r\n          //ErrorCB\r\n          this.setState({\r\n            showLoading: false,\r\n            errorMessage: Config.CONNECTION_ERROR_MSG,\r\n          });\r\n          console.log(\r\n            \"DiscussionBoardTopic --> deleteCommentOrReply...error =>\" +\r\n              JSON.stringify(error)\r\n          );\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  onCommentReply = (comment) => {\r\n    //console.log(\"DiscussionBoardTopic --> onCommentReply...\"+comment.id);\r\n    this.setState((state) => ({\r\n      showCommentReply: !this.state.showCommentReply,\r\n      comment: comment,\r\n      message: null,\r\n    }));\r\n  };\r\n\r\n  closeCommentReply() {\r\n    this.setState((state) => ({\r\n      showCommentReply: !this.state.showCommentReply,\r\n      comment: null,\r\n      message: null,\r\n    }));\r\n  }\r\n\r\n  handleClose = () => this.closeCommentReply();\r\n\r\n  toggleView(view) {\r\n    this.setState((state) => ({ view: view }));\r\n  }\r\n\r\n  toggleLoading = () => {\r\n    //console.log(\"DiscussionBoardTopicList -> toggleLoading()... \");\r\n    this.setState((state) => ({ showLoading: !state.showLoading }));\r\n  };\r\n}\r\n\r\nexport { DiscussionBoardTopic };\r\n\r\n/*\r\n    References:\r\n    Card -> https://getbootstrap.com/docs/4.0/components/card/\r\n\r\n*/\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\document-upload\\document-upload.component.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\admit-card\\admit-card.component.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\lecode-games\\Components\\Plays.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\verify-mobile\\verify-mobile.component.jsx",["1460","1461"],"import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Config from \"../../_config/config\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Parser from \"html-react-parser\";\r\nimport OTPValidator from \"../../_components/OTPValidator\";\r\nimport { ILoader } from \"../../_components/iloader/iloader\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport \"./verify-mobile.styles.css\";\r\n\r\nclass VerifyMobile extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      mobile: \"\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n      otpMessage:\r\n        \"Successfully sent the One Time Password to your Registered Mobile Number\",\r\n      userId: \"null\",\r\n      otpLength: 4,\r\n      showOtpInput: false,\r\n      showLoading: false,\r\n      mobilePattern: /^[0-9]{10}$/,\r\n      showTimer: false,\r\n      resendOtp: false,\r\n      callForOtp: false,\r\n      timeLeft: Infinity,\r\n      enableResendOtp: true,\r\n    };\r\n    this.otpInterval = null;\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.checkMobile();\r\n  };\r\n\r\n  checkMobile = async () => {\r\n    const { mobile: mobileNo, mobilePattern } = this.state;\r\n    // console.log(mobilePattern.test(mobileNo));\r\n    if (!mobilePattern.test(mobileNo)) {\r\n      return this.setState({\r\n        error: true,\r\n        errorMessage:\r\n          \"Invalid Mobile Number. Please key in your 10 digit Indian mobile number (without the country code +91 )\",\r\n      });\r\n    }\r\n\r\n    try {\r\n      this.setState({\r\n        showLoading: true,\r\n        error: false,\r\n      });\r\n      const res = await ApiService.verifyMobile(mobileNo);\r\n      console.log(res);\r\n      // if (res?.data?.status === 200) {\r\n      if (res?.data?.type === \"success\") {\r\n        this.setState(\r\n          {\r\n            showOtpInput: true,\r\n            showLoading: false,\r\n          },\r\n          () => {\r\n            this.startTimer(\"message\");\r\n          }\r\n        );\r\n      } else if (res?.data?.error_code === \"E149\") {\r\n        this.setState({\r\n          error: true,\r\n          showLoading: false,\r\n          errorMessage:\r\n            \"Sorry. This mobile number is not registered in our database. Did you use an alternative mobile number while signing up?\",\r\n          loginUserData: {},\r\n        });\r\n      } else {\r\n        this.setState({\r\n          showLoading: false,\r\n          error: true,\r\n          errorMessage: \"Sorry some error occurred\",\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.setState({\r\n        error: true,\r\n        showLoading: false,\r\n        errorMessage: \"Sorry some error occurred\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleResendMessage = async () => {\r\n    try {\r\n      const { mobile } = this.state;\r\n      const res = await ApiService.resendTextOtp(mobile);\r\n      console.log(res);\r\n      if (res.data.type === \"success\") {\r\n        this.startTimer(\"call\");\r\n      } else {\r\n        this.setState({\r\n          showOtpInput: false,\r\n          error: true,\r\n          showLoading: false,\r\n          errorMessage: res.data?.message || \"Sorry some error occurred\",\r\n          loginUserData: {},\r\n        });\r\n      }\r\n    } catch (e) {\r\n      this.setState({\r\n        showOtpInput: false,\r\n        error: true,\r\n        showLoading: false,\r\n        errorMessage: \"Sorry some error occurred\",\r\n        loginUserData: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCallForOtp = async () => {\r\n    try {\r\n      const { mobile } = this.state;\r\n      const res = await ApiService.resendCallOtp(mobile);\r\n      console.log(res);\r\n      if (res.data.type === \"success\") {\r\n        this.setState({\r\n          resendOtp: false,\r\n          callForOtp: false,\r\n          showTimer: false,\r\n          timeLeft: Infinity,\r\n          enableResendOtp: false,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          showOtpInput: false,\r\n          error: true,\r\n          showLoading: false,\r\n          errorMessage: res.data?.message || \"Sorry some error occurred\",\r\n          loginUserData: {},\r\n        });\r\n      }\r\n    } catch (e) {\r\n      this.setState({\r\n        showOtpInput: false,\r\n        error: true,\r\n        showLoading: false,\r\n        errorMessage: \"Sorry some error occurred\",\r\n        loginUserData: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOtpSubmit = async (otp, isSubmitted) => {\r\n    this.setState({\r\n      showOtpInput: false,\r\n    });\r\n\r\n    if (!isSubmitted) return;\r\n\r\n    this.setState({\r\n      showLoading: true,\r\n    });\r\n\r\n    console.log(otp);\r\n    // const otpData = {\r\n    //   channel: \"mobile\",\r\n    //   identifier: this.state.mobile,\r\n    //   otp,\r\n    // };\r\n    const { mobile } = this.state;\r\n\r\n    try {\r\n      const res = await ApiService.loginWithOtp(mobile, otp);\r\n      this.setState({\r\n        showLoading: false,\r\n      });\r\n      console.log(res);\r\n      const { token } = res.data?.data || {};\r\n\r\n      if (res.data.status === 404) {\r\n        return this.setState({\r\n          error: true,\r\n          showLoading: false,\r\n          errorMessage:\r\n            \"Sorry. This mobile number is not registered in our database. Did you use an alternative mobile number while signing up?\",\r\n          loginUserData: {},\r\n        });\r\n      }\r\n\r\n      if (token) {\r\n        // this.loginToken(token, res.data.data);\r\n        return this.dologin(token, res.data.data);\r\n      } else {\r\n        this.setState({\r\n          error: true,\r\n          showLoading: false,\r\n          errorMessage: \"Invalid Otp\",\r\n          loginUserData: {},\r\n        });\r\n      }\r\n    } catch (e) {\r\n      this.setState({\r\n        error: true,\r\n        showLoading: false,\r\n        errorMessage: \"Sorry some error occurred\",\r\n        loginUserData: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  startTimer = (event) => {\r\n    this.setState(\r\n      {\r\n        enableResendOtp: true,\r\n        resendOtp: false,\r\n        callForOtp: false,\r\n        showTimer: true,\r\n        timeLeft: 30,\r\n      },\r\n      () => {\r\n        this.otpInterval = setInterval(() => {\r\n          if (this.state.timeLeft === 1) {\r\n            clearInterval(this.otpInterval);\r\n            this.setState({\r\n              resendOtp: event === \"message\",\r\n              showTimer: false,\r\n              callForOtp: event === \"call\",\r\n            });\r\n          } else {\r\n            this.setState((prevState) => ({\r\n              timeLeft: prevState.timeLeft - 1,\r\n            }));\r\n          }\r\n        }, 1000);\r\n      }\r\n    );\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    if (this.otpInterval) {\r\n      clearInterval(this.otpInterval);\r\n    }\r\n  }\r\n\r\n  loginToken(token, testDetails) {\r\n    if (token) {\r\n      console.log(token);\r\n      this.setState(\r\n        { loading: true, loaderStyle: \"dark\", connectionErrorMsg: null },\r\n        () => {\r\n          ApiService.fetchLoginToken(token).then(\r\n            (res) => {\r\n              console.log(res, \"<--login\");\r\n              if (res.data.status === 1) {\r\n                this.setState(\r\n                  { loading: false, loginUserData: res.data.data },\r\n                  () => {\r\n                    this.dologin(testDetails);\r\n                  }\r\n                );\r\n              } else {\r\n                this.setState({\r\n                  loading: false,\r\n                  errorMessage: res.data.message,\r\n                });\r\n              }\r\n            },\r\n            (error) => {\r\n              //ErrorCB\r\n              this.setState({\r\n                loading: false,\r\n                connectionErrorMsg: Config.CONNECTION_ERROR_MSG,\r\n              });\r\n            }\r\n          );\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  dologin = (token, testDetails) => {\r\n    // let loginUserData = this.state.loginUserData;\r\n    let user = jwt_decode(token);\r\n    delete user.sub;\r\n    delete user.jti;\r\n    delete user.iat;\r\n    user.token = token;\r\n    console.log(user, \"<--decoded\");\r\n    localStorage.setItem(\"user\", JSON.stringify(user));\r\n    localStorage.setItem(\"enquiryId\", user.enquiryId);\r\n    localStorage.setItem(\"tenant\", user.tenant);\r\n\r\n    return this.props.history.replace({\r\n      pathname: \"/testdetails\",\r\n      state: { testDetails },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login work-sans-font\">\r\n        {\r\n          <Container fluid>\r\n            <div\r\n              className=\"header-image\"\r\n              style={{\r\n                background: `url(${Config.cover}) no-repeat transparent`,\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n              }}\r\n            ></div>\r\n            <div className=\"main-content\">\r\n              <span className=\"gradient-text\">\r\n                <strong> Enter Your Mobile number</strong>\r\n              </span>\r\n              {\r\n                <Form onSubmit={this.submitHandler}>\r\n                  <Form.Group>\r\n                    <div\r\n                      className={`item-inner ${\r\n                        this.state.error ? \"has-error\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <Form.Control\r\n                        type=\"tel\"\r\n                        name=\"mobile\"\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Mobile Number\"\r\n                        title=\"please enter a valid phone no\"\r\n                        value={this.state.mobile}\r\n                      />\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"institute-sign-in-btn\">\r\n                      <input\r\n                        className=\"primary button-full ilearn-blue-btn button-md\"\r\n                        type=\"submit\"\r\n                        value=\"Send Otp\"\r\n                      />\r\n                    </div>\r\n                    {this.state.error && (\r\n                      <div className=\"red\">\r\n                        {Parser(this.state.errorMessage)}\r\n                      </div>\r\n                    )}\r\n                  </Form.Group>\r\n                </Form>\r\n              }\r\n            </div>\r\n          </Container>\r\n        }\r\n        <OTPValidator\r\n          data={{\r\n            show: this.state.showOtpInput,\r\n            otpLength: this.state.otpLength,\r\n            smsAddress: this.state.mobile,\r\n            message: this.state.otpMessage,\r\n            userId: this.state.userId,\r\n          }}\r\n          handleResendMessage={this.handleResendMessage}\r\n          enableResendOtp={this.state.enableResendOtp}\r\n          showTimer={this.state.showTimer}\r\n          masterControl={true}\r\n          timeLeft={this.state.timeLeft}\r\n          resendOtp={this.state.resendOtp}\r\n          callForOtp={this.state.callForOtp}\r\n          onOTPValidatorClose={this.handleOtpSubmit}\r\n          handleCallForOtp={this.handleCallForOtp}\r\n        />\r\n        <ILoader\r\n          loadingText={\"Please wait...\"}\r\n          isShow={this.state.showLoading}\r\n        ></ILoader>\r\n        <div className=\"verify-mobile-support\">\r\n          Having trouble? Please contact{\" \"}\r\n          <span className=\"verify-mobile-support-email\">\r\n            help@unacademy.com\r\n          </span>{\" \"}\r\n          for further support.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VerifyMobile;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\payments\\receipt-series.component.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\detailed-profiling\\detailed-profiling.component.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\shaka\\shaka.component.jsx",["1462"],"import React from \"react\";\r\nimport ShakaPlayer from \"shaka-player-react\";\r\nimport muxjs from \"mux.js\";\r\nimport \"shaka-player/dist/controls.css\";\r\nimport \"./shaka.styles.css\";\r\nimport { ReactComponent as Angle } from \"./images/angle-up-solid.svg\";\r\nimport { ReactComponent as DownloadButton } from \"./images/download-solid.svg\";\r\nimport { ReactComponent as DeleteIcon } from \"./images/trash-solid.svg\";\r\nconst shaka = require(\"shaka-player/dist/shaka-player.ui.js\");\r\n// console.log(shaka.offline); //<---use for offline purpose\r\n\r\nclass MyShakaPlayer extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      show: false,\r\n      video: null,\r\n      src: null,\r\n      description: false,\r\n      content: [],\r\n      videoId: null,\r\n      offlineAvail: false,\r\n      isDownloading: false,\r\n    };\r\n    window.muxjs = muxjs;\r\n    this.shakaRef = React.createRef();\r\n    this.progressBar = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.getShakaInst = () => this.shakRef.current;\r\n    this.setState(\r\n      {\r\n        video: this.props.location.state.selectedVideo,\r\n        src: this.props.location.state.selectedVideo.url,\r\n        videoId: this.props.location.state.selectedVideo.id,\r\n      },\r\n      () => {\r\n        let video = shaka.videoElement;\r\n        let player = new shaka.Player(video);\r\n        window.player = player;\r\n        this.initStorage(player);\r\n        this.showPlayer();\r\n      }\r\n    );\r\n  }\r\n\r\n  selectTracks = (tracks) => {\r\n    // This example stores the highest bandwidth variant.\r\n    //\r\n    // Note that this is just an example of an arbitrary algorithm, and not a best\r\n    // practice for storing content offline.  Decide what your app needs, or keep\r\n    // the default (user-pref-matching audio, best SD video, all text).\r\n    const found = tracks\r\n      .filter(function (track) {\r\n        return track.type == \"variant\";\r\n      })\r\n      .sort(function (a, b) {\r\n        return a.bandwidth - b.bandwidth;\r\n      })\r\n      .pop();\r\n    console.log(\"Offline Track bandwidth: \" + found.bandwidth);\r\n    return [found];\r\n  };\r\n\r\n  initStorage = (player) => {\r\n    window.storage = new shaka.offline.Storage(player);\r\n    window.storage.configure({\r\n      offline: {\r\n        progressCallback: this.setDownloadProgress,\r\n        trackSelectionCallback: this.selectTracks,\r\n      },\r\n    });\r\n  };\r\n\r\n  setDownloadProgress = (content, progress) => {\r\n    const progressBar = this.progressBar.current;\r\n    progressBar.value = progress * progressBar.max;\r\n  };\r\n\r\n  listContent = async () => {\r\n    let content = await window.storage.list();\r\n    console.log(content);\r\n    this.setState(\r\n      {\r\n        content: content,\r\n      },\r\n      () => {\r\n        this.playContent();\r\n      }\r\n    );\r\n    return content;\r\n  };\r\n\r\n  playContent = () => {\r\n    let offlineSRC;\r\n    this.state.content.forEach((content) => {\r\n      if (content.appMetadata.videoId === this.state.videoId) {\r\n        offlineSRC = content.offlineUri;\r\n      }\r\n    });\r\n    if (offlineSRC) {\r\n      this.setState({ src: offlineSRC, offlineAvail: true });\r\n    }\r\n    // window.player.load(content.offlineUri);\r\n  };\r\n\r\n  removeContent = () => {\r\n    let offlineSRC;\r\n    this.state.content.forEach((content) => {\r\n      if (content.appMetadata.videoId === this.state.videoId) {\r\n        offlineSRC = content.offlineUri;\r\n      }\r\n    });\r\n    if (offlineSRC) {\r\n      this.setState(\r\n        (prevState) => ({ src: prevState.video.url, offlineAvail: false }),\r\n        () => {\r\n          window.storage.remove(offlineSRC);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  downloadContent = (manifestUri, title, videoId) => {\r\n    const metadata = {\r\n      title: title,\r\n      downloaded: Date(),\r\n      videoId: videoId,\r\n    };\r\n    console.log(metadata);\r\n    console.log(manifestUri);\r\n    return window.storage.store(manifestUri, metadata);\r\n  };\r\n\r\n  onDownloadClick = () => {\r\n    let manifestUri = this.state.video.url;\r\n    let title = this.state.video.name;\r\n    let videoId = this.state.videoId;\r\n    this.setState({ isDownloading: true }, () => {\r\n      console.log(\"1st\");\r\n      this.setDownloadProgress(null, 0);\r\n    });\r\n    this.downloadContent(manifestUri, title, videoId)\r\n      .then(() => {\r\n        console.log(\"downloaded\");\r\n        this.setDownloadProgress(null, 1);\r\n        return this.listContent();\r\n      })\r\n      .then((content) => {\r\n        console.log(\"2\");\r\n        console.log(content);\r\n        this.setState({ isDownloading: false });\r\n      })\r\n      .catch((error) => {\r\n        // In the case of an error, re-enable the download button so\r\n        // that the user can try to download another item.\r\n        this.setState({ isDownloading: false });\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  showPlayer = () => {\r\n    this.setState(\r\n      (prevState) => ({\r\n        show: !prevState.show,\r\n      }),\r\n      () => {\r\n        this.listContent();\r\n      }\r\n    );\r\n  };\r\n\r\n  showDescription = () => {\r\n    this.setState((prevState) => ({\r\n      description: !prevState.description,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"video-container\">\r\n        {this.state.show && (\r\n          <div>\r\n            <ShakaPlayer\r\n              className=\"shaka-video\"\r\n              ref={this.shakaRef}\r\n              autoPlay\r\n              src={this.state.src}\r\n            />\r\n            <div className=\"video-detail-box\">\r\n              <div>\r\n                <h3 className=\"video-title\">{this.state.video.name}</h3>\r\n                <p className=\"video-date\">{this.state.video.creationDate}</p>\r\n              </div>\r\n              <div>\r\n                {this.state.offlineAvail ? (\r\n                  <DeleteIcon\r\n                    onClick={this.removeContent}\r\n                    className=\"video-icon\"\r\n                  />\r\n                ) : (\r\n                  <span>\r\n                    {this.state.isDownloading ? (\r\n                      <progress ref={this.progressBar} value=\"0\" max=\"100\" />\r\n                    ) : (\r\n                      <DownloadButton\r\n                        onClick={this.onDownloadClick}\r\n                        className=\"video-icon\"\r\n                      />\r\n                    )}\r\n                  </span>\r\n                )}\r\n                <Angle\r\n                  onClick={this.showDescription}\r\n                  className={`video-icon ${\r\n                    this.state.description ? \"rotate\" : null\r\n                  }`}\r\n                />\r\n              </div>\r\n            </div>\r\n            {this.state.description && (\r\n              <div className=\"video-description-box\">\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: this.state.video.description,\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyShakaPlayer;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\feedback-form\\studentfedback.component.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\chatbot\\chatbot.jsx",["1463","1464","1465","1466"],"import React, { Component } from \"react\";\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\nimport { Container } from \"react-bootstrap\";\r\nimport styles from \"./components/chatbot.css\"\r\nclass chatbot extends Component {\r\n  componentDidMount(){\r\n    // localStorage.setItem('',)\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <iframe\r\n        src=\"https://d3og1fncqe9lrx.cloudfront.net/index.html?enquiryId=94\">\r\n        </iframe>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default chatbot;","S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\ExamUploadReducer.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\AnalysisReducer.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\home\\index.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\video-player\\index.jsx",["1467"],"import React, { Component } from \"react\";\r\nimport video_icon from \"../../_assets/imgs/stream.png\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport Vdocipher from './vdocipher';\r\n\r\nclass VideoPlayer extends Component { \r\n\r\n\tconstructor(props) {\r\n        super(props);        \r\n    }\r\n    \r\n    componentDidMount() {\r\n        //console.log(\"VideoPlayer -> componentDidMount()... \");\r\n    }\r\n    \r\n    render() {\r\n        return (  \r\n            <>\r\n                <div className=\"ilearn-full-height\">\r\n                    <Container fluid >\r\n                        {this.renderHeader()}\r\n                        {this.renderBody()}                    \r\n                    </Container>\r\n                </div>\r\n            </>           \r\n              \r\n        );\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"module-header\">\r\n                <div className={`module-header-inner blue-card`} >\r\n                    <div className=\"back\">\r\n                        <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n                    </div>\r\n                    <img src={video_icon} alt=\"video icon\" /> \r\n                </div>\r\n                <div className=\"arrow-set\">\r\n                    <h4>Video Player</h4>                            \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    renderBody() {\r\n        return  (\r\n            <div className=\"ilearn-padding-top center\"> \r\n               <Vdocipher>\r\n\r\n               </Vdocipher>\r\n            </div>\r\n        );\r\n        \r\n    } \r\n}\r\n\r\n\r\n  \r\nexport default VideoPlayer;","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\scratch-pad\\index.jsx",["1468"],"import React, { Component } from \"react\";\r\nimport VideoPlayer from \"../../_components/video-player\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass ScratchPad extends Component { \r\n\r\n\tconstructor(props) {\r\n        super(props);\r\n        //console.log(\"ScratchPad -> constructor()... \");\r\n    }\r\n    \r\n    componentDidMount() {\r\n        //console.log(\"ScratchPad -> componentDidMount()... \");\r\n    }\r\n    \r\n    render() {\r\n        //console.log(\"ScratchPad -> render()... \");  \r\n        //return this.renderVideoPlayer();\r\n        return this.renderOfflineDownload();\r\n    }\r\n\r\n    renderOfflineDownload() {\r\n        return (\r\n            <>\r\n            <br></br>\r\n            <Button variant=\"primary button-full ilearn-blue-btn button-md\" id=\"offlineDownload\">\r\n                <span className=\"button-inner\"> Offline Download </span>\r\n            </Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    renderVideoPlayer() {\r\n            //http://www.storiesinflight.com/js_videosub/jellies.srt\r\n            //https://walsh9.github.io/videojs-transcript/captions/captions.en.vtt\r\n        const url = //\"https://s3.amazonaws.com/ibleducation-brainlab/BC101/wGumvoH1FxQ.mp4\",\r\n                    //\"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4\",\r\n                    //\"http://www.youtube.com/watch?v=nOEw9iiopwI\",\r\n                    //\"http://player.vimeo.com/video/523181639\",\r\n                    \"https://player.vimeo.com/video/500726329\",\r\n                    //\"https://tuningfork-live.s3.amazonaws.com/icegateacademy/uploads/study_resource/transcoder/5/27-8-16/1/5.m3u8\",\r\n            transcripts = [\r\n            {\"src\":\"https://walsh9.github.io/videojs-transcript/captions/captions.en.vtt\",\r\n                \"lang\":\"en\",\"label\":\"sub-titles\"}\r\n        ]\r\n        ;\r\n        return (  \r\n            <>\r\n                <VideoPlayer\r\n                    url={url}\r\n                    transcripts={transcripts}\r\n                    resourceId=\"404\"\r\n                    resourceName=\"Dr. Abdul Kalam's Streaming Video\"\r\n                />\r\n            </>           \r\n              \r\n        );\r\n    }\r\n\r\n}\r\n\r\n  \r\nexport default ScratchPad;","S:\\REACT\\Ract-Js\\Frlnce\\src\\_actions\\analysisActions.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_actions\\attendanceActions.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_actions\\examUploadActions.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_actions\\productActions.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_actions\\bioMetricAttendanceActions.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_constants\\studyResourceTypes.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\loader\\loader.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\xapi\\xapiutils.js",["1469","1470"],"import axios from 'axios';\r\nimport Config from '../../_config/config';\r\nclass XAPIUtils {\r\n    static createStatement = (obj) => {\r\n        var statement = {\r\n            \"actor\": {\r\n                \"name\": obj.lrsConfig.userName,\r\n                \"account\": {\r\n                    \"homePage\": \"http://www.edusquares.org\",\r\n                    \"name\": obj.lrsConfig.userName\r\n                }\r\n            },\r\n            \"object\": {\r\n                \"id\": obj.lrsConfig.accessUrl,\r\n                \"definition\": {\r\n                    \"name\": {\"en-US\": obj.name},\r\n                    \"description\": {\"en-US\": obj.name,}\r\n                },\r\n                \"objectType\": \"Activity\"\r\n            }\r\n        }\r\n        statement[\"verb\"] = this.findVerb(obj.typeId);\r\n       return statement;\r\n    }\r\n    static verbs = {\"initialized\":{\"id\":\"http://edusquares.com/xapi/verbs/initialized\",\"display\":{\"en-US\":\"Video Initialized\"}},\"played\":{\"id\":\"http://edusquares.com/xapi/verbs/played\",\"display\":{\"en-US\":\"Video Played\"}},\"paused\":{\"id\":\"http://edusquares.com/xapi/verbs/paused\",\"display\":{\"en-US\":\"Video Paused\"}},\"ended\":{\"id\":\"http://edusquares.com/xapi/verbs/ended\",\"display\":{\"en-US\":\"Video Ended\"}},\"accessed\":{\"id\":\"http://edusquares.com/xapi/verbs/accessed\",\"display\":{\"en-US\":\"Resource Accessed\"}},\"read\":{\"id\":\"http://edusquares.com/xapi/verbs/read\",\"display\":{\"en-US\":\"Resource Read\"}},\"viewed\":{\"id\":\"http://edusquares.com/xapi/verbs/viewed\",\"display\":{\"en-US\":\"ResourceViewed\"}},\"downloaded\":{\"id\":\"http://edusquares.com/xapi/verbs/downloaded\",\"display\":{\"en-US\":\"Resource Downloaded\"}},\"started\":{\"id\":\"http://edusquares.com/xapi/verbs/started\",\"display\":{\"en-US\":\"Test Started\"}},\"completed\":{\"id\":\"http://edusquares.com/xapi/verbs/completed\",\"display\":{\"en-US\":\"Test Completed\"}},\"resumed\":{\"id\":\"http://edusquares.com/xapi/verbs/resumed\",\"display\":{\"en-US\":\"Test Resumed\"}}}\r\n    static findVerb = (typeId) => {\r\n        switch(typeId){\r\n            case 16:\r\n                return this.verbs.initialized;\r\n            case 6:\r\n                return this.verbs.viewed;\r\n            case -1:\r\n                return this.verbs.started;\r\n            case -2:\r\n                return this.verbs.resumed;\r\n            case -3:\r\n                return this.verbs.read;\r\n            case -4:\r\n                return this.verbs.downloaded;\r\n            case -5:\r\n                return this.verbs.played;\r\n        }\r\n        return this.verbs.accessed;\r\n    }\r\n\r\n    static track = (obj) => {\r\n        let conf = obj.lrsConfig;\r\n        var statement = this.createStatement(obj);\r\n        if(obj.hasOwnProperty(\"ext\")){\r\n            statement[\"result\"] = obj.ext.result;\r\n            statement[\"context\"] = obj.ext.context;\r\n        }\r\n        console.log(\"SENDING for LRS\")\r\n        this.trackkLrs(conf, statement).then((response) => {\r\n            console.log(response);\r\n        });\r\n        console.log(\"SENDING for ANALYTICS\")\r\n        this.trackLearningAnalytics(statement).then((response) => {\r\n          console.log(response);  \r\n        })\r\n    }\r\n    static trackkLrs = (conf,statement) => {\r\n        if(conf.enabled){\r\n            try{\r\n                window.ADL.XAPIWrapper.changeConfig(conf.config);\r\n                var result = window.ADL.XAPIWrapper.sendStatement(statement);\r\n            }\r\n            catch(err){\r\n                console.log(\"FAILED TO CONNECT TO LSR ENDPOINT\")\r\n            }\r\n        }\r\n        else{\r\n            console.log(\"XAPI NOT CONFIGURED\")\r\n        }\r\n        console.log(statement);\r\n        var response ={message:\"success\",obj:statement}\r\n        return Promise.resolve(response);\r\n    }\r\n\r\n    static trackLearningAnalytics = (obj) => {\r\n        let res = axios.post(Config.siteUrl+'api/studyresources/learning/track/', obj);\r\n        let data = res.data;\r\n        var response ={message:\"success\",obj:data}\r\n        return Promise.resolve(response);\r\n    }\r\n}\r\nexport default XAPIUtils;","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\LearningStepAttachmentDetails.js",["1471","1472","1473","1474","1475","1476","1477","1478","1479"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"./Learning.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport Loader from \"./../../_components/loader/loader\";\r\nimport Model from \"./components/Model\";\r\nimport Resource from \"./components/Resource\";\r\nimport ico_notes from \"./images/ico_notes.svg\";\r\nimport ico_handouts from \"./images/ico_discussion.svg\";\r\nimport ico_interview from \"./images/ico_interview.svg\";\r\nimport CKEditor from \"ckeditor4-react\";\r\nimport XAPIUtils from \"../xapi/xapiutils\";\r\n\r\nclass LearningStepAttachmentDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      message: null,\r\n      loading: false,\r\n      show: false,\r\n      close: false,\r\n      resourceIndex: 0,\r\n      resourceId: 0,\r\n      groupIndex: 0,\r\n      stepIndex: 0,\r\n      activeAttachemnt: null,\r\n    };\r\n    this.reloadLearningStepAttachmentDetailsList =\r\n      this.reloadLearningStepAttachmentDetailsList.bind(this);\r\n    this.trackStudyResourcesLearningActivity =\r\n      this.trackStudyResourcesLearningActivity.bind(this);\r\n    this.reloadLearningStepsList = this.reloadLearningStepsList.bind(this);\r\n    //this.reloadLearningList = this.reloadLearningList.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"here\");\r\n    //console.log(this.props);\r\n    this.reloadLearningStepAttachmentDetailsList();\r\n    this.trackStudyResourcesLearningActivity();\r\n    this.reloadLearningStepsList();\r\n    //this.reloadLearningList();\r\n    this.scrollTop();\r\n  }\r\n\r\n  modeShow = (show) => {\r\n    this.setState({\r\n      show: show,\r\n    });\r\n  };\r\n\r\n  /*reloadLearningList() {\r\n    this.setState({ loading: true }, () => {\r\n      ApiService.fetchLearning(this.props.location.state.lessonPlanId,1)\r\n      .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n            groups: res.data\r\n          });\r\n      });\r\n    });\t\r\n  }*/\r\n\r\n  loadNext() {\r\n    var groupIndex = 1;\r\n    var groups = [];\r\n    var stepIndex = 1;\r\n    var resourceIndex = 1;\r\n\r\n    if (groupIndex >= groups.length) {\r\n      return this.endOfModules();\r\n    }\r\n    var group = groups[groupIndex];\r\n    var stepId = group[stepIndex].id;\r\n    if (group[stepIndex].resources.length > 0) {\r\n      var resourceId = group[stepIndex].resources[resourceIndex];\r\n      if (resourceId === undefined) {\r\n        //groupIndex++;\r\n        //stepIndex = 0;\r\n        stepIndex++;\r\n        resourceIndex = 0;\r\n        if (groupIndex >= groups.length) {\r\n          return this.endOfModules();\r\n        }\r\n        group = groups[groupIndex];\r\n        if (group[stepIndex] === undefined) {\r\n          groupIndex++;\r\n          stepIndex = 0;\r\n          group = groups[groupIndex];\r\n        }\r\n        if (group == undefined || group[stepIndex] === undefined) {\r\n          return this.endOfModules();\r\n        }\r\n        stepId = group[stepIndex].id;\r\n        resourceId = group[stepIndex].resources[resourceIndex];\r\n      }\r\n\r\n      //call api\r\n      resourceIndex++;\r\n    } else {\r\n      alert(\"Oops! <br/>We could not find any Learning Material!\");\r\n    }\r\n  }\r\n\r\n  endOfModules() {\r\n    alert(\r\n      \"Congratulations! <br/>You have reached the last step in the module!\"\r\n    );\r\n    return;\r\n  }\r\n\r\n  reloadLearningStepAttachmentDetailsList() {\r\n    this.setState({ loading: true }, () => {\r\n      ApiService.fetchLearningStepAttachments(this.props.match.params.id)\r\n        .then((res) => {\r\n          let attachments = res.data.attachments;\r\n          let _activeAttachment;\r\n          attachments.map((_studyResource, index) => {\r\n            if (_studyResource.id == this.props.match.params.resourceId) {\r\n              _activeAttachment = _studyResource;\r\n              this.setState({\r\n                loading: false,\r\n                list: res.data.attachments,\r\n                activeAttachment: _activeAttachment,\r\n                resourceId: this.props.match.params.resourceId,\r\n                groupIndex: this.props.location.state.groupIndex,\r\n                stepIndex: this.props.location.state.stepIndex,\r\n                resourceIndex: this.props.location.state.resourceIndex,\r\n              });\r\n            }\r\n          });\r\n        })\r\n        .catch((error) => console.log(error));\r\n    });\r\n  }\r\n\r\n  reloadLearningStepsList() {\r\n    this.setState({ loading: true }, () => {\r\n      ApiService.fetchLearningStepsDesktop(\r\n        this.props.location.state.lessonPlanId\r\n      ).then((res) => {\r\n        console.log(res.data.groups);\r\n        this.setState({\r\n          loading: false,\r\n          groups: res.data.groups,\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  trackStudyResourcesLearningActivity() {\r\n    let data = {\r\n      groupIndex: this.props.location.state.groupIndex,\r\n      stepIndex: this.props.location.state.stepIndex,\r\n      resourceIndex: this.props.location.state.resourceIndex,\r\n      type: \"resource\",\r\n      id: this.props.match.params.resourceId,\r\n    };\r\n\r\n    ApiService.trackStudyResourcesLearningActivity(\r\n      this.props.location.state.lessonPlanId,\r\n      data\r\n    ).then((res) => {\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  routeChange(path, resource) {\r\n    //alert(JSON.stringify(resource))\r\n    this.props.history.push({\r\n      pathname: path,\r\n      state: { resource: resource, stepId: this.props.match.params.id },\r\n    });\r\n  }\r\n\r\n  scrollTop() {\r\n    document.body.scrollTop = 0;\r\n    document.documentElement.scrollTop = 0;\r\n  }\r\n\r\n  loadCurrentResource(index) {\r\n    this.scrollTop();\r\n\r\n    if (this.state.groupIndex >= this.state.groups.length) {\r\n      alert(\"Congratulations! You have reached the last step in the module!\");\r\n    }\r\n    //alert(\"groupIndex:\"+this.state.groupIndex+\" stepIndex:\"+ this.state.stepIndex+ \" resourceIndex\"+index);\r\n    if (index >= 0 && this.state.list.length > index) {\r\n      this.setState({\r\n        resourceId: this.state.list[index].id,\r\n        resourceIndex: index,\r\n      });\r\n    } else if (index > 0) {\r\n      //alert(\"Congratulations! You have reached the last step in the module!\");\r\n      //this.props.history.goBack();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    localStorage.setItem(\"firstVisit\", false);\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          {this.renderHeader()}\r\n          {loading ? <Loader /> : this.renderCard()}\r\n        </Container>\r\n        <Model\r\n          show={this.state.show}\r\n          title={this.state.title}\r\n          type={this.state.type}\r\n          close={this.state.close}\r\n          modeShow={this.modeShow.bind(this)}\r\n          resourceId={this.state.resourceId}\r\n        />\r\n      </>\r\n      // <div className=\"LearningAttachment\">\r\n      //   {\r\n      //     <Container fluid>\r\n      //         {loading ?  <Loader />: this.renderCard()}\r\n      //     </Container>\r\n      //   }\r\n      //   <Model\r\n      //       show={this.state.show}\r\n      //       title={this.state.title}\r\n      //       type= {this.state.type}\r\n      //       close={this.state.close}\r\n      //       modeShow={this.modeShow.bind(this)}\r\n      //       resourceId = {this.state.resourceId}\r\n      //   />\r\n      // </div>\r\n    );\r\n  }\r\n\r\n  renderHeader() {\r\n    console.log(\"LearningStepAttachmentDetails -> renderHeader()... \");\r\n    const CURRENT_PORTLET = JSON.parse(localStorage.getItem(\"portlet\"));\r\n    return (\r\n      <div className={`ilearn-plain-header ${CURRENT_PORTLET.class}`}>\r\n        <div className=\"back\">\r\n          <FontAwesomeIcon\r\n            icon={faArrowLeft}\r\n            onClick={this.props.history.goBack}\r\n          />\r\n        </div>\r\n        <h4>{this.state.activeAttachment?.name}</h4>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  changeContent = (groupIndex, stepIndex, resourceIndex, lessonPlanId) => {\r\n    this.setState({\r\n      groupIndex:groupIndex,\r\n      stepIndex: stepIndex,\r\n      resourceIndex:resourceIndex\r\n    })\r\n    if(this.state.groups[groupIndex].steps[stepIndex].resources[resourceIndex].studyResourceType===\"0\"){\r\n      window.open('/TestInstructions/'+this.state.groups[groupIndex].steps[stepIndex].resources[resourceIndex].id+'?lms='+lessonPlanId, \"Start Test\", 'height=' + window.screen.height + ',width=' + window.screen.width);\r\n    }else{\r\n\r\n      this.props.history.push({\r\n        pathname: `/lesson/steps/attachments/${this.state.groups[groupIndex].steps[stepIndex].id}/details/${this.state.groups[groupIndex].steps[stepIndex].resources[resourceIndex].id}`,\r\n        state: {\r\n          lessonPlanId: lessonPlanId,\r\n          groupIndex: groupIndex,\r\n          stepIndex: stepIndex,\r\n          resourceIndex: resourceIndex,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  loadNextResource = () => {\r\n    if (\r\n      this.state.resourceIndex ===\r\n      this.state.groups[this.state.groupIndex].steps[this.state.stepIndex]\r\n        .resources.length -\r\n        1\r\n    ) {\r\n      if (\r\n        this.state.stepIndex ===\r\n        this.state.groups[this.state.groupIndex].steps.length - 1\r\n      ) {\r\n        this.changeContent(\r\n          this.state.groupIndex + 1,\r\n          0,\r\n          0,\r\n          this.props.location.state.lessonPlanId\r\n        );\r\n      } else {\r\n        this.changeContent(\r\n          this.state.groupIndex,\r\n          this.state.stepIndex + 1,\r\n          0,\r\n          this.props.location.state.lessonPlanId\r\n        );\r\n      }\r\n    } else {\r\n      this.changeContent(\r\n        this.state.groupIndex,\r\n        this.state.stepIndex,\r\n        this.state.resourceIndex + 1,\r\n        this.props.location.state.lessonPlanId\r\n      );\r\n    }\r\n  };\r\n\r\n  loadPrevResource = () => {\r\n    if (this.state.resourceIndex === 0) {\r\n      if (this.state.stepIndex === 0) {\r\n        console.log(this.state.groups[this.state.groupIndex].steps.length);\r\n        let newStepIndex = this.state.groups[this.state.groupIndex-1].steps.length - 1;\r\n        this.changeContent(\r\n          this.state.groupIndex-1,\r\n          newStepIndex,\r\n          this.state.groups[this.state.groupIndex - 1].steps[newStepIndex]\r\n            .resources.length - 1,\r\n          this.props.location.state.lessonPlanId\r\n        );\r\n      } else {\r\n        this.changeContent(\r\n          this.state.groupIndex,\r\n          this.state.stepIndex - 1,\r\n          this.state.groups[this.state.groupIndex].steps[\r\n            this.state.stepIndex - 1\r\n          ].resources.length - 1,\r\n          this.props.location.state.lessonPlanId\r\n        );\r\n      }\r\n    } else {\r\n      this.changeContent(\r\n        this.state.groupIndex,\r\n        this.state.stepIndex,\r\n        this.state.resourceIndex - 1,\r\n        this.props.location.state.lessonPlanId\r\n      );\r\n    }\r\n  };\r\n\r\n  renderCard() {\r\n    let _studyResource = this.state.activeAttachment;\r\n    return (\r\n      <div className=\"card_details\">\r\n        {_studyResource && (\r\n          <>\r\n            <Resource\r\n              data={_studyResource}\r\n              history={this.props.history}\r\n              stepId={this.props.match.params.id}\r\n            />\r\n            <div className=\"divhide\">\r\n              <CKEditor name=\"message\" placeholder=\"Compose message\" data=\"\" />\r\n            </div>\r\n            {this.renderFooter(_studyResource)}\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFooter(item) {\r\n    const resourceIndex = this.state.resourceIndex;\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"mobile_bootom_navbar container-fluid\"\r\n          id=\"bootom_navbar\"\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col-1\"></div>\r\n            <div className=\"col-2 col-sm-2 prev_div\">\r\n            {\r\n              (this.state.groupIndex === 0 && this.state.stepIndex === 0 && this.state.resourceIndex ===0)?null\r\n              :<button className=\"btn btn-primary\" onClick={this.loadPrevResource}>Prev</button>\r\n            }\r\n              {/*<a onClick={() => this.loadCurrentResource(resourceIndex-1)} className=\"prev\">&laquo; Prev</a>*/}\r\n            </div>\r\n            <div className=\"col-2 col-sm-2\">\r\n              <a\r\n                onClick={() =>\r\n                  this.setState({ show: true, title: \"Notes\", type: \"note\" })\r\n                }\r\n              >\r\n                <img src={ico_notes} alt=\"Notes\" />\r\n                <span>Notes </span>\r\n              </a>\r\n            </div>\r\n            <div className=\"col-2 col-sm-2\">\r\n              <a\r\n                onClick={() =>\r\n                  this.routeChange(\"/discussion/resource/\" + item.id, item)\r\n                }\r\n              >\r\n                <img src={ico_handouts} alt=\"Discuss\" />\r\n                <span>Discuss</span>\r\n              </a>\r\n            </div>\r\n            <div className=\"col-2 col-sm-2\">\r\n              <a\r\n                onClick={() =>\r\n                  this.setState({ show: true, title: \"Doubts\", type: \"doubt\" })\r\n                }\r\n              >\r\n                <img src={ico_interview} alt=\"Doubts\" />\r\n                <span>Doubts</span>\r\n              </a>\r\n            </div>\r\n\r\n            <div className=\"col-2 col-sm-2 next_div\">\r\n            {\r\n              (this.state.groupIndex === this.state.groups?.length-1 && \r\n              this.state.stepIndex === this.state.groups[this.state.groupIndex].steps.length-1 && \r\n              this.state.resourceIndex === this.state.groups[this.state.groupIndex].steps[this.state.stepIndex].resources.length -1\r\n              )?null\r\n              :<button className=\"btn btn-primary\" onClick={this.loadNextResource}>Next</button>\r\n            }\r\n              {/*<a onClick={() => this.loadCurrentResource(resourceIndex+1)} className=\"next\">Next &raquo;</a>*/}\r\n            </div>\r\n            <div className=\"col-1\"></div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LearningStepAttachmentDetails;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\iloader\\iloader.jsx",["1480","1481"],"import React from \"react\";\r\nimport RingLoader from 'react-spinners/RingLoader'\r\nimport \"./iloader.css\";\r\n\r\nclass ILoader extends React.Component {\r\n\r\n  render() {\r\n    return (this.props.isShow ?  this.renderLoading(): \"\");\r\n  }\r\n\r\n  renderLoading() {    \r\n    return ( \r\n          this.props.loaderStyle==\"dark\" ?\r\n            <div className=\"loading blue\">\r\n                <div className=\"content\">{this.props.loadingText} <br /> <a><i></i><i></i><i></i></a></div>\r\n                \r\n            </div> :\r\n            <div className=\"loading\">\r\n                <span>\r\n                  <RingLoader color={\"#1d7ed5\"}/>\r\n                  <div className=\"content\">{this.props.loadingText}</div>\r\n                </span>\r\n            </div> \r\n    );\r\n  }\r\n}\r\n\r\nexport {ILoader}","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\OTPValidator.jsx",["1482"],"import React, { Component } from \"react\";\r\nimport { Modal, Form, Button } from \"react-bootstrap\";\r\nimport { ILoader } from \"./iloader/iloader\";\r\nimport ApiService from \"../_services/ApiService\";\r\n\r\nexport default class OTPValidator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: this.props.data,\r\n      otpInput: null,\r\n      showError: false,\r\n      errorMessage:\r\n        \"The OTP you entered is invalid. Please enter the correct OTP.\",\r\n      showLoading: false,\r\n    };\r\n  }\r\n\r\n  /*componentDidMount() {\r\n        console.log(\"OTPValidator --> componentDidMount...\");\r\n    }*/\r\n\r\n  /*shouldComponentUpdate(newProps, newState) {\r\n        console.log(\"OTPValidator --> shouldComponentUpdate()...);\r\n        return newState.data.show != this.state.data.show\r\n    }*/\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    //console.log(\"OTPValidator --> componentWillReceiveProps()...\");\r\n    if (newProps.data.show !== this.props.data.show) {\r\n      this.setState({\r\n        data: newProps.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"OTPValidator --> render()...\");\r\n    const {\r\n      enableResendOtp,\r\n      showTimer,\r\n      resendOtp,\r\n      callForOtp,\r\n      timeLeft,\r\n      handleResendMessage,\r\n      handleCallForOtp,\r\n    } = this.props;\r\n    let otpData = this.state.data;\r\n    return (\r\n      <>\r\n        <Modal\r\n          show={otpData.show}\r\n          style={{ fontFamily: \"Work Sans, sans-serif\" }}\r\n          backdrop=\"static\"\r\n          onHide={() => this.handleClose(false)}\r\n        >\r\n          <Modal.Header\r\n            closeButton\r\n            className={`ilearn-plain-header ilearn-blue-light-btn`}\r\n          >\r\n            <Modal.Title className=\"text-white\"> Verify OTP </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                this.handleClose(true);\r\n              }}\r\n            >\r\n              <Form.Group controlId=\"otp\">\r\n                <Form.Label\r\n                  dangerouslySetInnerHTML={{ __html: otpData.message }}\r\n                ></Form.Label>\r\n                <Form.Control\r\n                  size=\"lg\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter OTP\"\r\n                  name=\"otp\"\r\n                  onChange={this.updateInput}\r\n                />\r\n              </Form.Group>\r\n              {this.state.showError && (\r\n                <div className=\"error-message\">{this.state.errorMessage}</div>\r\n              )}\r\n            </Form>\r\n            {enableResendOtp ? (\r\n              <>\r\n                <span>Did not Receive OTP? </span>\r\n                {showTimer && <span>Wait {timeLeft} seconds</span>}\r\n                {resendOtp && (\r\n                  <span\r\n                    style={{ color: \"var(--primary)\", cursor: \"pointer\" }}\r\n                    onClick={handleResendMessage}\r\n                  >\r\n                    Resend OTP\r\n                  </span>\r\n                )}\r\n                {callForOtp && (\r\n                  <span\r\n                    style={{ color: \"var(--primary)\", cursor: \"pointer\" }}\r\n                    onClick={handleCallForOtp}\r\n                  >\r\n                    Get OTP on Call\r\n                  </span>\r\n                )}\r\n              </>\r\n            ) : null}\r\n            {this.renderLoader()}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"success\"\r\n              className=\"text-uppercase\"\r\n              onClick={() => this.handleClose(true)}\r\n            >\r\n              Verify\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderLoader() {\r\n    //console.log(\"OTPValidator -> renderLoader()... \");\r\n    const _loadingText = \"Please wait...\";\r\n    return (\r\n      <ILoader\r\n        loadingText={_loadingText}\r\n        isShow={this.state.showLoading}\r\n      ></ILoader>\r\n    );\r\n  }\r\n\r\n  updateInput = (e) => {\r\n    let v = e.target.value;\r\n    let k = e.target.name;\r\n    let otpInput = { ...this.state.otpInput };\r\n    otpInput = v;\r\n    this.setState({ otpInput: otpInput });\r\n  };\r\n\r\n  handleClose = (value) => {\r\n    //console.log(\"OTPValidator --> handleClose()...\"+this.state.otpInput);\r\n    if (\r\n      value === true &&\r\n      (this.state.otpInput === null ||\r\n        this.state.otpInput.length !== this.state.data.otpLength)\r\n    ) {\r\n      this.setState({ showError: true });\r\n    } else if (value === true && !this.props.masterControl) {\r\n      this.setState({ showLoading: true, showError: false }, () => {\r\n        ApiService.verifyOTP(this.state.data.userId, this.state.otpInput).then(\r\n          (res) => {\r\n            //console.log(\"OTPValidator -> handleClose(); res : \"+JSON.stringify(res));\r\n            if (res.data.status === 1) {\r\n              this.setState({ showLoading: false }, () => {\r\n                const { onOTPValidatorClose = (f) => f } = this.props;\r\n                onOTPValidatorClose(value);\r\n              });\r\n            } else {\r\n              this.setState({\r\n                showLoading: false,\r\n                showError: true,\r\n                errorMessage: res.data.message,\r\n              });\r\n            }\r\n          }\r\n        );\r\n      });\r\n    } else {\r\n      const { onOTPValidatorClose = (f) => f } = this.props;\r\n      this.props?.masterControl\r\n        ? onOTPValidatorClose(this.state.otpInput, value)\r\n        : onOTPValidatorClose(value);\r\n    }\r\n  };\r\n}\r\n\r\n/*\r\n    References:\r\n    Modal -> https://react-bootstrap.github.io/components/modal/\r\n\r\n*/\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\epub\\index.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_services\\ThemeService.js",["1483"],"import ApiService from \"./ApiService\";\r\n\r\nclass ThemeService {\r\n\r\n    getActiveTheme() {\r\n        console.log(\"ThemeService --> getActiveTheme()...\");\r\n        let activeTheme = sessionStorage['activeTheme'];\r\n        if(!activeTheme) {\r\n            ApiService.getActiveTheme()\r\n            .then((res) => {\r\n              console.log(\"ThemeService --> getActiveTheme()... Active Theme : \"+JSON.stringify(res.data));\r\n              if(res.data.data) {\r\n                let _activeTheme =  res.data.data;\r\n                sessionStorage.setItem('activeTheme', JSON.stringify(_activeTheme));\r\n                this.setTheme(_activeTheme);\r\n              }    \r\n            },\r\n            error => { //ErrorCB\r\n                console.log(\"ThemeService --> getActiveTheme()... error =>\"+JSON.stringify(error));\r\n            });\t\r\n        }\r\n        else {\r\n            this.setTheme(JSON.parse(activeTheme));    \r\n        }  \r\n    }\r\n\r\n    setTheme(activeTheme) { \r\n        console.log(\"ThemeService --> setTheme()...\"+JSON.stringify(activeTheme)); \r\n        let bodyStyles = document.body.style;\r\n        // const primaryColor = this.lightenDarkenColor(color, 0)\r\n        // const primaryHoverColor = this.lightenDarkenColor(color, 20)\r\n        // const primaryFocusColor = this.lightenDarkenColor(color, 80)\r\n        // const secondaryColor = this.lightenDarkenColor(color, 20)\r\n        // const secondaryHoverColor = this.lightenDarkenColor(color, 40)\r\n        // const secondaryFocusColor = this.lightenDarkenColor(color, 100)\r\n        // bodyStyles.setProperty('--primary-color', `${primaryColor}`)\r\n        // bodyStyles.setProperty('--primary-hover-color', `${primaryHoverColor}`)\r\n        // bodyStyles.setProperty('--primary-focus-color', `${primaryFocusColor}`)\r\n        // bodyStyles.setProperty('--secondary-color',  `${secondaryColor}`)\r\n        // bodyStyles.setProperty('--secondary-hover-color', `${secondaryHoverColor}`)\r\n        // bodyStyles.setProperty('--secondary-focus-color', `${secondaryFocusColor}`)\r\n        const themeColor = activeTheme?.color;\r\n        if(themeColor) {\r\n            bodyStyles.setProperty('--primary-color', `${themeColor['primary-color']}`)\r\n            bodyStyles.setProperty('--secondary-color', `${themeColor['secondary-color']}`)\r\n            bodyStyles.setProperty('--portlet-color1', `${themeColor['portlet-color1']}`)\r\n            bodyStyles.setProperty('--portlet-color2', `${themeColor['portlet-color2']}`)\r\n            bodyStyles.setProperty('--portlet-color3', `${themeColor['portlet-color3']}`)\r\n            bodyStyles.setProperty('--portlet-color4', `${themeColor['portlet-color4']}`)\r\n            bodyStyles.setProperty('--portlet-color5', `${themeColor['portlet-color5']}`)\r\n            bodyStyles.setProperty('--portlet-color6', `${themeColor['portlet-color6']}`)\r\n            bodyStyles.setProperty('--portlet-color7', `${themeColor['portlet-color7']}`)\r\n            bodyStyles.setProperty('--portlet-color8', `${themeColor['portlet-color8']}`)\r\n            bodyStyles.setProperty('--portlet-color9', `${themeColor['portlet-color9']}`)\r\n            bodyStyles.setProperty('--portlet-color10', `${themeColor['portlet-color10']}`)\r\n            bodyStyles.setProperty('--portlet-color11', `${themeColor['portlet-color11']}`)\r\n            bodyStyles.setProperty('--portlet-color12', `${themeColor['portlet-color12']}`)\r\n        }\r\n    }\r\n\r\n    lightenDarkenColor(col, amt) {\r\n        if(col === null || col === undefined) {\r\n            return null;\r\n        }\r\n        let usePound = false;\r\n      \r\n        if (col[0] == \"#\") {\r\n            col = col.slice(1);\r\n            usePound = true;\r\n        }\r\n     \r\n        let num = parseInt(col,16);\r\n     \r\n        let r = (num >> 16) + amt;\r\n     \r\n        if (r > 255) r = 255;\r\n        else if  (r < 0) r = 0;\r\n     \r\n        let b = ((num >> 8) & 0x00FF) + amt;\r\n     \r\n        if (b > 255) b = 255;\r\n        else if  (b < 0) b = 0;\r\n     \r\n        let g = (num & 0x0000FF) + amt;\r\n     \r\n        if (g > 255) g = 255;\r\n        else if (g < 0) g = 0;\r\n     \r\n        return (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\r\n      \r\n    }\r\n\r\n}\r\n\r\nexport default new ThemeService();","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\video-player\\index.jsx",["1484"],"import React, { Component } from \"react\";\r\nimport MediaElementVideoComponent from \"./MediaElementVideoPlayer\";\r\n\r\nclass VideoPlayer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {};\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <MediaElementVideoComponent \r\n                    videoUrl={this.props.url}\r\n                    transcripts={this.props.transcripts}\r\n                    onPlayerEvent={this.onPlayerEvent}\r\n                />\r\n        );\r\n    }\r\n\r\n    onPlayerEvent(eventData) {\r\n        console.log(\"onPlayerEvent>>> \"+JSON.stringify(eventData));\r\n    }\r\n\r\n}\r\n\r\nexport default VideoPlayer;","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\components\\Resource.jsx",["1485","1486","1487","1488","1489","1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500"],"import React, {Component} from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Parser from 'html-react-parser';\r\nimport Utils from \"../../../_helpers/utils\";\r\nimport ApiService from \"../../../_services/ApiService\";\r\nimport Config from '../../../_config/config'\r\nimport swal from 'sweetalert';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faVideo,faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport VideoPlayer from \"../../../_components/video-player\";\r\nimport  { TimeTable } from \"../../timetable/TimeTable\";\r\nimport XAPIUtils from \"../../xapi/xapiutils\";\r\n\r\nexport default class Resource extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\t}\r\n\r\n\trouteChange(path) {\r\n\t\tthis.props.history.push(path);\r\n\t}\r\n\r\n\trouteReplace = (path)=>{\r\n\t\tthis.props.history.replace(path);\r\n\t}\r\n\r\n\topenLink = (url) => {\r\n\t\twindow.open(url, 'Scorm Course', 'height=' + window.screen.height + ',width=' + window.screen.width);\r\n\t}\r\n\r\n\tdownloadTest(testid) {\r\n\t\t//|| Utils.isMobileDevice()===false\r\n\t\tif(Utils.isMobileDevice()===true){\r\n\t\t  ApiService.fetchTest(testid)\r\n\t\t  .then((res) => {\r\n\t\t\tif(res.data.status==1 && res.data.data.tests[0].testJSONFile!=\"TestJSONNotFound\"){\r\n\t\t\t  var studentPdfResponse = res.data.data.tests[0].studentPdfResponse;\r\n\t\t\t  ApiService.fetchTestJson(res.data.data.tests[0].testJSONFile)\r\n\t\t\t  .then((res) => {\r\n\t\t\t\tthis.setState({tests: res.data});\r\n\t\t\t\tvar oldTests = JSON.parse(localStorage.getItem('tests')) || [];\r\n\t\t\t\tif (oldTests.filter(test=> test.id == testid).length == 0){\r\n\t\t\t\t  res.data.resume=0;\r\n\t\t\t\t  res.data.studentPdfResponse=studentPdfResponse;\r\n\t\t\t\t  oldTests.push(res.data);  \r\n\t\t\t\t  localStorage.setItem('tests', JSON.stringify(oldTests));\t\t\r\n\t\t\t\t  this.props.history.replace('/test-instructions/'+this.props.stepId+'/'+testid+'?lms=1&title=');\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t}else{\r\n\t\t\t  let portlet = JSON.parse(localStorage.getItem('portlet'));\r\n\t\t\t  swal({\r\n\t\t\t\ttitle: \"Alert\",\r\n\t\t\t\ttext: \"Online test not available. Please contact administrator\",\r\n\t\t\t\tdangerMode: true,\r\n\t\t\t\tclassName: portlet.class ? portlet.class : 'orange-card'\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  });\r\n\t\t}else{\r\n\t\t  //this.props.history.replace('/TestInstructions/'+testid+'?lms='+this.props.match.params.id,0,this.props.match.params.id)\r\n\t\t  window.open('/TestInstructions/'+testid+'?lms='+this.props.stepId, \"Start Test\", 'height=' + window.screen.height + ',width=' + window.screen.width);\r\n\t\t}\r\n\t\t\r\n\t  }\r\n    \r\n    render(){\r\n\t\t\r\n\t\tlet item = this.props.data;\r\n\t\tlet stepId = this.props.stepId || '';\r\n\r\n\t\tlet content = \"\";\r\n\r\n\t\tif(item.type===\"streaming\"){\r\n\t\t\t//alert(item.url)\r\n            content =  <div>\r\n                         <div id=\"video_div\"><VideoPlayer url={item.url} transcripts={item.transcripts || []} /> </div>\r\n                         <div id=\"content\">{item.description && Parser(item.description)}</div>\r\n                       </div>;\r\n        }else if(item.type===\"message\"){\r\n            content =  <div>\r\n                         <div id=\"content\">{item.description && Parser(item.description)}</div>\r\n                       </div>;\r\n        }else if(item.type===\"book\" || item.type==\"image\" || item.type===\"e-book\"){\r\n            if(item.typeName===\"Download\"){\r\n\t\t\t\tcontent = <div>\r\n\t\t\t\t\t\t\t<div id=\"content\">{item.description && Parser(item.description)}</div>\r\n\t\t\t\t\t\t\t<div id=\"Attachment\"><a href={item.url} >DOWNLOAD ATTACHMENT</a></div>\r\n\t\t\t\t\t\t  </div>;\r\n            }else{\r\n\t\t\t\tthis.routeReplace('/lesson/steps/attachments/pdf/'+ stepId + '/details/' + item.id)}\r\n                // content = <div>\r\n\t\t\t\t// \t\t\t<div id=\"content\">{item.description && Parser(item.description)}</div>\r\n\t\t\t\t// \t\t\t<div id=\"Attachment\"><a onClick={() => this.routeChange('/lesson/steps/attachments/pdf/'+ stepId + '/details/' + item.id)}>VIEW ATTACHMENT</a></div>\r\n\t\t\t\t// \t\t  </div>;\r\n            // }\r\n            \r\n        }else if(item.type===\"url\"){\r\n\t\t\tlet url = item.url;\r\n\t\t\tif(url.match(/youtube\\.com/)){\r\n\t\t\t\tcontent = <div id=\"video_div\"><VideoPlayer url={item.url} transcripts={item.transcripts || []} /></div>\r\n\t\t\t}else{\r\n\t\t\t\tcontent = <div>\r\n\t\t\t\t\t\t\t<iframe title={item.name} class=\"url_iframe iframe100\" height=\"76vh\" width=\"100%\" allowfullscreen=\"allowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" msallowfullscreen=\"msallowfullscreen\" oallowfullscreen=\"oallowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\" src={item.url}></iframe>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t}\r\n            \r\n        }else if(item.type===\"quiz\" || item.type===\"test\"){\r\n            content = <div>\r\n\t\t\t\t\t\t<div id=\"content\">{item.name}</div>\r\n\t\t\t\t\t\t<div id=\"Attachment\"><a onClick={() => this.downloadTest(item.id)}>Launch</a></div>\r\n\t\t\t\t\t  </div>;\r\n        }else if(item.type==\"vimeo\"){\r\n            var url = item.url;\r\n            if(url.includes(\"player\")){\r\n              url = item.url;\r\n            }else{\r\n              url = new URL(item.url);\r\n              url = url.pathname.substring(1);\r\n              url = url.substring(0, url.lastIndexOf(\"/\") + 1);\r\n              url = \"https://player.vimeo.com/video/\"+url;\r\n            }\r\n\t\t\tcontent =   <iframe className=\"vimeoPlayer\" title={item.name} height=\"300\" width=\"100%\" src={url} allowfullscreen=\"allowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" msallowfullscreen=\"msallowfullscreen\" oallowfullscreen=\"oallowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\"></iframe> \r\n\t\t\t//content = <VideoPlayer url={url} transcripts={item.transcripts || []} />\r\n\t\t\t//XAPIUtils.track(item);\r\n        }else if(item.type==\"ppt\"){\r\n            var url = \"https://view.officeapps.live.com/op/embed.aspx?src=\" + item.url;\r\n            content = <iframe className=\"pptIframe\" title={item.name} height=\"500\" width=\"100%\" src={url} ></iframe> \r\n        }else if(item.typeName==\"OnlineMeeting\" || item.typeName==\"ZoomMeeting\"){\r\n\t\t\t    item.url ?\r\n\t\t\t      content =      <><br />\r\n\t\t\t\t\t\t\t\t\t<div class=\"card-columns\">\r\n\t\t\t\t\t\t\t\t\t\t<div  className=\"card bg-info\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-center text-white\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>{item.name}</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"float-left text-white\">{item.startDateTime+' - '+item.endDateTime}</span><br/><br /> \r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\titem.url && \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"btn btn-primary float-right\"  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={item.url} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{padding: '1px 5px '}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={ faVideo }  size = 'lg' color='#fff'/> &nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tOnline Class\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t:\r\n\t\t\t\tcontent = \r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<div className=\"learning_module_timetable\"><TimeTable /></div>\r\n\t\t\t\t\t\t</>\r\n\t\t}else if(item.typeName==\"ScormCourse\"){\r\n\r\n\t\t\tlet user = JSON.parse(localStorage.getItem('user')) || [];\r\n\t\t\tvar tenant = localStorage.getItem('tenant') || Config.siteTitle\r\n\t\t\tcontent =      <>\r\n\t\t\t                   <br /><br /><br />\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\titem.url && \r\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"btn btn-primary\" onClick={() => this.openLink(Config.siteUrl + tenant +  item.url + '&token='+ user.token)}  \r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{padding: '1px 5px '}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={ faExternalLinkAlt }  size = 'lg' color='#fff'/> &nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t\tLaunch\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</>\r\n\t\t}\r\n\t\tXAPIUtils.track(item);\r\n\r\n\t\treturn(\r\n\t\t\t<>\r\n\t\t\t    <Card>\r\n                  <Card.Body style={{padding:'0.25rem', border: 'none' }}>\r\n                      {content} \r\n                  </Card.Body>\r\n                </Card>\r\n\t\t\t\t<br /> <br />  <br /> <br />\r\n\t\t\t</>\r\n\t\t);\r\n    }\r\n}","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\horizontal-date-picker\\HorizontalDatePicker.js",["1501","1502","1503","1504","1505","1506","1507","1508","1509","1510"],"import React, { useState, useEffect } from \"react\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport \"./HorizontalDatePicker.css\";\r\nimport {\r\n  format,\r\n  addWeeks,\r\n  subWeeks,\r\n  addDays,\r\n  subDays,\r\n  isSameDay,\r\n  isBefore,\r\n  getDate\r\n} from \"date-fns\";\r\n\r\nexport default React.memo(function HorizontalDatePicker({\r\n  enableDays,\r\n  enableScroll,\r\n  selectedDay,\r\n  customSelectedDate\r\n}) {\r\n  const [selectedDate, setSelectedDate] = useState(customSelectedDate?customSelectedDate:new Date());\r\n  const [headingDate, setHeadingDate] = useState(customSelectedDate?customSelectedDate:new Date());\r\n  const [currentWeek, setCurrentWeek] = useState(customSelectedDate?customSelectedDate:new Date());\r\n  const [currentDate] = useState(customSelectedDate?customSelectedDate:new Date());\r\n  const scrollWidth = 250;\r\n  enableScroll = enableScroll || false;\r\n  enableDays = enableScroll === true ? enableDays || 90 : 7;\r\n  const heading_dateFormat = \"MMM yyyy\";\r\n\r\n  useEffect(() => {\r\n    setSelectedDate(customSelectedDate)\r\n    setHeadingDate(customSelectedDate)\r\n    setCurrentWeek(customSelectedDate)\r\n  }, [customSelectedDate]);\r\n\r\n  useEffect(() => {\r\n    //console.log(headingDate);\r\n  }, [headingDate]);\r\n\r\n  const applyStyles = day => {\r\n    const classes = [];\r\n    if (isSameDay(day, selectedDate)) {\r\n      classes.push(\" date-day-Item-selected\");\r\n    }\r\n    if(!isSameDay(day, currentDate)) {\r\n      if (isBefore(day, currentDate)) {\r\n        classes.push(\" date-day-item-disabled\");\r\n      }\r\n    }\r\n    return classes.join(\" \");\r\n  };\r\n\r\n  const _handlePosition = (pos, date) => {\r\n    let currentPosition = pos.currentPosition;\r\n    let previousPosition = pos.previousPosition;\r\n\r\n    if (previousPosition == \"inside\" && currentPosition == \"above\") {\r\n      setHeadingDate(date);\r\n    }\r\n    if (previousPosition == \"above\" && currentPosition == \"inside\") {\r\n      setHeadingDate(addDays(date, -1));\r\n    }\r\n  };\r\n\r\n  const _verticalList = () => {\r\n    const _dayFormat = \"E\";\r\n    const _dateFormat = \"dd\";\r\n    const _monthFormat = \"MMM\";\r\n    const _verticalListItems = [];\r\n    const _startDay = subDays(currentWeek, 1);\r\n\r\n    for (let i = 0; i < enableDays; i++) {\r\n      let _day = format(addDays(_startDay, i), _dayFormat);\r\n      let _date = format(addDays(_startDay, i), _dateFormat);\r\n      let _month = format(addDays(_startDay, i), _monthFormat);\r\n\r\n      _verticalListItems.push(\r\n        <Waypoint\r\n          key={i}\r\n          horizontal={true}\r\n          onPositionChange={pos =>\r\n            _date == 1 ? _handlePosition(pos, addDays(_startDay, i)) : \"\"\r\n          }\r\n        >\r\n          <div className=\"wrapper\">\r\n            { /*format(addDays(_startDay, i), _dateFormat) == 1 ? (\r\n              <div className=\"scroll-head\">\r\n                {format(addDays(_startDay, i), \"MMM\")}\r\n              </div>\r\n            ) : (\r\n              <div className=\"blank-space-div\"></div>\r\n            ) */}\r\n            <div\r\n              className={`datepicker-date-day-Item wrapper ${applyStyles(\r\n                addDays(_startDay, i)\r\n              )}`}\r\n              onClick={() => onDateClick(addDays(_startDay, i))}\r\n            >\r\n              <div className=\"datepicker-day-label \">{_day}</div>\r\n              <div className=\"datepicker-date-label ripple \">{_date}</div>\r\n            </div>\r\n          </div>\r\n        </Waypoint>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        id=\"container\"\r\n        className={\r\n          enableScroll === true\r\n            ? \" datepicker-datelist-scrollable\"\r\n            : \" datepicker-dateList\"\r\n        }\r\n      >\r\n        {_verticalListItems}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onDateClick = day => {\r\n    setSelectedDate(day);\r\n    selectedDay(day);\r\n  };\r\n\r\n  const nextScroll = () => {\r\n    enableScroll\r\n      ? (document.getElementById(\"container\").scrollLeft += scrollWidth)\r\n      : setCurrentWeek(addWeeks(currentWeek, 1));\r\n  };\r\n\r\n  const prevScroll = () => {\r\n    enableScroll\r\n      ? (document.getElementById(\"container\").scrollLeft -= scrollWidth)\r\n      : setCurrentWeek(subWeeks(currentWeek, 1));\r\n  };\r\n\r\n  return (\r\n    <div className=\"datepicker-strip\">\r\n      <div className=\"h-datepicker\">\r\n        \r\n        {_verticalList()}\r\n        \r\n      </div>\r\n      <span className=\"datepicker-month-label \">\r\n        {format(selectedDate, \"dd MMM yyy\")}\r\n      </span>\r\n    </div>\r\n  );\r\n\r\n  /*return (\r\n    <div className=\"datepicker-strip\">\r\n      <span className=\"datepicker-month-label \">\r\n        {format(selectedDate, \"dd MMM yyy\")}\r\n      </span>\r\n      <div className=\"datepicker\">\r\n        <div className=\"wrapper\">\r\n          <div className=\"scroll-head\">{format(headingDate, \"MMM\")}</div>\r\n          <div className=\"button-previous\">\r\n            {\" \"}\r\n            <button className=\"datepicker-button-previous\" onClick={prevScroll}>\r\n              &#10132;\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {_verticalList()}\r\n        <div className=\"wrapper\">\r\n          <div className=\"blank-space-div\"></div>\r\n\r\n          <div className=\"button-previous\">\r\n            {\" \"}\r\n            <button className=\"datepicker-button-next\" onClick={nextScroll}>\r\n              &#10132;\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );*/\r\n});\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\proctored\\index.jsx",["1511","1512"],"import React, { Component } from 'react';\r\n\r\nclass Proctored extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tenant: props.tenant,\r\n      testId : props.testId,\r\n      userId : props.userId,\r\n      bucketName : props.bucketName,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let tenant = this.state.tenant;\r\n    let testId = this.state.testId;\r\n    let userId = this.state.userId;\r\n    let bucketName = this.state.bucketName;\r\n    let url = \"https://proctoring-webcam.edusquares.com/index.html?tenant=\"+tenant+\"&testId=\"+testId+\"&userId=\"+userId+\"&bucketName=\"+bucketName+\"&version=13\";\r\n    //return (<iframe title=\"pdf\" class=\"iframe100\" width=\"100%\" src={this.state.url}></iframe>);\r\n    return (<iframe src={url} allow=\"camera *;microphone *\"  frameborder=\"0\" class=\"proctoring\"></iframe>);\r\n  }\r\n}\r\n\r\nexport default Proctored","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test-player\\components\\Question.jsx",["1513","1514","1515","1516"],"import React, {Component} from 'react';\r\nimport {QUESTION_TYPES} from \"./Types\"\r\n\r\nexport default class Question extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\t}\r\n    \r\n    render(){\r\n\t\tlet question = this.props.question;\r\n        let opt =[];\r\n\t\tlet list_choices = []; let list_matches = [];\r\n\t\tlet aplpha =  ['A','B','C','D','E','F','G','H'];\r\n\t\tlet aplpha2 = ['P','Q','R','S','T','U','V','W'];\r\n\t\tif(question.questionCategory == QUESTION_TYPES[5].value){\r\n\t\t\tquestion.choices.map((option,index) => \r\n\t\t\t\tlist_choices.push(<tr key={index}>\r\n\t\t\t\t\t\t<td className=\"choiceString\"><p>{option.choiceString}. </p></td>\r\n\t\t\t\t\t\t<td><div dangerouslySetInnerHTML={{ __html:option.name}} /></td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)\r\n\t\t\t)\r\n\r\n\t\t\tquestion.matches.map((option,index) => \r\n\t\t\t\tlist_matches.push(<tr key={index}>\r\n\t\t\t\t\t\t\t\t\t<td className=\"choiceString\"><p>{option.choiceString}.</p></td>\r\n\t\t\t\t\t\t\t\t\t<td><div dangerouslySetInnerHTML={{ __html:option.name}} /></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t)\r\n\r\n\t\t\topt.push(\r\n\t\t\t\t<div className=\"mtf_statement\">\r\n\t\t\t\t\t<table className=\"mtf_statement_table\">\r\n\t\t\t\t\t<tr className=\"mtf_statement_head\">\r\n\t\t\t\t\t\t<td colspan=\"2\">\r\n\t\t\t\t\t\t\t\t<tr align=\"center\"><td colspan=\"2\"><b>Column I</b></td></tr>\r\n\t\t\t\t\t\t\t\t{list_choices}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td colspan=\"2\">\r\n\t\t\t\t\t\t\t\t<tr align=\"center\"><td colspan=\"2\"><b>Column II</b></td></tr>\r\n\t\t\t\t\t\t\t\t{list_matches}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tquestion.choices.map((option,i) => \r\n\t\t\topt.push(<li key={i}>\r\n\t\t\t\t\t<div className=\"optionsro\">( {option.choiceString} )</div>\r\n\t\t\t\t\t<div><p dangerouslySetInnerHTML={{ __html:option.name}}></p></div>\r\n\t\t\t\t</li>)\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"test-player\">\r\n\t\t\t\t<div className=\"qstatement_div\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div id=\"qstatement\">\r\n\t\t\t\t\t\t<p dangerouslySetInnerHTML={{ __html:question.statement}}></p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<ul className=\"options\">\r\n\t\t\t\t\t\t\t{opt}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n    }\r\n}","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\lecode-games\\Components\\UpcomingGameDetails.jsx",["1517","1518","1519","1520","1521","1522"],"import React, {Component} from 'react';\r\nimport './styles.css';\r\nimport {Link} from 'react-router-dom'\r\nimport useGetData from '../../../_services/useGetData';\r\nimport Config from '../../../_config/config';\r\nimport { ILoader } from '../../../_components/iloader/iloader';\r\nimport NoData from '../../../common/NoData';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { BusinessUnitIndex, DesignationIndex, GradeIndex, LocationIndex } from '../../../_constants/variables';\r\n\r\nconst UpcomingGameDetails = ({color,enquiryId}) => {\r\n    const [message,setMessage] = useState('')\r\n    const [batchIds,setBatchIds] = useState('0')\r\n    const {data,loading,error} = useGetData(Config.getBatchforEnquiry+enquiryId+'/batches/v2?includeNoOfStudents=true',setMessage);\r\n    const [remainingLearners,setRemainingLearners] = useState()\r\n    const {data:LearnersData,loading:loading1,error:LearnersError} = useGetData(Config.getLearnersforBatchId+batchIds+'/students')\r\n\r\n    useEffect(() => {\r\n        data && data?.length > 0 && setBatchIds(data.map(d => d.id))\r\n    },[data])\r\n        \r\n    // useEffect(() => {\r\n    //         const remainingLearners1 = []\r\n    //         LearnersData && enquiryId?.length > 0 && remainingLearners1.push(...remainingLearners1,...LearnersData.filter(a=> String(enquiryId) !== a.enquiryId));\r\n    //         remainingLearners1 &&  setRemainingLearners(remainingLearners1)\r\n    //         console.log('------------')\r\n    //         console.log(LearnersData)\r\n    //         console.log(enquiryId)\r\n    //         console.log(remainingLearners1)\r\n    //         console.log('------------')\r\n    // },[LearnersData,enquiryId])\r\n    const renderBody = () => {\r\n\r\n            if(data.length > 0)\r\n            {\r\n\r\n                return data.map((d,i) => (\r\n                    <tr key={i}>\r\n                        <td >{d.schoolName}</td>\r\n                        <td>{d.courseName}</td>\r\n                        <td>{d?.instructors.map((i,j) => <p key={j}>{i.name}</p>)}</td>\r\n                        <td>{d.startDate}</td>\r\n                        <td>{d.noOfStudents}</td>\r\n                    </tr>\r\n                ))\r\n            \r\n            }\r\n            else return <NoData/>\r\n        }\r\n    const renderLearnerDetails = () => {\r\n        if(LearnersData.length > 0)\r\n        {\r\n            return LearnersData.map((r,i) => {\r\n                const Grade = r?.customFields?.find(c => c.index === GradeIndex)?.value\r\n                const Designation = r?.customFields?.find(c => c.index ===  DesignationIndex)?.value\r\n                const Location = r?.customFields?.find(c => c.index === LocationIndex)?.value\r\n                const BusinessUnit = r?.customFields?.find(c => c.index === BusinessUnitIndex)?.value\r\n                return( \r\n                    <tr key={i}>\r\n                        <td>{r?.name}</td>\r\n                        <td>{Grade}</td>\r\n                        <td>{Designation}</td>\r\n                        <td>{Location}</td>\r\n                        <td>{BusinessUnit}</td>\r\n                        <td>{r?.email}</td>\r\n                        <td>{r?.mobile}</td>\r\n                        <td><button className=\"decline\">Give FeedBack</button></td>\r\n\r\n                    </tr>\r\n                )\r\n            })\r\n        }\r\n        else return <NoData/>\r\n    }\r\n         return ( \r\n            <div className=\"games\">\r\n                <ILoader\r\n                loadingText=\"Please Wait\"\r\n                isShow={loading}\r\n                loaderStyle= ''\r\n                color={color}\r\n                >\r\n                </ILoader>\r\n                {error && <div>Error while fetching gameplay details: {error}</div>}\r\n                {!loading && !error && \r\n                <div className=\"blur\">\r\n                <div className=\"top-buttons reverse\">\r\n                    {/* <button className=\"brochure back1\"><Link to='/'>Back</Link></button> */}\r\n                \r\n                </div>\r\n                <div className=\"top-buttons\">\r\n                    <h2>Details of Upcoming Game Plays</h2>\r\n                    <button className={`accept ${color}`}><Link to='/'>Game Brochure</Link></button>\r\n                </div>\r\n                <table className={`styled-table ${color}-table`}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Originator</th>\r\n                            <th>Product Name</th>\r\n                            <th>Facilitator</th>\r\n                            <th>Game play Date</th>\r\n                            <th>No of Participants</th>\r\n                            {/* <th colSpan={1}>&nbsp;</th> */}\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data && renderBody()}\r\n                    </tbody>\r\n                </table>\r\n                <table className=\"styled-table long-table blue-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Learner</th>\r\n                            <th>Grade</th>\r\n                            <th>Designation</th>\r\n                            <th>Location</th>\r\n                            <th>Business</th>\r\n                            <th>Email Id</th>\r\n                            <th>Mobile</th>\r\n                            <th>Feedback</th>\r\n                            {/* <th>Fecilitator Feedback</th> */}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                     {LearnersData && renderLearnerDetails()}\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"top-buttons bottom-buttons\">\r\n                    <button className={`accept ${color}`}><Link to='/pre-play'>Pre-play learnings</Link></button>\r\n                    <button className={`accept ${color}`}><Link to='/post-play'>Post-play learnings</Link></button>\r\n                    <button className={`accept ${color}`}><Link to='/video-recordings'>Video recordings</Link></button>\r\n                    <button className={`accept ${color}`}><Link to='/actionable'>Your Actionable</Link></button>\r\n                    <button className={`accept ${color}`}><Link to='/feedback'>Your Feedback</Link></button>\r\n                </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n\r\n}\r\nexport default UpcomingGameDetails;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\discussion\\components\\Comment.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\lecode-games\\Components\\RegisterGames.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\lecode-games\\Components\\OpenGameDetails.jsx",["1523"],"import React, {Component} from 'react';\r\nimport './styles.css';\r\nimport {Link} from 'react-router-dom'\r\nimport useGetData from '../../../_services/useGetData';\r\nimport Config from '../../../_config/config';\r\nimport { ILoader } from '../../../_components/iloader/iloader';\r\n\r\nconst OpenGameDetails = ({color,enquiryId}) => {\r\n        const {data,loading,error} = useGetData(Config.getBatchforEnquiry+enquiryId);\r\n        const renderBody = () => {\r\n            return data.map((d,i) => (\r\n                <tr key={i}>\r\n                    <td>{d.schoolName}</td>\r\n                    <td>{d.courseName}</td>\r\n                    <td>{d.instructorName}</td>\r\n                    <td>{d.startDate}</td>\r\n                    <td className=\"dns\">D.N.F</td>\r\n                </tr>\r\n            ))\r\n        }\r\n        return ( \r\n            <div className=\"games\">\r\n                <ILoader\r\n                loadingText=\"Please Wait\"\r\n                isShow={loading}\r\n                loaderStyle= ''\r\n                color={color}\r\n                >\r\n                </ILoader>\r\n                {error && <div>Error while fetching gameplay details: {error}</div>}\r\n                {!loading && !error && \r\n                <div className=\"blur\">\r\n                <div className=\"top-buttons reverse\">\r\n                    {/* <button className=\"brochure back1\"><Link to='/'>Back</Link></button> */}\r\n                \r\n                </div>\r\n                <div className=\"top-buttons\">\r\n                    <h2>Details of Open Game Plays</h2>\r\n                    <button className={`accept ${color}`}><Link to='/'>Game Brochure</Link></button>\r\n                </div>\r\n                <table className={`styled-table ${color}-table`}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Originator</th>\r\n                            <th>Product Name</th>\r\n                            <th>Facilitator</th>\r\n                            <th>Game play Date</th>\r\n                            <th>No of Participants</th>\r\n                            {/* <th colSpan={1}>&nbsp;</th> */}\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                       {data && renderBody()\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                <table className=\"styled-table long-table pink-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Learner</th>\r\n                            <th>Grade</th>\r\n                            <th>Designation</th>\r\n                            <th>Location</th>\r\n                            <th>Business</th>\r\n                            <th>Email Id</th>\r\n                            <th>Mobile</th>\r\n                            <th>Business Style</th>\r\n                            <th>Feedback</th>\r\n                            {/* <th>Fecilitator Feedback</th> */}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>AbhiramK</td>\r\n                            <td>S+</td>\r\n                            <td>Developer</td>\r\n                            <td>Vskp</td>\r\n                            <td>2</td>\r\n                            <td>abhiram@ conceptwaves.com</td>\r\n                            <td>999999999</td>\r\n                            <td>Lucrative</td>\r\n                            <td>Pending</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>AbhiramK</td>\r\n                            <td>S+</td>\r\n                            <td>Developer</td>\r\n                            <td>Vskp</td>\r\n                            <td>2</td>\r\n                            <td>abhiram@ conceptwaves.com</td>\r\n                            <td>999999999</td>\r\n                            <td>Lucrative</td>\r\n                            <td>Pending</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>AbhiramK</td>\r\n                            <td>S+</td>\r\n                            <td>Developer</td>\r\n                            <td>Vskp</td>\r\n                            <td>2</td>\r\n                            <td>abhiram@ conceptwaves.com</td>\r\n                            <td>999999999</td>\r\n                            <td>Lucrative</td>\r\n                            <td>Pending</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"top-buttons bottom-buttons\">\r\n                    <button className={`accept ${color}`}><Link to='/pre-play'>Pre-play learnings</Link></button>\r\n                    <button className={`accept ${color}`}><Link to='/post-play'>Post-play learnings</Link></button>\r\n                    <button className={`accept ${color}`}><Link to='/video-recordings'>Video recordings</Link></button>\r\n                    <button className={`accept ${color}`}><Link to='/actionable'>Your Actionable</Link></button>\r\n                    <button className={`accept ${color}`}><Link to='/feedback'>Your Feedback</Link></button>\r\n                </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n}\r\nexport default OpenGameDetails","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\lecode-games\\Components\\CompletedGameDetails.jsx",["1524"],"import React, {Component} from 'react';\r\nimport './styles.css';\r\nimport {Link} from 'react-router-dom'\r\nimport useGetData from '../../../_services/useGetData';\r\nimport Config from '../../../_config/config';\r\nimport { ILoader } from '../../../_components/iloader/iloader';\r\n\r\nconst CompletedGameDetails = ({color,enquiryId}) => {\r\n\r\n       const {data,loading,error} = useGetData(Config.getBatchforEnquiry+enquiryId);\r\n       const renderBody = () => {\r\n            return data.map((d,i) => (\r\n                <tr key={i}>\r\n                    <td>{d.schoolName}</td>\r\n                    <td>{d.courseName}</td>\r\n                    <td>{d.instructorName}</td>\r\n                    <td>{d.startDate}</td>\r\n                    <td className=\"dns\">D.N.F</td>\r\n                </tr>\r\n            ))\r\n        }   \r\n        return ( \r\n            <div className=\"games\">\r\n                {loading && <ILoader\r\n                loadingText=\"Please Wait\"\r\n                isShow={loading}\r\n                loaderStyle= ''\r\n                color={color}\r\n                >\r\n                </ILoader>}\r\n                {error && <div>Error while fetching gameplay details: {error}</div>}\r\n                {(!loading && !error) && \r\n                <div className=\"blur\">\r\n                <div className=\"top-buttons reverse\">\r\n                    {/* <button className=\"brochure back1\"><Link to='/'>Back</Link></button> */}\r\n                \r\n                </div>\r\n                <div className=\"top-buttons\">\r\n                    <h2>Details of Completed Game Plays</h2>\r\n                    <button className={`accept ${color}`}><Link to='/'>Game Brochure</Link></button>\r\n                </div>\r\n                <table className={`styled-table ${color}-table`}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Originator</th>\r\n                            <th>Product Name</th>\r\n                            <th>Facilitator</th>\r\n                            <th>Game play Date</th>\r\n                            <th>No of Participants</th>\r\n                            {/* <th colSpan={1}>&nbsp;</th> */}\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                       {data && renderBody()}\r\n                    </tbody>\r\n                </table>\r\n                <table className=\"styled-table long-table green-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Learner</th>\r\n                            <th>Grade</th>\r\n                            <th>Designation</th>\r\n                            <th>Location</th>\r\n                            <th>Business</th>\r\n                            <th>Email Id</th>\r\n                            <th>Mobile</th>\r\n                            <th>Business Style</th>\r\n                            <th>Feedback</th>\r\n                            {/* <th>Fecilitator Feedback</th> */}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>AbhiramK</td>\r\n                            <td>S+</td>\r\n                            <td>Developer</td>\r\n                            <td>Vskp</td>\r\n                            <td>2</td>\r\n                            <td>abhiram@ conceptwaves.com</td>\r\n                            <td>999999999</td>\r\n                            <td>Lucrative</td>\r\n                            <td>Pending</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>AbhiramK</td>\r\n                            <td>S+</td>\r\n                            <td>Developer</td>\r\n                            <td>Vskp</td>\r\n                            <td>2</td>\r\n                            <td>abhiram@ conceptwaves.com</td>\r\n                            <td>999999999</td>\r\n                            <td>Lucrative</td>\r\n                            <td>Pending</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>AbhiramK</td>\r\n                            <td>S+</td>\r\n                            <td>Developer</td>\r\n                            <td>Vskp</td>\r\n                            <td>2</td>\r\n                            <td>abhiram@ conceptwaves.com</td>\r\n                            <td>999999999</td>\r\n                            <td>Lucrative</td>\r\n                            <td>Pending</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"top-buttons bottom-buttons\">\r\n                    <button className={`accept ${color}`}><Link to='/pre-play'>Pre-play learnings</Link></button>\r\n                    <button className={`accept ${color}`}><Link to='/post-play'>Post-play learnings</Link></button>\r\n                    <button className={`accept ${color}`}><Link to='/video-recordings'>Video recordings</Link></button>\r\n                    <button className={`accept ${color}`}><Link to='/actionable'>Your Actionable</Link></button>\r\n                    <button className={`accept ${color}`}><Link to='/feedback'>Your Feedback</Link></button>\r\n                </div>\r\n               </div>} \r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\nexport default CompletedGameDetails\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\lecode-games\\Components\\GamePlaysInvitations.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\epub\\ReactReader\\style.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\epub\\ReactReader\\ReactReader.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\components\\Model.jsx",["1525"],"import React, {Component} from 'react';\r\nimport CKEditor from 'ckeditor4-react';\r\nimport { Modal, Form } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPaperPlane, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport UserService from \"../../../_services/UserService\";\r\nimport Loader from './../../../_components/loader/loader';\r\nimport ApiService from \"../../../_services/ApiService\";\r\n\r\nexport default class Model extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: null,\r\n            loading: false,\r\n        };\r\n        this.timeout =  0;\r\n        this.reloadNotes = this.reloadNotes.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.show !== prevProps.show) {\r\n            this.setState({\r\n                message : null\r\n            });\r\n            this.props.show && this.reloadNotes()\r\n        }\r\n    }\r\n    \r\n    modeShow(show){\r\n        this.props.modeShow(show);\r\n    }\r\n\r\n    updateEditor = (e) => {\r\n        const v = e.editor.getData();\r\n        const k = \"message\";\r\n        let message = {...this.state.message}\r\n        message = v;\r\n        this.setState({message: message});\r\n    }\r\n\r\n    reloadNotes() {\r\n        this.setState({ loading: true }, () => {\r\n          ApiService.loadStudyResourcesNotes(this.props.resourceId, this.props.type)\r\n          .then((res) => {\r\n              console.log(res.data);\r\n              if(this.timeout) clearTimeout(this.timeout);\r\n                this.timeout = setTimeout(() => {\r\n                    this.setState({\r\n                        loading: false,\r\n                        message : res.data.note\r\n                    }); \r\n              }, 100);\r\n          });\r\n        });\t\r\n    }\r\n\r\n    postNotes() {\r\n        let message = this.state.message;\r\n        if(message && message.trim().length>0) {\r\n            let commentJSON={\r\n                resourceId : this.props.resourceId,\r\n                note\t: message,\r\n                userId  : UserService.getUserId()\r\n            }\r\n\r\n            this.setState({ loading: true }, () => {\r\n                ApiService.saveStudyResourcesNotes(commentJSON, this.props.type)\r\n                .then((res) => {\r\n                    this.setState({\r\n                      loading: false,\r\n                      data: res.data,\r\n                    });\r\n                    this.props.modeShow(false);\r\n                });\r\n            });\t\r\n                \r\n        }  \r\n    }\r\n\r\n\r\n    render(){\r\n        let CURRENT_PORTLET = JSON.parse(localStorage['portlet']);\r\n        const { loading } = this.state;\r\n        return (\r\n            <>\r\n            <Modal show={this.props.show} size=\"lg\">\r\n            <Modal.Header className={`ilearn-plain-header text-white ${CURRENT_PORTLET.class}`}>\r\n            <Modal.Title> {this.props.title} </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>                \r\n                <Form>                    \r\n                    <Form.Group controlId=\"message\">\r\n                        <Form.Label></Form.Label>\r\n                        <CKEditor\r\n                            name=\"message\"\r\n                            placeholder=\"Compose message\"\r\n                            data={this.state.message}\r\n                            onChange={this.updateEditor}\r\n                        />\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n               <button type=\"button\" className=\"btn btn-outline-danger\" \r\n                    onClick={() => this.modeShow(false)}\r\n                >\r\n                    <FontAwesomeIcon icon={ faTimes }/>\r\n                    &nbsp; Cancel \r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-outline-primary\" \r\n                    onClick={() => this.postNotes(false)}\r\n                >\r\n                    Save &nbsp;\r\n                    <FontAwesomeIcon icon={ faPaperPlane }/>\r\n                </button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n            {loading ?  <Loader />: ''}\r\n            </>\r\n        );\r\n    }\r\n}","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\epub\\EpubView\\style.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\epub\\EpubView\\EpubView.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\video-player\\vdocipher\\index.jsx",["1526","1527"],"import React, { Component } from \"react\";\r\n\r\nclass Vdocipher extends Component { \r\n\r\n\tconstructor(props) {\r\n        super(props);        \r\n    }\r\n    \r\n    componentDidMount() {\r\n        var video = new window.VdoPlayer({\r\n            otp: \"20160313versASE323bAJBVwkHZadw1VbLVIVSFAVD4skYOkEzRkHu7RMwx7WQDP\",\r\n            playbackInfo: btoa(JSON.stringify({\r\n              videoId: \"45830519a97e346e0f01d46f8bbcc54c\"\r\n            })),\r\n            theme: \"9ae8bbe8dd964ddc9bdb932cca1cb59a\",\r\n            // the container can be any DOM element on website\r\n            container: document.querySelector( \"#embedBox\" ),\r\n          });\r\n          \r\n          // you can directly call any methods of VdoPlayer class from here. e.g:\r\n          // video.addEventListener(`load`, () => {\r\n          //   video.play(); // this will auto-start the video\r\n          //   console.log('loaded');\r\n          // });\r\n    }\r\n    \r\n    render() {\r\n        return ( \r\n            <div id=\"embedBox\" style={{height: '360px',width:'640px',maxWidth:'100%'}}></div>              \r\n        );\r\n    }\r\n}\r\n\r\n  \r\nexport default Vdocipher;","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\home\\mobile\\index.jsx",["1528"],"import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ApiService from \"../../../_services/ApiService\";\r\nimport \"./style.css\";\r\nimport cw_logo from \"../images/cw_logo.png\";\r\nimport Config from \"../../../_config/config\";\r\nimport {ILoader} from './../../../_components/iloader/iloader';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nclass MobileHome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      message: null,\r\n      loading: false,\r\n      loaderStyle:'',\r\n    };\r\n    this.reloadInstitute = this.reloadInstitute.bind(this);\r\n    \r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.reloadInstitute();\r\n\r\n    /*window.addEventListener('beforeinstallprompt', (event) => {\r\n      event.preventDefault();\r\n      // if no localStorage is set, first time visitor\r\n        // show the prompt banner\r\n        prompt.style.display = 'block';\r\n        // store the event for later use\r\n        let installEvent = event;\r\n    });*/\r\n  }\r\n\r\n  promptToInstall = () => {\r\n    let installEvent;\r\n    prompt.style.display = 'none';\r\n    // trigger the prompt to show to the user\r\n    installEvent.prompt();  \r\n  };\r\n\r\n  reloadInstitute() {\r\n\r\n      let paramsString = this.props.location.search;\r\n      const params = new URLSearchParams(paramsString);\r\n      let token =  params.get('token');\r\n\r\n      this.setState({ loading: true, loaderStyle: token ? 'dark':'' }, () => {\r\n        ApiService.fetchHome()\r\n        .then((res) => {\r\n            this.setState({\r\n              loading: false,\r\n              list: res.data.data\r\n            });\r\n\t\t\t      document.title = this.state.list.instituteName;\r\n            localStorage.setItem('siteTitle', this.state.list.instituteName);\r\n            localStorage.setItem('instituteHomeLink', this.state.list.instituteHomeLink);\r\n            if(token){ this.loginToken(token); }\r\n        });\r\n      });\t\r\n  }\r\n\r\n\r\n  routeChange = (e) => {\r\n    let path = `login`;\r\n    //this.props.history.push(path);\r\n    this.props.history.push({\r\n      pathname: path,\r\n      state: { loginPageConfig: this.state.list.loginPageConfig }});\r\n  };\r\n\r\n  render() {\r\n    let auth = JSON.parse(localStorage.getItem('user'));\r\n    if(auth != null){\r\n      let paramsString = this.props.location.search;\r\n      const params = new URLSearchParams(paramsString);\r\n      let token =  params.get('token');\r\n      if(!token){\r\n        this.props.history.push('dashboard');\r\n      }  \r\n    }\r\n\r\n    const { Text1 } = this.state.list?.loginPageConfig || '';\r\n\r\n\r\n    return (\r\n      <div className=\"home\">\r\n        {\r\n            <Container fluid>\r\n              <div className=\"institute-top\" style={{background: `url(${Config.cover}) no-repeat transparent`,  backgroundSize: 'cover', backgroundPosition: 'center'}}></div>\r\n              <div className=\"institute-top-logo\" style={{background: `url(${Config.logo}) no-repeat transparent`, backgroundSize: '100%'}}></div>\r\n              <div className=\"institute-top-intro\">\r\n                <h4>{this.state.list && this.state.list.instituteName}</h4>\r\n              </div>\r\n              <div className=\"institute-sign-in-btn\">\r\n                <button className=\"primary login button-full ilearn-blue-btn button-md\" onClick={this.routeChange}\r\n                >\r\n                  <span className=\"button-inner\"> SIGN IN </span>\r\n                </button>\r\n              </div>\r\n\r\n              {Text1&&<p className=\"terms-and-conditions\">{Text1}</p>}\r\n              \r\n              {this.renderCard()} \r\n              { this.state.list.address && \r\n                <div className=\"address\">\r\n                <span dangerouslySetInnerHTML={{ __html:this.state.list.address}} />\r\n                </div>\r\n              }\r\n            </Container>\r\n        }\r\n        {this.renderFooter()}\r\n        {this.renderLoader()}\r\n        { \r\n          //this.renderInstallPrompt()\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderCard() {\r\n\t  let data = this.state.list;\r\n\t\treturn  <div className=\"hashbg home-card\"> \r\n\t\t{\r\n\t\t\t data.cards && data.cards.map((item, index) => {\r\n\t\t\t\t\treturn ( \r\n              <Button key={index} variant=\"primary login button-full ilearn-white-btn button-md\" onClick={() =>this.routeInstituteCard(item)}>\r\n                <img src={Config.logo} alt={item.name} /> {item.name}\r\n              </Button>\r\n\t\t\t\t\t)\r\n\t\t\t  })\r\n    }\r\n    </div>\r\n  }\r\n\r\n  routeInstituteCard = (card) => {\r\n    //console.log(JSON.stringify(card));\r\n    this.props.history.push({\r\n      pathname: '/instituteCardDetail',\r\n      state: { card: card }});\r\n  };\r\n\r\n\r\n  renderInstallPrompt() {\r\n    return (\r\n      <div className=\"ath-container banner-bottom-center prompt\" style={{display:\"block\" }}>\r\n          <div className=\"ath-banner\">\r\n            <div className=\"ath-banner-cell\"> <img src={Config.logo} className=\"ath-prompt-logo\" style={{width:\"50px\" }} /> </div>\r\n            <div className=\"ath-banner-title\">Install this PWA?</div>\r\n            <div className=\"ath-banner-cell\">\r\n              <button type=\"button\" class=\"btn btn-cancel btn-link prompt__close\">Not Now</button>\r\n            </div>\r\n            <div className=\"ath-banner-cell\">\r\n              <button type=\"button\" className=\"btn btn-install btn-success prompt__install\" onClick={this.promptToInstall}>Install</button>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n\r\n  loginToken(token) {\r\n    if (token) {\r\n      if(Config.siteTitle === 'unsat' || Config.siteTitle === 'unsat2') this.dologin(token);\r\n      this.setState({ loading: true, loaderStyle:'dark', connectionErrorMsg:null }, () => {\r\n        ApiService.fetchLoginToken(token)\r\n        .then((res) => {\r\n            if(res.data.status===1) { \r\n                this.setState({ loading: false, loginUserData: res.data.data }, () => {\r\n                    this.dologin();\r\n                }); \r\n            }\r\n            else {\r\n                this.setState({\r\n                    loading: false,\r\n                    errorMessage : res.data.message\r\n                });  \r\n            }\r\n        },\r\n        error => { //ErrorCB\r\n            this.setState({loading:false, \r\n            connectionErrorMsg: Config.CONNECTION_ERROR_MSG});\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  dologin(reqToken = null) {\r\n    console.log(reqToken);\r\n    let loginUserData = this.state.loginUserData;\r\n    var decoded = jwt_decode(loginUserData?.token || reqToken );\r\n    if(reqToken) decoded['token'] = reqToken;\r\n    let paramsString = this.props.location.search;\r\n    const params = new URLSearchParams(paramsString);\r\n    let token =  params.get('token');\r\n    let testId =  params.get('testId');\r\n    let target =  params.get('target')\r\n    if(token || testId){\r\n        localStorage.setItem('user', JSON.stringify(loginUserData || decoded));\r\n        localStorage.setItem('enquiryId', loginUserData?.enquiryId || decoded?.enquiryId);\r\n        localStorage.setItem('tenant', decoded.tenant );\r\n        if(testId){\r\n            this.props.history.push('/TestInstructions/'+testId+'?cat=0');\r\n            //this.props.history.push('/test-instructions/0/'+testId);\r\n        }else if(target){\r\n          this.props.history.push('/'+target);\r\n        }else{\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    else if(loginUserData.otpEnableStatus && loginUserData.otpEnableStatus===1) {\r\n        let _otpValidator = { show:true, \r\n            otpLength: loginUserData.otpLength, \r\n            smsAddress: loginUserData.smsAddress,\r\n            message: loginUserData.otpMessage,\r\n            userId: loginUserData.userId\r\n        }\r\n        this.setState({ otpValidator: _otpValidator });   \r\n    }\r\n    else {\r\n        localStorage.setItem('user', JSON.stringify(loginUserData));\r\n        localStorage.setItem('enquiryId', loginUserData.enquiryId);\r\n        localStorage.setItem('tenant', decoded.tenant);\r\n        this.props.history.push('/');\r\n    }\r\n  }\r\n\r\n  renderLoader() {\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n        <ILoader\r\n            loadingText={_loadingText}\r\n            isShow={this.state.loading}\r\n            loaderStyle={this.state.loaderStyle}\r\n            >\r\n        </ILoader>\r\n    )\r\n  }\r\n\r\n  renderFooter() {\r\n    return (\r\n      <div className=\"institute-cards hashbg\">\r\n        <div className=\"\">\r\n          <div className=\"institute-top-intro\">\r\n            <h6> Powered by </h6>\r\n            <img src={cw_logo} alt=\"logo\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default MobileHome;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\home\\desktop\\index.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test-player\\components\\Types.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\video-player\\MediaElementVideoPlayer.jsx",["1529","1530","1531","1532"],"import React from \"react\";\r\nimport MediaElement from './MediaElement';\r\n\r\nclass MediaElementVideoComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    getVideoType(videoUrl) {\r\n        let extension;\r\n        let type = \"video/mp4\";\r\n        if(videoUrl.includes(\"youtube\")) {\r\n            extension = \"youtube\";\r\n        }\r\n        else if(videoUrl.includes(\"vimeo\")) {\r\n            extension = \"vimeo\";\r\n        }\r\n        else {\r\n            extension = videoUrl.split('.').pop();\r\n        }\r\n        console.log(\"extension: \"+extension)\r\n        switch (extension){  \r\n            case 'mp4':\r\n                type = \"video/mp4\";     \r\n                break;\r\n            case 'm3u8':\r\n                type = \"video/hls\";   \r\n                break;\r\n            case 'webm':\r\n                type = \"video/webm\";\r\n                break;\r\n            case 'ogg':\r\n                type= \"video/ogg\"\r\n            case 'youtube':\r\n                type= \"video/youtube\"\r\n            case 'vimeo':\r\n                type= \"video/vimeo\"\r\n            default:\r\n                type= \"video/\"+extension\r\n        }\r\n\r\n        return type;\r\n    }\r\n\r\n    render() {\r\n        console.log(\"MediaElementVideoComponent --> render()...\");\r\n        const videoURL = this.props.videoUrl;\r\n        let type = this.getVideoType(videoURL);\r\n        console.log(\"MediaElementVideoComponent --> type: \"+type);\r\n        let transcripts = this.props.transcripts;\r\n        let _tracks=[];\r\n        if(transcripts) {\r\n            for (let transcript of transcripts) {\r\n                let track = {\r\n                    src: transcript.src,\r\n                    kind: 'subtitles', //subtitles|captions|chapters\r\n                    lang: transcript.lang,\r\n                    label: transcript.label \r\n                }\r\n                _tracks.push(track);\r\n            }\r\n        }\r\n\r\n        const\r\n            sources = [\r\n                {src: videoURL, type: type}\r\n            ],\r\n            config = {startLanguage: 'en'},\r\n            tracks = _tracks\r\n            ;\r\n            \r\n        return ( \r\n            <>\r\n                <MediaElement\r\n                    {...this.props}\r\n                    id='mediaelementvideopalyer1'\r\n                    mediaType=\"video\"\r\n                    preload=\"none\"\r\n                    controls = {type==='video/vimeo'? false : true}\r\n                    width=\"640\"\r\n                    height=\"360\"\r\n                    poster=\"\"\r\n                    sources={JSON.stringify(sources)}\r\n                    options={JSON.stringify(config)}\r\n                    tracks={JSON.stringify(tracks)}\r\n                    onPlayerEvent={this.props.onPlayerEvent}\r\n                />            \r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MediaElementVideoComponent;","S:\\REACT\\Ract-Js\\Frlnce\\src\\_constants\\variables.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_services\\useGetData.js",["1533"],"import { useEffect,useState } from \"react\"\r\nimport FormFunctions from \"../common/FormFunctions\"\r\nimport ApiService from \"./ApiService\"\r\n\r\nconst useGetData = (url,setMessage,count) => {\r\n\r\n    const [loading,setLoading] = useState(true)\r\n    const [data,setData] = useState()\r\n    const [error,setError] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        ApiService.getData(url)\r\n        .then(res => {\r\n            console.log(res)\r\n            return res.data\r\n        })\r\n        .then(data => {\r\n            if(data.status === 1)\r\n            {\r\n                setData(data.data)\r\n            }\r\n            else{\r\n                throw Error(data.data)\r\n            }\r\n            setLoading(false)\r\n            setError(null)\r\n            console.log(data)\r\n        })\r\n        .catch(e => {\r\n            setLoading(false)\r\n            setError(e.message)\r\n        })\r\n    },[count,url])\r\n\r\n    return({data,loading,error})\r\n}\r\n\r\nexport default useGetData;","S:\\REACT\\Ract-Js\\Frlnce\\src\\common\\NoData.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\discussion\\components\\CommentReply.jsx",["1534"],"import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class CommentReply extends Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\t\r\n\t/*componentDidMount() {\r\n        console.log(\"CommentReply --> componentDidMount...\");\r\n    }\r\n    \r\n    shouldComponentUpdate(newProps, newState) {\r\n        console.log(\"CommentReply --> shouldComponentUpdate...\");\r\n        return newState.showReplies != this.state.showReplies\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.data.show !== this.props.data.show) {\r\n          this.setState({\r\n            data: newProps.data\r\n          });\r\n        }\r\n    }*/\r\n\r\n    render() {\r\n        //console.log(\"CommentReply --> render...\");\r\n        const comment = this.props.comment;\r\n        //const commentPermission = this.props.commentPermission;\r\n        return (\r\n\t\t\t<>\r\n            <div key={comment.id} \r\n                className=\"list-group-item list-group-item-action flex-column align-items-start p-1 mt-1\">\r\n                <div className=\"d-flex w-100 justify-content-between\">\r\n                    <div>\r\n                        <img src={comment.userImagePath} className=\"ilearn-avatar\" alt=\"Profile\" />\r\n                        <h5 className=\"mb-1 mt-1 float-left\">{comment.createdBy}</h5>\r\n                    </div>\r\n                    <div>\r\n                        <small>{comment.createdOn}</small>\r\n                        { this.props.moderatorPermission &&\r\n                            <button className=\"btn btn-outline-danger ilearn-icon-button\" \r\n                                onClick={() => this.deleteComment(comment.id,'reply')} >\r\n                                <FontAwesomeIcon icon={ faTrashAlt }/> \r\n                            </button>\r\n                         \r\n                        }\r\n                    </div>\r\n                    \r\n                </div>\r\n                <p className=\"mb-1\"  dangerouslySetInnerHTML={{__html: comment.content}}>                                \r\n                </p>                 \r\n            </div>\r\n\t\t\t</>\r\n        );\r\n    }\r\n\r\n    deleteComment(commentReplyId, type) {\r\n        //console.log(\"CommentReply --> deleteComment...\"+commentReplyId);\r\n        const { onCommentReplyDelete = f => f } = this.props;\r\n        let deleteData={commentId: commentReplyId, type: type}\r\n        onCommentReplyDelete(deleteData);    \r\n    }\r\n\r\n}","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\ConfirmDialog.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\common\\FormFunctions.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\login\\FacebookLoginComponent.jsx",["1535","1536","1537"],"import React, { Component } from \"react\";\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport { OpenLoginTypes } from \"../../_config/config\";\r\n\r\nexport default class FacebookLoginComponent extends Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\t\r\n\t/*componentDidMount() {\r\n        console.log(\"FacebookLogin --> componentDidMount...\");\r\n    }\r\n    \r\n    shouldComponentUpdate(newProps, newState) {\r\n        console.log(\"FacebookLogin --> shouldComponentUpdate...\");\r\n        return newState.showReplies != this.state.showReplies\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.data.show !== this.props.data.show) {\r\n          this.setState({\r\n            data: newProps.data\r\n          });\r\n        }\r\n    }*/\r\n\r\n    render() {\r\n        return (\r\n            <FacebookLogin\r\n                appId=\"553176341502962\"\r\n                autoLoad={false}\r\n                fields=\"name,first_name,last_name,gender,birthday,email,picture\"\r\n                scope=\"public_profile\"\r\n                callback={this.responseFacebook}\r\n                icon=\"fa-facebook\" \r\n                disableMobileRedirect={true} />\r\n        );\r\n    }\r\n\r\n    responseFacebook = (response) => {\r\n        //console.log(\">> FacebookLogin: \"+JSON.stringify(response));\r\n        this.loginWithFacebook(response);\r\n    }\r\n    \r\n    loginWithFacebook(facebookResponse) {\r\n        let postData = {\r\n          \"openId\":facebookResponse.userID,\r\n          \"openLoginType\":OpenLoginTypes.OPEN_LOGIN_TYPE_FACEBOOK,\r\n          \"deviceId\":ApiService.getDeviceId()\r\n        };\r\n        ApiService.openIdLogin(postData)\r\n        .then((res) => {\r\n            //console.log(\"FacebookLogin -> openIdLogin(); res : \"+JSON.stringify(res.data));\r\n            if (res.data.status==1) {\r\n                //console.log(\"FacebookLogin -> openIdLogin : SUCCESS...\");\r\n                if(res.data.data.enquiryId) {\r\n                localStorage.setItem('user', JSON.stringify(res.data.data));\r\n                this.props.history.push('/');\r\n                }        \r\n            } else if(res.data.Buttonstatus==0) {\r\n                console.log(\"FacebookLogin -> openIdLogin : ERROR...\"+res.data.message);\r\n            }\r\n            else {\r\n                //console.log(\"FacebookLogin -> openIdLogin : REGISTER...\");\r\n                facebookResponse.openLoginTypeId = OpenLoginTypes.OPEN_LOGIN_TYPE_FACEBOOK\r\n                sessionStorage.setItem('openIdLoginData', JSON.stringify(facebookResponse));\r\n                this.props.history.push('register');       \r\n            }\r\n        });\r\n    }\r\n\r\n}","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\video-player\\MediaElement.jsx",["1538","1539"],"import React, { Component } from 'react';\r\nimport flvjs from 'flv.js';\r\nimport hlsjs from 'hls.js';\r\nimport 'mediaelement';\r\nimport 'mediaelement/build/renderers/vimeo';\r\n\r\n// Import stylesheet and shims\r\nimport 'mediaelement/build/mediaelementplayer.min.css';\r\nimport 'mediaelement/build/mediaelement-flash-video.swf';\r\n\r\nexport default class MediaElement extends Component {\r\n\r\n    state = {}\r\n    \r\n    constructor(props) {\r\n\t\tconsole.log(\"MediaElement --> constructor()...\");\r\n        super(props);\r\n        this.state = {currentTime: 0.0, hlsPlayer: null};\r\n        \r\n        // This binding is necessary to make `this` work in the callback\r\n       // this.handlePlayer = this.handlePlayer.bind(this);\r\n\t\t//this.handleTimeUpdate = this.handleTimeUpdate.bind(this);\r\n\t\tthis.doOnOrientationChange = this.doOnOrientationChange.bind(this);\r\n\t\twindow.addEventListener('orientationchange', this.doOnOrientationChange);\r\n    }\r\n\r\n\tsuccess(media, node, instance) {\r\n\t\t// Your action when media was successfully loaded\r\n\t\t//console.log(\"MediaElement --> success()...\");\r\n\t\tthis.doOnOrientationChange();\r\n\t}\r\n\r\n\terror(media) {\r\n\t\t// Your action when media had an error loading\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.log(\"MediaElement --> constructor()...controls\"+this.props.controls);\r\n\t\tconst\r\n\t\t\tprops = this.props,\r\n\t\t\tsources = JSON.parse(props.sources),\r\n\t\t\ttracks = JSON.parse(props.tracks),\r\n\t\t\tsourceTags = [],\r\n\t\t\ttracksTags = []\r\n\t\t;\r\n\r\n\t\tfor (let i = 0, total = sources.length; i < total; i++) {\r\n\t\t\tconst source = sources[i];\r\n\t\t\tsourceTags.push(`<source src=\"${source.src}\" type=\"${source.type}\">`);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0, total = tracks.length; i < total; i++) {\r\n\t\t\tconst track = tracks[i];\r\n\t\t\t//tracksTags.push(`<track src=\"${track.src}\" kind=\"${track.kind}\" srclang=\"${track.lang}\"${(track.label ? ` label=${track.label}` : '')}>`);\r\n\t\t\ttracksTags.push(`<track src=\"${track.src}\" kind=\"${track.kind}\" \r\n\t\t\tsrclang=\"${track.lang}\" \r\n\t\t\t${(track.label ? ` label=${track.label}` : '' )} \r\n\t\t\t${(track.label && track.label==='en')? 'default' :''} \r\n\t\t\t>`);\r\n\t\t}\r\n\r\n\t\tconst\r\n\t\t\tmediaBody = `${sourceTags.join(\"\\n\")}\r\n\t\t\t\t${tracksTags.join(\"\\n\")}`,\r\n\t\t\tmediaHtml = props.mediaType === 'video' ?\r\n\t\t\t\t`<video id=\"${props.id}\" style=\"width:100%;height:100%;\"  width=\"${props.width}\" height=\"${props.height}\"${(props.poster ? ` poster=${props.poster}` : '')}\r\n\t\t\t\t\t${(props.controls ? ' controls' : '')}\r\n\t\t\t\t\t${(props.preload ? ` preload=\"${props.preload}\"` : '')}>\r\n\t\t\t\t\t${mediaBody}\r\n\t\t\t\t</video>` :\r\n\t\t\t\t`<audio id=\"${props.id}\" width=\"${props.width}\" controls>\r\n\t\t\t\t\t${mediaBody}\r\n\t\t\t\t</audio>`\r\n\t\t;\r\n\r\n\t\treturn (<div dangerouslySetInnerHTML={{__html: mediaHtml}}></div>);\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst {MediaElementPlayer} = global;\t\t\r\n\t\tif (!MediaElementPlayer) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst options = Object.assign({}, JSON.parse(this.props.options), {\r\n\t\t\t// Read the Notes below for more explanation about how to set up the path for shims\r\n\t\t\tpluginPath: './static/media/',\r\n\t\t\tsuccess: (media, node, instance) => this.success(media, node, instance),\r\n\t\t\terror: (media, node) => this.error(media, node)\r\n\t\t});\t\t\r\n\t\twindow.flvjs = flvjs;\r\n\t\twindow.Hls = hlsjs;\r\n\t\t//this.setState({player: new MediaElementPlayer(this.props.id, options)});\r\n        /*\r\n            //Setting resume time/play start time.\r\n            this.setState({player: new MediaElementPlayer(this.props.id, options).setCurrentTime(30)});\r\n        */\r\n       \r\n        //Adding Event listeners\r\n        this.setState({player: new MediaElementPlayer(this.props.id, options)}, \r\n            () => {\r\n                this.state.player.media.addEventListener('timeupdate', this.handlePlayerEvent.bind(this,'timeupdate'));\r\n                this.state.player.media.addEventListener('loadeddata', this.handlePlayerEvent.bind(this,'loadeddata'));\r\n                this.state.player.media.addEventListener('play', this.handlePlayerEvent.bind(this,'play'));\r\n                this.state.player.media.addEventListener('pause', this.handlePlayerEvent.bind(this,'pause'));\r\n                this.state.player.media.addEventListener('ended', this.handlePlayerEvent.bind(this,'ended'));\r\n                this.state.player.media.addEventListener('seeked', this.handlePlayerEvent.bind(this,'seeked'));\r\n                this.state.player.media.addEventListener('volumechange', this.handlePlayerEvent.bind(this,'volumechange'));\r\n                var hlsPlayer = document.getElementById('mediaelementvideopalyer1_native_hls');\r\n                if(hlsPlayer) {\r\n                    hlsPlayer.addEventListener('timeupdate',this.handlePlayerEvent.bind(this,'timeupdate'))\r\n                    hlsPlayer.addEventListener('loadeddata',this.handlePlayerEvent.bind(this,'loadeddata'));\r\n                    hlsPlayer.addEventListener('play',this.handlePlayerEvent.bind(this,'play'));\r\n                    hlsPlayer.addEventListener('pause',this.handlePlayerEvent.bind(this,'pause'));\r\n                    hlsPlayer.addEventListener('ended',this.handlePlayerEvent.bind(this,'ended'));\r\n                    hlsPlayer.addEventListener('seeked',this.handlePlayerEvent.bind(this,'seeked'));\r\n                    hlsPlayer.addEventListener('volumechange', this.handlePlayerEvent.bind(this,'volumechange'));\r\n                }\r\n            }\r\n        );\r\n    }\r\n    \r\n    handleTimeUpdate() {\r\n        console.log(\"MediaElement --> handleTimeUpdate()... Current time \"+this.state.player.media.getCurrentTime());\r\n       /* this.setState(state => ({\r\n            currentTime: this.state.player.media.getCurrentTime()\r\n        }));*/\r\n    }\r\n\r\n    handlePlayerEvent(playerState) {\r\n        //console.log(\"MediaElement --> handlePlayerEvent()... Current time \"+this.state.player.media.getCurrentTime());\r\n\t\tlet eventData={event: playerState, currenTime: this.state.player.media.getCurrentTime()}\r\n        const { onPlayerEvent = f => f } = this.props;\r\n        onPlayerEvent(eventData);  \r\n\t}\r\n\r\n\tdoOnOrientationChange() {\r\n\t\tlet orientation = window.screen.orientation;\r\n\t\t//console.log(\"doOnOrientationChange()...\"+orientation);\r\n\t\ttry {\r\n\t\t\tswitch(orientation.angle) { \r\n\t\t\t\tcase -90:\r\n\t\t\t\tcase 90:\r\n\t\t\t\t//console.log(\"landscape\");\r\n\t\t\t\t{\r\n\t\t\t\tif(this.state && this.state.player) {\r\n\t\t\t\t\tthis.state.player.enterFullScreen();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t//console.log(\"portrait\");\r\n\t\t\t\t{\r\n\t\t\t\t\tif(this.state && this.state.player) {\r\n\t\t\t\t\t\tthis.state.player.exitFullScreen();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(err) {\r\n\t\t\tconsole.log(err.message);\t\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tif (this.state.player) {\r\n            try {\r\n                this.state.player.remove();\r\n\t\t\t    this.setState({player: null});\r\n            }\r\n            catch(err) {\r\n                console.log(err.message);\r\n            }\t\t\t\r\n\t\t}\r\n\t}\r\n}","S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\timer\\timer.js",["1540","1541"],"import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Timer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      seconds: parseInt(props.startTimeInSeconds, 10) || 60*60\r\n    };\r\n  }\r\n\r\n  tick() {\r\n\t  if(this.state.seconds!=0){\r\n      this.setState(state => ({ seconds: state.seconds - 1 }));\r\n      localStorage.setItem('time_left', this.state.seconds);\r\n      this.props.currentTime(this.state.seconds);\r\n\t  }else{\r\n        console.log(\"timer end\");\r\n        //document.getElementById(\"endExam\").click();\r\n        clearInterval(this.interval);\r\n        this.props.EndExam();\r\n\t  }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => this.tick(), 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  formatTime(secs) {\r\n    let hours   = Math.floor(secs / 3600);\r\n    let minutes = Math.floor(secs / 60) % 60;\r\n    let seconds = secs % 60;\r\n    return [hours, minutes, seconds]\r\n        .map(v => ('' + v).padStart(2, '0'))\r\n        .filter((v,i) => v !== '00' || i > 0)\r\n        .join(':');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      {\r\n        this.props.type===\"mobile\" ?\r\n        <div>\r\n          <FontAwesomeIcon icon={ faClock }/>  {this.formatTime(this.state.seconds)}\r\n        </div>\r\n        :\r\n        <div class=\"timer_block\">\r\n          <div class=\"timer_div\">\r\n              Time Left : <span class=\"icon-time\"><FontAwesomeIcon icon={faClock} /></span>\r\n              <span id=\"timerspan\" class=\"\"> {this.formatTime(this.state.seconds)}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test-player\\components\\Model.jsx",["1542"],"import React, {Component} from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nexport default class Model extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    modeShow(show){\r\n        this.props.modeShow(show);\r\n    }\r\n\r\n    finishTest(){\r\n        this.props.EndExam(1);\r\n    }\r\n\t\r\n    render(){\r\n\r\n        return(\r\n            <div >\r\n                <Modal className=\"submiteTestModel\" show={this.props.show}  animation={true} >\r\n                <Modal.Header className=\"bg-danger text-white text-center py-1\">\r\n                    <Modal.Title className=\"text-center\">\r\n                    <h5>Confirm ?</h5>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"py-0 border\">\r\n                <p>Are you sure you want to <br/>finish the Test ?</p>   \r\n                </Modal.Body>\r\n                    <Modal.Footer className=\"py-1 d-flex justify-content-center\">\r\n                    <div>\r\n                        <button variant=\"outline-danger\" className=\"mx-2 px-3 btn btn-success\" onClick={() => this.finishTest()}>Submit</button>\r\n                    </div>\r\n                    <div>\r\n                        <button variant=\"outline-dark\" className=\"btn btn-danger\" onClick={() => this.modeShow(false)}>Cancel</button>\r\n                    </div>\r\n                    \r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n\t\t);\r\n    }\r\n}","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test-player\\components\\QuestionPalette.jsx",["1543","1544","1545"],"import React, {Component} from 'react';\r\n\r\nexport default class QuestionPalette extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\t}\r\n\t\r\n\tshowQuestion (e,section_index,question_index) {\r\n\t\te.preventDefault();\r\n\t\tthis.props.showQuestion(section_index,question_index);\r\n\t}\r\n\r\n    render(){\r\n\r\n        // answered-large   not-answered-large   answered-marked-large  marked-large  not-visited-large section_div\r\n        return(\r\n\t\t\t<div className=\"question_palette_no_div\">\r\n\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t{this.props.testObject && this.props.testObject.sections.map((section,section_index) =>\r\n\t\t\t\t\t\t<div className={this.props.showSection==section_index ? \"section_div show\" : \"section_div\"} >\r\n\t\t\t\t\t\t\t<div className=\"section-info\">\r\n\t\t\t\t\t\t\t\tYou are viewing <b>{section.name}</b> section.\r\n\t\t\t\t\t\t\t\t<div className=\"pt10\">Question Palette:</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tsection.questions.map((question,question_index) =>\r\n\t\t\t\t\t\t\t\t\t<div className=\"question_palette_no\" onClick={(e) => this.showQuestion(e,section_index,question_index)}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={\r\n\t\t\t\t\t\t\t\t\t\t\tquestion.class ? question.class \r\n\t\t\t\t\t\t\t\t\t\t\t: this.props.curentQuestion==question_index ? \"not-answered-large\" \r\n\t\t\t\t\t\t\t\t\t\t\t: \"not-visited-large\"\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{question.questionNumber}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>                                \r\n\t\t\t\t\t)} \r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n          );\r\n    }\r\n}","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test-player\\components\\Section.jsx",["1546","1547","1548","1549","1550","1551"],"import React, {Component} from 'react';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Popover from 'react-bootstrap/Popover'\r\n\r\nexport default class Section extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\t}\r\n\t\r\n\tchangeSection (section_index) {\r\n\t\tthis.props.changeSection(section_index);\r\n\t}\r\n\r\n    render(){\r\n\r\n\t\treturn  <div className={`col-md-9 col-sm-9 col-xs-12 test-section ${this.props.testObject?.sections?.length >= 5 ? 'aaaa' : 'bbbbb' }`}>\r\n\t\t          <div className=\"test-section-subjects\">\r\n                  {\t\t  \r\n\t\t\t\t\tthis.props.testObject && this.props.testObject.sections.map((section, index) => {\r\n\t\t\t\t\t\tvar answeredLarge =[]; var notAnsweredLarge = []; var markedLarge = [];\r\n\t\t\t\t\t\tvar total_ques = this.props.testObject.sections[index].questions.length;\r\n\t\t\t\t\t\tthis.props.testObject.sections[index].questions.forEach(function(question) {\r\n\t\t\t\t\t\t\tif(question.class=='answered-large'){\r\n\t\t\t\t\t\t\t\tansweredLarge.push('answered-large') \r\n\t\t\t\t\t\t\t}else if(question.class=='not-answered-large'){\r\n\t\t\t\t\t\t\t\tnotAnsweredLarge.push('not-answered-large') \r\n\t\t\t\t\t\t\t}else if(question.class=='answered-marked-large' || question.class=='marked-large'){\r\n\t\t\t\t\t\t\t\tmarkedLarge.push('marked-large') \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ttotal_ques = total_ques- answeredLarge.length-notAnsweredLarge.length-markedLarge.length;\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<OverlayTrigger placement=\"bottom\" \r\n\t\t\t\t\t\t\t\toverlay={ \r\n\t\t\t\t\t\t\t\t\t<Popover id=\"popover-basic\" className=\"popover\">\r\n\t\t\t\t\t\t\t\t\t\t<Popover.Title as=\"h3\">{section.name}</Popover.Title>\r\n\t\t\t\t\t\t\t\t\t\t<Popover.Content>\r\n\t\t\t\t\t\t\t\t\t\t<table align='center'>\r\n\t\t\t\t\t\t\t\t\t\t<tr><td>Answered</td><td><div className='answered-large '>{answeredLarge.length}</div></td>\r\n\t\t\t\t\t\t\t\t\t\t</tr><tr><td>Not Answered</td><td><div className='not-answered-large '>{notAnsweredLarge.length}</div></td></tr>\r\n\t\t\t\t\t\t\t\t\t\t<tr><td>Marked for Review</td><td><div className='marked-large '>{markedLarge.length}</div></td></tr>\r\n\t\t\t\t\t\t\t\t\t\t<tr><td>Not Visited</td><td><div className='not-visited-large '>{total_ques}</div></td></tr>\r\n\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t\t</Popover.Content>\r\n\t\t\t\t\t\t\t\t\t</Popover>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<li onClick={(e) => this.changeSection(index)} className={index==this.props.sectionIndex ? \"active\" : \"\" }>{section.name}</li>\r\n\t\t\t\t\t\t\t\t</OverlayTrigger>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t              }\r\n\t              </div>\t\r\n\t\t        </div>\r\n    }\r\n}","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\test-player\\components\\Header.jsx",["1552"],"import React, {Component} from 'react';\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nexport default class Header extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\t}\r\n\t\r\n    render(){\r\n\r\n        return(\r\n            <Row>\r\n\t\t\t\t<div className=\"header col col-md-12 col-sm-12 col-xs-12\"> \r\n                  <span className=\"\">{this.props.title}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</Row>\r\n\t\t);\r\n    }\r\n}","S:\\REACT\\Ract-Js\\Frlnce\\src\\_actions\\resourceActions.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\iframe\\iframe.js",["1553"],"import React, { Component } from 'react';\r\nimport { ILoader } from '../iloader/iloader';\r\n\r\nclass Iframe extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      url: props.url,\r\n      showLoading: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <iframe title=\"pdf\" class=\"iframe100\" width=\"100%\" \r\n          onLoad={this.toggleLoading}\r\n          src={this.state.url}></iframe>\r\n          {\r\n            this.renderLoader()\r\n          }\r\n      </>\r\n    );\r\n  }\r\n\r\n  toggleLoading = () => {\r\n    //console.log(\"FeedbackForm -> toggleLoading()... \");\r\n    this.setState(state => ({ showLoading: !state.showLoading }));\r\n  };\r\n\r\n  renderLoader() {\r\n    //console.log(\"FeedbackForm -> renderLoader()... \");\r\n    const _loadingText = 'Please wait...';\r\n    return (\r\n        <ILoader\r\n          loadingText={_loadingText}\r\n          isShow={this.state.showLoading}\r\n        >\r\n        </ILoader>\r\n    )\r\n}\r\n}\r\n\r\nexport default Iframe","S:\\REACT\\Ract-Js\\Frlnce\\src\\_actions\\userActions.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_actions\\dashboardActions.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\sidebar\\sidebar.js",["1554","1555","1556"],"import React, {Component} from 'react';\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport background from './images/material-design-background.jpg';\r\nimport avatar from './images/blank-avatar.png';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser,faBullseye ,faLock } from '@fortawesome/free-solid-svg-icons';\r\n\r\n//export default props => {\r\nexport default class SideBar extends Component{\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trouteChange(path) {\r\n\t\tthis.props.history.push(path);\r\n\t}\r\n\t\r\n\trender(){\r\n\t\tlet user = JSON.parse(localStorage.getItem('user'));\r\n\t\tif(typeof(user) !== 'undefined' || user != null){\r\n\t\t\tvar pic = \"\";\r\n\t\t\tif(user.photoPath){\r\n\t\t\t  pic = user.photoPath;\r\n\t\t\t}else{\r\n\t\t\t  pic = avatar;\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t// Pass on our props\r\n\t\t\t\t<Menu>\r\n\t\t\t\t\t<div className=\"menu-container\">\r\n\t\t\t\t\t<img src={background} className=\"background\" alt=\"background\" />\r\n\t\t\t\t\t<div className=\"title\">\r\n\t\t\t\t\t\t<img src={pic} alt=\"profile\"/>\r\n\t\t\t\t\t\t<strong> {user.enquiryName}</strong>\r\n\t\t\t\t\t\t<p>{user.emailId}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{display:\"flex\",\"flex-direction\":\"column\"}}>\r\n\t\t\t\t\t<a style={{color:\"#666\",width: \"100%\"}} onClick={() => this.routeChange('/profile')} ><FontAwesomeIcon icon={ faUser } /> My Profile</a>\r\n\t\t\t\t\t<a style={{color:\"#666\",width: \"100%\"}} onClick={() => this.routeChange('/changepassword')} ><FontAwesomeIcon icon={ faLock } /> Change Password</a>\r\n\t\t\t\t\t<a href=\"/logout\" ><FontAwesomeIcon icon={ faBullseye } /> Logout</a>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Menu>\r\n\t\t\t);\r\n\t\t}\r\n    }\r\n};\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\components\\notes-forwarding.component.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\components\\Notes.jsx",["1557","1558","1559","1560","1561","1562"],"import React, {Component} from 'react';\r\nimport ApiService from \"../../../_services/ApiService\";\r\nimport Loader from './../../../_components/loader/loader';\r\nimport \"./Notes.css\";\r\n\r\nexport default class Notes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: null,\r\n            loading: false,\r\n        };\r\n        this.fetchNotes = this.fetchNotes.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchNotes()\r\n    }\r\n\r\n    fetchNotes() {\r\n        this.setState({ loading: true }, () => {\r\n          ApiService.fetchStudyResourcesNotes(this.props.id)\r\n          .then((res) => {\r\n              console.log(res.data);\r\n              this.setState({\r\n                loading: false,\r\n                groups : res.data.groups\r\n              });\r\n          });\r\n        });\t\r\n    }    \r\n\r\n    render(){\r\n\r\n        const groups = this.state.groups; \r\n\r\n        return (\r\n            <div>\r\n                {groups && \r\n                    <div className=\"learningNotes\">\r\n                        <table>\r\n                            {/* <thead className=\"headings\">\r\n                                <th className=\"groups\">Group</th>\r\n                                <th className=\"steps\">Steps</th>\r\n                                <th className=\"resource\">Learning Material</th>\r\n                                <th className=\"notes\">Notes</th>\r\n                            </thead> */}\r\n                            <tbody>\r\n                                {this.renderTableBody(groups)}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                \r\n                }\r\n            </div>\r\n        )\r\n    } \r\n\r\n\r\n     renderTableBody (groups) {\r\n       \r\n       return groups.map(group => {\r\n           let stepName = ''; \r\n           let resources = [];\r\n           let notes = [];\r\n           {group.steps.map(step => {\r\n                stepName = step.name;\r\n                {step.resources.map(resource => {\r\n                    notes.push(\r\n                        <table className=\"notesTable\">\r\n                            <tr className=\"resources3\" key={resource.id}>\r\n                                <td className=\"resources1\" >{resource.name}</td>\r\n                                <td className=\"notes1\"><div dangerouslySetInnerHTML={{__html: resource.note}} /></td>\r\n                            </tr>\r\n                        </table>\r\n                    )\r\n                })}\r\n            })}\r\n\r\n           return(\r\n               <>\r\n               <tr>\r\n                   <td style={{background: group.color}} colspan=\"3\" className=\"groups1 group-name\">{group.name}</td>\r\n               </tr>\r\n               <tr key={group.id}>\r\n                   <td className=\"groups1\">{stepName}</td>\r\n                   <td className=\"groups2\" colspan=\"2\">{notes}</td>\r\n               </tr>\r\n               </>\r\n           )\r\n    })}\r\n}\r\n\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\ProductReducer.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\BiometricAttendanceReducer.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\ResourceReducer.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\AttendanceReducer.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\DashboardReducer.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\UsersReducer.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_reducers\\MessagesReducer.js",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\recommendation-engine\\RecommendationEngine.js",["1563","1564"],"\r\nimport React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport Config from '../../_config/config'\r\n\r\nclass RecommendationEngine extends Component {\r\n\r\n  routeChange(path) {\r\n    this.props.history.push({\r\n      pathname: path,\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n\t  let portlet = JSON.parse(localStorage.getItem('portlet')) || [];\r\n    let user = JSON.parse(localStorage.getItem('user')) || [];\r\n    var url = Config.siteUrl+ \"popup/studentportal/studentPortal.do?reqCode=recommendationEngine&fullview=false&token=\"+user.token;\r\n\r\n    {/* https://triangles.edusquares.com/popup/practice.do?reqCode=loadPlayGround&token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI0MzAyOSIsImp0aSI6IjQzMDI5IiwiaWF0IjoxNjEzOTk2NDcwLCJ1c2VybmFtZSI6IlMxIiwidXNlcl9lbWFpbCI6InN1cHBvcnRAY29uY2VwdHdhdmVzLmNvbSIsInJvbGVzIjpbIlN0YW5kYXJkU3R1ZGVudCJdfQ.4R7rfSkTcDjked7OOeVQ-KaXm2v-L5S0GfP7HhZYhhM */}\r\n\r\n    return (\r\n      <div className=\"testlist\">\r\n        {\r\n          <Container fluid>\r\n            <div className={`module-header-step2 ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n              <div className=\"\">\r\n                <div className=\"back\">\r\n                  <FontAwesomeIcon icon={ faArrowLeft }  onClick={() => this.routeChange('/dashboard')}/>\r\n                </div>\r\n                <h4> Recommendation Engine </h4>\r\n              </div>\r\n              </div>\r\n              <iframe  key=\"iframe100\" class=\"iframe100\" width=\"100%\" title=\"Recommendation Engine\" src={url} title=\"iframe\" id=\"my_iframe\" sandbox=\"allow-same-origin allow-forms allow-scripts allow-modals allow-popups\"></iframe>\r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default RecommendationEngine;\r\n","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\feedback-form\\InstructorFeedback.jsx",["1565","1566","1567","1568","1569"],"import React, { Component } from \"react\";\r\nimport { Container, Accordion , Card, Button, ListGroup, ListGroupItem, Badge } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport {ILoader} from '../../_components/iloader/iloader';\r\nimport Config from '../../_config/config'\r\nimport './FeedbackForm.css';\r\nimport swal from 'sweetalert';\r\nimport Iframe from \"../../_components/iframe/iframe\";\r\n\r\nclass InstructorFeedback extends Component { \r\n\r\n\tconstructor(props) {\r\n        super(props);\r\n        //console.log(\"InstructorFeedback -> constructor()... \");\r\n        this.state = {\r\n            message: null,\r\n            showLoading: false,\r\n            courseFeedbackFormBeans : []           \r\n        };       \r\n    }\r\n    \r\n    componentDidMount() {\r\n        //console.log(\"FeedbackForm -> componentDidMount()... \");\r\n        this.init();\r\n    }\r\n    \r\n    init() {\r\n        //console.log(\"FeedbackForm -> init()... \");        \r\n        this.setState({ showLoading: true }, () => {\r\n            ApiService.getInstructorFeedbackForms()\r\n            .then((res) => {\r\n              console.log(\"InstructorFeedback -> init(); res : \"+JSON.stringify(res.data.data));\r\n              this.setState({\r\n                showLoading: false,\r\n                courseFeedbackFormBeans : res.data.data\r\n              });\r\n            });\r\n        });\r\n    }\r\n\r\n    giveFeedback(feedbackFormId, employeeFeedbackBean, courseId) {\r\n        let instructorId = employeeFeedbackBean.id\r\n        let instructorName = employeeFeedbackBean.name\r\n        let _path = '/feedback/form/'+feedbackFormId+'/instructor/'+instructorId+'/course/'+courseId;\r\n        let data = {'instructorName': instructorName};\r\n\t\tdata.studyResource = {id:feedbackFormId, name:'Feedback1'};\r\n\t\tthis.props.history.push({pathname: _path, state: data});\r\n    }\r\n    \r\n    render() {\r\n        //console.log(\"InstructorFeedback -> render()... \");        \r\n        return (  \r\n            <>                \r\n                <Container fluid >\r\n                    <>\r\n                        {this.renderHeader()}\r\n                        {this.renderBody()}\r\n                    </>\r\n                    {this.renderLoader()}                    \r\n                </Container>\r\n            </>           \r\n              \r\n        );\r\n    }\r\n\r\n    renderHeader() {\r\n        //console.log(\"InstructorFeedback -> renderHeader()... \");\r\n        let CURRENT_PORTLET = JSON.parse(localStorage['portlet']);\r\n        return (\r\n            <div className={`ilearn-plain-header ${CURRENT_PORTLET.class}`}>\r\n                <div className=\"back\">\r\n                    <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n                </div>\r\n                {\r\n                   <h4>{CURRENT_PORTLET.name}</h4>  \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderBody() {\r\n        //console.log(\"InstructorFeedback -> renderBody()... \");\r\n        const courseFeedbackBeans = this.state?.courseFeedbackFormBeans;\r\n        return (\r\n            <>\r\n                <Accordion defaultActiveKey=\"0\">\r\n                {\r\n                    courseFeedbackBeans.map((courseFeedbackBean, index) => {\r\n                        return (                        \r\n                            <Card key={index}>\r\n                                <Card.Header>\r\n                                    {courseFeedbackBean.courseName}\r\n                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" className=\"float-right\">\r\n                                        <FontAwesomeIcon icon={ faChevronDown } />\r\n                                    </Accordion.Toggle>\r\n                                </Card.Header>\r\n                                <Accordion.Collapse eventKey={`${index}`}>\r\n                                    {this.renderEmployeeFeedbackBeans(courseFeedbackBean.courseId, courseFeedbackBean.employeeFeedbackBeans)}\r\n                                </Accordion.Collapse>\r\n                            </Card>                        \r\n                        )\r\n                    })\r\n                }\r\n                </Accordion>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderEmployeeFeedbackBeans(courseId, employeeFeedbackBeans) {\r\n        return (\r\n            <>\r\n            <ListGroup className=\"list-group-flush\">\r\n            {\r\n                employeeFeedbackBeans.map((employeeFeedbackBean, index) => {\r\n                    return (\r\n                        <ListGroupItem key={index}>{employeeFeedbackBean.name}\r\n                            <div>\r\n                                {[...Array(employeeFeedbackBean.numberOfFeedbackAvailable)].map((x, i) => {\r\n                                        return(\r\n                                            <>\r\n                                            {employeeFeedbackBean['responseForLink'+(i+1)] === true && \r\n                                                <>\r\n                                                <Badge variant=\"success\" className=\"instructor_feedback_button\" onClick={()=>this.giveFeedback(employeeFeedbackBean['link'+(i+1)], employeeFeedbackBean, courseId)}>\r\n                                                    Feedback {i+1} Given\r\n                                                </Badge>{' '}\r\n                                                </>\r\n                                            }\r\n                                            {employeeFeedbackBean['responseForLink'+(i+1)] == false && \r\n                                                <>    \r\n                                                <Badge variant=\"warning\" className=\"instructor_feedback_button\" onClick={()=>this.giveFeedback(employeeFeedbackBean['link'+(i+1)], employeeFeedbackBean, courseId)}>\r\n                                                    Give Feedback {i+1}\r\n                                                </Badge>{' '}\r\n                                                </>\r\n                                            }\r\n                                            </>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </ListGroupItem>\r\n                    )\r\n                })\r\n            }\r\n            </ListGroup>\r\n            </>\r\n        )\r\n    }\r\n    \r\n    renderLoader() {\r\n        //console.log(\"InstructorFeedback -> renderLoader()... \");\r\n        const _loadingText = 'Please wait...';\r\n        return (\r\n            <ILoader\r\n                loadingText={_loadingText}\r\n                isShow={this.state.showLoading}\r\n                >\r\n            </ILoader>\r\n        )\r\n    }\r\n\r\n    toggleLoading = () => {\r\n        //console.log(\"InstructorFeedback -> toggleLoading()... \");\r\n        this.setState(state => ({ showLoading: !state.showLoading }));\r\n    };\r\n\r\n}\r\n\r\n  \r\nexport {InstructorFeedback};\r\n\r\n/*\r\n    References:\r\n    Card -> https://getbootstrap.com/docs/4.0/components/card/\r\n\r\n*/","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\feedback-form\\FeedbackForm.jsx",["1570","1571","1572"],"import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\nimport Config from '../../_config/config'\r\nimport './FeedbackForm.css';\r\nimport swal from 'sweetalert';\r\nimport Iframe from \"../../_components/iframe/iframe\";\r\nclass FeedbackForm extends Component { \r\n\r\n\tconstructor(props) {\r\n        super(props);\r\n        //console.log(\"FeedbackForm -> constructor()... \");\r\n        this.state = {\r\n            message: null,\r\n            showLoading: false,           \r\n        };       \r\n    }\r\n    \r\n    componentDidMount() {\r\n        //console.log(\"FeedbackForm -> componentDidMount()... \");\r\n        this.init();\r\n    }\r\n    \r\n    init() {\r\n        let employeeId = this.props.match.params.instructorId || 0;\r\n        let courseId = this.props.match.params.courseId || 0;  \r\n        const userId = this.props.location.state.userId || 0;\r\n\r\n        this.setState({ showLoading: true }, () => {\r\n            ApiService.getFeedbackForm(this.props.match.params.id, 0, employeeId, courseId, userId)\r\n            .then((res) => {\r\n               \r\n                const temp = res.data.data;\r\n                console.log(temp.userBeans,'<----Temp');\r\n                if(temp.userBeans){\r\n                this.props.history.replace({pathname:`/studentfeedback/form/${this.props.match.params.id}`,state:{employeeId, courseId}});\r\n                // this.props.history.replace('/');\r\n                }  \r\n                \r\n              console.log(\"FeedbackForm -> init(); res : \"+ JSON.parse( JSON.stringify(res.data.data)));\r\n              this.setState({\r\n                showLoading: false,\r\n                feedbackFormBean : res.data.data\r\n              });\r\n            });\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        //console.log(\"DiscussionBoardTopic -> render()... \");        \r\n        return (  \r\n            <>                \r\n                <Container fluid >\r\n                    <>\r\n                        {this.renderHeader()}\r\n                        {this.renderBody()}\r\n                        {this.renderFooter()}\r\n                    </>\r\n                    {this.renderLoader()}                    \r\n                </Container>\r\n            </>           \r\n              \r\n        );\r\n    }\r\n\r\n    renderHeader() {\r\n        //console.log(\"FeedbackForm -> renderHeader()... \");\r\n        let CURRENT_PORTLET = JSON.parse(localStorage['portlet']);\r\n        let studyResource = this.props.location.state.studyResource;\r\n        return (\r\n            <div className={`ilearn-plain-header ${CURRENT_PORTLET.class}`}>\r\n                <div className=\"back\">\r\n                    <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n                </div>\r\n                {\r\n                   <h4>{studyResource.name}</h4>  \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderBody() {\r\n        //console.log(\"FeedbackForm -> renderBody()... \");\r\n        const feedbackFormBean = this.state?.feedbackFormBean;\r\n        return (\r\n            <>\r\n            {\r\n                (feedbackFormBean && feedbackFormBean.readFromStaff) ? (\r\n                    this.renderReadFromStaffFeedbackForm()\r\n                ) : (\r\n                    this.renderStudentFeedbackForm()\r\n                )\r\n            }\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderRating() {\r\n        let employeeId = this.props.match.params.instructorId || 0;\r\n        let instructorName = this.props.location.state.instructorName;\r\n        const feedbackMode = this.state?.feedbackFormBean?.mode;\r\n        if(employeeId>0) {\r\n            return (\r\n                <>\r\n                    <div className=\"alert alert-primary\" role=\"alert\">\r\n                        <div className=\"alert-heading\"><b>{instructorName}</b>\r\n                        {\r\n                            feedbackMode==='view'?                      \r\n                                <span className=\"rating pull-right\" >{this.state?.feedbackFormBean?.score}</span>\r\n                                : \"\"\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderStudentFeedbackForm() {\r\n        const feedbackQuestionBeans = this.state?.feedbackFormBean?.feedbackQuestionBeans;        \r\n        return (\r\n            <>\r\n            {this.renderRating()}\r\n            {\r\n                feedbackQuestionBeans &&  \r\n                    <div className=\"ilearn-padding-top ilearn-padding-both-sides\">\r\n                        {this.renderFeedbackFormQuestions(feedbackQuestionBeans)}\r\n                    </div>\r\n            }\r\n            <br/><br/>\r\n            </>\r\n        );    \r\n    }\r\n\r\n    renderReadFromStaffFeedbackForm() {\r\n        let enquiryId = localStorage.getItem('enquiryId'); \r\n        let feedbackFormId = this.state.feedbackFormBean.id;       \r\n        const feedbackFormURL = Config.siteUrl+\"popup/studentportal/studentPortal.do?reqCode=viewStudentFeedbackFormInMobile&enquiryId=\"+enquiryId+\"&feedBackFormId=\"+feedbackFormId;\r\n\t\treturn (\r\n            <>\r\n                <Iframe url={feedbackFormURL} />\r\n            </>\r\n        );    \r\n    }\r\n    \r\n    renderFeedbackFormQuestions(feedbackQuestionBeans) {\r\n        return  (\r\n            <>             \r\n                {\r\n                    feedbackQuestionBeans.map((question, index) => {\r\n                        return (\r\n                            <>\r\n                                {this._renderFeedbackQuestion(question, index)}\r\n                            </>\r\n                        );\r\n                    })\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    _renderFeedbackQuestion(question, index) {\r\n        const feedbackMode = this.state?.feedbackFormBean?.mode;\r\n        if(question.questionTypeId===1 || question.questionTypeId===2 || \r\n            question.questionTypeId===3 || question.questionTypeId===5 || \r\n            question.questionTypeId===6 || question.questionTypeId===8 || \r\n            question.questionTypeId===9 || question.questionTypeId===10) {\r\n            return  (\r\n                <>\r\n                    <div key={index} className=\"ilearn-padding-top\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body feedback-question-card\">\r\n                                {feedbackMode==='view'? this.renderReadOnlyFeedbackQuestion(question) : \r\n                                    this.renderFeedbackQuestion(question)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        return (<></>);\r\n    }\r\n\r\n    renderFeedbackQuestion(question) {\r\n        const feedbackMode = this.state?.feedbackFormBean?.mode;\r\n        if(question.questionTypeId===1) {//Text\r\n            return (\r\n                <>\r\n                    <div className=\"form-group feedback-form-group\">\r\n                        <label for={'fb_question_'+question.id}>{question.name}</label>\r\n                        <input type=\"text\" className=\"form-control\" id={'fb_question_'+question.id} \r\n                            onChange={e => question.feedbackResponse=e.target.value || ''} >\r\n                        </input>\r\n                    </div>\r\n                    {\r\n                        question.errorMessage && question.errorMessage.length>0 && \r\n                        <span className=\"error-msg\">{question.errorMessage}</span>\r\n                    }\r\n                    \r\n                </>\r\n            );\r\n        }\r\n        else if(question.questionTypeId===2) {//Text Area\r\n            return (\r\n                <>\r\n                    <div className=\"form-group feedback-form-group\">\r\n                        <label for={'fb_question_'+question.id}>{question.name}</label>\r\n                        <textarea className=\"form-control\" id={'fb_question_'+question.id} rows=\"3\" \r\n                            onChange={e => question.feedbackResponse=e.target.value || ''} > \r\n                            {question.feedbackResponse}                           \r\n                        </textarea>\r\n                    </div>\r\n                    {\r\n                        question.errorMessage && question.errorMessage.length>0 && \r\n                        <span className=\"error-msg\">{question.errorMessage}</span>\r\n                    }\r\n                </>\r\n            );\r\n        }\r\n        else if(question.questionTypeId===3) { //3=Select Dropdown ; \r\n            return (\r\n                <>\r\n                <div className=\"form-group feedback-form-group\">\r\n                    <label for={'fb_question_'+question.id}>{question.name}</label>\r\n                    <select className=\"form-control\" id={'fb_question_'+question.id} \r\n                        placeholder=\"--Select--\" \r\n                        onChange={e => this.handleSingleChoices(e, question)} >\r\n                        { question.feedbackFormQuestionChoiceBeans.map((option, i) =>\r\n                              <option key={'option_'+i} value={option.id} \r\n                                selected={option.selected===true}>{option.name}</option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n                {\r\n                    question.errorMessage && question.errorMessage.length>0 && \r\n                    <span className=\"error-msg\">{question.errorMessage}</span>\r\n                }\r\n                </>\r\n            );\r\n        }\r\n        else if(question.questionTypeId===5) { //5=Radio Button\r\n            return (\r\n                <>\r\n                <div className=\"form-group feedback-form-group\">\r\n                    <label for={'fb_question_'+question.id}>{question.name}</label>                    \r\n                    { question.feedbackFormQuestionChoiceBeans.map((option, i) =>\r\n                            <div class=\"form-check feedback-question\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name={'q_radio_'+question.id} \r\n                                    id={'q_radio_option_'+option.id} value={option.id} \r\n                                    onChange={e => this.handleSingleChoices(e, question)} />\r\n                                <label class=\"form-check-label\" for={'q_radio_option_'+option.id}>\r\n                                    {option.name}\r\n                                </label>\r\n                            </div>\r\n                    )}\r\n                </div>\r\n                {\r\n                    question.errorMessage && question.errorMessage.length>0 && \r\n                    <span className=\"error-msg\">{question.errorMessage}</span>\r\n                }\r\n                </>\r\n            );\r\n        }\r\n        else if(question.questionTypeId===6) { //Multiple Choice\r\n            return (\r\n                <>\r\n                <div className=\"form-group feedback-form-group\">\r\n                    <label for={'fb_question_'+question.id}>{question.name}</label>\r\n                    { question.feedbackFormQuestionChoiceBeans.map((option, i) =>\r\n                        <div class=\"form-check feedback-question\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" value={option.id} \r\n                            id={'fb_question_choice'+option.id} \r\n                            onChange={e => this.handleMultipleChoices(e, question)} />\r\n                            <label class=\"form-check-label\" for={'fb_question_choice'+option.id}>\r\n                               { option.name}\r\n                            </label>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {\r\n                    question.errorMessage && question.errorMessage.length>0 && \r\n                    <span className=\"error-msg\">{question.errorMessage}</span>\r\n                }\r\n                </>\r\n            );\r\n        }\r\n        if(question.questionTypeId===8) {//Date\r\n            return (\r\n                <>\r\n                    <div className=\"form-group feedback-form-group\">\r\n                        <label for={'fb_question_'+question.id}>{question.name}</label>\r\n                        <input type=\"text\" className=\"form-control\" id={'fb_question_'+question.id} \r\n                            onChange={e => question.feedbackResponse=e.target.value || ''} >\r\n                        </input>\r\n                    </div>\r\n                    {\r\n                        question.errorMessage && question.errorMessage.length>0 && \r\n                        <span className=\"error-msg\">{question.errorMessage}</span>\r\n                    }\r\n                    \r\n                </>\r\n            );\r\n        }\r\n        else if(question.questionTypeId===9) {//Email\r\n            return (\r\n                <>\r\n                    <div className=\"form-group feedback-form-group\">\r\n                        <label for={'fb_question_'+question.id}>{question.name}</label>\r\n                        <input type=\"email\" className=\"form-control\" id={'fb_question_'+question.id} \r\n                            onChange={e => question.feedbackResponse=e.target.value || ''} >\r\n                        </input>\r\n                    </div>\r\n                    {\r\n                        question.errorMessage && question.errorMessage.length>0 && \r\n                        <span className=\"error-msg\">{question.errorMessage}</span>\r\n                    }\r\n                    \r\n                </>\r\n            );\r\n        }\r\n        else if(question.questionTypeId===10) {//Mobile Number\r\n            return (\r\n                <>\r\n                    <div className=\"form-group feedback-form-group\">\r\n                        <label for={'fb_question_'+question.id}>{question.name}</label>\r\n                        <input type=\"text\" className=\"form-control\" id={'fb_question_'+question.id} \r\n                            onChange={e => question.feedbackResponse=e.target.value || ''} >\r\n                        </input>\r\n                    </div>\r\n                    {\r\n                        question.errorMessage && question.errorMessage.length>0 && \r\n                        <span className=\"error-msg\">{question.errorMessage}</span>\r\n                    }\r\n                    \r\n                </>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderReadOnlyFeedbackQuestion(question) {\r\n        if(question.questionTypeId===1) {//Text\r\n            return (\r\n                <>\r\n                    <div className=\"form-group feedback-form-group\">\r\n                        <label for={'fb_question_'+question.id}>{question.name}</label>\r\n                        <input type=\"text\" className=\"form-control\" id={'fb_question_'+question.id} \r\n                            value={question.feedbackResponse} \r\n                            disabled>\r\n                        </input>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        else if(question.questionTypeId===2) {//Text Area\r\n            return (\r\n                <>\r\n                    <div className=\"form-group feedback-form-group\">\r\n                        <label for={'fb_question_'+question.id}>{question.name}</label>\r\n                        <textarea className=\"form-control\" id={'fb_question_'+question.id} rows=\"3\" \r\n                            disabled> \r\n                            {question.feedbackResponse}                           \r\n                        </textarea>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        else if(question.questionTypeId===3) { //3=Select Dropdown ; \r\n            return (\r\n                <>\r\n                <div className=\"form-group feedback-form-group\">\r\n                    <label for={'fb_question_'+question.id}>{question.name}</label>\r\n                    <select className=\"form-control\" id={'fb_question_'+question.id} \r\n                        placeholder=\"--Select--\" \r\n                        onChange={e => question.feedbackResponse=e.target.value || ''} \r\n                        disabled>\r\n                        { question.feedbackFormQuestionChoiceBeans.map((option, i) =>\r\n                              <option key={'option_'+i} value={option.id} \r\n                                selected={option.selected===true}>{option.name}</option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n                </>\r\n            );\r\n        }\r\n        else if(question.questionTypeId===5) { //5=Radio Button\r\n            let employeeId = this.props.match.params.instructorId || 0;\r\n            let instructorName = this.props.location.state.instructorName;\r\n            if(employeeId>0) {\r\n                return (\r\n                    <>\r\n                    <div className=\"form-group feedback-form-group\">\r\n                        <label for={'fb_question_'+question.id}>{question.name}</label>                    \r\n                        { question.feedbackFormQuestionChoiceBeans.map((option, i) =>\r\n                                <>\r\n                                {option.selected && \r\n                                    <>\r\n                                    <div className=\"alert-heading\"><b>{option.name}</b>                        \r\n                                        <span className=\"rating pull-right\" >{question.rating}</span>\r\n                                    </div>\r\n                                    </>\r\n                                }\r\n                                </>                                \r\n                        )}\r\n                    </div>\r\n                    </>\r\n                );    \r\n            }\r\n            else {\r\n                return (\r\n                    <>\r\n                    <div className=\"form-group feedback-form-group\">\r\n                        <label for={'fb_question_'+question.id}>{question.name}</label>                    \r\n                        { question.feedbackFormQuestionChoiceBeans.map((option, i) =>\r\n                                <div class=\"form-check feedback-question\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" name={'q_radio_'+question.id} \r\n                                        id={'q_radio_option_'+option.id} value={option.id} \r\n                                        checked={option.selected===true} \r\n                                        disabled/>\r\n                                    <label class=\"form-check-label\" for={'q_radio_option_'+option.id}>\r\n                                        {option.name}\r\n                                    </label>\r\n                                </div>\r\n                        )}\r\n                    </div>\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n        else if(question.questionTypeId===6) { //Multiple Choice\r\n            return (\r\n                <>\r\n                <div className=\"form-group feedback-form-group\">\r\n                    <label for={'fb_question_'+question.id}>{question.name}</label>\r\n                    { question.feedbackFormQuestionChoiceBeans.map((option, i) =>\r\n                        <div class=\"form-check feedback-question\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" value={option.id} \r\n                            id={'fb_question_choice'+option.id} \r\n                            checked={option.selected===true} \r\n                            disabled/>\r\n                            <label class=\"form-check-label\" for={'fb_question_choice'+option.id}>\r\n                               { option.name}\r\n                            </label>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                </>\r\n            );\r\n        }\r\n        if(question.questionTypeId===8) {//Date\r\n            return (\r\n                <>\r\n                    <div className=\"form-group feedback-form-group\">\r\n                        <label for={'fb_question_'+question.id}>{question.name}</label>\r\n                        <input type=\"text\" className=\"form-control\" id={'fb_question_'+question.id} \r\n                            value={question.feedbackResponse} \r\n                            disabled>\r\n                        </input>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        else if(question.questionTypeId===9) {//Email\r\n            return (\r\n                <>\r\n                    <div className=\"form-group feedback-form-group\">\r\n                        <label for={'fb_question_'+question.id}>{question.name}</label>\r\n                        <input type=\"email\" className=\"form-control\" id={'fb_question_'+question.id} \r\n                            value={question.feedbackResponse} \r\n                            disabled>\r\n                        </input>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        else if(question.questionTypeId===10) {//Mobile Number\r\n            return (\r\n                <>\r\n                    <div className=\"form-group feedback-form-group\">\r\n                        <label for={'fb_question_'+question.id}>{question.name}</label>\r\n                        <input type=\"text\" className=\"form-control\" id={'fb_question_'+question.id} \r\n                            value={question.feedbackResponse} \r\n                            disabled>\r\n                        </input>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderFooter() {\r\n        //console.log(\"FeedbackForm -> renderFooter()... \");\r\n        const feedbackQuestionBeans = this.state?.feedbackFormBean?.feedbackQuestionBeans;\r\n        const feedbackMode = this.state?.feedbackFormBean?.mode;\r\n        return ( \r\n            <>\r\n            {\r\n            feedbackQuestionBeans && feedbackMode!=='view' && \r\n            <div className=\"ilearn-footer\">                    \r\n                <Row>\r\n                    <Col className=\"ilearn-footer-col ilearn-blue-btn\" onClick={() => this.submit()}>\r\n                        <button className=\"btn ilearn-blue-btn ilearn-footer-btn btn-block text-uppercase\" > \r\n                            <b className=\"color-white\">Submit</b>&nbsp;\r\n                            <FontAwesomeIcon icon={ faPaperPlane }  size = 'lg' color='#fff'/> &nbsp;\r\n                        </button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n    \r\n    renderLoader() {\r\n        //console.log(\"FeedbackForm -> renderLoader()... \");\r\n        const _loadingText = 'Please wait...';\r\n        return (\r\n            <ILoader\r\n                loadingText={_loadingText}\r\n                isShow={this.state.showLoading}\r\n                >\r\n            </ILoader>\r\n        )\r\n    }\r\n\r\n    toggleLoading = () => {\r\n        //console.log(\"FeedbackForm -> toggleLoading()... \");\r\n        this.setState(state => ({ showLoading: !state.showLoading }));\r\n    };\r\n\r\n    handleSingleChoices = (event, question) => {\r\n        //console.log(\"handleSingleChoices....\");\r\n        question.feedbackFormQuestionChoiceBeans.forEach(choice => {\r\n            choice.selected = false;\r\n            if (choice.id === parseInt(event.target.value)) {\r\n                choice.selected = true; //event.target.checked;\r\n                question.feedbackResponse = choice.id;\r\n            }\r\n        })\r\n    }\r\n\r\n    handleMultipleChoices = (event, question) => {\r\n        //console.log(\"handleMultipleChoices....\");\r\n        let selectedChoices = [];\r\n        question.feedbackFormQuestionChoiceBeans.forEach(choice => {\r\n            if (choice.id === parseInt(event.target.value)) {\r\n                    choice.selected =  event.target.checked;\r\n            }\r\n        })\r\n        question.feedbackFormQuestionChoiceBeans.forEach(choice => {\r\n            if (choice.selected === true) {\r\n                selectedChoices.push(choice.id);\r\n            }\r\n        })\r\n        question.feedbackResponse=selectedChoices.join();\r\n    }\r\n\r\n    submit = () => {\r\n        //console.log(\"FeedbackForm -> submit()... \");\r\n        //console.log(JSON.stringify(this.state.feedbackFormBean));\r\n        let user = JSON.parse(localStorage['user']);\r\n        let feedbackFormBean = this.state.feedbackFormBean;\r\n        let employeeId = this.props.match.params.instructorId || 0;\r\n        let courseId = this.props.match.params.courseId || 0;\r\n        feedbackFormBean.employeeId = employeeId;\r\n        feedbackFormBean.courseId = courseId;\r\n        feedbackFormBean.applicableToUserId = this.props.location.state.userId || 0;\r\n        feedbackFormBean.respondentToUserId = this.props.location.state.userId ? user?.userId : 0;\r\n       \r\n        this.setState({ showLoading: true }, () => {\r\n            ApiService.saveFeedbackForm(feedbackFormBean, 0)\r\n            .then((res) => {\r\n                //console.log(\"FeedbackForm -> submit(); res : \"+JSON.stringify(res.data));\r\n                let respData = res.data;\r\n                if(respData.status==0) {\r\n                    let questions = [];        \r\n                    for(let question of feedbackFormBean.feedbackQuestionBeans) {\r\n                        question.errorMessage=null;\r\n                        for(let i=0; i<respData.data.length; i++) {\r\n                            if(parseInt(respData.data[i].id) === question.id) {\r\n                                question.errorMessage=respData.data[i].message;\r\n                                break;\r\n                            }\r\n                        }\r\n                        questions.push(question);\r\n                    }\r\n                    feedbackFormBean.feedbackQuestionBeans=questions;\r\n                    this.setState({\r\n                        showLoading: false,\r\n                        feedbackFormBean : feedbackFormBean\r\n                    });\r\n                    this.showErrorAlert(respData.message);\r\n                }\r\n                else {  //SuccessCB      \r\n                    //this.showMessage(\"Confirmation Message\", respData.message);\r\n                    this.setState({\r\n                        showLoading: false\r\n                    });\r\n                    this.showSuccessAlert(respData.message);                                        \r\n                }\r\n            });              \r\n        });\r\n    }\r\n\r\n    showSuccessAlert(message) {\r\n        swal({\r\n            text: message,\r\n            icon: \"success\",\r\n            button: \"Ok\",\r\n            allowOutsideClick: false,\r\n            closeOnClickOutside: false,\r\n            closeOnEsc: false\r\n        }).then(exit => {\r\n            this.props.history.goBack();\r\n        });\r\n    }\r\n\r\n    showErrorAlert(message) {\r\n        swal({\r\n            text: message,\r\n            icon: \"warning\",\r\n            button: \"Ok\",\r\n            allowOutsideClick: false,\r\n            closeOnClickOutside: false,\r\n            closeOnEsc: false\r\n        }).then(exit => {\r\n            //console.log(\"Error!\");\r\n        });\r\n    }\r\n\r\n}\r\n\r\n  \r\nexport {FeedbackForm};\r\n\r\n/*\r\n    References:\r\n    Card -> https://getbootstrap.com/docs/4.0/components/card/\r\n\r\n*/","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\discipline\\discipline.component.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\convocation\\convocation.component.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\camera\\camera.component.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\mentor-transcripts\\mentor-transcripts.component.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\exam-time-table\\ExamTimeTable.jsx",["1573","1574","1575"],"import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\nimport list from \"../../_assets/imgs/calendar.svg\";\r\nimport styles from \"./components/style.css\"\r\nimport { ExamList } from \"./ExamList\";\r\nimport queryString from 'query-string';\r\nimport Utils from '../../_helpers/utils'\r\n// import tile from '../discussion/images/tile.svg'\r\nimport examtimetable_icon from './components/examtimetable.png'\r\n\r\nclass ExamTimeTable extends Component{ \r\n\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: null,\r\n            showLoading: true,\r\n            portlet: this.props?.location?.state?.portlet,\r\n            examList : '',\r\n            id: ''\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.examTable();\r\n    }\r\n\r\n\r\n    examTable() {\r\n        let params = queryString.parse(this.props.location.search)\r\n        this.setState({ showLoading: true }, () => {\r\n            console.log(params.id)\r\n          ApiService.examTimetable(params.id)\r\n          .then((res) => {\r\n              this.setState({\r\n                showLoading: false,\r\n                examList : res.data,\r\n              });\r\n            console.log(this.state.examList)\r\n          });\r\n        });\t\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (  \r\n            <>\r\n                <div>\r\n                    <Container fluid >\r\n                        {this.renderHeader()}\r\n                        {this.renderBody(this.state.examList)}\r\n                        {/* {this.renderLoader()}                     */}\r\n                    </Container>\r\n                </div>\r\n            </>           \r\n              \r\n        );       \r\n    }\r\n\r\n    renderHeader() {\r\n        //console.log(\"DiscussionBoard -> renderHeader()... \");\r\n        let isMobile = Utils.isMobileDevice()\r\n        return (\r\n          <div className='module-header'>\r\n            <div className={`module-header-inner green-card`}>\r\n              <div className='back'>\r\n                <FontAwesomeIcon\r\n                  icon={faArrowLeft}\r\n                  onClick={this.props.history.goBack}\r\n                />\r\n              </div>\r\n              <img src={examtimetable_icon} alt='exam timetable icon' />\r\n            </div>\r\n            <div className='arrow-set'> \r\n                <h4>Exam Timetable</h4>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    \r\n    renderBody(examList) {\r\n        console.log(this.state.examList)\r\n        return (\r\n            this.state.showLoading ? this.renderLoader() : \r\n            <>\r\n            {this.state.examList.id?\r\n                <table className={styles}>\r\n                    <thead>\r\n                        <tr className=\"green-card\">\r\n                        <th >Date</th>\r\n                        <th className='left'>Name</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {examList.timeTableTemplates.map(\r\n                            (row)=>{\r\n                                console.log(row)\r\n                                return(\r\n                                    <tr >\r\n                                        <td className='whole' >\r\n                                            <div className='inl'>\r\n                                                <div className='date'>{row.dayOfMonth}</div>\r\n                                            </div>\r\n                                            <div className='inl'>\r\n                                                <div className='day'>{row.dayOfweek}</div>\r\n                                                <div className='smy' >{row.shortenedMonthYear}</div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td className='test'>\r\n                                            <span className='time '>{row.startTime} - {row.endTime}</span>\r\n                                            <div className='tstn'>{row.eventName}</div>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        )}\r\n                    </tbody>\r\n                </table>:<>\r\n                <div className=\"noexam\">Oops! Could not fetch this exam timetable</div>\r\n                </>}\r\n            </>\r\n        )\r\n    }\r\n    \r\n    renderLoader() {\r\n        const _loadingText = 'Please wait...';\r\n        return (\r\n            <ILoader\r\n                loadingText={_loadingText}\r\n                isShow={this.state.showLoading}\r\n            >\r\n            </ILoader>\r\n        )\r\n    }\r\n\r\n}\r\n  \r\nexport {ExamTimeTable};","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\exam-time-table\\ExamList.jsx",["1576","1577","1578","1579","1580","1581","1582","1583","1584","1585","1586","1587","1588","1589","1590","1591","1592","1593","1594","1595","1596","1597","1598","1599","1600","1601","1602","1603","1604","1605","1606","1607","1608","1609","1610","1611","1612","1613","1614","1615","1616","1617"],"import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons';\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\nimport list from \"../../_assets/imgs/calendar.svg\";\r\nimport styles from \"./components/style.css\"\r\n// import JsonData from './components/data.json'\r\nimport { ExamTimeTable } from './ExamTimeTable';\r\nimport Utils from '../../_helpers/utils'\r\nimport tile from '../discussion/images/tile.svg'\r\nimport examtimetable_icon from './components/examtimetable.png'\r\nimport view_icon from './components/view_icon.png'\r\nimport upcoming_icon from \"../../_assets/imgs/edit.png\";\r\nimport completed_icon from \"../../_assets/imgs/verify.png\";\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\n\r\nclass ExamList extends Component { \r\n\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: null,\r\n            showLoading: true,\r\n            portlet: this.props?.location?.state?.portlet,\r\n            examList : '',\r\n            id:'',\r\n            upcomingexam:[],\r\n            prevExam: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.examTable();\r\n    }\r\n\r\n    examTable() {\r\n        this.setState({ showLoading: true }, () => {\r\n          ApiService.examList()\r\n          .then((res) => {\r\n              this.setState({\r\n                showLoading: false,\r\n                examList : res.data,\r\n                id: res.data.id\r\n\r\n            },()=>{\r\n                this.countexam(this.examList)\r\n            });\r\n\r\n          });\r\n        });\t\r\n    }\r\n\r\n    countexam(examList){\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        examList?.timeTables.map(\r\n            (row)=>{\r\n                if(row.endDate.slice(8,12)>yyyy || row.endDate.slice(8,12)==yyyy && this.monthConvert(row.endDate.slice(0,3))>mm || row.endDate.slice(8,12)==yyyy && this.monthConvert(row.endDate.slice(0,3))==mm && row.endDate.slice(4,6)>=dd){\r\n                    this.state.upcomingexam.push(row);\r\n                }\r\n                else\r\n                {\r\n                    this.state.prevExam.push(row);\r\n                }\r\n            })         \r\n    }\r\n\r\n    render() {\r\n        return (  \r\n            <>\r\n                <div>\r\n                    <Container fluid >\r\n                        {this.renderHeader()}\r\n                        { this.state.examList && this.renderBody(this.state.examList) }\r\n                        {/* {this.renderLoader()}                     */}\r\n                    </Container>\r\n                </div>\r\n            </>           \r\n              \r\n        );       \r\n    }\r\n\r\n    monthConvert(month){\r\n        if(month=='Jan')\r\n            return '01';\r\n        else if(month=='Feb')\r\n            return '02';\r\n        else if(month=='Mar')\r\n            return '03';\r\n        else if(month=='Apr')\r\n            return '04';\r\n        else if(month=='May')\r\n            return '05';\r\n        else if(month=='Jun')\r\n            return '06';\r\n        else if(month=='Jul')\r\n            return '07';\r\n        else if(month=='Aug')\r\n            return '08';\r\n        else if(month=='Sep')\r\n            return '09';\r\n        else if(month=='Oct')\r\n            return '10';\r\n        else if(month=='Nov')\r\n            return '11';\r\n        else if(month=='Dec')\r\n            return '12';\r\n    }\r\n\r\n    renderHeader() {\r\n        let isMobile = Utils.isMobileDevice()\r\n        return (\r\n          <div className='module-header'>\r\n            <div className={`module-header-inner ${this.props.location.state.portlet.class}`}>\r\n              <div className='back'>\r\n                <FontAwesomeIcon\r\n                  icon={faArrowLeft}\r\n                  onClick={this.props.history.goBack}\r\n                />\r\n              </div>\r\n              <img src={examtimetable_icon} alt='exam timetable icon' />\r\n            </div>\r\n            <div className='arrow-set'>\r\n                <h4>{this.state.portlet.name}</h4>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    \r\n    renderBody(examList) {\r\n        console.log(examList)\r\n        const portlet = this.state.portlet;  \r\n        const upcoming = <img src={upcoming_icon} />  \r\n        const completed = <img src={completed_icon} />\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0\r\n        var yyyy = today.getFullYear();\r\n        if(examList==null)\r\n        {\r\n            return(\r\n                <h1>No Record Found</h1>\r\n            )\r\n        }\r\n\r\n        if(examList?.timeTables?.length !== 0 )\r\n        {\r\n            return (\r\n                \r\n                this.state.showLoading ? this.renderLoader() : \r\n                <>\r\n                <div>\r\n                    <Tabs defaultActiveKey=\"Upcoming\" id=\"uncontrolled-tab-example\">\r\n                        <Tab eventKey=\"Upcoming\" className=\"upcoming\" title={<span>{upcoming} Upcoming</span>}>\r\n                            {this.state.upcomingexam.length>1?   \r\n                            <table className={styles}> \r\n                                <thead>\r\n                                    <tr className=\"green-card\">\r\n                                    <th className=\"col1\">Dates</th>\r\n                                    <th className='left col2'>Name</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                \r\n                                    {examList?.timeTables.map(\r\n                                        (row)=>{\r\n                                            if(row.endDate.slice(8,12)>yyyy || row.endDate.slice(8,12)==yyyy && this.monthConvert(row.endDate.slice(0,3))>mm || row.endDate.slice(8,12)==yyyy && this.monthConvert(row.endDate.slice(0,3))==mm && row.endDate.slice(4,6)>=dd){\r\n                                            return(\r\n                                                <tbody>\r\n                                                <tr>\r\n                                                    <td className='whole'>\r\n                                                        <div className='bold'>{row.startDate}</div>\r\n                                                        <div className='small'>to</div>\r\n                                                        <div className='bold'>{row.endDate}</div>\r\n                                                    </td>\r\n                                                    <td className='test' onClick={() => this.handleClick(row.id)} >\r\n                                                        <span>{row.name}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                                                        <span className=\"view\">\r\n                                                            <img src={view_icon} alt='view icon' />&nbsp;View&nbsp;\r\n                                                        </span>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                </tbody>\r\n                                            )}\r\n                                        }\r\n                                    )}\r\n                                \r\n                            </table>:<>\r\n                            <div className=\"noexam\">\r\n                                Hooray! No upcoming exams scheduled\r\n                            </div>\r\n                            </>}\r\n                        </Tab>\r\n                        <Tab eventKey=\"Completed\" className=\"completed\" title={<span>{completed} Completed</span>}>\r\n                        {this.state.prevExam? \r\n                        <table className={styles}>\r\n                            <thead>\r\n                                <tr className=\"green-card\">\r\n                                <th>Dates</th>\r\n                                <th className='left'>Name</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {examList?.timeTables.map(\r\n                                    (row)=>{\r\n                                        if(row.endDate.slice(8,12)<yyyy || row.endDate.slice(8,12)==yyyy && this.monthConvert(row.endDate.slice(0,3))<mm || row.endDate.slice(8,12)==yyyy && this.monthConvert(row.endDate.slice(0,3))==mm && row.endDate.slice(4,6)<dd){\r\n                                        return(\r\n                                            <tr>\r\n                                                <td className='whole'>\r\n                                                    <div className='bold'>{row.startDate}</div>\r\n                                                    <div className='small'>to</div>\r\n                                                    <div className='bold'>{row.endDate}</div>\r\n                                                </td>\r\n                                                <td className='test' onClick={() => this.handleClick(row.id)} >\r\n                                                    <span>{row.name}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                                                    <span className=\"view\">\r\n                                                        <img src={view_icon} alt='view icon' />&nbsp;View&nbsp;\r\n                                                    </span>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                    }\r\n                                )}\r\n                            </tbody>\r\n                        </table>:<>\r\n                        <div className=\"noexam\">\r\n                                No exams completed yet\r\n                        </div>\r\n                        </>}\r\n                    </Tab>\r\n                </Tabs> \r\n            </div>\r\n        </>)\r\n        } else {\r\n            //this.handleClick(examList.timeTables[0].id)\r\n        }\r\n    }\r\n    \r\n    renderLoader() {\r\n        const _loadingText = 'Please wait...';\r\n        return (\r\n            <ILoader\r\n                loadingText={_loadingText}\r\n                isShow={this.state.showLoading}\r\n                >\r\n            </ILoader>\r\n        )\r\n    }\r\n    \r\n    handleClick(value){\r\n        console.log(value);\r\n        <ExamTimeTable id={value}/>\r\n        window.open(\"/examtimetable?id=\"+value,\"_self\");\r\n    }\r\n\r\n}\r\n  \r\nexport {ExamList};","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\dossier\\dossier.component.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\today-tests\\TodayTests.jsx",["1618","1619","1620","1621","1622","1623"],"import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport {ILoader} from './../../_components/iloader/iloader';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Config from './../../_config/config'\r\nimport \"./todaytests.css\";\r\nimport upcoming_icon from \"../../_assets/imgs/edit.png\";\r\nimport completed_icon from \"../../_assets/imgs/verify.png\";\r\nimport ApiService from \"../../_services/ApiService\";\r\nimport swal from 'sweetalert';\r\n\r\nclass TodayTests extends Component { \r\n\r\n\tconstructor(props) {\r\n        super(props);\r\n        console.log(\"TodayTests -> constructor()... \");\r\n        this.state = {\r\n            message: null,\r\n            showLoading: false,\r\n            portlet: this.props.location.state.portlet,\r\n            todayTests: null\r\n        };\r\n    }\r\n    \r\n    componentDidMount() {\r\n        //console.log(\"TodayTests -> componentDidMount()... \");\r\n        this.init();\r\n    }\r\n\r\n    openTest = (testID) => {\r\n        const portlet = this.state.portlet;\r\n        var url = '/TestInstructions/'+testID+'?cat='+portlet.testCategoryIds;\r\n        window.open(url, 'Start Test', 'height=' + window.screen.height + ',width=' + window.screen.width);\r\n    }\r\n\r\n    routeChange(path,endDate) {\r\n        const portlet = this.state.portlet;\r\n        this.props.history.push( { pathname: path, state: {testEndDate: endDate, testCategory: portlet.testCategoryIds} } );\r\n    }\r\n\r\n    showAlert(msg) {\r\n        swal({\r\n              title: \"Alert\",\r\n              text: msg,\r\n              dangerMode: true,\r\n         });\r\n    }\r\n    \r\n    init() {\r\n        //console.log(\"TodayTests -> init()... \");\r\n        const portlet = this.state.portlet;\r\n        Config.CURRENT_PORTLET = portlet;\r\n        \r\n        let todayTestsConfig = {\r\n            \"testCategoryIds\": portlet.testCategoryIds,\r\n            \"numberOfPreviousDays\": portlet.numberOfPreviousDays,\r\n            \"numberOfFutureDays\": portlet.numberOfFutureDays,\r\n            \"referenceDate\": portlet.referenceDate,\r\n            \"testIds\": portlet.testIds\r\n        }\r\n        \r\n        this.setState({ showLoading: true }, () => {\r\n            ApiService.fetchTodayTests(todayTestsConfig)\r\n            .then((res) => {\r\n                this.setState({\r\n                    showLoading: false,\r\n                    todayTests: res.data.data\r\n                });\r\n            },error => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tshowLoading: false,\r\n\t\t\t\t});\r\n                console.log(error);\r\n\t\t\t\talert(Config.CONNECTION_ERROR_MSG);\r\n\t\t\t});\r\n          });\r\n    }\r\n    \r\n    render() {\r\n        //console.log(\"TodayTests -> render()... \");\r\n        const portlet = this.state.portlet;  \r\n        const upcoming = <img src={upcoming_icon} />  \r\n        const completed = <img src={completed_icon} />    \r\n        const todayTests = JSON.parse(this.state.todayTests);\r\n\r\n        return (  \r\n            <>\r\n                <div className=\"today_tests\">\r\n                    {                    \r\n                    <>\r\n                    <div className={`module-header-step2 ${portlet.class ? portlet.class : 'orange-card'}`}>\r\n                        <div className=\"back\">\r\n                            <FontAwesomeIcon icon={ faArrowLeft } onClick={this.props.history.goBack} />\r\n                        </div>\r\n                        <h4>{portlet.name}</h4>\r\n                    </div>\r\n                    {\r\n                        this.state.showLoading ? this.renderLoader() : \r\n                        <div className=\"mt50\">\r\n                            <Tabs defaultActiveKey=\"Upcoming\" id=\"uncontrolled-tab-example\">\r\n                                <Tab eventKey=\"Upcoming\" className=\"upcoming\" title={<span>{upcoming} Upcoming</span>}>\r\n                                <ul className=\"list-group\">\r\n                                   {\r\n                                    todayTests && \r\n                                    todayTests.upcomingTests?.map((item, index) => {\r\n                                            return ( \r\n                                                <li className=\"list-group-item today-test-group ilearn-item-border\">\r\n                                                    <div className=\"ilearn-item-block \">\r\n                                                        <div className=\"ilearn-item-inner\">\r\n                                                        <h4>{item.name}</h4>\r\n                                                        {item.startDate &&\r\n                                                            item.startDate !='--' ? <span >{item.startDate} to {item.endDate} </span> : \"\"\r\n                                                        }\r\n                                                        </div>\r\n                                                        {\r\n                                                        item.status==\"Coming Soon\" ?\r\n                                                        <button onClick={() => this.showAlert(\"The test is available between \"+item.startDate+\" - \"+item.endDate)} className={`ilearn-btn-right orange-card`} > {item.status} </button> \r\n                                                        : item.status==\"Time Out\" ? \r\n                                                        <button onClick={() => this.showAlert(\"The test is closed at  \"+item.endDate)} className={`ilearn-btn-right orange-card`} > {item.status} </button> :\r\n                                                        <button className={`ilearn-btn-right ilearn-blue-btn`} onClick={() => this.openTest(item.id)} >\r\n                                                            {item.status}\r\n                                                        </button>\r\n                                                        }\r\n                                                    </div>\r\n                                                </li>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </ul>\r\n                                </Tab>\r\n                                <Tab eventKey=\"Completed\" className=\"completed\" title={<span>{completed} Completed</span>}>\r\n                                    <ul className=\"list-group\">\r\n                                       {\r\n                                        todayTests && \r\n                                        todayTests.completedTests?.map((item, index) => {\r\n                                                return ( \r\n                                                    <li className=\"list-group-item today-test-group ilearn-item-border\">\r\n                                                        <div className=\"ilearn-item-block \">\r\n                                                            <div className=\"ilearn-item-inner\">\r\n                                                            <h4>{item.name}</h4>\r\n                                                            {item.startDate && \r\n                                                               item.startDate !='--' ? <span >{item.startDate} to {item.endDate} </span> : \"\"\r\n                                                            }\r\n                                                            </div>\r\n                                                            <button \r\n                                                            className={`ilearn-btn-right ilearn-green-btn`}\r\n                                                            onClick={() => this.routeChange('/test-result/'+portlet.testCategoryIds+'/'+item.id, item.endDate)}\r\n                                                            >\r\n                                                              {item.status}\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </ul>\r\n                                </Tab>\r\n                            </Tabs>\r\n                        </div>\r\n                    }\r\n                    </>\r\n                    }\r\n                </div>\r\n            </>           \r\n              \r\n        );\r\n    }\r\n    \r\n    renderLoader() {\r\n        console.log(\"TodayTests -> renderLoader()... \");\r\n        const _loadingText = 'Please wait...';\r\n        return (\r\n            <ILoader\r\n                loadingText={_loadingText}\r\n                isShow={this.state.showLoading}\r\n                >\r\n            </ILoader>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n  \r\nexport {TodayTests};","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\xapi\\index.js",["1624","1625","1626","1627","1628","1629","1630","1631"],"import React, {Component} from 'react';\r\nimport XAPIUtils from './xapiutils';\r\n// import API from './cryptojs_v3.1.2'\r\n// import xAPIWrapper from './xapiwrapper'\r\n\r\n\r\nclass XapiMain extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {o:{}}\r\n        //this.sendAPIStatement = this.sendAPIStatement.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.sendAPIStatement()\r\n    }\r\n    //generates and sends xAPI statement\r\n    sendAPIStatement() {\r\n        var o = {\"reqCode\":\"\",\"name\":\"Introduction to Conventional Lathe-ilearn React\",\"typeName\":\"announcement\",\"typeId\":6,\"lrsConfig\":{\"accessUrl\":\"https://triangles.edusquares.com/api/studyresources/636\",\"userName\":\"S16\",\"config\":{\"endpoint\":\"https://learninglocker.edusquares.com/data/xAPI/\",\"password\":\"3ca31ba978a2b1ea22c3847896cd614005bcee17\",\"user\":\"c9ed50be0eef4bbf089fa5362b3db944c521ca04\"},\"enabled\":true,\"dashboard\":\"https://learninglocker.edusquares.com/dashboards/5dba8b30c96f2805843350d8/5dba8bdcc96f2805843350e0/Shareable\"},\"id\":636,\"type\":\"\",\"url\":\"\",\"content\":\"<section itemprop=\\\"blogPost\\\" itemscope=\\\"itemscope\\\" itemtype=\\\"https://schema.org/BlogPosting\\\">\\r\\n<h2><strong>Conventional Lathe:<\\/strong><\\/h2>\\r\\n<img alt=\\\"\\\" src=\\\"http://webfront.studentdetails.com/nttf2_testing/uploads/common/Image/CLathe.png\\\" /><\\/section>\\r\\n&nbsp;\\r\\n\\r\\n<section itemprop=\\\"blogPost\\\" itemscope=\\\"itemscope\\\" itemtype=\\\"https://schema.org/BlogPosting\\\">\\r\\n<p>The general lathe has a wide processing object, the adjustment range of the spindle rotation speed and the feed amount is large. The inner and outer surfaces, end faces, and internal and external threads of the workpiece can be processed. This type of lathe is mainly operated manually by the worker. It is easy to operate. In the early stage, the speed is adjusted, the gear is moved, the starting lever is lifted, and then the joystick is pushed forward. The turning tool advances, the rear pulls, the turning tool retreats to the left, and the turning tool goes to the left. Left and right are the same. Although the operation of the general vehicle is simple, the processing of the parts is a technical activity, and the workers will look at the measuring tools and drawings for processing. When machining small batches of parts,conventional lathes have a greater efficiency advantage than CNC lathes. Many times the general-purpose lathes have been processed, and the CNC lathes are still in the programming stage. Due to this feature, the ordinary lathe still has a market, suitable for single-piece, small batch production and maintenance workshops.<\\/p>\\r\\n\\r\\n<p>These lathes can be divided into a variety of conventional lathes of different specifications, such as LT6232 and LT6250, depending on the center height and center distance. In addition to turning all kinds of rotary workpieces, they can also turn various threads, such as metric thread, inch thread, modulus thread, diametric thread and end thread.<\\/p>\\r\\n\\r\\n<p>In order to improve the processing diameter of the conventional lathe, a gap bed lathe was derived(also called saddle lathe).<\\/p>\\r\\n\\r\\n<p>The left end of the gap bed lathe at the front of the headbox is sunken and can accommodate large diameter parts. The shape of the lathe is two-head high, low in the middle, and looks like a saddle, so it is called a saddle lathe. The saddle lathe is suitable for machining parts with large radial dimensions and small axial dimensions. It is suitable for turning the outer circle, inner hole, end face, slot and metric, inch, modulus, warp thread, and drilling and boring. , reaming and other processes, especially suitable for single-piece, batch production enterprises. The saddle lathe can process larger diameter workpieces in the saddle groove. The machine tool guides are hardened and finely ground for easy and reliable operation. The lathe has the characteristics of high power, high speed, strong rigidity, high precision and low noise.<\\/p>\\r\\n<\\/section>\\r\\n\"}\r\n        this.setState({o:o})\r\n        //XAPIUtils.track(o);\r\n    }\r\n    handleSend = (e) => {\r\n        console.log(this.state.o)\r\n        XAPIUtils.track(this.state.o);\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>Hello XAPI</div>\r\n                <button type=\"button\" onClick={(event) => this.handleSend(event)}>Submit</button>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default XapiMain;","S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\learning\\components\\notes-mobile.component.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\pages\\convocation\\component\\modal-box.component.jsx",[],"S:\\REACT\\Ract-Js\\Frlnce\\src\\_components\\image-preview\\image-preview.component.jsx",[],{"ruleId":"1632","replacedBy":"1633"},{"ruleId":"1634","replacedBy":"1635"},{"ruleId":"1636","severity":1,"message":"1637","line":61,"column":32,"nodeType":"1638","messageId":"1639","endLine":61,"endColumn":34},{"ruleId":"1640","severity":1,"message":"1641","line":1,"column":8,"nodeType":"1642","messageId":"1643","endLine":1,"endColumn":13},{"ruleId":"1640","severity":1,"message":"1644","line":145,"column":7,"nodeType":"1642","messageId":"1643","endLine":145,"endColumn":16},{"ruleId":"1640","severity":1,"message":"1644","line":278,"column":13,"nodeType":"1642","messageId":"1643","endLine":278,"endColumn":22},{"ruleId":"1640","severity":1,"message":"1645","line":422,"column":13,"nodeType":"1642","messageId":"1643","endLine":422,"endColumn":17},{"ruleId":"1640","severity":1,"message":"1645","line":428,"column":13,"nodeType":"1642","messageId":"1643","endLine":428,"endColumn":17},{"ruleId":"1636","severity":1,"message":"1637","line":9,"column":36,"nodeType":"1638","messageId":"1639","endLine":9,"endColumn":38},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":81,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":82,"suggestions":"1650"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":162,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":163,"suggestions":"1651"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":227,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":228,"suggestions":"1652"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":254,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":255,"suggestions":"1653"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":275,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":276,"suggestions":"1654"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":313,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":314,"suggestions":"1655"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":347,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":348,"suggestions":"1656"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":416,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":417,"suggestions":"1657"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":439,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":440,"suggestions":"1658"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":444,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":445,"suggestions":"1659"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":482,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":483,"suggestions":"1660"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":495,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":496,"suggestions":"1661"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":520,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":521,"suggestions":"1662"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":529,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":530,"suggestions":"1663"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":562,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":563,"suggestions":"1664"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":586,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":587,"suggestions":"1665"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":690,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":691,"suggestions":"1666"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":734,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":735,"suggestions":"1667"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":755,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":756,"suggestions":"1668"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":797,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":798,"suggestions":"1669"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":850,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":851,"suggestions":"1670"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":947,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":948,"suggestions":"1671"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1032,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1033,"suggestions":"1672"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1067,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1068,"suggestions":"1673"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1096,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1097,"suggestions":"1674"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1102,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1103,"suggestions":"1675"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1124,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1125,"suggestions":"1676"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1133,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1134,"suggestions":"1677"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1207,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1208,"suggestions":"1678"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1214,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1215,"suggestions":"1679"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1229,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1230,"suggestions":"1680"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1253,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1254,"suggestions":"1681"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1265,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1266,"suggestions":"1682"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1273,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1274,"suggestions":"1683"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1323,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1324,"suggestions":"1684"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1327,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1328,"suggestions":"1685"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1380,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1381,"suggestions":"1686"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1386,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1387,"suggestions":"1687"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1401,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1402,"suggestions":"1688"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1405,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1406,"suggestions":"1689"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1427,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1428,"suggestions":"1690"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1439,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1440,"suggestions":"1691"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1500,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1501,"suggestions":"1692"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1558,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1559,"suggestions":"1693"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1605,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1606,"suggestions":"1694"},{"ruleId":"1646","severity":1,"message":"1647","line":26,"column":1621,"nodeType":"1648","messageId":"1649","endLine":26,"endColumn":1622,"suggestions":"1695"},{"ruleId":"1640","severity":1,"message":"1696","line":33,"column":7,"nodeType":"1642","messageId":"1643","endLine":33,"endColumn":22},{"ruleId":"1640","severity":1,"message":"1697","line":2,"column":8,"nodeType":"1642","messageId":"1643","endLine":2,"endColumn":16},{"ruleId":"1640","severity":1,"message":"1698","line":5,"column":7,"nodeType":"1642","messageId":"1643","endLine":5,"endColumn":12},{"ruleId":"1699","severity":1,"message":"1700","line":105,"column":3,"nodeType":"1701","messageId":"1639","endLine":107,"endColumn":4},{"ruleId":"1702","severity":1,"message":"1703","line":11,"column":5,"nodeType":"1701","messageId":"1704","endLine":13,"endColumn":6},{"ruleId":"1636","severity":1,"message":"1705","line":35,"column":19,"nodeType":"1638","messageId":"1639","endLine":35,"endColumn":21},{"ruleId":"1636","severity":1,"message":"1637","line":73,"column":22,"nodeType":"1638","messageId":"1639","endLine":73,"endColumn":24},{"ruleId":"1636","severity":1,"message":"1705","line":31,"column":22,"nodeType":"1638","messageId":"1639","endLine":31,"endColumn":24},{"ruleId":"1706","severity":1,"message":"1707","line":56,"column":44,"nodeType":"1708","endLine":56,"endColumn":70},{"ruleId":"1709","severity":1,"message":"1710","line":54,"column":7,"nodeType":"1711","messageId":"1712","endLine":54,"endColumn":17},{"ruleId":"1709","severity":1,"message":"1710","line":59,"column":7,"nodeType":"1711","messageId":"1712","endLine":59,"endColumn":17},{"ruleId":"1636","severity":1,"message":"1637","line":95,"column":28,"nodeType":"1638","messageId":"1639","endLine":95,"endColumn":30},{"ruleId":"1713","severity":1,"message":"1714","line":255,"column":15,"nodeType":"1708","endLine":255,"endColumn":131},{"ruleId":"1715","severity":1,"message":"1716","line":325,"column":35,"nodeType":"1708","endLine":327,"endColumn":121},{"ruleId":"1706","severity":1,"message":"1707","line":332,"column":29,"nodeType":"1708","endLine":332,"endColumn":57},{"ruleId":"1717","severity":1,"message":"1718","line":357,"column":29,"nodeType":"1719","messageId":"1720","endLine":357,"endColumn":31},{"ruleId":"1636","severity":1,"message":"1637","line":359,"column":26,"nodeType":"1638","messageId":"1639","endLine":359,"endColumn":28},{"ruleId":"1636","severity":1,"message":"1637","line":361,"column":28,"nodeType":"1638","messageId":"1639","endLine":361,"endColumn":30},{"ruleId":"1636","severity":1,"message":"1637","line":361,"column":63,"nodeType":"1638","messageId":"1639","endLine":361,"endColumn":65},{"ruleId":"1636","severity":1,"message":"1637","line":381,"column":38,"nodeType":"1638","messageId":"1639","endLine":381,"endColumn":40},{"ruleId":"1636","severity":1,"message":"1637","line":381,"column":68,"nodeType":"1638","messageId":"1639","endLine":381,"endColumn":70},{"ruleId":"1636","severity":1,"message":"1637","line":62,"column":63,"nodeType":"1638","messageId":"1639","endLine":62,"endColumn":65},{"ruleId":"1636","severity":1,"message":"1637","line":63,"column":57,"nodeType":"1638","messageId":"1639","endLine":63,"endColumn":59},{"ruleId":"1636","severity":1,"message":"1637","line":66,"column":62,"nodeType":"1638","messageId":"1639","endLine":66,"endColumn":64},{"ruleId":"1636","severity":1,"message":"1637","line":69,"column":62,"nodeType":"1638","messageId":"1639","endLine":69,"endColumn":64},{"ruleId":"1636","severity":1,"message":"1637","line":72,"column":62,"nodeType":"1638","messageId":"1639","endLine":72,"endColumn":64},{"ruleId":"1636","severity":1,"message":"1637","line":102,"column":41,"nodeType":"1638","messageId":"1639","endLine":102,"endColumn":43},{"ruleId":"1636","severity":1,"message":"1637","line":102,"column":85,"nodeType":"1638","messageId":"1639","endLine":102,"endColumn":87},{"ruleId":"1636","severity":1,"message":"1637","line":126,"column":22,"nodeType":"1638","messageId":"1639","endLine":126,"endColumn":24},{"ruleId":"1636","severity":1,"message":"1637","line":146,"column":30,"nodeType":"1638","messageId":"1639","endLine":146,"endColumn":32},{"ruleId":"1717","severity":1,"message":"1718","line":236,"column":43,"nodeType":"1719","messageId":"1720","endLine":236,"endColumn":45},{"ruleId":"1636","severity":1,"message":"1637","line":237,"column":31,"nodeType":"1638","messageId":"1639","endLine":237,"endColumn":33},{"ruleId":"1636","severity":1,"message":"1705","line":237,"column":48,"nodeType":"1638","messageId":"1639","endLine":237,"endColumn":50},{"ruleId":"1636","severity":1,"message":"1637","line":238,"column":26,"nodeType":"1638","messageId":"1639","endLine":238,"endColumn":28},{"ruleId":"1636","severity":1,"message":"1637","line":248,"column":30,"nodeType":"1638","messageId":"1639","endLine":248,"endColumn":32},{"ruleId":"1702","severity":1,"message":"1703","line":11,"column":3,"nodeType":"1701","messageId":"1704","endLine":13,"endColumn":4},{"ruleId":"1640","severity":1,"message":"1721","line":3,"column":9,"nodeType":"1642","messageId":"1643","endLine":3,"endColumn":16},{"ruleId":"1640","severity":1,"message":"1721","line":2,"column":9,"nodeType":"1642","messageId":"1643","endLine":2,"endColumn":16},{"ruleId":"1640","severity":1,"message":"1722","line":6,"column":8,"nodeType":"1642","messageId":"1643","endLine":6,"endColumn":17},{"ruleId":"1636","severity":1,"message":"1637","line":78,"column":24,"nodeType":"1638","messageId":"1639","endLine":78,"endColumn":26},{"ruleId":"1640","severity":1,"message":"1723","line":154,"column":73,"nodeType":"1642","messageId":"1643","endLine":154,"endColumn":84},{"ruleId":"1636","severity":1,"message":"1637","line":71,"column":27,"nodeType":"1638","messageId":"1639","endLine":71,"endColumn":29},{"ruleId":"1717","severity":1,"message":"1718","line":28,"column":42,"nodeType":"1719","messageId":"1720","endLine":28,"endColumn":44},{"ruleId":"1636","severity":1,"message":"1637","line":29,"column":14,"nodeType":"1638","messageId":"1639","endLine":29,"endColumn":16},{"ruleId":"1640","severity":1,"message":"1724","line":4,"column":8,"nodeType":"1642","messageId":"1643","endLine":4,"endColumn":14},{"ruleId":"1640","severity":1,"message":"1725","line":7,"column":55,"nodeType":"1642","messageId":"1643","endLine":7,"endColumn":64},{"ruleId":"1640","severity":1,"message":"1726","line":15,"column":8,"nodeType":"1642","messageId":"1643","endLine":15,"endColumn":13},{"ruleId":"1636","severity":1,"message":"1637","line":59,"column":19,"nodeType":"1638","messageId":"1639","endLine":59,"endColumn":21},{"ruleId":"1636","severity":1,"message":"1705","line":59,"column":47,"nodeType":"1638","messageId":"1639","endLine":59,"endColumn":49},{"ruleId":"1636","severity":1,"message":"1705","line":125,"column":32,"nodeType":"1638","messageId":"1639","endLine":125,"endColumn":34},{"ruleId":"1636","severity":1,"message":"1705","line":148,"column":41,"nodeType":"1638","messageId":"1639","endLine":148,"endColumn":43},{"ruleId":"1636","severity":1,"message":"1637","line":203,"column":26,"nodeType":"1638","messageId":"1639","endLine":203,"endColumn":28},{"ruleId":"1636","severity":1,"message":"1637","line":221,"column":40,"nodeType":"1638","messageId":"1639","endLine":221,"endColumn":42},{"ruleId":"1636","severity":1,"message":"1637","line":250,"column":26,"nodeType":"1638","messageId":"1639","endLine":250,"endColumn":28},{"ruleId":"1636","severity":1,"message":"1637","line":265,"column":166,"nodeType":"1638","messageId":"1639","endLine":265,"endColumn":168},{"ruleId":"1636","severity":1,"message":"1637","line":288,"column":84,"nodeType":"1638","messageId":"1639","endLine":288,"endColumn":86},{"ruleId":"1636","severity":1,"message":"1637","line":319,"column":24,"nodeType":"1638","messageId":"1639","endLine":319,"endColumn":26},{"ruleId":"1636","severity":1,"message":"1637","line":321,"column":28,"nodeType":"1638","messageId":"1639","endLine":321,"endColumn":30},{"ruleId":"1636","severity":1,"message":"1637","line":323,"column":54,"nodeType":"1638","messageId":"1639","endLine":323,"endColumn":56},{"ruleId":"1636","severity":1,"message":"1637","line":323,"column":70,"nodeType":"1638","messageId":"1639","endLine":323,"endColumn":72},{"ruleId":"1636","severity":1,"message":"1637","line":328,"column":35,"nodeType":"1638","messageId":"1639","endLine":328,"endColumn":37},{"ruleId":"1636","severity":1,"message":"1637","line":330,"column":35,"nodeType":"1638","messageId":"1639","endLine":330,"endColumn":37},{"ruleId":"1727","severity":1,"message":"1728","line":333,"column":23,"nodeType":"1642","messageId":"1729","endLine":333,"endColumn":31},{"ruleId":"1636","severity":1,"message":"1637","line":334,"column":54,"nodeType":"1638","messageId":"1639","endLine":334,"endColumn":56},{"ruleId":"1636","severity":1,"message":"1637","line":334,"column":70,"nodeType":"1638","messageId":"1639","endLine":334,"endColumn":72},{"ruleId":"1636","severity":1,"message":"1637","line":352,"column":30,"nodeType":"1638","messageId":"1639","endLine":352,"endColumn":32},{"ruleId":"1727","severity":1,"message":"1730","line":394,"column":15,"nodeType":"1642","messageId":"1729","endLine":394,"endColumn":24},{"ruleId":"1731","severity":1,"message":"1732","line":394,"column":77,"nodeType":"1638","messageId":"1733","endLine":394,"endColumn":78},{"ruleId":"1727","severity":1,"message":"1734","line":396,"column":15,"nodeType":"1642","messageId":"1729","endLine":396,"endColumn":22},{"ruleId":"1731","severity":1,"message":"1732","line":396,"column":71,"nodeType":"1638","messageId":"1733","endLine":396,"endColumn":72},{"ruleId":"1727","severity":1,"message":"1735","line":399,"column":15,"nodeType":"1642","messageId":"1729","endLine":399,"endColumn":29},{"ruleId":"1727","severity":1,"message":"1730","line":400,"column":15,"nodeType":"1642","messageId":"1729","endLine":400,"endColumn":24},{"ruleId":"1731","severity":1,"message":"1732","line":400,"column":77,"nodeType":"1638","messageId":"1733","endLine":400,"endColumn":78},{"ruleId":"1727","severity":1,"message":"1736","line":21,"column":11,"nodeType":"1642","messageId":"1729","endLine":21,"endColumn":14},{"ruleId":"1737","severity":1,"message":"1738","line":20,"column":7,"nodeType":"1739","messageId":"1639","endLine":20,"endColumn":14},{"ruleId":"1640","severity":1,"message":"1740","line":10,"column":8,"nodeType":"1642","messageId":"1643","endLine":10,"endColumn":13},{"ruleId":"1636","severity":1,"message":"1637","line":109,"column":8,"nodeType":"1638","messageId":"1639","endLine":109,"endColumn":10},{"ruleId":"1715","severity":1,"message":"1741","line":112,"column":15,"nodeType":"1708","endLine":112,"endColumn":81},{"ruleId":"1636","severity":1,"message":"1637","line":113,"column":40,"nodeType":"1638","messageId":"1639","endLine":113,"endColumn":42},{"ruleId":"1715","severity":1,"message":"1741","line":116,"column":14,"nodeType":"1708","endLine":116,"endColumn":80},{"ruleId":"1636","severity":1,"message":"1637","line":146,"column":61,"nodeType":"1638","messageId":"1639","endLine":146,"endColumn":63},{"ruleId":"1636","severity":1,"message":"1637","line":147,"column":11,"nodeType":"1638","messageId":"1639","endLine":147,"endColumn":13},{"ruleId":"1636","severity":1,"message":"1637","line":171,"column":18,"nodeType":"1638","messageId":"1639","endLine":171,"endColumn":20},{"ruleId":"1636","severity":1,"message":"1637","line":174,"column":21,"nodeType":"1638","messageId":"1639","endLine":174,"endColumn":23},{"ruleId":"1636","severity":1,"message":"1637","line":176,"column":41,"nodeType":"1638","messageId":"1639","endLine":176,"endColumn":43},{"ruleId":"1636","severity":1,"message":"1637","line":176,"column":60,"nodeType":"1638","messageId":"1639","endLine":176,"endColumn":62},{"ruleId":"1636","severity":1,"message":"1637","line":186,"column":28,"nodeType":"1638","messageId":"1639","endLine":186,"endColumn":30},{"ruleId":"1636","severity":1,"message":"1637","line":188,"column":28,"nodeType":"1638","messageId":"1639","endLine":188,"endColumn":30},{"ruleId":"1636","severity":1,"message":"1637","line":53,"column":15,"nodeType":"1638","messageId":"1639","endLine":53,"endColumn":17},{"ruleId":"1636","severity":1,"message":"1637","line":91,"column":27,"nodeType":"1638","messageId":"1639","endLine":91,"endColumn":29},{"ruleId":"1636","severity":1,"message":"1637","line":143,"column":29,"nodeType":"1638","messageId":"1639","endLine":143,"endColumn":31},{"ruleId":"1636","severity":1,"message":"1705","line":143,"column":71,"nodeType":"1638","messageId":"1639","endLine":143,"endColumn":73},{"ruleId":"1636","severity":1,"message":"1637","line":152,"column":50,"nodeType":"1638","messageId":"1639","endLine":152,"endColumn":52},{"ruleId":"1636","severity":1,"message":"1637","line":152,"column":68,"nodeType":"1638","messageId":"1639","endLine":152,"endColumn":70},{"ruleId":"1742","severity":1,"message":"1743","line":196,"column":6,"nodeType":"1708","endLine":196,"endColumn":24},{"ruleId":"1717","severity":1,"message":"1718","line":224,"column":32,"nodeType":"1719","messageId":"1720","endLine":224,"endColumn":34},{"ruleId":"1636","severity":1,"message":"1637","line":226,"column":16,"nodeType":"1638","messageId":"1639","endLine":226,"endColumn":18},{"ruleId":"1636","severity":1,"message":"1637","line":226,"column":51,"nodeType":"1638","messageId":"1639","endLine":226,"endColumn":53},{"ruleId":"1717","severity":1,"message":"1718","line":239,"column":32,"nodeType":"1719","messageId":"1720","endLine":239,"endColumn":34},{"ruleId":"1636","severity":1,"message":"1637","line":240,"column":14,"nodeType":"1638","messageId":"1639","endLine":240,"endColumn":16},{"ruleId":"1636","severity":1,"message":"1705","line":263,"column":24,"nodeType":"1638","messageId":"1639","endLine":263,"endColumn":26},{"ruleId":"1636","severity":1,"message":"1637","line":269,"column":18,"nodeType":"1638","messageId":"1639","endLine":269,"endColumn":20},{"ruleId":"1636","severity":1,"message":"1637","line":271,"column":44,"nodeType":"1638","messageId":"1639","endLine":271,"endColumn":46},{"ruleId":"1636","severity":1,"message":"1637","line":271,"column":60,"nodeType":"1638","messageId":"1639","endLine":271,"endColumn":62},{"ruleId":"1636","severity":1,"message":"1637","line":276,"column":34,"nodeType":"1638","messageId":"1639","endLine":276,"endColumn":36},{"ruleId":"1636","severity":1,"message":"1637","line":276,"column":56,"nodeType":"1638","messageId":"1639","endLine":276,"endColumn":58},{"ruleId":"1636","severity":1,"message":"1637","line":278,"column":40,"nodeType":"1638","messageId":"1639","endLine":278,"endColumn":42},{"ruleId":"1636","severity":1,"message":"1637","line":278,"column":62,"nodeType":"1638","messageId":"1639","endLine":278,"endColumn":64},{"ruleId":"1636","severity":1,"message":"1637","line":283,"column":25,"nodeType":"1638","messageId":"1639","endLine":283,"endColumn":27},{"ruleId":"1727","severity":1,"message":"1728","line":284,"column":13,"nodeType":"1642","messageId":"1729","endLine":284,"endColumn":21},{"ruleId":"1727","severity":1,"message":"1744","line":286,"column":17,"nodeType":"1642","messageId":"1729","endLine":286,"endColumn":18},{"ruleId":"1636","severity":1,"message":"1637","line":287,"column":32,"nodeType":"1638","messageId":"1639","endLine":287,"endColumn":34},{"ruleId":"1636","severity":1,"message":"1637","line":287,"column":54,"nodeType":"1638","messageId":"1639","endLine":287,"endColumn":56},{"ruleId":"1636","severity":1,"message":"1637","line":291,"column":25,"nodeType":"1638","messageId":"1639","endLine":291,"endColumn":27},{"ruleId":"1636","severity":1,"message":"1637","line":293,"column":25,"nodeType":"1638","messageId":"1639","endLine":293,"endColumn":27},{"ruleId":"1636","severity":1,"message":"1637","line":383,"column":28,"nodeType":"1638","messageId":"1639","endLine":383,"endColumn":30},{"ruleId":"1636","severity":1,"message":"1705","line":410,"column":24,"nodeType":"1638","messageId":"1639","endLine":410,"endColumn":26},{"ruleId":"1636","severity":1,"message":"1637","line":416,"column":18,"nodeType":"1638","messageId":"1639","endLine":416,"endColumn":20},{"ruleId":"1636","severity":1,"message":"1637","line":435,"column":25,"nodeType":"1638","messageId":"1639","endLine":435,"endColumn":27},{"ruleId":"1727","severity":1,"message":"1728","line":436,"column":13,"nodeType":"1642","messageId":"1729","endLine":436,"endColumn":21},{"ruleId":"1636","severity":1,"message":"1637","line":439,"column":32,"nodeType":"1638","messageId":"1639","endLine":439,"endColumn":34},{"ruleId":"1636","severity":1,"message":"1637","line":439,"column":54,"nodeType":"1638","messageId":"1639","endLine":439,"endColumn":56},{"ruleId":"1636","severity":1,"message":"1637","line":443,"column":25,"nodeType":"1638","messageId":"1639","endLine":443,"endColumn":27},{"ruleId":"1636","severity":1,"message":"1637","line":445,"column":25,"nodeType":"1638","messageId":"1639","endLine":445,"endColumn":27},{"ruleId":"1636","severity":1,"message":"1705","line":486,"column":24,"nodeType":"1638","messageId":"1639","endLine":486,"endColumn":26},{"ruleId":"1636","severity":1,"message":"1637","line":493,"column":20,"nodeType":"1638","messageId":"1639","endLine":493,"endColumn":22},{"ruleId":"1636","severity":1,"message":"1637","line":493,"column":42,"nodeType":"1638","messageId":"1639","endLine":493,"endColumn":44},{"ruleId":"1636","severity":1,"message":"1637","line":493,"column":66,"nodeType":"1638","messageId":"1639","endLine":493,"endColumn":68},{"ruleId":"1636","severity":1,"message":"1637","line":496,"column":27,"nodeType":"1638","messageId":"1639","endLine":496,"endColumn":29},{"ruleId":"1727","severity":1,"message":"1728","line":497,"column":15,"nodeType":"1642","messageId":"1729","endLine":497,"endColumn":23},{"ruleId":"1636","severity":1,"message":"1637","line":500,"column":34,"nodeType":"1638","messageId":"1639","endLine":500,"endColumn":36},{"ruleId":"1636","severity":1,"message":"1637","line":500,"column":56,"nodeType":"1638","messageId":"1639","endLine":500,"endColumn":58},{"ruleId":"1636","severity":1,"message":"1637","line":504,"column":27,"nodeType":"1638","messageId":"1639","endLine":504,"endColumn":29},{"ruleId":"1636","severity":1,"message":"1637","line":506,"column":27,"nodeType":"1638","messageId":"1639","endLine":506,"endColumn":29},{"ruleId":"1636","severity":1,"message":"1637","line":44,"column":29,"nodeType":"1638","messageId":"1639","endLine":44,"endColumn":31},{"ruleId":"1636","severity":1,"message":"1637","line":69,"column":32,"nodeType":"1638","messageId":"1639","endLine":69,"endColumn":34},{"ruleId":"1636","severity":1,"message":"1637","line":36,"column":32,"nodeType":"1638","messageId":"1639","endLine":36,"endColumn":34},{"ruleId":"1636","severity":1,"message":"1637","line":62,"column":13,"nodeType":"1638","messageId":"1639","endLine":62,"endColumn":15},{"ruleId":"1636","severity":1,"message":"1637","line":67,"column":16,"nodeType":"1638","messageId":"1639","endLine":67,"endColumn":18},{"ruleId":"1636","severity":1,"message":"1637","line":67,"column":31,"nodeType":"1638","messageId":"1639","endLine":67,"endColumn":33},{"ruleId":"1636","severity":1,"message":"1637","line":69,"column":54,"nodeType":"1638","messageId":"1639","endLine":69,"endColumn":56},{"ruleId":"1636","severity":1,"message":"1637","line":71,"column":55,"nodeType":"1638","messageId":"1639","endLine":71,"endColumn":57},{"ruleId":"1636","severity":1,"message":"1637","line":86,"column":21,"nodeType":"1638","messageId":"1639","endLine":86,"endColumn":23},{"ruleId":"1636","severity":1,"message":"1637","line":86,"column":36,"nodeType":"1638","messageId":"1639","endLine":86,"endColumn":38},{"ruleId":"1636","severity":1,"message":"1637","line":86,"column":51,"nodeType":"1638","messageId":"1639","endLine":86,"endColumn":53},{"ruleId":"1636","severity":1,"message":"1637","line":86,"column":66,"nodeType":"1638","messageId":"1639","endLine":86,"endColumn":68},{"ruleId":"1636","severity":1,"message":"1637","line":88,"column":43,"nodeType":"1638","messageId":"1639","endLine":88,"endColumn":45},{"ruleId":"1636","severity":1,"message":"1637","line":99,"column":21,"nodeType":"1638","messageId":"1639","endLine":99,"endColumn":23},{"ruleId":"1636","severity":1,"message":"1705","line":104,"column":11,"nodeType":"1638","messageId":"1639","endLine":104,"endColumn":13},{"ruleId":"1727","severity":1,"message":"1745","line":115,"column":12,"nodeType":"1642","messageId":"1729","endLine":115,"endColumn":19},{"ruleId":"1727","severity":1,"message":"1746","line":122,"column":9,"nodeType":"1642","messageId":"1729","endLine":122,"endColumn":16},{"ruleId":"1727","severity":1,"message":"1747","line":125,"column":10,"nodeType":"1642","messageId":"1729","endLine":125,"endColumn":16},{"ruleId":"1636","severity":1,"message":"1637","line":166,"column":24,"nodeType":"1638","messageId":"1639","endLine":166,"endColumn":26},{"ruleId":"1636","severity":1,"message":"1637","line":168,"column":28,"nodeType":"1638","messageId":"1639","endLine":168,"endColumn":30},{"ruleId":"1717","severity":1,"message":"1718","line":57,"column":41,"nodeType":"1719","messageId":"1720","endLine":57,"endColumn":43},{"ruleId":"1636","severity":1,"message":"1637","line":58,"column":19,"nodeType":"1638","messageId":"1639","endLine":58,"endColumn":21},{"ruleId":"1636","severity":1,"message":"1637","line":60,"column":77,"nodeType":"1638","messageId":"1639","endLine":60,"endColumn":79},{"ruleId":"1636","severity":1,"message":"1637","line":63,"column":84,"nodeType":"1638","messageId":"1639","endLine":63,"endColumn":86},{"ruleId":"1636","severity":1,"message":"1637","line":86,"column":12,"nodeType":"1638","messageId":"1639","endLine":86,"endColumn":14},{"ruleId":"1727","severity":1,"message":"1748","line":101,"column":10,"nodeType":"1642","messageId":"1729","endLine":101,"endColumn":15},{"ruleId":"1636","severity":1,"message":"1637","line":102,"column":12,"nodeType":"1638","messageId":"1639","endLine":102,"endColumn":14},{"ruleId":"1636","severity":1,"message":"1637","line":140,"column":26,"nodeType":"1638","messageId":"1639","endLine":140,"endColumn":28},{"ruleId":"1636","severity":1,"message":"1637","line":144,"column":32,"nodeType":"1638","messageId":"1639","endLine":144,"endColumn":34},{"ruleId":"1636","severity":1,"message":"1637","line":186,"column":32,"nodeType":"1638","messageId":"1639","endLine":186,"endColumn":34},{"ruleId":"1636","severity":1,"message":"1637","line":226,"column":9,"nodeType":"1638","messageId":"1639","endLine":226,"endColumn":11},{"ruleId":"1636","severity":1,"message":"1637","line":276,"column":12,"nodeType":"1638","messageId":"1639","endLine":276,"endColumn":14},{"ruleId":"1636","severity":1,"message":"1637","line":281,"column":16,"nodeType":"1638","messageId":"1639","endLine":281,"endColumn":18},{"ruleId":"1636","severity":1,"message":"1637","line":281,"column":31,"nodeType":"1638","messageId":"1639","endLine":281,"endColumn":33},{"ruleId":"1636","severity":1,"message":"1637","line":283,"column":54,"nodeType":"1638","messageId":"1639","endLine":283,"endColumn":56},{"ruleId":"1636","severity":1,"message":"1637","line":285,"column":55,"nodeType":"1638","messageId":"1639","endLine":285,"endColumn":57},{"ruleId":"1636","severity":1,"message":"1637","line":300,"column":21,"nodeType":"1638","messageId":"1639","endLine":300,"endColumn":23},{"ruleId":"1636","severity":1,"message":"1637","line":300,"column":36,"nodeType":"1638","messageId":"1639","endLine":300,"endColumn":38},{"ruleId":"1636","severity":1,"message":"1637","line":300,"column":51,"nodeType":"1638","messageId":"1639","endLine":300,"endColumn":53},{"ruleId":"1636","severity":1,"message":"1637","line":300,"column":66,"nodeType":"1638","messageId":"1639","endLine":300,"endColumn":68},{"ruleId":"1636","severity":1,"message":"1637","line":302,"column":43,"nodeType":"1638","messageId":"1639","endLine":302,"endColumn":45},{"ruleId":"1636","severity":1,"message":"1637","line":313,"column":21,"nodeType":"1638","messageId":"1639","endLine":313,"endColumn":23},{"ruleId":"1636","severity":1,"message":"1705","line":318,"column":11,"nodeType":"1638","messageId":"1639","endLine":318,"endColumn":13},{"ruleId":"1727","severity":1,"message":"1745","line":329,"column":12,"nodeType":"1642","messageId":"1729","endLine":329,"endColumn":19},{"ruleId":"1727","severity":1,"message":"1746","line":336,"column":9,"nodeType":"1642","messageId":"1729","endLine":336,"endColumn":16},{"ruleId":"1727","severity":1,"message":"1747","line":339,"column":10,"nodeType":"1642","messageId":"1729","endLine":339,"endColumn":16},{"ruleId":"1636","severity":1,"message":"1637","line":380,"column":23,"nodeType":"1638","messageId":"1639","endLine":380,"endColumn":25},{"ruleId":"1636","severity":1,"message":"1637","line":382,"column":27,"nodeType":"1638","messageId":"1639","endLine":382,"endColumn":29},{"ruleId":"1636","severity":1,"message":"1637","line":388,"column":27,"nodeType":"1638","messageId":"1639","endLine":388,"endColumn":29},{"ruleId":"1636","severity":1,"message":"1637","line":419,"column":18,"nodeType":"1638","messageId":"1639","endLine":419,"endColumn":20},{"ruleId":"1636","severity":1,"message":"1637","line":419,"column":33,"nodeType":"1638","messageId":"1639","endLine":419,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1637","line":421,"column":16,"nodeType":"1638","messageId":"1639","endLine":421,"endColumn":18},{"ruleId":"1636","severity":1,"message":"1637","line":421,"column":71,"nodeType":"1638","messageId":"1639","endLine":421,"endColumn":73},{"ruleId":"1636","severity":1,"message":"1637","line":434,"column":23,"nodeType":"1638","messageId":"1639","endLine":434,"endColumn":25},{"ruleId":"1749","severity":1,"message":"1750","line":438,"column":26,"nodeType":"1751","messageId":"1752","endLine":444,"endColumn":9},{"ruleId":"1636","severity":1,"message":"1705","line":440,"column":22,"nodeType":"1638","messageId":"1639","endLine":440,"endColumn":24},{"ruleId":"1636","severity":1,"message":"1637","line":446,"column":17,"nodeType":"1638","messageId":"1639","endLine":446,"endColumn":19},{"ruleId":"1636","severity":1,"message":"1637","line":461,"column":24,"nodeType":"1638","messageId":"1639","endLine":461,"endColumn":26},{"ruleId":"1727","severity":1,"message":"1744","line":473,"column":16,"nodeType":"1642","messageId":"1729","endLine":473,"endColumn":17},{"ruleId":"1636","severity":1,"message":"1637","line":474,"column":30,"nodeType":"1638","messageId":"1639","endLine":474,"endColumn":32},{"ruleId":"1636","severity":1,"message":"1637","line":480,"column":33,"nodeType":"1638","messageId":"1639","endLine":480,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1637","line":487,"column":17,"nodeType":"1638","messageId":"1639","endLine":487,"endColumn":19},{"ruleId":"1636","severity":1,"message":"1637","line":497,"column":10,"nodeType":"1638","messageId":"1639","endLine":497,"endColumn":12},{"ruleId":"1636","severity":1,"message":"1637","line":508,"column":19,"nodeType":"1638","messageId":"1639","endLine":508,"endColumn":21},{"ruleId":"1636","severity":1,"message":"1637","line":508,"column":34,"nodeType":"1638","messageId":"1639","endLine":508,"endColumn":36},{"ruleId":"1636","severity":1,"message":"1637","line":508,"column":49,"nodeType":"1638","messageId":"1639","endLine":508,"endColumn":51},{"ruleId":"1636","severity":1,"message":"1637","line":508,"column":64,"nodeType":"1638","messageId":"1639","endLine":508,"endColumn":66},{"ruleId":"1636","severity":1,"message":"1637","line":523,"column":10,"nodeType":"1638","messageId":"1639","endLine":523,"endColumn":12},{"ruleId":"1636","severity":1,"message":"1637","line":531,"column":16,"nodeType":"1638","messageId":"1639","endLine":531,"endColumn":18},{"ruleId":"1636","severity":1,"message":"1637","line":531,"column":32,"nodeType":"1638","messageId":"1639","endLine":531,"endColumn":34},{"ruleId":"1636","severity":1,"message":"1637","line":533,"column":90,"nodeType":"1638","messageId":"1639","endLine":533,"endColumn":92},{"ruleId":"1636","severity":1,"message":"1637","line":537,"column":23,"nodeType":"1638","messageId":"1639","endLine":537,"endColumn":25},{"ruleId":"1636","severity":1,"message":"1637","line":537,"column":39,"nodeType":"1638","messageId":"1639","endLine":537,"endColumn":41},{"ruleId":"1636","severity":1,"message":"1637","line":537,"column":54,"nodeType":"1638","messageId":"1639","endLine":537,"endColumn":56},{"ruleId":"1636","severity":1,"message":"1637","line":537,"column":69,"nodeType":"1638","messageId":"1639","endLine":537,"endColumn":71},{"ruleId":"1636","severity":1,"message":"1637","line":541,"column":23,"nodeType":"1638","messageId":"1639","endLine":541,"endColumn":25},{"ruleId":"1636","severity":1,"message":"1637","line":548,"column":15,"nodeType":"1638","messageId":"1639","endLine":548,"endColumn":17},{"ruleId":"1636","severity":1,"message":"1637","line":580,"column":14,"nodeType":"1638","messageId":"1639","endLine":580,"endColumn":16},{"ruleId":"1636","severity":1,"message":"1637","line":580,"column":30,"nodeType":"1638","messageId":"1639","endLine":580,"endColumn":32},{"ruleId":"1636","severity":1,"message":"1637","line":582,"column":90,"nodeType":"1638","messageId":"1639","endLine":582,"endColumn":92},{"ruleId":"1636","severity":1,"message":"1637","line":586,"column":24,"nodeType":"1638","messageId":"1639","endLine":586,"endColumn":26},{"ruleId":"1636","severity":1,"message":"1637","line":586,"column":40,"nodeType":"1638","messageId":"1639","endLine":586,"endColumn":42},{"ruleId":"1636","severity":1,"message":"1637","line":586,"column":55,"nodeType":"1638","messageId":"1639","endLine":586,"endColumn":57},{"ruleId":"1636","severity":1,"message":"1637","line":586,"column":70,"nodeType":"1638","messageId":"1639","endLine":586,"endColumn":72},{"ruleId":"1636","severity":1,"message":"1637","line":590,"column":20,"nodeType":"1638","messageId":"1639","endLine":590,"endColumn":22},{"ruleId":"1636","severity":1,"message":"1637","line":592,"column":29,"nodeType":"1638","messageId":"1639","endLine":592,"endColumn":31},{"ruleId":"1636","severity":1,"message":"1637","line":596,"column":13,"nodeType":"1638","messageId":"1639","endLine":596,"endColumn":15},{"ruleId":"1636","severity":1,"message":"1637","line":613,"column":14,"nodeType":"1638","messageId":"1639","endLine":613,"endColumn":16},{"ruleId":"1636","severity":1,"message":"1637","line":613,"column":30,"nodeType":"1638","messageId":"1639","endLine":613,"endColumn":32},{"ruleId":"1636","severity":1,"message":"1637","line":615,"column":90,"nodeType":"1638","messageId":"1639","endLine":615,"endColumn":92},{"ruleId":"1636","severity":1,"message":"1637","line":619,"column":20,"nodeType":"1638","messageId":"1639","endLine":619,"endColumn":22},{"ruleId":"1636","severity":1,"message":"1637","line":619,"column":35,"nodeType":"1638","messageId":"1639","endLine":619,"endColumn":37},{"ruleId":"1636","severity":1,"message":"1637","line":619,"column":50,"nodeType":"1638","messageId":"1639","endLine":619,"endColumn":52},{"ruleId":"1636","severity":1,"message":"1637","line":619,"column":65,"nodeType":"1638","messageId":"1639","endLine":619,"endColumn":67},{"ruleId":"1636","severity":1,"message":"1637","line":623,"column":20,"nodeType":"1638","messageId":"1639","endLine":623,"endColumn":22},{"ruleId":"1636","severity":1,"message":"1637","line":625,"column":29,"nodeType":"1638","messageId":"1639","endLine":625,"endColumn":31},{"ruleId":"1636","severity":1,"message":"1637","line":629,"column":13,"nodeType":"1638","messageId":"1639","endLine":629,"endColumn":15},{"ruleId":"1717","severity":1,"message":"1718","line":783,"column":44,"nodeType":"1719","messageId":"1720","endLine":783,"endColumn":46},{"ruleId":"1636","severity":1,"message":"1637","line":791,"column":17,"nodeType":"1638","messageId":"1639","endLine":791,"endColumn":19},{"ruleId":"1636","severity":1,"message":"1637","line":793,"column":23,"nodeType":"1638","messageId":"1639","endLine":793,"endColumn":25},{"ruleId":"1636","severity":1,"message":"1637","line":795,"column":23,"nodeType":"1638","messageId":"1639","endLine":795,"endColumn":25},{"ruleId":"1636","severity":1,"message":"1637","line":795,"column":38,"nodeType":"1638","messageId":"1639","endLine":795,"endColumn":40},{"ruleId":"1636","severity":1,"message":"1637","line":795,"column":53,"nodeType":"1638","messageId":"1639","endLine":795,"endColumn":55},{"ruleId":"1636","severity":1,"message":"1637","line":802,"column":23,"nodeType":"1638","messageId":"1639","endLine":802,"endColumn":25},{"ruleId":"1709","severity":1,"message":"1710","line":804,"column":5,"nodeType":"1711","messageId":"1712","endLine":804,"endColumn":32},{"ruleId":"1636","severity":1,"message":"1637","line":811,"column":23,"nodeType":"1638","messageId":"1639","endLine":811,"endColumn":25},{"ruleId":"1636","severity":1,"message":"1637","line":826,"column":14,"nodeType":"1638","messageId":"1639","endLine":826,"endColumn":16},{"ruleId":"1636","severity":1,"message":"1705","line":859,"column":19,"nodeType":"1638","messageId":"1639","endLine":859,"endColumn":21},{"ruleId":"1640","severity":1,"message":"1753","line":15,"column":10,"nodeType":"1642","messageId":"1643","endLine":15,"endColumn":16},{"ruleId":"1636","severity":1,"message":"1637","line":129,"column":70,"nodeType":"1638","messageId":"1639","endLine":129,"endColumn":72},{"ruleId":"1636","severity":1,"message":"1637","line":160,"column":29,"nodeType":"1638","messageId":"1639","endLine":160,"endColumn":31},{"ruleId":"1636","severity":1,"message":"1637","line":167,"column":45,"nodeType":"1638","messageId":"1639","endLine":167,"endColumn":47},{"ruleId":"1636","severity":1,"message":"1705","line":198,"column":32,"nodeType":"1638","messageId":"1639","endLine":198,"endColumn":34},{"ruleId":"1636","severity":1,"message":"1705","line":203,"column":32,"nodeType":"1638","messageId":"1639","endLine":203,"endColumn":34},{"ruleId":"1754","severity":1,"message":"1755","line":210,"column":9,"nodeType":"1756","messageId":"1757","endLine":210,"endColumn":41,"fix":"1758"},{"ruleId":"1754","severity":1,"message":"1759","line":211,"column":9,"nodeType":"1756","messageId":"1757","endLine":211,"endColumn":37,"fix":"1760"},{"ruleId":"1754","severity":1,"message":"1761","line":212,"column":9,"nodeType":"1756","messageId":"1757","endLine":212,"endColumn":32,"fix":"1762"},{"ruleId":"1636","severity":1,"message":"1705","line":222,"column":33,"nodeType":"1638","messageId":"1639","endLine":222,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1705","line":227,"column":33,"nodeType":"1638","messageId":"1639","endLine":227,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1705","line":231,"column":31,"nodeType":"1638","messageId":"1639","endLine":231,"endColumn":33},{"ruleId":"1636","severity":1,"message":"1637","line":272,"column":27,"nodeType":"1638","messageId":"1639","endLine":272,"endColumn":29},{"ruleId":"1636","severity":1,"message":"1637","line":303,"column":29,"nodeType":"1638","messageId":"1639","endLine":303,"endColumn":31},{"ruleId":"1636","severity":1,"message":"1637","line":350,"column":29,"nodeType":"1638","messageId":"1639","endLine":350,"endColumn":31},{"ruleId":"1636","severity":1,"message":"1637","line":367,"column":45,"nodeType":"1638","messageId":"1639","endLine":367,"endColumn":47},{"ruleId":"1636","severity":1,"message":"1637","line":395,"column":69,"nodeType":"1638","messageId":"1639","endLine":395,"endColumn":71},{"ruleId":"1636","severity":1,"message":"1637","line":640,"column":37,"nodeType":"1638","messageId":"1639","endLine":640,"endColumn":39},{"ruleId":"1636","severity":1,"message":"1637","line":658,"column":37,"nodeType":"1638","messageId":"1639","endLine":658,"endColumn":39},{"ruleId":"1636","severity":1,"message":"1637","line":907,"column":67,"nodeType":"1638","messageId":"1639","endLine":907,"endColumn":69},{"ruleId":"1636","severity":1,"message":"1637","line":909,"column":70,"nodeType":"1638","messageId":"1639","endLine":909,"endColumn":72},{"ruleId":"1636","severity":1,"message":"1637","line":1118,"column":40,"nodeType":"1638","messageId":"1639","endLine":1118,"endColumn":42},{"ruleId":"1717","severity":1,"message":"1763","line":1215,"column":45,"nodeType":"1719","messageId":"1764","endLine":1215,"endColumn":47},{"ruleId":"1636","severity":1,"message":"1637","line":1216,"column":21,"nodeType":"1638","messageId":"1639","endLine":1216,"endColumn":23},{"ruleId":"1640","severity":1,"message":"1721","line":2,"column":9,"nodeType":"1642","messageId":"1643","endLine":2,"endColumn":16},{"ruleId":"1640","severity":1,"message":"1765","line":3,"column":8,"nodeType":"1642","messageId":"1643","endLine":3,"endColumn":14},{"ruleId":"1640","severity":1,"message":"1766","line":5,"column":8,"nodeType":"1642","messageId":"1643","endLine":5,"endColumn":12},{"ruleId":"1640","severity":1,"message":"1767","line":6,"column":9,"nodeType":"1642","messageId":"1643","endLine":6,"endColumn":20},{"ruleId":"1640","severity":1,"message":"1768","line":7,"column":8,"nodeType":"1642","messageId":"1643","endLine":7,"endColumn":14},{"ruleId":"1640","severity":1,"message":"1769","line":8,"column":8,"nodeType":"1642","messageId":"1643","endLine":8,"endColumn":11},{"ruleId":"1640","severity":1,"message":"1770","line":3,"column":10,"nodeType":"1642","messageId":"1643","endLine":3,"endColumn":25},{"ruleId":"1640","severity":1,"message":"1771","line":4,"column":10,"nodeType":"1642","messageId":"1643","endLine":4,"endColumn":21},{"ruleId":"1640","severity":1,"message":"1765","line":7,"column":8,"nodeType":"1642","messageId":"1643","endLine":7,"endColumn":14},{"ruleId":"1636","severity":1,"message":"1637","line":74,"column":29,"nodeType":"1638","messageId":"1639","endLine":74,"endColumn":31},{"ruleId":"1636","severity":1,"message":"1637","line":76,"column":35,"nodeType":"1638","messageId":"1639","endLine":76,"endColumn":37},{"ruleId":"1640","severity":1,"message":"1721","line":3,"column":9,"nodeType":"1642","messageId":"1643","endLine":3,"endColumn":16},{"ruleId":"1640","severity":1,"message":"1767","line":20,"column":9,"nodeType":"1642","messageId":"1643","endLine":20,"endColumn":20},{"ruleId":"1640","severity":1,"message":"1765","line":23,"column":8,"nodeType":"1642","messageId":"1643","endLine":23,"endColumn":14},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":77,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":78,"suggestions":"1772"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":158,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":159,"suggestions":"1773"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":223,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":224,"suggestions":"1774"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":250,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":251,"suggestions":"1775"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":271,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":272,"suggestions":"1776"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":309,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":310,"suggestions":"1777"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":343,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":344,"suggestions":"1778"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":412,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":413,"suggestions":"1779"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":435,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":436,"suggestions":"1780"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":440,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":441,"suggestions":"1781"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":478,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":479,"suggestions":"1782"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":491,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":492,"suggestions":"1783"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":516,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":517,"suggestions":"1784"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":525,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":526,"suggestions":"1785"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":558,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":559,"suggestions":"1786"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":582,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":583,"suggestions":"1787"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":686,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":687,"suggestions":"1788"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":730,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":731,"suggestions":"1789"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":751,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":752,"suggestions":"1790"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":793,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":794,"suggestions":"1791"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":846,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":847,"suggestions":"1792"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":943,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":944,"suggestions":"1793"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1028,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1029,"suggestions":"1794"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1063,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1064,"suggestions":"1795"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1092,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1093,"suggestions":"1796"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1098,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1099,"suggestions":"1797"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1120,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1121,"suggestions":"1798"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1129,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1130,"suggestions":"1799"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1203,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1204,"suggestions":"1800"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1210,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1211,"suggestions":"1801"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1225,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1226,"suggestions":"1802"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1249,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1250,"suggestions":"1803"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1261,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1262,"suggestions":"1804"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1269,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1270,"suggestions":"1805"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1319,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1320,"suggestions":"1806"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1323,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1324,"suggestions":"1807"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1376,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1377,"suggestions":"1808"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1382,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1383,"suggestions":"1809"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1397,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1398,"suggestions":"1810"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1401,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1402,"suggestions":"1811"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1423,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1424,"suggestions":"1812"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1435,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1436,"suggestions":"1813"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1496,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1497,"suggestions":"1814"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1554,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1555,"suggestions":"1815"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1601,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1602,"suggestions":"1816"},{"ruleId":"1646","severity":1,"message":"1647","line":46,"column":1617,"nodeType":"1648","messageId":"1649","endLine":46,"endColumn":1618,"suggestions":"1817"},{"ruleId":"1636","severity":1,"message":"1637","line":145,"column":11,"nodeType":"1638","messageId":"1639","endLine":145,"endColumn":13},{"ruleId":"1636","severity":1,"message":"1637","line":148,"column":17,"nodeType":"1638","messageId":"1639","endLine":148,"endColumn":19},{"ruleId":"1636","severity":1,"message":"1637","line":151,"column":17,"nodeType":"1638","messageId":"1639","endLine":151,"endColumn":19},{"ruleId":"1636","severity":1,"message":"1637","line":154,"column":17,"nodeType":"1638","messageId":"1639","endLine":154,"endColumn":19},{"ruleId":"1636","severity":1,"message":"1637","line":157,"column":17,"nodeType":"1638","messageId":"1639","endLine":157,"endColumn":19},{"ruleId":"1636","severity":1,"message":"1637","line":157,"column":31,"nodeType":"1638","messageId":"1639","endLine":157,"endColumn":33},{"ruleId":"1636","severity":1,"message":"1637","line":157,"column":45,"nodeType":"1638","messageId":"1639","endLine":157,"endColumn":47},{"ruleId":"1636","severity":1,"message":"1637","line":157,"column":58,"nodeType":"1638","messageId":"1639","endLine":157,"endColumn":60},{"ruleId":"1636","severity":1,"message":"1637","line":160,"column":17,"nodeType":"1638","messageId":"1639","endLine":160,"endColumn":19},{"ruleId":"1636","severity":1,"message":"1637","line":183,"column":13,"nodeType":"1638","messageId":"1639","endLine":183,"endColumn":15},{"ruleId":"1636","severity":1,"message":"1637","line":183,"column":26,"nodeType":"1638","messageId":"1639","endLine":183,"endColumn":28},{"ruleId":"1636","severity":1,"message":"1637","line":183,"column":39,"nodeType":"1638","messageId":"1639","endLine":183,"endColumn":41},{"ruleId":"1636","severity":1,"message":"1637","line":183,"column":53,"nodeType":"1638","messageId":"1639","endLine":183,"endColumn":55},{"ruleId":"1636","severity":1,"message":"1637","line":183,"column":67,"nodeType":"1638","messageId":"1639","endLine":183,"endColumn":69},{"ruleId":"1636","severity":1,"message":"1637","line":183,"column":81,"nodeType":"1638","messageId":"1639","endLine":183,"endColumn":83},{"ruleId":"1636","severity":1,"message":"1637","line":183,"column":95,"nodeType":"1638","messageId":"1639","endLine":183,"endColumn":97},{"ruleId":"1636","severity":1,"message":"1637","line":184,"column":62,"nodeType":"1638","messageId":"1639","endLine":184,"endColumn":64},{"ruleId":"1640","severity":1,"message":"1818","line":202,"column":9,"nodeType":"1642","messageId":"1643","endLine":202,"endColumn":21},{"ruleId":"1636","severity":1,"message":"1637","line":203,"column":34,"nodeType":"1638","messageId":"1639","endLine":203,"endColumn":36},{"ruleId":"1636","severity":1,"message":"1637","line":248,"column":17,"nodeType":"1638","messageId":"1639","endLine":248,"endColumn":19},{"ruleId":"1636","severity":1,"message":"1637","line":248,"column":32,"nodeType":"1638","messageId":"1639","endLine":248,"endColumn":34},{"ruleId":"1715","severity":1,"message":"1741","line":252,"column":16,"nodeType":"1708","endLine":252,"endColumn":224},{"ruleId":"1715","severity":1,"message":"1741","line":254,"column":17,"nodeType":"1708","endLine":254,"endColumn":73},{"ruleId":"1636","severity":1,"message":"1637","line":270,"column":18,"nodeType":"1638","messageId":"1639","endLine":270,"endColumn":20},{"ruleId":"1636","severity":1,"message":"1637","line":270,"column":33,"nodeType":"1638","messageId":"1639","endLine":270,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1637","line":271,"column":20,"nodeType":"1638","messageId":"1639","endLine":271,"endColumn":22},{"ruleId":"1636","severity":1,"message":"1637","line":271,"column":36,"nodeType":"1638","messageId":"1639","endLine":271,"endColumn":38},{"ruleId":"1636","severity":1,"message":"1637","line":271,"column":52,"nodeType":"1638","messageId":"1639","endLine":271,"endColumn":54},{"ruleId":"1715","severity":1,"message":"1741","line":272,"column":41,"nodeType":"1708","endLine":272,"endColumn":305},{"ruleId":"1715","severity":1,"message":"1741","line":274,"column":41,"nodeType":"1708","endLine":274,"endColumn":261},{"ruleId":"1715","severity":1,"message":"1741","line":310,"column":13,"nodeType":"1708","endLine":310,"endColumn":124},{"ruleId":"1717","severity":1,"message":"1718","line":54,"column":45,"nodeType":"1719","messageId":"1720","endLine":54,"endColumn":47},{"ruleId":"1636","severity":1,"message":"1637","line":55,"column":19,"nodeType":"1638","messageId":"1639","endLine":55,"endColumn":21},{"ruleId":"1636","severity":1,"message":"1637","line":56,"column":75,"nodeType":"1638","messageId":"1639","endLine":56,"endColumn":77},{"ruleId":"1636","severity":1,"message":"1637","line":59,"column":82,"nodeType":"1638","messageId":"1639","endLine":59,"endColumn":84},{"ruleId":"1636","severity":1,"message":"1637","line":53,"column":25,"nodeType":"1638","messageId":"1639","endLine":53,"endColumn":27},{"ruleId":"1636","severity":1,"message":"1637","line":67,"column":41,"nodeType":"1638","messageId":"1639","endLine":67,"endColumn":43},{"ruleId":"1636","severity":1,"message":"1637","line":69,"column":40,"nodeType":"1638","messageId":"1639","endLine":69,"endColumn":42},{"ruleId":"1636","severity":1,"message":"1637","line":130,"column":30,"nodeType":"1638","messageId":"1639","endLine":130,"endColumn":32},{"ruleId":"1717","severity":1,"message":"1763","line":206,"column":64,"nodeType":"1719","messageId":"1764","endLine":206,"endColumn":66},{"ruleId":"1636","severity":1,"message":"1637","line":207,"column":21,"nodeType":"1638","messageId":"1639","endLine":207,"endColumn":23},{"ruleId":"1636","severity":1,"message":"1637","line":73,"column":29,"nodeType":"1638","messageId":"1639","endLine":73,"endColumn":31},{"ruleId":"1636","severity":1,"message":"1637","line":75,"column":35,"nodeType":"1638","messageId":"1639","endLine":75,"endColumn":37},{"ruleId":"1640","severity":1,"message":"1770","line":4,"column":10,"nodeType":"1642","messageId":"1643","endLine":4,"endColumn":25},{"ruleId":"1640","severity":1,"message":"1771","line":5,"column":10,"nodeType":"1642","messageId":"1643","endLine":5,"endColumn":21},{"ruleId":"1640","severity":1,"message":"1819","line":9,"column":3,"nodeType":"1642","messageId":"1643","endLine":9,"endColumn":21},{"ruleId":"1640","severity":1,"message":"1820","line":26,"column":5,"nodeType":"1642","messageId":"1643","endLine":26,"endColumn":14},{"ruleId":"1636","severity":1,"message":"1637","line":111,"column":26,"nodeType":"1638","messageId":"1639","endLine":111,"endColumn":28},{"ruleId":"1636","severity":1,"message":"1637","line":113,"column":31,"nodeType":"1638","messageId":"1639","endLine":113,"endColumn":33},{"ruleId":"1636","severity":1,"message":"1637","line":114,"column":31,"nodeType":"1638","messageId":"1639","endLine":114,"endColumn":33},{"ruleId":"1636","severity":1,"message":"1637","line":115,"column":31,"nodeType":"1638","messageId":"1639","endLine":115,"endColumn":33},{"ruleId":"1636","severity":1,"message":"1637","line":206,"column":26,"nodeType":"1638","messageId":"1639","endLine":206,"endColumn":28},{"ruleId":"1636","severity":1,"message":"1637","line":246,"column":24,"nodeType":"1638","messageId":"1639","endLine":246,"endColumn":26},{"ruleId":"1636","severity":1,"message":"1637","line":281,"column":30,"nodeType":"1638","messageId":"1639","endLine":281,"endColumn":32},{"ruleId":"1636","severity":1,"message":"1637","line":283,"column":37,"nodeType":"1638","messageId":"1639","endLine":283,"endColumn":39},{"ruleId":"1636","severity":1,"message":"1637","line":283,"column":61,"nodeType":"1638","messageId":"1639","endLine":283,"endColumn":63},{"ruleId":"1636","severity":1,"message":"1637","line":335,"column":29,"nodeType":"1638","messageId":"1639","endLine":335,"endColumn":31},{"ruleId":"1636","severity":1,"message":"1637","line":349,"column":36,"nodeType":"1638","messageId":"1639","endLine":349,"endColumn":38},{"ruleId":"1640","severity":1,"message":"1696","line":377,"column":9,"nodeType":"1642","messageId":"1643","endLine":377,"endColumn":24},{"ruleId":"1636","severity":1,"message":"1637","line":424,"column":33,"nodeType":"1638","messageId":"1639","endLine":424,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1637","line":475,"column":25,"nodeType":"1638","messageId":"1639","endLine":475,"endColumn":27},{"ruleId":"1636","severity":1,"message":"1637","line":551,"column":38,"nodeType":"1638","messageId":"1639","endLine":551,"endColumn":40},{"ruleId":"1636","severity":1,"message":"1637","line":561,"column":36,"nodeType":"1638","messageId":"1639","endLine":561,"endColumn":38},{"ruleId":"1636","severity":1,"message":"1637","line":583,"column":27,"nodeType":"1638","messageId":"1639","endLine":583,"endColumn":29},{"ruleId":"1636","severity":1,"message":"1637","line":655,"column":69,"nodeType":"1638","messageId":"1639","endLine":655,"endColumn":71},{"ruleId":"1636","severity":1,"message":"1705","line":692,"column":40,"nodeType":"1638","messageId":"1639","endLine":692,"endColumn":42},{"ruleId":"1636","severity":1,"message":"1705","line":693,"column":52,"nodeType":"1638","messageId":"1639","endLine":693,"endColumn":54},{"ruleId":"1636","severity":1,"message":"1705","line":694,"column":50,"nodeType":"1638","messageId":"1639","endLine":694,"endColumn":52},{"ruleId":"1636","severity":1,"message":"1637","line":706,"column":74,"nodeType":"1638","messageId":"1639","endLine":706,"endColumn":76},{"ruleId":"1636","severity":1,"message":"1637","line":716,"column":41,"nodeType":"1638","messageId":"1639","endLine":716,"endColumn":43},{"ruleId":"1636","severity":1,"message":"1637","line":719,"column":39,"nodeType":"1638","messageId":"1639","endLine":719,"endColumn":41},{"ruleId":"1636","severity":1,"message":"1637","line":720,"column":44,"nodeType":"1638","messageId":"1639","endLine":720,"endColumn":46},{"ruleId":"1636","severity":1,"message":"1637","line":725,"column":59,"nodeType":"1638","messageId":"1639","endLine":725,"endColumn":61},{"ruleId":"1636","severity":1,"message":"1637","line":782,"column":42,"nodeType":"1638","messageId":"1639","endLine":782,"endColumn":44},{"ruleId":"1636","severity":1,"message":"1637","line":787,"column":45,"nodeType":"1638","messageId":"1639","endLine":787,"endColumn":47},{"ruleId":"1636","severity":1,"message":"1637","line":814,"column":44,"nodeType":"1638","messageId":"1639","endLine":814,"endColumn":46},{"ruleId":"1636","severity":1,"message":"1637","line":825,"column":37,"nodeType":"1638","messageId":"1639","endLine":825,"endColumn":39},{"ruleId":"1821","severity":1,"message":"1822","line":858,"column":19,"nodeType":"1708","messageId":"1823","endLine":858,"endColumn":68,"fix":"1824"},{"ruleId":"1706","severity":1,"message":"1707","line":860,"column":23,"nodeType":"1708","endLine":860,"endColumn":46},{"ruleId":"1821","severity":1,"message":"1822","line":863,"column":19,"nodeType":"1708","messageId":"1823","endLine":863,"endColumn":63,"fix":"1825"},{"ruleId":"1706","severity":1,"message":"1707","line":865,"column":23,"nodeType":"1708","endLine":865,"endColumn":46},{"ruleId":"1826","severity":1,"message":"1827","line":21,"column":5,"nodeType":"1828","messageId":"1829","endLine":21,"endColumn":332},{"ruleId":"1830","severity":1,"message":"1831","line":35,"column":102,"nodeType":"1832","messageId":"1833","endLine":35,"endColumn":116},{"ruleId":"1636","severity":1,"message":"1637","line":32,"column":10,"nodeType":"1638","messageId":"1639","endLine":32,"endColumn":12},{"ruleId":"1640","severity":1,"message":"1644","line":59,"column":10,"nodeType":"1642","messageId":"1643","endLine":59,"endColumn":19},{"ruleId":"1636","severity":1,"message":"1637","line":60,"column":13,"nodeType":"1638","messageId":"1639","endLine":60,"endColumn":15},{"ruleId":"1636","severity":1,"message":"1637","line":60,"column":50,"nodeType":"1638","messageId":"1639","endLine":60,"endColumn":52},{"ruleId":"1717","severity":1,"message":"1718","line":82,"column":64,"nodeType":"1719","messageId":"1720","endLine":82,"endColumn":66},{"ruleId":"1636","severity":1,"message":"1637","line":83,"column":14,"nodeType":"1638","messageId":"1639","endLine":83,"endColumn":16},{"ruleId":"1636","severity":1,"message":"1637","line":86,"column":37,"nodeType":"1638","messageId":"1639","endLine":86,"endColumn":39},{"ruleId":"1636","severity":1,"message":"1637","line":92,"column":43,"nodeType":"1638","messageId":"1639","endLine":92,"endColumn":45},{"ruleId":"1636","severity":1,"message":"1637","line":92,"column":81,"nodeType":"1638","messageId":"1639","endLine":92,"endColumn":83},{"ruleId":"1715","severity":1,"message":"1741","line":93,"column":46,"nodeType":"1708","endLine":93,"endColumn":196},{"ruleId":"1636","severity":1,"message":"1637","line":98,"column":43,"nodeType":"1638","messageId":"1639","endLine":98,"endColumn":45},{"ruleId":"1636","severity":1,"message":"1637","line":104,"column":43,"nodeType":"1638","messageId":"1639","endLine":104,"endColumn":45},{"ruleId":"1636","severity":1,"message":"1637","line":112,"column":43,"nodeType":"1638","messageId":"1639","endLine":112,"endColumn":45},{"ruleId":"1727","severity":1,"message":"1834","line":113,"column":9,"nodeType":"1642","messageId":"1729","endLine":113,"endColumn":12},{"ruleId":"1636","severity":1,"message":"1637","line":117,"column":43,"nodeType":"1638","messageId":"1639","endLine":117,"endColumn":45},{"ruleId":"1727","severity":1,"message":"1834","line":118,"column":9,"nodeType":"1642","messageId":"1729","endLine":118,"endColumn":12},{"ruleId":"1636","severity":1,"message":"1637","line":128,"column":43,"nodeType":"1638","messageId":"1639","endLine":128,"endColumn":45},{"ruleId":"1636","severity":1,"message":"1637","line":147,"column":10,"nodeType":"1638","messageId":"1639","endLine":147,"endColumn":12},{"ruleId":"1640","severity":1,"message":"1835","line":1,"column":28,"nodeType":"1642","messageId":"1643","endLine":1,"endColumn":36},{"ruleId":"1636","severity":1,"message":"1637","line":154,"column":53,"nodeType":"1638","messageId":"1639","endLine":154,"endColumn":55},{"ruleId":"1640","severity":1,"message":"1836","line":201,"column":13,"nodeType":"1642","messageId":"1643","endLine":201,"endColumn":23},{"ruleId":"1640","severity":1,"message":"1837","line":203,"column":11,"nodeType":"1642","messageId":"1643","endLine":203,"endColumn":19},{"ruleId":"1640","severity":1,"message":"1838","line":205,"column":11,"nodeType":"1642","messageId":"1643","endLine":205,"endColumn":17},{"ruleId":"1636","severity":1,"message":"1705","line":319,"column":42,"nodeType":"1638","messageId":"1639","endLine":319,"endColumn":44},{"ruleId":"1636","severity":1,"message":"1705","line":342,"column":43,"nodeType":"1638","messageId":"1639","endLine":342,"endColumn":45},{"ruleId":"1636","severity":1,"message":"1637","line":357,"column":58,"nodeType":"1638","messageId":"1639","endLine":357,"endColumn":60},{"ruleId":"1636","severity":1,"message":"1637","line":358,"column":58,"nodeType":"1638","messageId":"1639","endLine":358,"endColumn":60},{"ruleId":"1636","severity":1,"message":"1637","line":363,"column":39,"nodeType":"1638","messageId":"1639","endLine":363,"endColumn":41},{"ruleId":"1636","severity":1,"message":"1637","line":476,"column":32,"nodeType":"1638","messageId":"1639","endLine":476,"endColumn":34},{"ruleId":"1636","severity":1,"message":"1637","line":481,"column":39,"nodeType":"1638","messageId":"1639","endLine":481,"endColumn":41},{"ruleId":"1636","severity":1,"message":"1637","line":481,"column":63,"nodeType":"1638","messageId":"1639","endLine":481,"endColumn":65},{"ruleId":"1636","severity":1,"message":"1637","line":628,"column":26,"nodeType":"1638","messageId":"1639","endLine":628,"endColumn":28},{"ruleId":"1636","severity":1,"message":"1637","line":641,"column":63,"nodeType":"1638","messageId":"1639","endLine":641,"endColumn":65},{"ruleId":"1636","severity":1,"message":"1637","line":647,"column":68,"nodeType":"1638","messageId":"1639","endLine":647,"endColumn":70},{"ruleId":"1636","severity":1,"message":"1637","line":649,"column":68,"nodeType":"1638","messageId":"1639","endLine":649,"endColumn":70},{"ruleId":"1640","severity":1,"message":"1838","line":675,"column":13,"nodeType":"1642","messageId":"1643","endLine":675,"endColumn":19},{"ruleId":"1636","severity":1,"message":"1637","line":696,"column":63,"nodeType":"1638","messageId":"1639","endLine":696,"endColumn":65},{"ruleId":"1636","severity":1,"message":"1637","line":703,"column":38,"nodeType":"1638","messageId":"1639","endLine":703,"endColumn":40},{"ruleId":"1636","severity":1,"message":"1637","line":704,"column":40,"nodeType":"1638","messageId":"1639","endLine":704,"endColumn":42},{"ruleId":"1636","severity":1,"message":"1637","line":723,"column":40,"nodeType":"1638","messageId":"1639","endLine":723,"endColumn":42},{"ruleId":"1636","severity":1,"message":"1637","line":723,"column":69,"nodeType":"1638","messageId":"1639","endLine":723,"endColumn":71},{"ruleId":"1636","severity":1,"message":"1637","line":773,"column":35,"nodeType":"1638","messageId":"1639","endLine":773,"endColumn":37},{"ruleId":"1636","severity":1,"message":"1637","line":775,"column":23,"nodeType":"1638","messageId":"1639","endLine":775,"endColumn":25},{"ruleId":"1636","severity":1,"message":"1637","line":824,"column":33,"nodeType":"1638","messageId":"1639","endLine":824,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1637","line":825,"column":33,"nodeType":"1638","messageId":"1639","endLine":825,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1637","line":827,"column":37,"nodeType":"1638","messageId":"1639","endLine":827,"endColumn":39},{"ruleId":"1636","severity":1,"message":"1637","line":829,"column":44,"nodeType":"1638","messageId":"1639","endLine":829,"endColumn":46},{"ruleId":"1636","severity":1,"message":"1637","line":836,"column":42,"nodeType":"1638","messageId":"1639","endLine":836,"endColumn":44},{"ruleId":"1636","severity":1,"message":"1637","line":858,"column":33,"nodeType":"1638","messageId":"1639","endLine":858,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1637","line":859,"column":33,"nodeType":"1638","messageId":"1639","endLine":859,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1637","line":860,"column":33,"nodeType":"1638","messageId":"1639","endLine":860,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1637","line":861,"column":33,"nodeType":"1638","messageId":"1639","endLine":861,"endColumn":35},{"ruleId":"1727","severity":1,"message":"1839","line":863,"column":11,"nodeType":"1642","messageId":"1729","endLine":863,"endColumn":23},{"ruleId":"1727","severity":1,"message":"1747","line":864,"column":11,"nodeType":"1642","messageId":"1729","endLine":864,"endColumn":17},{"ruleId":"1636","severity":1,"message":"1637","line":867,"column":42,"nodeType":"1638","messageId":"1639","endLine":867,"endColumn":44},{"ruleId":"1727","severity":1,"message":"1839","line":872,"column":11,"nodeType":"1642","messageId":"1729","endLine":872,"endColumn":23},{"ruleId":"1727","severity":1,"message":"1747","line":873,"column":11,"nodeType":"1642","messageId":"1729","endLine":873,"endColumn":17},{"ruleId":"1636","severity":1,"message":"1705","line":883,"column":15,"nodeType":"1638","messageId":"1639","endLine":883,"endColumn":17},{"ruleId":"1727","severity":1,"message":"1747","line":886,"column":15,"nodeType":"1642","messageId":"1729","endLine":886,"endColumn":21},{"ruleId":"1727","severity":1,"message":"1745","line":893,"column":17,"nodeType":"1642","messageId":"1729","endLine":893,"endColumn":24},{"ruleId":"1727","severity":1,"message":"1747","line":903,"column":13,"nodeType":"1642","messageId":"1729","endLine":903,"endColumn":19},{"ruleId":"1636","severity":1,"message":"1637","line":913,"column":33,"nodeType":"1638","messageId":"1639","endLine":913,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1637","line":924,"column":13,"nodeType":"1638","messageId":"1639","endLine":924,"endColumn":15},{"ruleId":"1636","severity":1,"message":"1637","line":932,"column":12,"nodeType":"1638","messageId":"1639","endLine":932,"endColumn":14},{"ruleId":"1636","severity":1,"message":"1637","line":939,"column":38,"nodeType":"1638","messageId":"1639","endLine":939,"endColumn":40},{"ruleId":"1636","severity":1,"message":"1637","line":942,"column":21,"nodeType":"1638","messageId":"1639","endLine":942,"endColumn":23},{"ruleId":"1636","severity":1,"message":"1637","line":993,"column":27,"nodeType":"1638","messageId":"1639","endLine":993,"endColumn":29},{"ruleId":"1636","severity":1,"message":"1705","line":1043,"column":24,"nodeType":"1638","messageId":"1639","endLine":1043,"endColumn":26},{"ruleId":"1636","severity":1,"message":"1705","line":1050,"column":30,"nodeType":"1638","messageId":"1639","endLine":1050,"endColumn":32},{"ruleId":"1636","severity":1,"message":"1637","line":1083,"column":31,"nodeType":"1638","messageId":"1639","endLine":1083,"endColumn":33},{"ruleId":"1636","severity":1,"message":"1637","line":1084,"column":31,"nodeType":"1638","messageId":"1639","endLine":1084,"endColumn":33},{"ruleId":"1636","severity":1,"message":"1637","line":1091,"column":57,"nodeType":"1638","messageId":"1639","endLine":1091,"endColumn":59},{"ruleId":"1636","severity":1,"message":"1637","line":1092,"column":27,"nodeType":"1638","messageId":"1639","endLine":1092,"endColumn":29},{"ruleId":"1636","severity":1,"message":"1637","line":1101,"column":57,"nodeType":"1638","messageId":"1639","endLine":1101,"endColumn":59},{"ruleId":"1636","severity":1,"message":"1637","line":1128,"column":21,"nodeType":"1638","messageId":"1639","endLine":1128,"endColumn":23},{"ruleId":"1636","severity":1,"message":"1637","line":1130,"column":28,"nodeType":"1638","messageId":"1639","endLine":1130,"endColumn":30},{"ruleId":"1636","severity":1,"message":"1637","line":1132,"column":28,"nodeType":"1638","messageId":"1639","endLine":1132,"endColumn":30},{"ruleId":"1636","severity":1,"message":"1637","line":1146,"column":33,"nodeType":"1638","messageId":"1639","endLine":1146,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1637","line":1147,"column":33,"nodeType":"1638","messageId":"1639","endLine":1147,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1637","line":1153,"column":33,"nodeType":"1638","messageId":"1639","endLine":1153,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1637","line":1154,"column":33,"nodeType":"1638","messageId":"1639","endLine":1154,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1637","line":1155,"column":33,"nodeType":"1638","messageId":"1639","endLine":1155,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1637","line":1156,"column":33,"nodeType":"1638","messageId":"1639","endLine":1156,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1637","line":1157,"column":33,"nodeType":"1638","messageId":"1639","endLine":1157,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1637","line":1227,"column":38,"nodeType":"1638","messageId":"1639","endLine":1227,"endColumn":40},{"ruleId":"1636","severity":1,"message":"1637","line":1305,"column":34,"nodeType":"1638","messageId":"1639","endLine":1305,"endColumn":36},{"ruleId":"1636","severity":1,"message":"1637","line":1306,"column":34,"nodeType":"1638","messageId":"1639","endLine":1306,"endColumn":36},{"ruleId":"1636","severity":1,"message":"1637","line":1307,"column":34,"nodeType":"1638","messageId":"1639","endLine":1307,"endColumn":36},{"ruleId":"1636","severity":1,"message":"1637","line":1310,"column":34,"nodeType":"1638","messageId":"1639","endLine":1310,"endColumn":36},{"ruleId":"1636","severity":1,"message":"1637","line":1427,"column":48,"nodeType":"1638","messageId":"1639","endLine":1427,"endColumn":50},{"ruleId":"1636","severity":1,"message":"1637","line":1458,"column":36,"nodeType":"1638","messageId":"1639","endLine":1458,"endColumn":38},{"ruleId":"1636","severity":1,"message":"1637","line":1460,"column":39,"nodeType":"1638","messageId":"1639","endLine":1460,"endColumn":41},{"ruleId":"1636","severity":1,"message":"1637","line":1462,"column":39,"nodeType":"1638","messageId":"1639","endLine":1462,"endColumn":41},{"ruleId":"1636","severity":1,"message":"1637","line":1464,"column":39,"nodeType":"1638","messageId":"1639","endLine":1464,"endColumn":41},{"ruleId":"1636","severity":1,"message":"1637","line":1466,"column":39,"nodeType":"1638","messageId":"1639","endLine":1466,"endColumn":41},{"ruleId":"1636","severity":1,"message":"1637","line":1468,"column":39,"nodeType":"1638","messageId":"1639","endLine":1468,"endColumn":41},{"ruleId":"1636","severity":1,"message":"1637","line":1470,"column":39,"nodeType":"1638","messageId":"1639","endLine":1470,"endColumn":41},{"ruleId":"1636","severity":1,"message":"1637","line":1594,"column":44,"nodeType":"1638","messageId":"1639","endLine":1594,"endColumn":46},{"ruleId":"1636","severity":1,"message":"1637","line":1746,"column":64,"nodeType":"1638","messageId":"1639","endLine":1746,"endColumn":66},{"ruleId":"1715","severity":1,"message":"1716","line":1757,"column":25,"nodeType":"1708","endLine":1757,"endColumn":66},{"ruleId":"1636","severity":1,"message":"1637","line":1841,"column":15,"nodeType":"1638","messageId":"1639","endLine":1841,"endColumn":17},{"ruleId":"1640","severity":1,"message":"1840","line":8,"column":8,"nodeType":"1642","messageId":"1643","endLine":8,"endColumn":18},{"ruleId":"1640","severity":1,"message":"1841","line":34,"column":11,"nodeType":"1642","messageId":"1643","endLine":34,"endColumn":23},{"ruleId":"1636","severity":1,"message":"1637","line":75,"column":92,"nodeType":"1638","messageId":"1639","endLine":75,"endColumn":94},{"ruleId":"1842","severity":1,"message":"1843","line":1,"column":1,"nodeType":"1844","messageId":"1639","fix":"1845"},{"ruleId":"1640","severity":1,"message":"1841","line":51,"column":11,"nodeType":"1642","messageId":"1643","endLine":51,"endColumn":23},{"ruleId":"1636","severity":1,"message":"1637","line":87,"column":70,"nodeType":"1638","messageId":"1639","endLine":87,"endColumn":72},{"ruleId":"1636","severity":1,"message":"1637","line":87,"column":117,"nodeType":"1638","messageId":"1639","endLine":87,"endColumn":119},{"ruleId":"1640","severity":1,"message":"1846","line":2,"column":26,"nodeType":"1642","messageId":"1643","endLine":2,"endColumn":32},{"ruleId":"1640","severity":1,"message":"1841","line":61,"column":11,"nodeType":"1642","messageId":"1643","endLine":61,"endColumn":23},{"ruleId":"1706","severity":1,"message":"1707","line":103,"column":17,"nodeType":"1708","endLine":103,"endColumn":96},{"ruleId":"1842","severity":1,"message":"1843","line":1,"column":1,"nodeType":"1844","messageId":"1639","fix":"1847"},{"ruleId":"1640","severity":1,"message":"1841","line":51,"column":11,"nodeType":"1642","messageId":"1643","endLine":51,"endColumn":23},{"ruleId":"1636","severity":1,"message":"1637","line":106,"column":37,"nodeType":"1638","messageId":"1639","endLine":106,"endColumn":39},{"ruleId":"1706","severity":1,"message":"1707","line":107,"column":23,"nodeType":"1708","endLine":107,"endColumn":110},{"ruleId":"1636","severity":1,"message":"1637","line":108,"column":38,"nodeType":"1638","messageId":"1639","endLine":108,"endColumn":40},{"ruleId":"1706","severity":1,"message":"1707","line":109,"column":21,"nodeType":"1708","endLine":109,"endColumn":110},{"ruleId":"1636","severity":1,"message":"1637","line":110,"column":38,"nodeType":"1638","messageId":"1639","endLine":110,"endColumn":40},{"ruleId":"1706","severity":1,"message":"1707","line":111,"column":21,"nodeType":"1708","endLine":111,"endColumn":110},{"ruleId":"1706","severity":1,"message":"1707","line":117,"column":23,"nodeType":"1708","endLine":117,"endColumn":98},{"ruleId":"1640","severity":1,"message":"1848","line":2,"column":26,"nodeType":"1642","messageId":"1643","endLine":2,"endColumn":35},{"ruleId":"1640","severity":1,"message":"1841","line":53,"column":11,"nodeType":"1642","messageId":"1643","endLine":53,"endColumn":23},{"ruleId":"1706","severity":1,"message":"1707","line":94,"column":33,"nodeType":"1708","endLine":94,"endColumn":92},{"ruleId":"1640","severity":1,"message":"1849","line":3,"column":21,"nodeType":"1642","messageId":"1643","endLine":3,"endColumn":24},{"ruleId":"1640","severity":1,"message":"1850","line":3,"column":26,"nodeType":"1642","messageId":"1643","endLine":3,"endColumn":29},{"ruleId":"1636","severity":1,"message":"1705","line":86,"column":32,"nodeType":"1638","messageId":"1639","endLine":86,"endColumn":34},{"ruleId":"1636","severity":1,"message":"1637","line":92,"column":29,"nodeType":"1638","messageId":"1639","endLine":92,"endColumn":31},{"ruleId":"1636","severity":1,"message":"1637","line":92,"column":59,"nodeType":"1638","messageId":"1639","endLine":92,"endColumn":61},{"ruleId":"1636","severity":1,"message":"1637","line":112,"column":68,"nodeType":"1638","messageId":"1639","endLine":112,"endColumn":70},{"ruleId":"1636","severity":1,"message":"1637","line":133,"column":63,"nodeType":"1638","messageId":"1639","endLine":133,"endColumn":65},{"ruleId":"1636","severity":1,"message":"1637","line":143,"column":38,"nodeType":"1638","messageId":"1639","endLine":143,"endColumn":40},{"ruleId":"1636","severity":1,"message":"1637","line":143,"column":73,"nodeType":"1638","messageId":"1639","endLine":143,"endColumn":75},{"ruleId":"1636","severity":1,"message":"1637","line":145,"column":63,"nodeType":"1638","messageId":"1639","endLine":145,"endColumn":65},{"ruleId":"1636","severity":1,"message":"1637","line":250,"column":31,"nodeType":"1638","messageId":"1639","endLine":250,"endColumn":33},{"ruleId":"1636","severity":1,"message":"1637","line":314,"column":20,"nodeType":"1638","messageId":"1639","endLine":314,"endColumn":22},{"ruleId":"1636","severity":1,"message":"1637","line":329,"column":17,"nodeType":"1638","messageId":"1639","endLine":329,"endColumn":19},{"ruleId":"1636","severity":1,"message":"1637","line":329,"column":36,"nodeType":"1638","messageId":"1639","endLine":329,"endColumn":38},{"ruleId":"1640","severity":1,"message":"1841","line":373,"column":11,"nodeType":"1642","messageId":"1643","endLine":373,"endColumn":23},{"ruleId":"1636","severity":1,"message":"1637","line":448,"column":66,"nodeType":"1638","messageId":"1639","endLine":448,"endColumn":68},{"ruleId":"1636","severity":1,"message":"1637","line":448,"column":97,"nodeType":"1638","messageId":"1639","endLine":448,"endColumn":99},{"ruleId":"1636","severity":1,"message":"1637","line":511,"column":60,"nodeType":"1638","messageId":"1639","endLine":511,"endColumn":62},{"ruleId":"1636","severity":1,"message":"1637","line":516,"column":51,"nodeType":"1638","messageId":"1639","endLine":516,"endColumn":53},{"ruleId":"1636","severity":1,"message":"1637","line":523,"column":57,"nodeType":"1638","messageId":"1639","endLine":523,"endColumn":59},{"ruleId":"1636","severity":1,"message":"1637","line":561,"column":26,"nodeType":"1638","messageId":"1639","endLine":561,"endColumn":28},{"ruleId":"1636","severity":1,"message":"1637","line":561,"column":48,"nodeType":"1638","messageId":"1639","endLine":561,"endColumn":50},{"ruleId":"1640","severity":1,"message":"1851","line":563,"column":9,"nodeType":"1642","messageId":"1643","endLine":563,"endColumn":20},{"ruleId":"1636","severity":1,"message":"1637","line":567,"column":103,"nodeType":"1638","messageId":"1639","endLine":567,"endColumn":105},{"ruleId":"1709","severity":1,"message":"1710","line":568,"column":7,"nodeType":"1711","messageId":"1712","endLine":568,"endColumn":94},{"ruleId":"1709","severity":1,"message":"1710","line":570,"column":5,"nodeType":"1711","messageId":"1712","endLine":570,"endColumn":92},{"ruleId":"1636","severity":1,"message":"1637","line":572,"column":108,"nodeType":"1638","messageId":"1639","endLine":572,"endColumn":110},{"ruleId":"1709","severity":1,"message":"1710","line":573,"column":7,"nodeType":"1711","messageId":"1712","endLine":573,"endColumn":35},{"ruleId":"1709","severity":1,"message":"1710","line":580,"column":5,"nodeType":"1711","messageId":"1712","endLine":580,"endColumn":92},{"ruleId":"1636","severity":1,"message":"1637","line":585,"column":51,"nodeType":"1638","messageId":"1639","endLine":585,"endColumn":53},{"ruleId":"1709","severity":1,"message":"1710","line":588,"column":11,"nodeType":"1711","messageId":"1712","endLine":588,"endColumn":30},{"ruleId":"1709","severity":1,"message":"1710","line":590,"column":11,"nodeType":"1711","messageId":"1712","endLine":590,"endColumn":30},{"ruleId":"1709","severity":1,"message":"1710","line":594,"column":11,"nodeType":"1711","messageId":"1712","endLine":594,"endColumn":30},{"ruleId":"1709","severity":1,"message":"1710","line":596,"column":11,"nodeType":"1711","messageId":"1712","endLine":596,"endColumn":30},{"ruleId":"1636","severity":1,"message":"1637","line":599,"column":51,"nodeType":"1638","messageId":"1639","endLine":599,"endColumn":53},{"ruleId":"1709","severity":1,"message":"1710","line":600,"column":9,"nodeType":"1711","messageId":"1712","endLine":600,"endColumn":28},{"ruleId":"1709","severity":1,"message":"1710","line":602,"column":9,"nodeType":"1711","messageId":"1712","endLine":602,"endColumn":28},{"ruleId":"1709","severity":1,"message":"1710","line":605,"column":5,"nodeType":"1711","messageId":"1712","endLine":605,"endColumn":67},{"ruleId":"1709","severity":1,"message":"1710","line":606,"column":5,"nodeType":"1711","messageId":"1712","endLine":606,"endColumn":24},{"ruleId":"1709","severity":1,"message":"1710","line":607,"column":5,"nodeType":"1711","messageId":"1712","endLine":607,"endColumn":33},{"ruleId":"1709","severity":1,"message":"1710","line":608,"column":5,"nodeType":"1711","messageId":"1712","endLine":608,"endColumn":92},{"ruleId":"1636","severity":1,"message":"1637","line":609,"column":108,"nodeType":"1638","messageId":"1639","endLine":609,"endColumn":110},{"ruleId":"1709","severity":1,"message":"1710","line":610,"column":7,"nodeType":"1711","messageId":"1712","endLine":610,"endColumn":35},{"ruleId":"1636","severity":1,"message":"1637","line":612,"column":53,"nodeType":"1638","messageId":"1639","endLine":612,"endColumn":55},{"ruleId":"1636","severity":1,"message":"1637","line":612,"column":107,"nodeType":"1638","messageId":"1639","endLine":612,"endColumn":109},{"ruleId":"1636","severity":1,"message":"1637","line":612,"column":161,"nodeType":"1638","messageId":"1639","endLine":612,"endColumn":163},{"ruleId":"1709","severity":1,"message":"1710","line":624,"column":5,"nodeType":"1711","messageId":"1712","endLine":624,"endColumn":24},{"ruleId":"1709","severity":1,"message":"1710","line":625,"column":5,"nodeType":"1711","messageId":"1712","endLine":625,"endColumn":24},{"ruleId":"1709","severity":1,"message":"1710","line":626,"column":5,"nodeType":"1711","messageId":"1712","endLine":626,"endColumn":24},{"ruleId":"1709","severity":1,"message":"1710","line":637,"column":5,"nodeType":"1711","messageId":"1712","endLine":637,"endColumn":24},{"ruleId":"1636","severity":1,"message":"1637","line":639,"column":23,"nodeType":"1638","messageId":"1639","endLine":639,"endColumn":25},{"ruleId":"1636","severity":1,"message":"1637","line":643,"column":53,"nodeType":"1638","messageId":"1639","endLine":643,"endColumn":55},{"ruleId":"1636","severity":1,"message":"1637","line":643,"column":107,"nodeType":"1638","messageId":"1639","endLine":643,"endColumn":109},{"ruleId":"1636","severity":1,"message":"1637","line":646,"column":43,"nodeType":"1638","messageId":"1639","endLine":646,"endColumn":45},{"ruleId":"1709","severity":1,"message":"1710","line":676,"column":5,"nodeType":"1711","messageId":"1712","endLine":676,"endColumn":79},{"ruleId":"1709","severity":1,"message":"1710","line":677,"column":5,"nodeType":"1711","messageId":"1712","endLine":677,"endColumn":79},{"ruleId":"1636","severity":1,"message":"1637","line":678,"column":53,"nodeType":"1638","messageId":"1639","endLine":678,"endColumn":55},{"ruleId":"1636","severity":1,"message":"1637","line":678,"column":107,"nodeType":"1638","messageId":"1639","endLine":678,"endColumn":109},{"ruleId":"1709","severity":1,"message":"1710","line":679,"column":7,"nodeType":"1711","messageId":"1712","endLine":679,"endColumn":81},{"ruleId":"1709","severity":1,"message":"1710","line":684,"column":5,"nodeType":"1711","messageId":"1712","endLine":684,"endColumn":79},{"ruleId":"1709","severity":1,"message":"1710","line":685,"column":5,"nodeType":"1711","messageId":"1712","endLine":685,"endColumn":79},{"ruleId":"1709","severity":1,"message":"1710","line":686,"column":5,"nodeType":"1711","messageId":"1712","endLine":686,"endColumn":79},{"ruleId":"1709","severity":1,"message":"1710","line":687,"column":5,"nodeType":"1711","messageId":"1712","endLine":687,"endColumn":79},{"ruleId":"1636","severity":1,"message":"1637","line":694,"column":75,"nodeType":"1638","messageId":"1639","endLine":694,"endColumn":77},{"ruleId":"1709","severity":1,"message":"1710","line":711,"column":9,"nodeType":"1711","messageId":"1712","endLine":711,"endColumn":28},{"ruleId":"1636","severity":1,"message":"1637","line":712,"column":27,"nodeType":"1638","messageId":"1639","endLine":712,"endColumn":29},{"ruleId":"1636","severity":1,"message":"1637","line":712,"column":49,"nodeType":"1638","messageId":"1639","endLine":712,"endColumn":51},{"ruleId":"1709","severity":1,"message":"1710","line":714,"column":13,"nodeType":"1711","messageId":"1712","endLine":714,"endColumn":101},{"ruleId":"1636","severity":1,"message":"1637","line":716,"column":29,"nodeType":"1638","messageId":"1639","endLine":716,"endColumn":31},{"ruleId":"1709","severity":1,"message":"1710","line":717,"column":13,"nodeType":"1711","messageId":"1712","endLine":717,"endColumn":32},{"ruleId":"1709","severity":1,"message":"1710","line":718,"column":13,"nodeType":"1711","messageId":"1712","endLine":718,"endColumn":32},{"ruleId":"1709","severity":1,"message":"1710","line":721,"column":13,"nodeType":"1711","messageId":"1712","endLine":721,"endColumn":32},{"ruleId":"1709","severity":1,"message":"1710","line":722,"column":13,"nodeType":"1711","messageId":"1712","endLine":722,"endColumn":32},{"ruleId":"1636","severity":1,"message":"1637","line":725,"column":27,"nodeType":"1638","messageId":"1639","endLine":725,"endColumn":29},{"ruleId":"1709","severity":1,"message":"1710","line":727,"column":13,"nodeType":"1711","messageId":"1712","endLine":727,"endColumn":101},{"ruleId":"1709","severity":1,"message":"1710","line":733,"column":9,"nodeType":"1711","messageId":"1712","endLine":733,"endColumn":19},{"ruleId":"1636","severity":1,"message":"1637","line":746,"column":27,"nodeType":"1638","messageId":"1639","endLine":746,"endColumn":29},{"ruleId":"1636","severity":1,"message":"1637","line":748,"column":42,"nodeType":"1638","messageId":"1639","endLine":748,"endColumn":44},{"ruleId":"1709","severity":1,"message":"1710","line":753,"column":11,"nodeType":"1711","messageId":"1712","endLine":753,"endColumn":30},{"ruleId":"1636","severity":1,"message":"1637","line":754,"column":42,"nodeType":"1638","messageId":"1639","endLine":754,"endColumn":44},{"ruleId":"1709","severity":1,"message":"1710","line":764,"column":9,"nodeType":"1711","messageId":"1712","endLine":764,"endColumn":19},{"ruleId":"1709","severity":1,"message":"1710","line":779,"column":5,"nodeType":"1711","messageId":"1712","endLine":779,"endColumn":24},{"ruleId":"1636","severity":1,"message":"1637","line":781,"column":23,"nodeType":"1638","messageId":"1639","endLine":781,"endColumn":25},{"ruleId":"1709","severity":1,"message":"1710","line":785,"column":5,"nodeType":"1711","messageId":"1712","endLine":785,"endColumn":79},{"ruleId":"1709","severity":1,"message":"1710","line":786,"column":5,"nodeType":"1711","messageId":"1712","endLine":786,"endColumn":79},{"ruleId":"1709","severity":1,"message":"1710","line":787,"column":5,"nodeType":"1711","messageId":"1712","endLine":787,"endColumn":79},{"ruleId":"1709","severity":1,"message":"1710","line":788,"column":5,"nodeType":"1711","messageId":"1712","endLine":788,"endColumn":79},{"ruleId":"1709","severity":1,"message":"1710","line":797,"column":9,"nodeType":"1711","messageId":"1712","endLine":797,"endColumn":28},{"ruleId":"1636","severity":1,"message":"1637","line":798,"column":27,"nodeType":"1638","messageId":"1639","endLine":798,"endColumn":29},{"ruleId":"1709","severity":1,"message":"1710","line":804,"column":9,"nodeType":"1711","messageId":"1712","endLine":804,"endColumn":19},{"ruleId":"1709","severity":1,"message":"1710","line":814,"column":5,"nodeType":"1711","messageId":"1712","endLine":814,"endColumn":24},{"ruleId":"1636","severity":1,"message":"1637","line":821,"column":76,"nodeType":"1638","messageId":"1639","endLine":821,"endColumn":78},{"ruleId":"1636","severity":1,"message":"1637","line":828,"column":27,"nodeType":"1638","messageId":"1639","endLine":828,"endColumn":29},{"ruleId":"1709","severity":1,"message":"1710","line":830,"column":11,"nodeType":"1711","messageId":"1712","endLine":830,"endColumn":30},{"ruleId":"1709","severity":1,"message":"1710","line":831,"column":11,"nodeType":"1711","messageId":"1712","endLine":831,"endColumn":30},{"ruleId":"1709","severity":1,"message":"1710","line":839,"column":9,"nodeType":"1711","messageId":"1712","endLine":839,"endColumn":19},{"ruleId":"1636","severity":1,"message":"1637","line":915,"column":34,"nodeType":"1638","messageId":"1639","endLine":915,"endColumn":36},{"ruleId":"1636","severity":1,"message":"1637","line":927,"column":48,"nodeType":"1638","messageId":"1639","endLine":927,"endColumn":50},{"ruleId":"1640","severity":1,"message":"1852","line":131,"column":15,"nodeType":"1642","messageId":"1643","endLine":131,"endColumn":16},{"ruleId":"1636","severity":1,"message":"1637","line":227,"column":60,"nodeType":"1638","messageId":"1639","endLine":227,"endColumn":62},{"ruleId":"1715","severity":1,"message":"1741","line":228,"column":41,"nodeType":"1708","endLine":230,"endColumn":75},{"ruleId":"1821","severity":1,"message":"1822","line":235,"column":41,"nodeType":"1708","messageId":"1823","endLine":238,"endColumn":71,"fix":"1853"},{"ruleId":"1636","severity":1,"message":"1637","line":247,"column":64,"nodeType":"1638","messageId":"1639","endLine":247,"endColumn":66},{"ruleId":"1636","severity":1,"message":"1637","line":328,"column":32,"nodeType":"1638","messageId":"1639","endLine":328,"endColumn":34},{"ruleId":"1636","severity":1,"message":"1637","line":332,"column":34,"nodeType":"1638","messageId":"1639","endLine":332,"endColumn":36},{"ruleId":"1636","severity":1,"message":"1637","line":351,"column":45,"nodeType":"1638","messageId":"1639","endLine":351,"endColumn":47},{"ruleId":"1640","severity":1,"message":"1854","line":11,"column":22,"nodeType":"1642","messageId":"1643","endLine":11,"endColumn":34},{"ruleId":"1640","severity":1,"message":"1855","line":2,"column":37,"nodeType":"1642","messageId":"1643","endLine":2,"endColumn":42},{"ruleId":"1640","severity":1,"message":"1770","line":2,"column":10,"nodeType":"1642","messageId":"1643","endLine":2,"endColumn":25},{"ruleId":"1640","severity":1,"message":"1771","line":3,"column":10,"nodeType":"1642","messageId":"1643","endLine":3,"endColumn":21},{"ruleId":"1636","severity":1,"message":"1637","line":56,"column":27,"nodeType":"1638","messageId":"1639","endLine":56,"endColumn":29},{"ruleId":"1640","severity":1,"message":"1856","line":2,"column":9,"nodeType":"1642","messageId":"1643","endLine":2,"endColumn":16},{"ruleId":"1640","severity":1,"message":"1722","line":3,"column":10,"nodeType":"1642","messageId":"1643","endLine":3,"endColumn":19},{"ruleId":"1640","severity":1,"message":"1857","line":4,"column":8,"nodeType":"1642","messageId":"1643","endLine":4,"endColumn":14},{"ruleId":"1858","severity":1,"message":"1859","line":12,"column":9,"nodeType":"1708","endLine":13,"endColumn":77},{"ruleId":"1702","severity":1,"message":"1703","line":10,"column":2,"nodeType":"1701","messageId":"1704","endLine":12,"endColumn":6},{"ruleId":"1702","severity":1,"message":"1703","line":7,"column":2,"nodeType":"1701","messageId":"1704","endLine":10,"endColumn":6},{"ruleId":"1860","severity":1,"message":"1861","line":27,"column":9,"nodeType":"1862","messageId":"1863","endLine":42,"endColumn":10},{"ruleId":"1640","severity":1,"message":"1864","line":66,"column":21,"nodeType":"1642","messageId":"1643","endLine":66,"endColumn":27},{"ruleId":"1640","severity":1,"message":"1865","line":14,"column":8,"nodeType":"1642","messageId":"1643","endLine":14,"endColumn":17},{"ruleId":"1636","severity":1,"message":"1637","line":94,"column":19,"nodeType":"1638","messageId":"1639","endLine":94,"endColumn":21},{"ruleId":"1640","severity":1,"message":"1866","line":97,"column":9,"nodeType":"1642","messageId":"1643","endLine":97,"endColumn":15},{"ruleId":"1717","severity":1,"message":"1763","line":121,"column":51,"nodeType":"1719","messageId":"1764","endLine":121,"endColumn":53},{"ruleId":"1636","severity":1,"message":"1637","line":122,"column":35,"nodeType":"1638","messageId":"1639","endLine":122,"endColumn":37},{"ruleId":"1640","severity":1,"message":"1867","line":365,"column":11,"nodeType":"1642","messageId":"1643","endLine":365,"endColumn":24},{"ruleId":"1715","severity":1,"message":"1741","line":382,"column":15,"nodeType":"1708","endLine":386,"endColumn":16},{"ruleId":"1715","severity":1,"message":"1741","line":392,"column":15,"nodeType":"1708","endLine":396,"endColumn":16},{"ruleId":"1715","severity":1,"message":"1741","line":402,"column":15,"nodeType":"1708","endLine":406,"endColumn":16},{"ruleId":"1636","severity":1,"message":"1637","line":13,"column":33,"nodeType":"1638","messageId":"1639","endLine":13,"endColumn":35},{"ruleId":"1715","severity":1,"message":"1741","line":15,"column":74,"nodeType":"1708","endLine":15,"endColumn":77},{"ruleId":"1640","severity":1,"message":"1852","line":137,"column":9,"nodeType":"1642","messageId":"1643","endLine":137,"endColumn":10},{"ruleId":"1636","severity":1,"message":"1637","line":67,"column":20,"nodeType":"1638","messageId":"1639","endLine":67,"endColumn":22},{"ruleId":"1702","severity":1,"message":"1703","line":5,"column":5,"nodeType":"1701","messageId":"1704","endLine":7,"endColumn":6},{"ruleId":"1640","severity":1,"message":"1771","line":9,"column":10,"nodeType":"1642","messageId":"1643","endLine":9,"endColumn":21},{"ruleId":"1702","severity":1,"message":"1703","line":15,"column":5,"nodeType":"1701","messageId":"1704","endLine":17,"endColumn":3},{"ruleId":"1636","severity":1,"message":"1637","line":36,"column":22,"nodeType":"1638","messageId":"1639","endLine":36,"endColumn":24},{"ruleId":"1636","severity":1,"message":"1705","line":36,"column":64,"nodeType":"1638","messageId":"1639","endLine":36,"endColumn":66},{"ruleId":"1636","severity":1,"message":"1637","line":42,"column":40,"nodeType":"1638","messageId":"1639","endLine":42,"endColumn":42},{"ruleId":"1636","severity":1,"message":"1637","line":42,"column":58,"nodeType":"1638","messageId":"1639","endLine":42,"endColumn":60},{"ruleId":"1636","severity":1,"message":"1637","line":84,"column":49,"nodeType":"1638","messageId":"1639","endLine":84,"endColumn":51},{"ruleId":"1715","severity":1,"message":"1741","line":111,"column":28,"nodeType":"1708","endLine":111,"endColumn":74},{"ruleId":"1636","severity":1,"message":"1637","line":113,"column":27,"nodeType":"1638","messageId":"1639","endLine":113,"endColumn":29},{"ruleId":"1636","severity":1,"message":"1637","line":126,"column":27,"nodeType":"1638","messageId":"1639","endLine":126,"endColumn":29},{"ruleId":"1727","severity":1,"message":"1834","line":127,"column":17,"nodeType":"1642","messageId":"1729","endLine":127,"endColumn":20},{"ruleId":"1636","severity":1,"message":"1637","line":129,"column":31,"nodeType":"1638","messageId":"1639","endLine":129,"endColumn":33},{"ruleId":"1636","severity":1,"message":"1637","line":129,"column":65,"nodeType":"1638","messageId":"1639","endLine":129,"endColumn":67},{"ruleId":"1821","severity":1,"message":"1822","line":141,"column":14,"nodeType":"1708","messageId":"1823","endLine":144,"endColumn":45,"fix":"1868"},{"ruleId":"1636","severity":1,"message":"1637","line":158,"column":25,"nodeType":"1638","messageId":"1639","endLine":158,"endColumn":27},{"ruleId":"1715","severity":1,"message":"1741","line":166,"column":12,"nodeType":"1708","endLine":167,"endColumn":43},{"ruleId":"1640","severity":1,"message":"1869","line":12,"column":3,"nodeType":"1642","messageId":"1643","endLine":12,"endColumn":10},{"ruleId":"1640","severity":1,"message":"1870","line":28,"column":9,"nodeType":"1642","messageId":"1643","endLine":28,"endColumn":27},{"ruleId":"1636","severity":1,"message":"1637","line":57,"column":26,"nodeType":"1638","messageId":"1639","endLine":57,"endColumn":28},{"ruleId":"1636","severity":1,"message":"1637","line":57,"column":57,"nodeType":"1638","messageId":"1639","endLine":57,"endColumn":59},{"ruleId":"1636","severity":1,"message":"1637","line":60,"column":26,"nodeType":"1638","messageId":"1639","endLine":60,"endColumn":28},{"ruleId":"1636","severity":1,"message":"1637","line":60,"column":56,"nodeType":"1638","messageId":"1639","endLine":60,"endColumn":58},{"ruleId":"1640","severity":1,"message":"1871","line":75,"column":11,"nodeType":"1642","messageId":"1643","endLine":75,"endColumn":17},{"ruleId":"1636","severity":1,"message":"1637","line":82,"column":19,"nodeType":"1638","messageId":"1639","endLine":82,"endColumn":21},{"ruleId":"1640","severity":1,"message":"1872","line":126,"column":9,"nodeType":"1642","messageId":"1643","endLine":126,"endColumn":19},{"ruleId":"1640","severity":1,"message":"1873","line":132,"column":9,"nodeType":"1642","messageId":"1643","endLine":132,"endColumn":19},{"ruleId":"1640","severity":1,"message":"1874","line":1,"column":17,"nodeType":"1642","messageId":"1643","endLine":1,"endColumn":26},{"ruleId":"1858","severity":1,"message":"1859","line":21,"column":13,"nodeType":"1708","endLine":21,"endColumn":97},{"ruleId":"1702","severity":1,"message":"1703","line":5,"column":5,"nodeType":"1701","messageId":"1704","endLine":7,"endColumn":3},{"ruleId":"1640","severity":1,"message":"1875","line":13,"column":7,"nodeType":"1642","messageId":"1643","endLine":13,"endColumn":13},{"ruleId":"1640","severity":1,"message":"1876","line":14,"column":7,"nodeType":"1642","messageId":"1643","endLine":14,"endColumn":14},{"ruleId":"1636","severity":1,"message":"1637","line":15,"column":32,"nodeType":"1638","messageId":"1639","endLine":15,"endColumn":34},{"ruleId":"1640","severity":1,"message":"1874","line":1,"column":16,"nodeType":"1642","messageId":"1643","endLine":1,"endColumn":25},{"ruleId":"1640","severity":1,"message":"1877","line":13,"column":12,"nodeType":"1642","messageId":"1643","endLine":13,"endColumn":19},{"ruleId":"1640","severity":1,"message":"1878","line":16,"column":12,"nodeType":"1642","messageId":"1643","endLine":16,"endColumn":29},{"ruleId":"1640","severity":1,"message":"1879","line":16,"column":30,"nodeType":"1642","messageId":"1643","endLine":16,"endColumn":50},{"ruleId":"1640","severity":1,"message":"1880","line":17,"column":38,"nodeType":"1642","messageId":"1643","endLine":17,"endColumn":46},{"ruleId":"1640","severity":1,"message":"1881","line":17,"column":53,"nodeType":"1642","messageId":"1643","endLine":17,"endColumn":66},{"ruleId":"1640","severity":1,"message":"1874","line":1,"column":16,"nodeType":"1642","messageId":"1643","endLine":1,"endColumn":25},{"ruleId":"1640","severity":1,"message":"1874","line":1,"column":16,"nodeType":"1642","messageId":"1643","endLine":1,"endColumn":25},{"ruleId":"1640","severity":1,"message":"1852","line":37,"column":15,"nodeType":"1642","messageId":"1643","endLine":37,"endColumn":16},{"ruleId":"1702","severity":1,"message":"1703","line":5,"column":2,"nodeType":"1701","messageId":"1704","endLine":7,"endColumn":6},{"ruleId":"1640","severity":1,"message":"1882","line":10,"column":13,"nodeType":"1642","messageId":"1643","endLine":10,"endColumn":18},{"ruleId":"1706","severity":1,"message":"1707","line":151,"column":47,"nodeType":"1708","endLine":151,"endColumn":124},{"ruleId":"1702","severity":1,"message":"1703","line":6,"column":5,"nodeType":"1701","messageId":"1704","endLine":8,"endColumn":6},{"ruleId":"1883","severity":1,"message":"1884","line":35,"column":13,"nodeType":"1885","messageId":"1886","endLine":36,"endColumn":38},{"ruleId":"1883","severity":1,"message":"1884","line":37,"column":13,"nodeType":"1885","messageId":"1886","endLine":38,"endColumn":36},{"ruleId":"1883","severity":1,"message":"1887","line":39,"column":13,"nodeType":"1885","messageId":"1888","endLine":40,"endColumn":41},{"ruleId":"1640","severity":1,"message":"1889","line":2,"column":8,"nodeType":"1642","messageId":"1643","endLine":2,"endColumn":21},{"ruleId":"1702","severity":1,"message":"1703","line":6,"column":5,"nodeType":"1701","messageId":"1704","endLine":8,"endColumn":3},{"ruleId":"1702","severity":1,"message":"1703","line":7,"column":5,"nodeType":"1701","messageId":"1704","endLine":9,"endColumn":3},{"ruleId":"1636","severity":1,"message":"1637","line":55,"column":32,"nodeType":"1638","messageId":"1639","endLine":55,"endColumn":34},{"ruleId":"1636","severity":1,"message":"1637","line":61,"column":44,"nodeType":"1638","messageId":"1639","endLine":61,"endColumn":46},{"ruleId":"1826","severity":1,"message":"1890","line":145,"column":5,"nodeType":"1828","messageId":"1891","endLine":149,"endColumn":6},{"ruleId":"1826","severity":1,"message":"1890","line":154,"column":5,"nodeType":"1828","messageId":"1891","endLine":158,"endColumn":6},{"ruleId":"1640","severity":1,"message":"1874","line":1,"column":17,"nodeType":"1642","messageId":"1643","endLine":1,"endColumn":26},{"ruleId":"1636","severity":1,"message":"1705","line":14,"column":25,"nodeType":"1638","messageId":"1639","endLine":14,"endColumn":27},{"ruleId":"1702","severity":1,"message":"1703","line":5,"column":5,"nodeType":"1701","messageId":"1704","endLine":7,"endColumn":6},{"ruleId":"1702","severity":1,"message":"1703","line":4,"column":5,"nodeType":"1701","messageId":"1704","endLine":6,"endColumn":3},{"ruleId":"1636","severity":1,"message":"1637","line":20,"column":45,"nodeType":"1638","messageId":"1639","endLine":20,"endColumn":47},{"ruleId":"1636","severity":1,"message":"1637","line":30,"column":39,"nodeType":"1638","messageId":"1639","endLine":30,"endColumn":41},{"ruleId":"1702","severity":1,"message":"1703","line":6,"column":5,"nodeType":"1701","messageId":"1704","endLine":8,"endColumn":3},{"ruleId":"1636","severity":1,"message":"1637","line":23,"column":25,"nodeType":"1638","messageId":"1639","endLine":23,"endColumn":27},{"ruleId":"1636","severity":1,"message":"1637","line":25,"column":31,"nodeType":"1638","messageId":"1639","endLine":25,"endColumn":33},{"ruleId":"1636","severity":1,"message":"1637","line":27,"column":31,"nodeType":"1638","messageId":"1639","endLine":27,"endColumn":33},{"ruleId":"1636","severity":1,"message":"1637","line":27,"column":74,"nodeType":"1638","messageId":"1639","endLine":27,"endColumn":76},{"ruleId":"1636","severity":1,"message":"1637","line":49,"column":72,"nodeType":"1638","messageId":"1639","endLine":49,"endColumn":74},{"ruleId":"1702","severity":1,"message":"1703","line":5,"column":5,"nodeType":"1701","messageId":"1704","endLine":7,"endColumn":3},{"ruleId":"1640","severity":1,"message":"1874","line":1,"column":17,"nodeType":"1642","messageId":"1643","endLine":1,"endColumn":26},{"ruleId":"1702","severity":1,"message":"1703","line":11,"column":2,"nodeType":"1701","messageId":"1704","endLine":13,"endColumn":3},{"ruleId":"1715","severity":1,"message":"1741","line":41,"column":6,"nodeType":"1708","endLine":41,"endColumn":92},{"ruleId":"1715","severity":1,"message":"1741","line":42,"column":6,"nodeType":"1708","endLine":42,"endColumn":99},{"ruleId":"1640","severity":1,"message":"1892","line":3,"column":8,"nodeType":"1642","messageId":"1643","endLine":3,"endColumn":14},{"ruleId":"1640","severity":1,"message":"1893","line":65,"column":16,"nodeType":"1642","messageId":"1643","endLine":65,"endColumn":25},{"ruleId":"1826","severity":1,"message":"1827","line":67,"column":12,"nodeType":"1828","messageId":"1829","endLine":79,"endColumn":16},{"ruleId":"1717","severity":1,"message":"1763","line":67,"column":34,"nodeType":"1719","messageId":"1764","endLine":67,"endColumn":36},{"ruleId":"1826","severity":1,"message":"1827","line":69,"column":17,"nodeType":"1828","messageId":"1829","endLine":78,"endColumn":20},{"ruleId":"1717","severity":1,"message":"1763","line":69,"column":46,"nodeType":"1719","messageId":"1764","endLine":69,"endColumn":48},{"ruleId":"1826","severity":1,"message":"1827","line":22,"column":5,"nodeType":"1828","messageId":"1829","endLine":22,"endColumn":332},{"ruleId":"1830","severity":1,"message":"1831","line":36,"column":111,"nodeType":"1832","messageId":"1833","endLine":36,"endColumn":125},{"ruleId":"1640","severity":1,"message":"1894","line":4,"column":38,"nodeType":"1642","messageId":"1643","endLine":4,"endColumn":49},{"ruleId":"1640","severity":1,"message":"1724","line":7,"column":8,"nodeType":"1642","messageId":"1643","endLine":7,"endColumn":14},{"ruleId":"1640","severity":1,"message":"1895","line":9,"column":8,"nodeType":"1642","messageId":"1643","endLine":9,"endColumn":12},{"ruleId":"1640","severity":1,"message":"1768","line":10,"column":8,"nodeType":"1642","messageId":"1643","endLine":10,"endColumn":14},{"ruleId":"1636","severity":1,"message":"1637","line":130,"column":92,"nodeType":"1638","messageId":"1639","endLine":130,"endColumn":94},{"ruleId":"1640","severity":1,"message":"1896","line":188,"column":15,"nodeType":"1642","messageId":"1643","endLine":188,"endColumn":27},{"ruleId":"1640","severity":1,"message":"1897","line":394,"column":17,"nodeType":"1642","messageId":"1643","endLine":394,"endColumn":31},{"ruleId":"1636","severity":1,"message":"1637","line":586,"column":35,"nodeType":"1638","messageId":"1639","endLine":586,"endColumn":37},{"ruleId":"1640","severity":1,"message":"1898","line":7,"column":8,"nodeType":"1642","messageId":"1643","endLine":7,"endColumn":12},{"ruleId":"1640","severity":1,"message":"1899","line":9,"column":10,"nodeType":"1642","messageId":"1643","endLine":9,"endColumn":18},{"ruleId":"1640","severity":1,"message":"1900","line":66,"column":13,"nodeType":"1642","messageId":"1643","endLine":66,"endColumn":21},{"ruleId":"1640","severity":1,"message":"1898","line":7,"column":8,"nodeType":"1642","messageId":"1643","endLine":7,"endColumn":12},{"ruleId":"1640","severity":1,"message":"1901","line":12,"column":8,"nodeType":"1642","messageId":"1643","endLine":12,"endColumn":12},{"ruleId":"1717","severity":1,"message":"1763","line":62,"column":18,"nodeType":"1719","messageId":"1764","endLine":62,"endColumn":20},{"ruleId":"1902","severity":1,"message":"1903","line":63,"column":49,"nodeType":"1904","messageId":"1905","endLine":63,"endColumn":51},{"ruleId":"1636","severity":1,"message":"1637","line":63,"column":75,"nodeType":"1638","messageId":"1639","endLine":63,"endColumn":77},{"ruleId":"1902","severity":1,"message":"1903","line":63,"column":82,"nodeType":"1904","messageId":"1905","endLine":63,"endColumn":84},{"ruleId":"1902","severity":1,"message":"1903","line":63,"column":130,"nodeType":"1904","messageId":"1905","endLine":63,"endColumn":132},{"ruleId":"1636","severity":1,"message":"1637","line":63,"column":156,"nodeType":"1638","messageId":"1639","endLine":63,"endColumn":158},{"ruleId":"1636","severity":1,"message":"1637","line":63,"column":207,"nodeType":"1638","messageId":"1639","endLine":63,"endColumn":209},{"ruleId":"1902","severity":1,"message":"1903","line":63,"column":212,"nodeType":"1904","messageId":"1905","endLine":63,"endColumn":214},{"ruleId":"1636","severity":1,"message":"1637","line":89,"column":17,"nodeType":"1638","messageId":"1639","endLine":89,"endColumn":19},{"ruleId":"1636","severity":1,"message":"1637","line":91,"column":22,"nodeType":"1638","messageId":"1639","endLine":91,"endColumn":24},{"ruleId":"1636","severity":1,"message":"1637","line":93,"column":22,"nodeType":"1638","messageId":"1639","endLine":93,"endColumn":24},{"ruleId":"1636","severity":1,"message":"1637","line":95,"column":22,"nodeType":"1638","messageId":"1639","endLine":95,"endColumn":24},{"ruleId":"1636","severity":1,"message":"1637","line":97,"column":22,"nodeType":"1638","messageId":"1639","endLine":97,"endColumn":24},{"ruleId":"1636","severity":1,"message":"1637","line":99,"column":22,"nodeType":"1638","messageId":"1639","endLine":99,"endColumn":24},{"ruleId":"1636","severity":1,"message":"1637","line":101,"column":22,"nodeType":"1638","messageId":"1639","endLine":101,"endColumn":24},{"ruleId":"1636","severity":1,"message":"1637","line":103,"column":22,"nodeType":"1638","messageId":"1639","endLine":103,"endColumn":24},{"ruleId":"1636","severity":1,"message":"1637","line":105,"column":22,"nodeType":"1638","messageId":"1639","endLine":105,"endColumn":24},{"ruleId":"1636","severity":1,"message":"1637","line":107,"column":22,"nodeType":"1638","messageId":"1639","endLine":107,"endColumn":24},{"ruleId":"1636","severity":1,"message":"1637","line":109,"column":22,"nodeType":"1638","messageId":"1639","endLine":109,"endColumn":24},{"ruleId":"1636","severity":1,"message":"1637","line":111,"column":22,"nodeType":"1638","messageId":"1639","endLine":111,"endColumn":24},{"ruleId":"1640","severity":1,"message":"1900","line":116,"column":13,"nodeType":"1642","messageId":"1643","endLine":116,"endColumn":21},{"ruleId":"1640","severity":1,"message":"1906","line":137,"column":15,"nodeType":"1642","messageId":"1643","endLine":137,"endColumn":22},{"ruleId":"1706","severity":1,"message":"1707","line":138,"column":26,"nodeType":"1708","endLine":138,"endColumn":53},{"ruleId":"1706","severity":1,"message":"1707","line":139,"column":27,"nodeType":"1708","endLine":139,"endColumn":55},{"ruleId":"1717","severity":1,"message":"1718","line":170,"column":46,"nodeType":"1719","messageId":"1720","endLine":170,"endColumn":48},{"ruleId":"1902","severity":1,"message":"1903","line":171,"column":77,"nodeType":"1904","messageId":"1905","endLine":171,"endColumn":79},{"ruleId":"1636","severity":1,"message":"1637","line":171,"column":103,"nodeType":"1638","messageId":"1639","endLine":171,"endColumn":105},{"ruleId":"1902","severity":1,"message":"1903","line":171,"column":110,"nodeType":"1904","messageId":"1905","endLine":171,"endColumn":112},{"ruleId":"1902","severity":1,"message":"1903","line":171,"column":158,"nodeType":"1904","messageId":"1905","endLine":171,"endColumn":160},{"ruleId":"1636","severity":1,"message":"1637","line":171,"column":184,"nodeType":"1638","messageId":"1639","endLine":171,"endColumn":186},{"ruleId":"1636","severity":1,"message":"1637","line":171,"column":235,"nodeType":"1638","messageId":"1639","endLine":171,"endColumn":237},{"ruleId":"1902","severity":1,"message":"1903","line":171,"column":240,"nodeType":"1904","messageId":"1905","endLine":171,"endColumn":242},{"ruleId":"1717","severity":1,"message":"1718","line":209,"column":42,"nodeType":"1719","messageId":"1720","endLine":209,"endColumn":44},{"ruleId":"1902","severity":1,"message":"1903","line":210,"column":73,"nodeType":"1904","messageId":"1905","endLine":210,"endColumn":75},{"ruleId":"1636","severity":1,"message":"1637","line":210,"column":99,"nodeType":"1638","messageId":"1639","endLine":210,"endColumn":101},{"ruleId":"1902","severity":1,"message":"1903","line":210,"column":106,"nodeType":"1904","messageId":"1905","endLine":210,"endColumn":108},{"ruleId":"1902","severity":1,"message":"1903","line":210,"column":154,"nodeType":"1904","messageId":"1905","endLine":210,"endColumn":156},{"ruleId":"1636","severity":1,"message":"1637","line":210,"column":180,"nodeType":"1638","messageId":"1639","endLine":210,"endColumn":182},{"ruleId":"1636","severity":1,"message":"1637","line":210,"column":231,"nodeType":"1638","messageId":"1639","endLine":210,"endColumn":233},{"ruleId":"1902","severity":1,"message":"1903","line":210,"column":236,"nodeType":"1904","messageId":"1905","endLine":210,"endColumn":238},{"ruleId":"1706","severity":1,"message":"1707","line":84,"column":26,"nodeType":"1708","endLine":84,"endColumn":53},{"ruleId":"1706","severity":1,"message":"1707","line":85,"column":27,"nodeType":"1708","endLine":85,"endColumn":55},{"ruleId":"1636","severity":1,"message":"1705","line":114,"column":76,"nodeType":"1638","messageId":"1639","endLine":114,"endColumn":78},{"ruleId":"1636","severity":1,"message":"1637","line":118,"column":68,"nodeType":"1638","messageId":"1639","endLine":118,"endColumn":70},{"ruleId":"1636","severity":1,"message":"1637","line":120,"column":70,"nodeType":"1638","messageId":"1639","endLine":120,"endColumn":72},{"ruleId":"1636","severity":1,"message":"1705","line":144,"column":79,"nodeType":"1638","messageId":"1639","endLine":144,"endColumn":81},{"ruleId":"1646","severity":1,"message":"1907","line":18,"column":715,"nodeType":"1648","messageId":"1649","endLine":18,"endColumn":716,"suggestions":"1908"},{"ruleId":"1646","severity":1,"message":"1907","line":18,"column":725,"nodeType":"1648","messageId":"1649","endLine":18,"endColumn":726,"suggestions":"1909"},{"ruleId":"1646","severity":1,"message":"1907","line":18,"column":840,"nodeType":"1648","messageId":"1649","endLine":18,"endColumn":841,"suggestions":"1910"},{"ruleId":"1646","severity":1,"message":"1907","line":18,"column":2131,"nodeType":"1648","messageId":"1649","endLine":18,"endColumn":2132,"suggestions":"1911"},{"ruleId":"1646","severity":1,"message":"1907","line":18,"column":2496,"nodeType":"1648","messageId":"1649","endLine":18,"endColumn":2497,"suggestions":"1912"},{"ruleId":"1646","severity":1,"message":"1907","line":18,"column":2637,"nodeType":"1648","messageId":"1649","endLine":18,"endColumn":2638,"suggestions":"1913"},{"ruleId":"1646","severity":1,"message":"1907","line":18,"column":3499,"nodeType":"1648","messageId":"1649","endLine":18,"endColumn":3500,"suggestions":"1914"},{"ruleId":"1646","severity":1,"message":"1907","line":18,"column":3508,"nodeType":"1648","messageId":"1649","endLine":18,"endColumn":3509,"suggestions":"1915"},"no-native-reassign",["1916"],"no-negated-in-lhs",["1917"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'enquiryId' is assigned a value but never used.","'user' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["1918","1919"],["1920","1921"],["1922","1923"],["1924","1925"],["1926","1927"],["1928","1929"],["1930","1931"],["1932","1933"],["1934","1935"],["1936","1937"],["1938","1939"],["1940","1941"],["1942","1943"],["1944","1945"],["1946","1947"],["1948","1949"],["1950","1951"],["1952","1953"],["1954","1955"],["1956","1957"],["1958","1959"],["1960","1961"],["1962","1963"],["1964","1965"],["1966","1967"],["1968","1969"],["1970","1971"],["1972","1973"],["1974","1975"],["1976","1977"],["1978","1979"],["1980","1981"],["1982","1983"],["1984","1985"],["1986","1987"],["1988","1989"],["1990","1991"],["1992","1993"],["1994","1995"],["1996","1997"],["1998","1999"],["2000","2001"],["2002","2003"],["2004","2005"],["2006","2007"],["2008","2009"],"'CURRENT_PORTLET' is assigned a value but never used.","'ReactDOM' is defined but never used.","'style' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'routeChange'.","MethodDefinition","no-useless-constructor","Useless constructor.","noUselessConstructor","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'connect' is defined but never used.","'Container' is defined but never used.","'countryCode' is assigned a value but never used.","'Config' is defined but never used.","'faDesktop' is defined but never used.","'Notes' is defined but never used.","no-redeclare","'oldTests' is already defined.","redeclared","'startDate' is already defined.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'endDate' is already defined.","'startdatearray' is already defined.","'pic' is already defined.","no-dupe-keys","Duplicate key 'loading'.","ObjectExpression","'Utils' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'i' is already defined.","'matches' is already defined.","'answers' is already defined.","'choice' is already defined.","'catid' is already defined.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'chks', 'chks', 'chks'.","FunctionExpression","unsafeRefs","'config' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [\"YYYY\"] found.","Property","unnecessarilyComputedProperty",{"range":"2010","text":"2011"},"Unnecessarily computed property [\"MM\"] found.",{"range":"2012","text":"2013"},"Unnecessarily computed property [\"DD\"] found.",{"range":"2014","text":"2015"},"Array.prototype.map() expects a return value from arrow function.","expectedInside","'Parser' is defined but never used.","'Card' is defined but never used.","'getResource' is defined but never used.","'Iframe' is defined but never used.","'doc' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faArrowLeft' is defined but never used.",["2016","2017"],["2018","2019"],["2020","2021"],["2022","2023"],["2024","2025"],["2026","2027"],["2028","2029"],["2030","2031"],["2032","2033"],["2034","2035"],["2036","2037"],["2038","2039"],["2040","2041"],["2042","2043"],["2044","2045"],["2046","2047"],["2048","2049"],["2050","2051"],["2052","2053"],["2054","2055"],["2056","2057"],["2058","2059"],["2060","2061"],["2062","2063"],["2064","2065"],["2066","2067"],["2068","2069"],["2070","2071"],["2072","2073"],["2074","2075"],["2076","2077"],["2078","2079"],["2080","2081"],["2082","2083"],["2084","2085"],["2086","2087"],["2088","2089"],["2090","2091"],["2092","2093"],["2094","2095"],["2096","2097"],["2098","2099"],["2100","2101"],["2102","2103"],["2104","2105"],["2106","2107"],"'paramsString' is assigned a value but never used.","'faClosedCaptioning' is defined but never used.","'docClient' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"2108","text":"2109"},{"range":"2110","text":"2109"},"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'url' is already defined.","'useState' is defined but never used.","'userObject' is assigned a value but never used.","'question' is assigned a value but never used.","'tenant' is assigned a value but never used.","'choiceString' is already defined.","'ApiService' is defined but never used.","'_loadingText' is assigned a value but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"2111","text":"2112"},"'Button' is defined but never used.",{"range":"2113","text":"2112"},"'ListGroup' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'sectionData' is assigned a value but never used.","'k' is assigned a value but never used.",{"range":"2114","text":"2109"},"'faArrowRight' is defined but never used.","'Modal' is defined but never used.","'ILoader' is defined but never used.","'styles' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'result' is assigned a value but never used.","'XAPIUtils' is defined but never used.","'stepId' is assigned a value but never used.","'resourceIndex' is assigned a value but never used.",{"range":"2115","text":"2109"},"'getDate' is defined but never used.","'heading_dateFormat' is assigned a value but never used.","'_month' is assigned a value but never used.","'nextScroll' is assigned a value but never used.","'prevScroll' is assigned a value but never used.","'Component' is defined but never used.","'aplpha' is assigned a value but never used.","'aplpha2' is assigned a value but never used.","'message' is assigned a value but never used.","'remainingLearners' is assigned a value but never used.","'setRemainingLearners' is assigned a value but never used.","'loading1' is assigned a value but never used.","'LearnersError' is assigned a value but never used.","'video' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","'FormFunctions' is defined but never used.","Block is redundant.","redundantBlock","'Loader' is defined but never used.","'resources' is assigned a value but never used.","'faChevronUp' is defined but never used.","'swal' is defined but never used.","'feedbackMode' is assigned a value but never used.","'instructorName' is assigned a value but never used.","'list' is defined but never used.","'ExamList' is defined but never used.","'isMobile' is assigned a value but never used.","'tile' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'portlet' is assigned a value but never used.","Unnecessary escape character: \\/.",["2116","2117"],["2118","2119"],["2120","2121"],["2122","2123"],["2124","2125"],["2126","2127"],["2128","2129"],["2130","2131"],"no-global-assign","no-unsafe-negation",{"messageId":"2132","fix":"2133","desc":"2134"},{"messageId":"2135","fix":"2136","desc":"2137"},{"messageId":"2132","fix":"2138","desc":"2134"},{"messageId":"2135","fix":"2139","desc":"2137"},{"messageId":"2132","fix":"2140","desc":"2134"},{"messageId":"2135","fix":"2141","desc":"2137"},{"messageId":"2132","fix":"2142","desc":"2134"},{"messageId":"2135","fix":"2143","desc":"2137"},{"messageId":"2132","fix":"2144","desc":"2134"},{"messageId":"2135","fix":"2145","desc":"2137"},{"messageId":"2132","fix":"2146","desc":"2134"},{"messageId":"2135","fix":"2147","desc":"2137"},{"messageId":"2132","fix":"2148","desc":"2134"},{"messageId":"2135","fix":"2149","desc":"2137"},{"messageId":"2132","fix":"2150","desc":"2134"},{"messageId":"2135","fix":"2151","desc":"2137"},{"messageId":"2132","fix":"2152","desc":"2134"},{"messageId":"2135","fix":"2153","desc":"2137"},{"messageId":"2132","fix":"2154","desc":"2134"},{"messageId":"2135","fix":"2155","desc":"2137"},{"messageId":"2132","fix":"2156","desc":"2134"},{"messageId":"2135","fix":"2157","desc":"2137"},{"messageId":"2132","fix":"2158","desc":"2134"},{"messageId":"2135","fix":"2159","desc":"2137"},{"messageId":"2132","fix":"2160","desc":"2134"},{"messageId":"2135","fix":"2161","desc":"2137"},{"messageId":"2132","fix":"2162","desc":"2134"},{"messageId":"2135","fix":"2163","desc":"2137"},{"messageId":"2132","fix":"2164","desc":"2134"},{"messageId":"2135","fix":"2165","desc":"2137"},{"messageId":"2132","fix":"2166","desc":"2134"},{"messageId":"2135","fix":"2167","desc":"2137"},{"messageId":"2132","fix":"2168","desc":"2134"},{"messageId":"2135","fix":"2169","desc":"2137"},{"messageId":"2132","fix":"2170","desc":"2134"},{"messageId":"2135","fix":"2171","desc":"2137"},{"messageId":"2132","fix":"2172","desc":"2134"},{"messageId":"2135","fix":"2173","desc":"2137"},{"messageId":"2132","fix":"2174","desc":"2134"},{"messageId":"2135","fix":"2175","desc":"2137"},{"messageId":"2132","fix":"2176","desc":"2134"},{"messageId":"2135","fix":"2177","desc":"2137"},{"messageId":"2132","fix":"2178","desc":"2134"},{"messageId":"2135","fix":"2179","desc":"2137"},{"messageId":"2132","fix":"2180","desc":"2134"},{"messageId":"2135","fix":"2181","desc":"2137"},{"messageId":"2132","fix":"2182","desc":"2134"},{"messageId":"2135","fix":"2183","desc":"2137"},{"messageId":"2132","fix":"2184","desc":"2134"},{"messageId":"2135","fix":"2185","desc":"2137"},{"messageId":"2132","fix":"2186","desc":"2134"},{"messageId":"2135","fix":"2187","desc":"2137"},{"messageId":"2132","fix":"2188","desc":"2134"},{"messageId":"2135","fix":"2189","desc":"2137"},{"messageId":"2132","fix":"2190","desc":"2134"},{"messageId":"2135","fix":"2191","desc":"2137"},{"messageId":"2132","fix":"2192","desc":"2134"},{"messageId":"2135","fix":"2193","desc":"2137"},{"messageId":"2132","fix":"2194","desc":"2134"},{"messageId":"2135","fix":"2195","desc":"2137"},{"messageId":"2132","fix":"2196","desc":"2134"},{"messageId":"2135","fix":"2197","desc":"2137"},{"messageId":"2132","fix":"2198","desc":"2134"},{"messageId":"2135","fix":"2199","desc":"2137"},{"messageId":"2132","fix":"2200","desc":"2134"},{"messageId":"2135","fix":"2201","desc":"2137"},{"messageId":"2132","fix":"2202","desc":"2134"},{"messageId":"2135","fix":"2203","desc":"2137"},{"messageId":"2132","fix":"2204","desc":"2134"},{"messageId":"2135","fix":"2205","desc":"2137"},{"messageId":"2132","fix":"2206","desc":"2134"},{"messageId":"2135","fix":"2207","desc":"2137"},{"messageId":"2132","fix":"2208","desc":"2134"},{"messageId":"2135","fix":"2209","desc":"2137"},{"messageId":"2132","fix":"2210","desc":"2134"},{"messageId":"2135","fix":"2211","desc":"2137"},{"messageId":"2132","fix":"2212","desc":"2134"},{"messageId":"2135","fix":"2213","desc":"2137"},{"messageId":"2132","fix":"2214","desc":"2134"},{"messageId":"2135","fix":"2215","desc":"2137"},{"messageId":"2132","fix":"2216","desc":"2134"},{"messageId":"2135","fix":"2217","desc":"2137"},{"messageId":"2132","fix":"2218","desc":"2134"},{"messageId":"2135","fix":"2219","desc":"2137"},{"messageId":"2132","fix":"2220","desc":"2134"},{"messageId":"2135","fix":"2221","desc":"2137"},{"messageId":"2132","fix":"2222","desc":"2134"},{"messageId":"2135","fix":"2223","desc":"2137"},{"messageId":"2132","fix":"2224","desc":"2134"},{"messageId":"2135","fix":"2225","desc":"2137"},{"messageId":"2132","fix":"2226","desc":"2134"},{"messageId":"2135","fix":"2227","desc":"2137"},[6345,6353],"\"YYYY\"",[6388,6394],"\"MM\"",[6427,6433],"\"DD\"",{"messageId":"2132","fix":"2228","desc":"2134"},{"messageId":"2135","fix":"2229","desc":"2137"},{"messageId":"2132","fix":"2230","desc":"2134"},{"messageId":"2135","fix":"2231","desc":"2137"},{"messageId":"2132","fix":"2232","desc":"2134"},{"messageId":"2135","fix":"2233","desc":"2137"},{"messageId":"2132","fix":"2234","desc":"2134"},{"messageId":"2135","fix":"2235","desc":"2137"},{"messageId":"2132","fix":"2236","desc":"2134"},{"messageId":"2135","fix":"2237","desc":"2137"},{"messageId":"2132","fix":"2238","desc":"2134"},{"messageId":"2135","fix":"2239","desc":"2137"},{"messageId":"2132","fix":"2240","desc":"2134"},{"messageId":"2135","fix":"2241","desc":"2137"},{"messageId":"2132","fix":"2242","desc":"2134"},{"messageId":"2135","fix":"2243","desc":"2137"},{"messageId":"2132","fix":"2244","desc":"2134"},{"messageId":"2135","fix":"2245","desc":"2137"},{"messageId":"2132","fix":"2246","desc":"2134"},{"messageId":"2135","fix":"2247","desc":"2137"},{"messageId":"2132","fix":"2248","desc":"2134"},{"messageId":"2135","fix":"2249","desc":"2137"},{"messageId":"2132","fix":"2250","desc":"2134"},{"messageId":"2135","fix":"2251","desc":"2137"},{"messageId":"2132","fix":"2252","desc":"2134"},{"messageId":"2135","fix":"2253","desc":"2137"},{"messageId":"2132","fix":"2254","desc":"2134"},{"messageId":"2135","fix":"2255","desc":"2137"},{"messageId":"2132","fix":"2256","desc":"2134"},{"messageId":"2135","fix":"2257","desc":"2137"},{"messageId":"2132","fix":"2258","desc":"2134"},{"messageId":"2135","fix":"2259","desc":"2137"},{"messageId":"2132","fix":"2260","desc":"2134"},{"messageId":"2135","fix":"2261","desc":"2137"},{"messageId":"2132","fix":"2262","desc":"2134"},{"messageId":"2135","fix":"2263","desc":"2137"},{"messageId":"2132","fix":"2264","desc":"2134"},{"messageId":"2135","fix":"2265","desc":"2137"},{"messageId":"2132","fix":"2266","desc":"2134"},{"messageId":"2135","fix":"2267","desc":"2137"},{"messageId":"2132","fix":"2268","desc":"2134"},{"messageId":"2135","fix":"2269","desc":"2137"},{"messageId":"2132","fix":"2270","desc":"2134"},{"messageId":"2135","fix":"2271","desc":"2137"},{"messageId":"2132","fix":"2272","desc":"2134"},{"messageId":"2135","fix":"2273","desc":"2137"},{"messageId":"2132","fix":"2274","desc":"2134"},{"messageId":"2135","fix":"2275","desc":"2137"},{"messageId":"2132","fix":"2276","desc":"2134"},{"messageId":"2135","fix":"2277","desc":"2137"},{"messageId":"2132","fix":"2278","desc":"2134"},{"messageId":"2135","fix":"2279","desc":"2137"},{"messageId":"2132","fix":"2280","desc":"2134"},{"messageId":"2135","fix":"2281","desc":"2137"},{"messageId":"2132","fix":"2282","desc":"2134"},{"messageId":"2135","fix":"2283","desc":"2137"},{"messageId":"2132","fix":"2284","desc":"2134"},{"messageId":"2135","fix":"2285","desc":"2137"},{"messageId":"2132","fix":"2286","desc":"2134"},{"messageId":"2135","fix":"2287","desc":"2137"},{"messageId":"2132","fix":"2288","desc":"2134"},{"messageId":"2135","fix":"2289","desc":"2137"},{"messageId":"2132","fix":"2290","desc":"2134"},{"messageId":"2135","fix":"2291","desc":"2137"},{"messageId":"2132","fix":"2292","desc":"2134"},{"messageId":"2135","fix":"2293","desc":"2137"},{"messageId":"2132","fix":"2294","desc":"2134"},{"messageId":"2135","fix":"2295","desc":"2137"},{"messageId":"2132","fix":"2296","desc":"2134"},{"messageId":"2135","fix":"2297","desc":"2137"},{"messageId":"2132","fix":"2298","desc":"2134"},{"messageId":"2135","fix":"2299","desc":"2137"},{"messageId":"2132","fix":"2300","desc":"2134"},{"messageId":"2135","fix":"2301","desc":"2137"},{"messageId":"2132","fix":"2302","desc":"2134"},{"messageId":"2135","fix":"2303","desc":"2137"},{"messageId":"2132","fix":"2304","desc":"2134"},{"messageId":"2135","fix":"2305","desc":"2137"},{"messageId":"2132","fix":"2306","desc":"2134"},{"messageId":"2135","fix":"2307","desc":"2137"},{"messageId":"2132","fix":"2308","desc":"2134"},{"messageId":"2135","fix":"2309","desc":"2137"},{"messageId":"2132","fix":"2310","desc":"2134"},{"messageId":"2135","fix":"2311","desc":"2137"},{"messageId":"2132","fix":"2312","desc":"2134"},{"messageId":"2135","fix":"2313","desc":"2137"},{"messageId":"2132","fix":"2314","desc":"2134"},{"messageId":"2135","fix":"2315","desc":"2137"},{"messageId":"2132","fix":"2316","desc":"2134"},{"messageId":"2135","fix":"2317","desc":"2137"},{"messageId":"2132","fix":"2318","desc":"2134"},{"messageId":"2135","fix":"2319","desc":"2137"},[27220,27220]," rel=\"noreferrer\"",[27489,27489],[-1,0],"",[-1,0],[8328,8328],[6471,6471],{"messageId":"2132","fix":"2320","desc":"2134"},{"messageId":"2135","fix":"2321","desc":"2137"},{"messageId":"2132","fix":"2322","desc":"2134"},{"messageId":"2135","fix":"2323","desc":"2137"},{"messageId":"2132","fix":"2324","desc":"2134"},{"messageId":"2135","fix":"2325","desc":"2137"},{"messageId":"2132","fix":"2326","desc":"2134"},{"messageId":"2135","fix":"2327","desc":"2137"},{"messageId":"2132","fix":"2328","desc":"2134"},{"messageId":"2135","fix":"2329","desc":"2137"},{"messageId":"2132","fix":"2330","desc":"2134"},{"messageId":"2135","fix":"2331","desc":"2137"},{"messageId":"2132","fix":"2332","desc":"2134"},{"messageId":"2135","fix":"2333","desc":"2137"},{"messageId":"2132","fix":"2334","desc":"2134"},{"messageId":"2135","fix":"2335","desc":"2137"},"removeEscape",{"range":"2336","text":"2112"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"2337","text":"2338"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"2339","text":"2112"},{"range":"2340","text":"2338"},{"range":"2341","text":"2112"},{"range":"2342","text":"2338"},{"range":"2343","text":"2112"},{"range":"2344","text":"2338"},{"range":"2345","text":"2112"},{"range":"2346","text":"2338"},{"range":"2347","text":"2112"},{"range":"2348","text":"2338"},{"range":"2349","text":"2112"},{"range":"2350","text":"2338"},{"range":"2351","text":"2112"},{"range":"2352","text":"2338"},{"range":"2353","text":"2112"},{"range":"2354","text":"2338"},{"range":"2355","text":"2112"},{"range":"2356","text":"2338"},{"range":"2357","text":"2112"},{"range":"2358","text":"2338"},{"range":"2359","text":"2112"},{"range":"2360","text":"2338"},{"range":"2361","text":"2112"},{"range":"2362","text":"2338"},{"range":"2363","text":"2112"},{"range":"2364","text":"2338"},{"range":"2365","text":"2112"},{"range":"2366","text":"2338"},{"range":"2367","text":"2112"},{"range":"2368","text":"2338"},{"range":"2369","text":"2112"},{"range":"2370","text":"2338"},{"range":"2371","text":"2112"},{"range":"2372","text":"2338"},{"range":"2373","text":"2112"},{"range":"2374","text":"2338"},{"range":"2375","text":"2112"},{"range":"2376","text":"2338"},{"range":"2377","text":"2112"},{"range":"2378","text":"2338"},{"range":"2379","text":"2112"},{"range":"2380","text":"2338"},{"range":"2381","text":"2112"},{"range":"2382","text":"2338"},{"range":"2383","text":"2112"},{"range":"2384","text":"2338"},{"range":"2385","text":"2112"},{"range":"2386","text":"2338"},{"range":"2387","text":"2112"},{"range":"2388","text":"2338"},{"range":"2389","text":"2112"},{"range":"2390","text":"2338"},{"range":"2391","text":"2112"},{"range":"2392","text":"2338"},{"range":"2393","text":"2112"},{"range":"2394","text":"2338"},{"range":"2395","text":"2112"},{"range":"2396","text":"2338"},{"range":"2397","text":"2112"},{"range":"2398","text":"2338"},{"range":"2399","text":"2112"},{"range":"2400","text":"2338"},{"range":"2401","text":"2112"},{"range":"2402","text":"2338"},{"range":"2403","text":"2112"},{"range":"2404","text":"2338"},{"range":"2405","text":"2112"},{"range":"2406","text":"2338"},{"range":"2407","text":"2112"},{"range":"2408","text":"2338"},{"range":"2409","text":"2112"},{"range":"2410","text":"2338"},{"range":"2411","text":"2112"},{"range":"2412","text":"2338"},{"range":"2413","text":"2112"},{"range":"2414","text":"2338"},{"range":"2415","text":"2112"},{"range":"2416","text":"2338"},{"range":"2417","text":"2112"},{"range":"2418","text":"2338"},{"range":"2419","text":"2112"},{"range":"2420","text":"2338"},{"range":"2421","text":"2112"},{"range":"2422","text":"2338"},{"range":"2423","text":"2112"},{"range":"2424","text":"2338"},{"range":"2425","text":"2112"},{"range":"2426","text":"2338"},{"range":"2427","text":"2112"},{"range":"2428","text":"2338"},{"range":"2429","text":"2112"},{"range":"2430","text":"2338"},{"range":"2431","text":"2112"},{"range":"2432","text":"2338"},{"range":"2433","text":"2112"},{"range":"2434","text":"2338"},{"range":"2435","text":"2112"},{"range":"2436","text":"2338"},{"range":"2437","text":"2112"},{"range":"2438","text":"2338"},{"range":"2439","text":"2112"},{"range":"2440","text":"2338"},{"range":"2441","text":"2112"},{"range":"2442","text":"2338"},{"range":"2443","text":"2112"},{"range":"2444","text":"2338"},{"range":"2445","text":"2112"},{"range":"2446","text":"2338"},{"range":"2447","text":"2112"},{"range":"2448","text":"2338"},{"range":"2449","text":"2112"},{"range":"2450","text":"2338"},{"range":"2451","text":"2112"},{"range":"2452","text":"2338"},{"range":"2453","text":"2112"},{"range":"2454","text":"2338"},{"range":"2455","text":"2112"},{"range":"2456","text":"2338"},{"range":"2457","text":"2112"},{"range":"2458","text":"2338"},{"range":"2459","text":"2112"},{"range":"2460","text":"2338"},{"range":"2461","text":"2112"},{"range":"2462","text":"2338"},{"range":"2463","text":"2112"},{"range":"2464","text":"2338"},{"range":"2465","text":"2112"},{"range":"2466","text":"2338"},{"range":"2467","text":"2112"},{"range":"2468","text":"2338"},{"range":"2469","text":"2112"},{"range":"2470","text":"2338"},{"range":"2471","text":"2112"},{"range":"2472","text":"2338"},{"range":"2473","text":"2112"},{"range":"2474","text":"2338"},{"range":"2475","text":"2112"},{"range":"2476","text":"2338"},{"range":"2477","text":"2112"},{"range":"2478","text":"2338"},{"range":"2479","text":"2112"},{"range":"2480","text":"2338"},{"range":"2481","text":"2112"},{"range":"2482","text":"2338"},{"range":"2483","text":"2112"},{"range":"2484","text":"2338"},{"range":"2485","text":"2112"},{"range":"2486","text":"2338"},{"range":"2487","text":"2112"},{"range":"2488","text":"2338"},{"range":"2489","text":"2112"},{"range":"2490","text":"2338"},{"range":"2491","text":"2112"},{"range":"2492","text":"2338"},{"range":"2493","text":"2112"},{"range":"2494","text":"2338"},{"range":"2495","text":"2112"},{"range":"2496","text":"2338"},{"range":"2497","text":"2112"},{"range":"2498","text":"2338"},{"range":"2499","text":"2112"},{"range":"2500","text":"2338"},{"range":"2501","text":"2112"},{"range":"2502","text":"2338"},{"range":"2503","text":"2112"},{"range":"2504","text":"2338"},{"range":"2505","text":"2112"},{"range":"2506","text":"2338"},{"range":"2507","text":"2112"},{"range":"2508","text":"2338"},{"range":"2509","text":"2112"},{"range":"2510","text":"2338"},{"range":"2511","text":"2112"},{"range":"2512","text":"2338"},{"range":"2513","text":"2112"},{"range":"2514","text":"2338"},{"range":"2515","text":"2112"},{"range":"2516","text":"2338"},{"range":"2517","text":"2112"},{"range":"2518","text":"2338"},{"range":"2519","text":"2112"},{"range":"2520","text":"2338"},{"range":"2521","text":"2112"},{"range":"2522","text":"2338"},{"range":"2523","text":"2112"},{"range":"2524","text":"2338"},{"range":"2525","text":"2112"},{"range":"2526","text":"2338"},{"range":"2527","text":"2112"},{"range":"2528","text":"2338"},{"range":"2529","text":"2112"},{"range":"2530","text":"2338"},{"range":"2531","text":"2112"},{"range":"2532","text":"2338"},{"range":"2533","text":"2112"},{"range":"2534","text":"2338"},{"range":"2535","text":"2112"},{"range":"2536","text":"2338"},[1365,1366],[1365,1365],"\\",[1446,1447],[1446,1446],[1511,1512],[1511,1511],[1538,1539],[1538,1538],[1559,1560],[1559,1559],[1597,1598],[1597,1597],[1631,1632],[1631,1631],[1700,1701],[1700,1700],[1723,1724],[1723,1723],[1728,1729],[1728,1728],[1766,1767],[1766,1766],[1779,1780],[1779,1779],[1804,1805],[1804,1804],[1813,1814],[1813,1813],[1846,1847],[1846,1846],[1870,1871],[1870,1870],[1974,1975],[1974,1974],[2018,2019],[2018,2018],[2039,2040],[2039,2039],[2081,2082],[2081,2081],[2134,2135],[2134,2134],[2231,2232],[2231,2231],[2316,2317],[2316,2316],[2351,2352],[2351,2351],[2380,2381],[2380,2380],[2386,2387],[2386,2386],[2408,2409],[2408,2408],[2417,2418],[2417,2417],[2491,2492],[2491,2491],[2498,2499],[2498,2498],[2513,2514],[2513,2513],[2537,2538],[2537,2537],[2549,2550],[2549,2549],[2557,2558],[2557,2557],[2607,2608],[2607,2607],[2611,2612],[2611,2611],[2664,2665],[2664,2664],[2670,2671],[2670,2670],[2685,2686],[2685,2685],[2689,2690],[2689,2689],[2711,2712],[2711,2711],[2723,2724],[2723,2723],[2784,2785],[2784,2784],[2842,2843],[2842,2842],[2889,2890],[2889,2889],[2905,2906],[2905,2905],[2088,2089],[2088,2088],[2169,2170],[2169,2169],[2234,2235],[2234,2234],[2261,2262],[2261,2261],[2282,2283],[2282,2282],[2320,2321],[2320,2320],[2354,2355],[2354,2354],[2423,2424],[2423,2423],[2446,2447],[2446,2446],[2451,2452],[2451,2451],[2489,2490],[2489,2489],[2502,2503],[2502,2502],[2527,2528],[2527,2527],[2536,2537],[2536,2536],[2569,2570],[2569,2569],[2593,2594],[2593,2593],[2697,2698],[2697,2697],[2741,2742],[2741,2741],[2762,2763],[2762,2762],[2804,2805],[2804,2804],[2857,2858],[2857,2857],[2954,2955],[2954,2954],[3039,3040],[3039,3039],[3074,3075],[3074,3074],[3103,3104],[3103,3103],[3109,3110],[3109,3109],[3131,3132],[3131,3131],[3140,3141],[3140,3140],[3214,3215],[3214,3214],[3221,3222],[3221,3221],[3236,3237],[3236,3236],[3260,3261],[3260,3260],[3272,3273],[3272,3272],[3280,3281],[3280,3280],[3330,3331],[3330,3330],[3334,3335],[3334,3334],[3387,3388],[3387,3387],[3393,3394],[3393,3393],[3408,3409],[3408,3408],[3412,3413],[3412,3412],[3434,3435],[3434,3434],[3446,3447],[3446,3446],[3507,3508],[3507,3507],[3565,3566],[3565,3565],[3612,3613],[3612,3612],[3628,3629],[3628,3628],[1195,1196],[1195,1195],[1205,1206],[1205,1205],[1320,1321],[1320,1320],[2611,2612],[2611,2611],[2976,2977],[2976,2976],[3117,3118],[3117,3117],[3979,3980],[3979,3979],[3988,3989],[3988,3988]]